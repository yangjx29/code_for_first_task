Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at microsoft/codebert-base-mlm and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/run.py:112: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/test.py:108: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).

 cached_features_file:  ../dataset/codebert_cached_test_subs_gan_0_400
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]01/02/2025 12:27:06 - INFO - __main__ -   测试:0

01/02/2025 12:27:06 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:   0%|          | 1/400 [00:00<01:31,  4.38it/s]01/02/2025 12:27:06 - INFO - __main__ -   测试:1

01/02/2025 12:27:17 - INFO - __main__ -   Success rate: 100.00%

01/02/2025 12:27:17 - INFO - __main__ -   Successful items count: 1

01/02/2025 12:27:17 - INFO - __main__ -   Total count: 1

01/02/2025 12:27:17 - INFO - __main__ -   Index: 1

Number of variable_names extracted:  7
Generating population1...
	 0  --most gap 0.041640162
	 1  --most gap 0.097368896
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   0%|          | 2/400 [00:11<42:41,  6.44s/it]01/02/2025 12:27:17 - INFO - __main__ -   测试:2

01/02/2025 12:27:17 - INFO - __main__ -   Attack failed!

01/02/2025 12:27:17 - INFO - __main__ -   测试:3

01/02/2025 12:27:17 - INFO - __main__ -   Attack failed!

01/02/2025 12:27:17 - INFO - __main__ -   测试:4

01/02/2025 12:27:17 - INFO - __main__ -   Success rate: 100.00%

01/02/2025 12:27:17 - INFO - __main__ -   Successful items count: 2

01/02/2025 12:27:17 - INFO - __main__ -   Total count: 2

01/02/2025 12:27:17 - INFO - __main__ -   Index: 4

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  10
Generating population4...
init SUCCESS!
Processing examples:   1%|▏         | 5/400 [00:11<12:23,  1.88s/it]01/02/2025 12:27:17 - INFO - __main__ -   测试:5

We strongly recommend passing in an `attention_mask` since your input_ids may be padded. See https://huggingface.co/docs/transformers/troubleshooting#incorrect-output-when-padding-tokens-arent-masked.
01/02/2025 12:27:46 - INFO - __main__ -   Success rate: 100.00%

01/02/2025 12:27:46 - INFO - __main__ -   Successful items count: 3

01/02/2025 12:27:46 - INFO - __main__ -   Total count: 3

01/02/2025 12:27:46 - INFO - __main__ -   Index: 5

Number of variable_names extracted:  1
Generating population5...
	 0  --most gap -4.477892071008682e-05
	 1  --most gap -4.477892071008682e-05
	 2  --most gap -4.477892071008682e-05
两轮结果未更新,进行muteted...
	 3  --most gap -4.477892071008682e-05
	 4  --most gap -4.477892071008682e-05
	 5  --most gap -4.477892071008682e-05
两轮结果未更新,进行muteted...
	 6  --most gap -4.477892071008682e-05
	 7  --most gap -4.477892071008682e-05
	 8  --most gap -4.477892071008682e-05
两轮结果未更新,进行muteted...
	 9  --most gap -4.477892071008682e-05
	 10  --most gap -4.477892071008682e-05
	 11  --most gap -4.477892071008682e-05
两轮结果未更新,进行muteted...
	 12  --most gap -4.477892071008682e-05
	 13  --most gap -4.477892071008682e-05
	 14  --most gap -4.477892071008682e-05
两轮结果未更新,进行muteted...
	 15  --most gap -4.477892071008682e-05
	 16  --most gap -4.477892071008682e-05
	 17  --most gap -4.477892071008682e-05
两轮结果未更新,进行muteted...
	 18  --most gap -4.477892071008682e-05
	 19  --most gap -4.477892071008682e-05
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8]
changeCodeStructure SUCCESS!
Processing examples:   2%|▏         | 6/400 [00:39<57:10,  8.71s/it]01/02/2025 12:27:46 - INFO - __main__ -   测试:6

01/02/2025 12:27:46 - INFO - __main__ -   Attack failed!

01/02/2025 12:27:46 - INFO - __main__ -   测试:7

01/02/2025 12:27:46 - INFO - __main__ -   Attack failed!

01/02/2025 12:27:46 - INFO - __main__ -   测试:8

01/02/2025 12:27:46 - INFO - __main__ -   Attack failed!

01/02/2025 12:27:46 - INFO - __main__ -   测试:9

01/02/2025 12:27:46 - INFO - __main__ -   Success rate: 100.00%

01/02/2025 12:27:46 - INFO - __main__ -   Successful items count: 4

01/02/2025 12:27:46 - INFO - __main__ -   Total count: 4

01/02/2025 12:27:46 - INFO - __main__ -   Index: 9

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population9...
init SUCCESS!
Processing examples:   2%|▎         | 10/400 [00:40<23:13,  3.57s/it]01/02/2025 12:27:46 - INFO - __main__ -   测试:10

01/02/2025 12:27:46 - INFO - __main__ -   Attack failed!

01/02/2025 12:27:46 - INFO - __main__ -   测试:11

01/02/2025 12:27:46 - INFO - __main__ -   Success rate: 100.00%

01/02/2025 12:27:46 - INFO - __main__ -   Successful items count: 5

01/02/2025 12:27:46 - INFO - __main__ -   Total count: 5

01/02/2025 12:27:46 - INFO - __main__ -   Index: 11

The original code is misclassified.
Number of variable_names extracted:  8
Generating population11...
init SUCCESS!
Processing examples:   3%|▎         | 12/400 [00:40<16:20,  2.53s/it]01/02/2025 12:27:46 - INFO - __main__ -   测试:12

01/02/2025 12:27:58 - INFO - __main__ -   Success rate: 100.00%

01/02/2025 12:27:58 - INFO - __main__ -   Successful items count: 6

01/02/2025 12:27:58 - INFO - __main__ -   Total count: 6

01/02/2025 12:27:58 - INFO - __main__ -   Index: 12

01/02/2025 12:27:58 - INFO - __main__ -   测试:13

Number of variable_names extracted:  2
Generating population12...
	 0  --most gap 0.00045388937
	 1  --most gap 0.00045388937
	 2  --most gap 0.00045388937
两轮结果未更新,进行muteted...
	 3  --most gap 0.00045388937
	 4  --most gap 0.00045388937
	 5  --most gap 0.00045388937
两轮结果未更新,进行muteted...
	 6  --most gap 0.00045388937
	 7  --most gap 0.00045388937
	 8  --most gap 0.00045388937
两轮结果未更新,进行muteted...
	 9  --most gap 0.00045388937
	 10  --most gap 0.00045388937
	 11  --most gap 0.00045388937
两轮结果未更新,进行muteted...
	 12  --most gap 0.00045388937
	 13  --most gap 0.00045388937
	 14  --most gap 0.00045388937
两轮结果未更新,进行muteted...
	 15  --most gap 0.00045388937
	 16  --most gap 0.00045388937
	 17  --most gap 0.00045388937
两轮结果未更新,进行muteted...
	 18  --most gap 0.00045388937
	 19  --most gap 0.00045388937
Changing code structure...
changeCodeStructure SUCCESS!
Number of variable_names extracted:  1
Generating population13...
	 0  --most gap 0.01378517784178257
	 1  --most gap 0.01378517784178257
	 2  --most gap 0.01378517784178257
两轮结果未更新,进行muteted...
	 3  --most gap 0.01378517784178257
	 4  --most gap 0.01378517784178257
	 5  --most gap 0.01378517784178257
两轮结果未更新,进行muteted...
	 6  --most gap 0.01378517784178257
	 7  --most gap 0.01378517784178257
	 8  --most gap 0.01378517784178257
两轮结果未更新,进行muteted...
	 9  --most gap 0.01378517784178257
	 10  --most gap 0.01378517784178257
	 11  --most gap 0.01378517784178257
两轮结果未更新,进行muteted...
	 12  --most gap 0.01378517784178257
	 13  --most gap 0.01378517784178257
	 14  --most gap 0.01378517784178257
两轮结果未更新,进行muteted...
	 15  --most gap 0.01378517784178257
	 16  --most gap 0.01378517784178257
	 17  --most gap 0.01378517784178257
两轮结果未更新,进行muteted...
	 18  --most gap 0.01378517784178257
	 19  --most gap 0.01378517784178257
Changing code structure...
Processing examples:   3%|▎         | 12/400 [01:00<16:20,  2.53s/it]01/02/2025 12:28:29 - INFO - __main__ -   Success rate: 85.71%

01/02/2025 12:28:29 - INFO - __main__ -   Successful items count: 6

01/02/2025 12:28:29 - INFO - __main__ -   Total count: 7

01/02/2025 12:28:29 - INFO - __main__ -   Index: 13

sorted_id: [0, 1, 2, 3]
sorted_id: [0, 1, 2, 3]
Processing examples:   4%|▎         | 14/400 [01:23<52:28,  8.16s/it]01/02/2025 12:28:29 - INFO - __main__ -   测试:14

01/02/2025 12:28:35 - INFO - __main__ -   Success rate: 87.50%

01/02/2025 12:28:35 - INFO - __main__ -   Successful items count: 7

01/02/2025 12:28:35 - INFO - __main__ -   Total count: 8

01/02/2025 12:28:35 - INFO - __main__ -   Index: 14

Number of variable_names extracted:  1
Generating population14...
	 0  --most gap -0.00023120269179344177
	 1  --most gap -0.00023120269179344177
	 2  --most gap -0.00023120269179344177
两轮结果未更新,进行muteted...
	 3  --most gap -0.00023120269179344177
	 4  --most gap -0.00023120269179344177
	 5  --most gap -0.00023120269179344177
两轮结果未更新,进行muteted...
	 6  --most gap -0.00023120269179344177
	 7  --most gap -0.00023120269179344177
	 8  --most gap -0.00023120269179344177
两轮结果未更新,进行muteted...
	 9  --most gap -0.00023120269179344177
	 10  --most gap -0.00023120269179344177
	 11  --most gap -0.00023120269179344177
两轮结果未更新,进行muteted...
	 12  --most gap -0.00023120269179344177
	 13  --most gap -0.00023120269179344177
	 14  --most gap -0.00023120269179344177
两轮结果未更新,进行muteted...
	 15  --most gap -0.00023120269179344177
	 16  --most gap -0.00023120269179344177
	 17  --most gap -0.00023120269179344177
两轮结果未更新,进行muteted...
	 18  --most gap -0.00023120269179344177
	 19  --most gap -0.00023120269179344177
Changing code structure...
sorted_id: [0]
changeCodeStructure SUCCESS!
Processing examples:   4%|▍         | 15/400 [01:29<50:28,  7.87s/it]01/02/2025 12:28:35 - INFO - __main__ -   测试:15

Number of variable_names extracted:  2
Generating population15...
	 0  --most gap 0.014187496155500412
	 1  --most gap 0.014187496155500412
	 2  --most gap 0.014187496155500412
两轮结果未更新,进行muteted...
	 3  --most gap 0.014187496155500412
	 4  --most gap 0.014187496155500412
	 5  --most gap 0.014187496155500412
两轮结果未更新,进行muteted...
	 6  --most gap 0.014187496155500412
	 7  --most gap 0.014187496155500412
	 8  --most gap 0.014187496155500412
两轮结果未更新,进行muteted...
	 9  --most gap 0.014187496155500412
	 10  --most gap 0.014187496155500412
	 11  --most gap 0.014187496155500412
两轮结果未更新,进行muteted...
	 12  --most gap 0.014187496155500412
	 13  --most gap 0.014187496155500412
	 14  --most gap 0.014187496155500412
两轮结果未更新,进行muteted...
Processing examples:   4%|▍         | 15/400 [01:40<50:28,  7.87s/it]01/02/2025 12:28:51 - INFO - __main__ -   Success rate: 88.89%

01/02/2025 12:28:51 - INFO - __main__ -   Successful items count: 8

01/02/2025 12:28:51 - INFO - __main__ -   Total count: 9

01/02/2025 12:28:51 - INFO - __main__ -   Index: 15

	 15  --most gap 0.014187496155500412
	 16  --most gap 0.014187496155500412
	 17  --most gap 0.014187496155500412
两轮结果未更新,进行muteted...
	 18  --most gap 0.014187496155500412
	 19  --most gap 0.014187496155500412
Changing code structure...
sorted_id: [0, 1, 3, 2]
changeCodeStructure SUCCESS!
Processing examples:   4%|▍         | 16/400 [01:45<1:00:19,  9.43s/it]01/02/2025 12:28:51 - INFO - __main__ -   测试:16

01/02/2025 12:28:51 - INFO - __main__ -   Success rate: 90.00%

01/02/2025 12:28:51 - INFO - __main__ -   Successful items count: 9

01/02/2025 12:28:51 - INFO - __main__ -   Total count: 10

01/02/2025 12:28:51 - INFO - __main__ -   Index: 16

Number of variable_names extracted:  9
Generating population16...
init SUCCESS!
Processing examples:   4%|▍         | 17/400 [01:45<47:03,  7.37s/it]  01/02/2025 12:28:51 - INFO - __main__ -   测试:17

01/02/2025 12:28:51 - INFO - __main__ -   Attack failed!

01/02/2025 12:28:51 - INFO - __main__ -   测试:18

01/02/2025 12:29:11 - INFO - __main__ -   Success rate: 90.91%

01/02/2025 12:29:11 - INFO - __main__ -   Successful items count: 10

01/02/2025 12:29:11 - INFO - __main__ -   Total count: 11

01/02/2025 12:29:11 - INFO - __main__ -   Index: 18

The original code is misclassified.
Number of variable_names extracted:  1
Generating population18...
	 0  --most gap 0.0001567220315337181
	 1  --most gap 0.0001567220315337181
	 2  --most gap 0.0001567220315337181
两轮结果未更新,进行muteted...
	 3  --most gap 0.0001567220315337181
	 4  --most gap 0.0001567220315337181
	 5  --most gap 0.0001567220315337181
两轮结果未更新,进行muteted...
	 6  --most gap 0.0001567220315337181
	 7  --most gap 0.0001567220315337181
	 8  --most gap 0.0001567220315337181
两轮结果未更新,进行muteted...
	 9  --most gap 0.0001567220315337181
	 10  --most gap 0.0001567220315337181
	 11  --most gap 0.0001567220315337181
两轮结果未更新,进行muteted...
	 12  --most gap 0.0001567220315337181
	 13  --most gap 0.0001567220315337181
	 14  --most gap 0.0001567220315337181
两轮结果未更新,进行muteted...
	 15  --most gap 0.0001567220315337181
	 16  --most gap 0.0001567220315337181
	 17  --most gap 0.0001567220315337181
两轮结果未更新,进行muteted...
	 18  --most gap 0.0001567220315337181
	 19  --most gap 0.0001567220315337181
Changing code structure...
sorted_id: [0, 1, 2, 3, 4]
changeCodeStructure SUCCESS!
Processing examples:   5%|▍         | 19/400 [02:05<53:19,  8.40s/it]01/02/2025 12:29:11 - INFO - __main__ -   测试:19

01/02/2025 12:32:20 - INFO - __main__ -   Success rate: 91.67%

01/02/2025 12:32:20 - INFO - __main__ -   Successful items count: 11

01/02/2025 12:32:20 - INFO - __main__ -   Total count: 12

01/02/2025 12:32:20 - INFO - __main__ -   Index: 19

Number of variable_names extracted:  13
Generating population19...
	 0  --most gap 0.15173435
	 1  --most gap 0.15173435
	 2  --most gap 0.15173435
两轮结果未更新,进行muteted...
	 3  --most gap 0.15173435
	 4  --most gap 0.15173435
	 5  --most gap 0.15173435
两轮结果未更新,进行muteted...
	 6  --most gap 0.15173435
	 7  --most gap 0.3223232
	 8  --most gap 0.3223232
	 9  --most gap 0.3223232
	 10  --most gap 0.3223232
两轮结果未更新,进行muteted...
	 11  --most gap 0.3223232
	 12  --most gap 0.3223232
	 13  --most gap 0.3223232
两轮结果未更新,进行muteted...
	 14  --most gap 0.3223232
	 15  --most gap 0.3223232
	 16  --most gap 0.4091006
	 17  --most gap 0.4091006
	 18  --most gap 0.4091006
	 19  --most gap 0.4091006
两轮结果未更新,进行muteted...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   5%|▌         | 20/400 [05:14<5:01:17, 47.57s/it]01/02/2025 12:32:20 - INFO - __main__ -   测试:20

01/02/2025 12:32:20 - INFO - __main__ -   Attack failed!

01/02/2025 12:32:20 - INFO - __main__ -   测试:21

01/02/2025 12:32:20 - INFO - __main__ -   Attack failed!

01/02/2025 12:32:20 - INFO - __main__ -   测试:22

01/02/2025 12:32:30 - INFO - __main__ -   Success rate: 92.31%

01/02/2025 12:32:30 - INFO - __main__ -   Successful items count: 12

01/02/2025 12:32:30 - INFO - __main__ -   Total count: 13

01/02/2025 12:32:30 - INFO - __main__ -   Index: 22

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  7
Generating population22...
	 0  --most gap -0.038935363
	 1  --most gap 0.0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   6%|▌         | 23/400 [05:24<2:45:32, 26.35s/it]01/02/2025 12:32:30 - INFO - __main__ -   测试:23

01/02/2025 12:32:30 - INFO - __main__ -   Success rate: 92.86%

01/02/2025 12:32:30 - INFO - __main__ -   Successful items count: 13

01/02/2025 12:32:30 - INFO - __main__ -   Total count: 14

01/02/2025 12:32:30 - INFO - __main__ -   Index: 23

01/02/2025 12:32:30 - INFO - __main__ -   测试:24

01/02/2025 12:33:39 - INFO - __main__ -   Success rate: 93.33%

01/02/2025 12:33:39 - INFO - __main__ -   Successful items count: 14

01/02/2025 12:33:39 - INFO - __main__ -   Total count: 15

01/02/2025 12:33:39 - INFO - __main__ -   Index: 24

Number of variable_names extracted:  3
Generating population23...
init SUCCESS!
Number of variable_names extracted:  8
Generating population24...
	 0  --most gap 0.20067036
	 1  --most gap 0.20067042
	 2  --most gap 0.20067042
	 3  --most gap 0.20067042
	 4  --most gap 0.20067042
两轮结果未更新,进行muteted...
	 5  --most gap 0.37935877
	 6  --most gap 0.37935877
	 7  --most gap 0.37935877
	 8  --most gap 0.37935877
两轮结果未更新,进行muteted...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   6%|▋         | 25/400 [06:33<3:00:22, 28.86s/it]01/02/2025 12:33:39 - INFO - __main__ -   测试:25

01/02/2025 12:33:39 - INFO - __main__ -   Attack failed!

01/02/2025 12:33:39 - INFO - __main__ -   测试:26

01/02/2025 12:33:39 - INFO - __main__ -   Attack failed!

01/02/2025 12:33:39 - INFO - __main__ -   测试:27

01/02/2025 12:33:39 - INFO - __main__ -   Success rate: 93.75%

01/02/2025 12:33:39 - INFO - __main__ -   Successful items count: 15

01/02/2025 12:33:39 - INFO - __main__ -   Total count: 16

01/02/2025 12:33:39 - INFO - __main__ -   Index: 27

The original code is misclassified.
No variable_names in the code.
Number of variable_names extracted:  9
Generating population27...
init SUCCESS!
Processing examples:   7%|▋         | 28/400 [06:33<1:47:02, 17.27s/it]01/02/2025 12:33:39 - INFO - __main__ -   测试:28

01/02/2025 12:33:39 - INFO - __main__ -   Success rate: 94.12%

01/02/2025 12:33:39 - INFO - __main__ -   Successful items count: 16

01/02/2025 12:33:39 - INFO - __main__ -   Total count: 17

01/02/2025 12:33:39 - INFO - __main__ -   Index: 28

01/02/2025 12:33:39 - INFO - __main__ -   测试:29

01/02/2025 12:33:39 - INFO - __main__ -   Attack failed!

01/02/2025 12:33:39 - INFO - __main__ -   测试:30

01/02/2025 12:33:51 - INFO - __main__ -   Success rate: 94.44%

01/02/2025 12:33:51 - INFO - __main__ -   Successful items count: 17

01/02/2025 12:33:51 - INFO - __main__ -   Total count: 18

01/02/2025 12:33:51 - INFO - __main__ -   Index: 30

Number of variable_names extracted:  6
Generating population28...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  2
Generating population30...
	 0  --most gap 0.045718010514974594
	 1  --most gap 0.045718010514974594
	 2  --most gap 0.045718010514974594
	 3  --most gap 0.045718010514974594
两轮结果未更新,进行muteted...
	 4  --most gap 0.045718010514974594
	 5  --most gap 0.045718010514974594
	 6  --most gap 0.045718010514974594
两轮结果未更新,进行muteted...
	 7  --most gap 0.045718010514974594
	 8  --most gap 0.045718010514974594
	 9  --most gap 0.045718010514974594
两轮结果未更新,进行muteted...
	 10  --most gap 0.045718010514974594
	 11  --most gap 0.045718010514974594
	 12  --most gap 0.045718010514974594
两轮结果未更新,进行muteted...
	 13  --most gap 0.045718010514974594
	 14  --most gap 0.045718010514974594
	 15  --most gap 0.045718010514974594
两轮结果未更新,进行muteted...
	 16  --most gap 0.045718010514974594
	 17  --most gap 0.045718010514974594
	 18  --most gap 0.045718010514974594
两轮结果未更新,进行muteted...
	 19  --most gap 0.045718010514974594
Changing code structure...
sorted_id: [0, 1]
changeCodeStructure SUCCESS!
Processing examples:   8%|▊         | 31/400 [06:45<1:16:11, 12.39s/it]01/02/2025 12:33:51 - INFO - __main__ -   测试:31

01/02/2025 12:34:08 - INFO - __main__ -   Success rate: 94.74%

01/02/2025 12:34:08 - INFO - __main__ -   Successful items count: 18

01/02/2025 12:34:08 - INFO - __main__ -   Total count: 19

01/02/2025 12:34:08 - INFO - __main__ -   Index: 31

Number of variable_names extracted:  2
Generating population31...
	 0  --most gap -0.005962058901786804
	 1  --most gap -0.005962058901786804
	 2  --most gap -0.005962058901786804
两轮结果未更新,进行muteted...
	 3  --most gap -0.005962058901786804
	 4  --most gap -0.005962058901786804
	 5  --most gap -0.005962058901786804
两轮结果未更新,进行muteted...
	 6  --most gap -0.005962058901786804
	 7  --most gap -0.005962058901786804
	 8  --most gap -0.005962058901786804
两轮结果未更新,进行muteted...
	 9  --most gap -0.005962058901786804
	 10  --most gap -0.005962058901786804
	 11  --most gap -0.005962058901786804
两轮结果未更新,进行muteted...
	 12  --most gap -0.005962058901786804
	 13  --most gap -0.005962058901786804
	 14  --most gap -0.005962058901786804
两轮结果未更新,进行muteted...
	 15  --most gap -0.005962058901786804
	 16  --most gap -0.005962058901786804
	 17  --most gap -0.005962058901786804
两轮结果未更新,进行muteted...
	 18  --most gap -0.005962058901786804
	 19  --most gap -0.005962058901786804
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
changeCodeStructure SUCCESS!
Processing examples:   8%|▊         | 32/400 [07:02<1:20:22, 13.10s/it]01/02/2025 12:34:08 - INFO - __main__ -   测试:32

01/02/2025 12:34:08 - INFO - __main__ -   Attack failed!

01/02/2025 12:34:08 - INFO - __main__ -   测试:33

01/02/2025 12:34:09 - INFO - __main__ -   Success rate: 95.00%

01/02/2025 12:34:09 - INFO - __main__ -   Successful items count: 19

01/02/2025 12:34:09 - INFO - __main__ -   Total count: 20

01/02/2025 12:34:09 - INFO - __main__ -   Index: 33

The original code is misclassified.
Number of variable_names extracted:  10
Generating population33...
	 0  --most gap -0.021103024
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   8%|▊         | 34/400 [07:03<57:05,  9.36s/it]  01/02/2025 12:34:09 - INFO - __main__ -   测试:34

01/02/2025 12:34:09 - INFO - __main__ -   Success rate: 95.24%

01/02/2025 12:34:09 - INFO - __main__ -   Successful items count: 20

01/02/2025 12:34:09 - INFO - __main__ -   Total count: 21

01/02/2025 12:34:09 - INFO - __main__ -   Index: 34

Number of variable_names extracted:  6
Generating population34...
init SUCCESS!
Processing examples:   9%|▉         | 35/400 [07:03<47:06,  7.74s/it]01/02/2025 12:34:09 - INFO - __main__ -   测试:35

01/02/2025 12:34:09 - INFO - __main__ -   Success rate: 95.45%

01/02/2025 12:34:09 - INFO - __main__ -   Successful items count: 21

01/02/2025 12:34:09 - INFO - __main__ -   Total count: 22

01/02/2025 12:34:09 - INFO - __main__ -   Index: 35

01/02/2025 12:34:09 - INFO - __main__ -   测试:36

01/02/2025 12:34:09 - INFO - __main__ -   Attack failed!

01/02/2025 12:34:09 - INFO - __main__ -   测试:37

01/02/2025 12:35:35 - INFO - __main__ -   Success rate: 95.65%

01/02/2025 12:35:35 - INFO - __main__ -   Successful items count: 22

01/02/2025 12:35:35 - INFO - __main__ -   Total count: 23

01/02/2025 12:35:35 - INFO - __main__ -   Index: 37

Number of variable_names extracted:  3
Generating population35...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  3
Generating population37...
	 0  --most gap 0.037015545181930065
	 1  --most gap 0.037015545181930065
	 2  --most gap 0.28634902741760015
	 3  --most gap 0.28634902741760015
	 4  --most gap 0.28634902741760015
	 5  --most gap 0.28634902741760015
两轮结果未更新,进行muteted...
	 6  --most gap 0.28634902741760015
	 7  --most gap 0.28634902741760015
	 8  --most gap 0.28634902741760015
两轮结果未更新,进行muteted...
	 9  --most gap 0.28634902741760015
	 10  --most gap 0.28634902741760015
	 11  --most gap 0.28634902741760015
两轮结果未更新,进行muteted...
	 12  --most gap 0.28634902741760015
	 13  --most gap 0.28634902741760015
	 14  --most gap 0.28634902741760015
两轮结果未更新,进行muteted...
	 15  --most gap 0.28634902741760015
	 16  --most gap 0.28634902741760015
	 17  --most gap 0.28634902741760015
两轮结果未更新,进行muteted...
	 18  --most gap 0.28634902741760015
	 19  --most gap 0.28634902741760015
Changing code structure...
sorted_id: [0, 1, 2]
changeCodeStructure SUCCESS!
Processing examples:  10%|▉         | 38/400 [08:29<1:40:32, 16.67s/it]01/02/2025 12:35:35 - INFO - __main__ -   测试:38

01/02/2025 12:35:46 - INFO - __main__ -   Success rate: 95.83%

01/02/2025 12:35:46 - INFO - __main__ -   Successful items count: 23

01/02/2025 12:35:46 - INFO - __main__ -   Total count: 24

01/02/2025 12:35:46 - INFO - __main__ -   Index: 38

Number of variable_names extracted:  2
Generating population38...
	 0  --most gap -0.007015034556388855
	 1  --most gap -0.007015034556388855
	 2  --most gap -0.007015034556388855
两轮结果未更新,进行muteted...
	 3  --most gap -0.007015034556388855
	 4  --most gap -0.007015034556388855
	 5  --most gap -0.007015034556388855
两轮结果未更新,进行muteted...
	 6  --most gap -0.007015034556388855
	 7  --most gap -0.007015034556388855
	 8  --most gap -0.007015034556388855
两轮结果未更新,进行muteted...
	 9  --most gap -0.007015034556388855
	 10  --most gap -0.007015034556388855
	 11  --most gap -0.007015034556388855
两轮结果未更新,进行muteted...
	 12  --most gap -0.007015034556388855
	 13  --most gap -0.007015034556388855
	 14  --most gap -0.007015034556388855
两轮结果未更新,进行muteted...
	 15  --most gap -0.007015034556388855
	 16  --most gap -0.007015034556388855
	 17  --most gap -0.007015034556388855
两轮结果未更新,进行muteted...
	 18  --most gap -0.007015034556388855
	 19  --most gap -0.007015034556388855
Changing code structure...
sorted_id: [0, 2, 1, 3]
changeCodeStructure SUCCESS!
Processing examples:  10%|▉         | 39/400 [08:40<1:34:08, 15.65s/it]01/02/2025 12:35:46 - INFO - __main__ -   测试:39

01/02/2025 12:39:03 - INFO - __main__ -   Success rate: 92.00%

01/02/2025 12:39:03 - INFO - __main__ -   Successful items count: 23

01/02/2025 12:39:03 - INFO - __main__ -   Total count: 25

01/02/2025 12:39:03 - INFO - __main__ -   Index: 39

Number of variable_names extracted:  9
Generating population39...
	 0  --most gap 0.08082849718630314
	 1  --most gap 0.08082849718630314
	 2  --most gap 0.08082849718630314
	 3  --most gap 0.08082849718630314
两轮结果未更新,进行muteted...
	 4  --most gap 0.15452064760029316
	 5  --most gap 0.15452064760029316
	 6  --most gap 0.2297229040414095
	 7  --most gap 0.2297229040414095
	 8  --most gap 0.2297229040414095
	 9  --most gap 0.2297229040414095
两轮结果未更新,进行muteted...
	 10  --most gap 0.2297229040414095
	 11  --most gap 0.2297229040414095
	 12  --most gap 0.2297229040414095
两轮结果未更新,进行muteted...
	 13  --most gap 0.2297229040414095
	 14  --most gap 0.2297229040414095
	 15  --most gap 0.2297229040414095
两轮结果未更新,进行muteted...
	 16  --most gap 0.2297229040414095
	 17  --most gap 0.2297229040414095
	 18  --most gap 0.2297229040414095
两轮结果未更新,进行muteted...
	 19  --most gap 0.2297229040414095
Changing code structure...
sorted_id: [0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
sorted_id: [0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
sorted_id: [0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
sorted_id: [0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15]
Processing examples:  10%|█         | 40/400 [11:57<5:06:43, 51.12s/it]01/02/2025 12:39:03 - INFO - __main__ -   测试:40

01/02/2025 12:39:03 - INFO - __main__ -   Success rate: 92.31%

01/02/2025 12:39:03 - INFO - __main__ -   Successful items count: 24

01/02/2025 12:39:03 - INFO - __main__ -   Total count: 26

01/02/2025 12:39:03 - INFO - __main__ -   Index: 40

01/02/2025 12:39:03 - INFO - __main__ -   测试:41

01/02/2025 12:41:08 - INFO - __main__ -   Success rate: 92.59%

01/02/2025 12:41:08 - INFO - __main__ -   Successful items count: 25

01/02/2025 12:41:08 - INFO - __main__ -   Total count: 27

01/02/2025 12:41:08 - INFO - __main__ -   Index: 41

Number of variable_names extracted:  6
Generating population40...
init SUCCESS!
Number of variable_names extracted:  4
Generating population41...
	 0  --most gap -0.08615112
	 1  --most gap 0.0
	 2  --most gap 0.116784215
	 3  --most gap 0.116784215
	 4  --most gap 0.116784215
	 5  --most gap 0.116784215
两轮结果未更新,进行muteted...
	 6  --most gap 0.116784215
	 7  --most gap 0.116784215
	 8  --most gap 0.116784215
两轮结果未更新,进行muteted...
	 9  --most gap 0.116784215
	 10  --most gap 0.116784215
	 11  --most gap 0.116784215
两轮结果未更新,进行muteted...
	 12  --most gap 0.116784215
	 13  --most gap 0.116784215
	 14  --most gap 0.116784215
两轮结果未更新,进行muteted...
	 15  --most gap 0.116784215
	 16  --most gap 0.116784215
	 17  --most gap 0.116784215
两轮结果未更新,进行muteted...
	 18  --most gap 0.116784215
	 19  --most gap 0.116784215
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  10%|█         | 42/400 [14:02<5:29:33, 55.23s/it]01/02/2025 12:41:08 - INFO - __main__ -   测试:42

01/02/2025 12:41:08 - INFO - __main__ -   Attack failed!

01/02/2025 12:41:08 - INFO - __main__ -   测试:43

01/02/2025 12:41:09 - INFO - __main__ -   Success rate: 92.86%

01/02/2025 12:41:09 - INFO - __main__ -   Successful items count: 26

01/02/2025 12:41:09 - INFO - __main__ -   Total count: 28

01/02/2025 12:41:09 - INFO - __main__ -   Index: 43

The original code is misclassified.
Number of variable_names extracted:  30
Generating population43...
init SUCCESS!
Processing examples:  11%|█         | 44/400 [14:03<3:37:34, 36.67s/it]01/02/2025 12:41:09 - INFO - __main__ -   测试:44

01/02/2025 12:42:20 - INFO - __main__ -   Success rate: 93.10%

01/02/2025 12:42:20 - INFO - __main__ -   Successful items count: 27

01/02/2025 12:42:20 - INFO - __main__ -   Total count: 29

01/02/2025 12:42:20 - INFO - __main__ -   Index: 44

Number of variable_names extracted:  3
Generating population44...
	 0  --most gap 0.3830760885030031
	 1  --most gap 0.3830760885030031
	 2  --most gap 0.3830760885030031
	 3  --most gap 0.3830760885030031
两轮结果未更新,进行muteted...
	 4  --most gap 0.3830760885030031
	 5  --most gap 0.3830760885030031
	 6  --most gap 0.3830760885030031
两轮结果未更新,进行muteted...
	 7  --most gap 0.3830760885030031
	 8  --most gap 0.3830760885030031
	 9  --most gap 0.3830760885030031
两轮结果未更新,进行muteted...
	 10  --most gap 0.3830760885030031
	 11  --most gap 0.3830760885030031
	 12  --most gap 0.3830760885030031
两轮结果未更新,进行muteted...
	 13  --most gap 0.3830760885030031
	 14  --most gap 0.3830760885030031
	 15  --most gap 0.3830760885030031
两轮结果未更新,进行muteted...
	 16  --most gap 0.3830760885030031
	 17  --most gap 0.3830760885030031
	 18  --most gap 0.3830760885030031
两轮结果未更新,进行muteted...
	 19  --most gap 0.3830760885030031
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  11%|█▏        | 45/400 [15:14<4:16:28, 43.35s/it]01/02/2025 12:42:20 - INFO - __main__ -   测试:45

01/02/2025 12:43:49 - INFO - __main__ -   Success rate: 93.33%

01/02/2025 12:43:49 - INFO - __main__ -   Successful items count: 28

01/02/2025 12:43:49 - INFO - __main__ -   Total count: 30

01/02/2025 12:43:49 - INFO - __main__ -   Index: 45

Number of variable_names extracted:  19
Generating population45...
	 0  --most gap 0.22282135
	 1  --most gap 0.22282135
	 2  --most gap 0.22282135
	 3  --most gap 0.22282135
两轮结果未更新,进行muteted...
	 4  --most gap 0.22282135
	 5  --most gap 0.30821347
	 6  --most gap 0.30821347
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  12%|█▏        | 46/400 [16:43<5:14:16, 53.27s/it]01/02/2025 12:43:49 - INFO - __main__ -   测试:46

01/02/2025 12:43:49 - INFO - __main__ -   Success rate: 93.55%

01/02/2025 12:43:49 - INFO - __main__ -   Successful items count: 29

01/02/2025 12:43:49 - INFO - __main__ -   Total count: 31

01/02/2025 12:43:49 - INFO - __main__ -   Index: 46

Number of variable_names extracted:  12
Generating population46...
init SUCCESS!
Processing examples:  12%|█▏        | 47/400 [16:43<3:59:19, 40.68s/it]01/02/2025 12:43:49 - INFO - __main__ -   测试:47

01/02/2025 12:44:16 - INFO - __main__ -   Success rate: 93.75%

01/02/2025 12:44:16 - INFO - __main__ -   Successful items count: 30

01/02/2025 12:44:16 - INFO - __main__ -   Total count: 32

01/02/2025 12:44:16 - INFO - __main__ -   Index: 47

Number of variable_names extracted:  2
Generating population47...
	 0  --most gap -0.0030104713514447212
	 1  --most gap -0.0030104713514447212
	 2  --most gap -0.0030104713514447212
两轮结果未更新,进行muteted...
	 3  --most gap -0.0030104713514447212
	 4  --most gap -0.0030104713514447212
	 5  --most gap -0.0030104713514447212
两轮结果未更新,进行muteted...
	 6  --most gap -0.0030104713514447212
	 7  --most gap -0.0030104713514447212
	 8  --most gap -0.0030104713514447212
两轮结果未更新,进行muteted...
	 9  --most gap -0.0030104713514447212
	 10  --most gap -0.0030104713514447212
	 11  --most gap -0.0030104713514447212
两轮结果未更新,进行muteted...
	 12  --most gap -0.0030104713514447212
	 13  --most gap -0.0030104713514447212
	 14  --most gap -0.0030104713514447212
两轮结果未更新,进行muteted...
	 15  --most gap -0.0030104713514447212
	 16  --most gap -0.0030104713514447212
	 17  --most gap -0.0030104713514447212
两轮结果未更新,进行muteted...
	 18  --most gap -0.0030104713514447212
	 19  --most gap -0.0030104713514447212
Changing code structure...
sorted_id: [0]
sorted_id: [0, 2, 1, 4, 3, 5, 6]
sorted_id: [0, 4, 2, 3, 1, 8, 9, 6, 5, 7]
changeCodeStructure SUCCESS!
Processing examples:  12%|█▏        | 48/400 [17:10<3:37:51, 37.13s/it]01/02/2025 12:44:16 - INFO - __main__ -   测试:48

01/02/2025 12:44:16 - INFO - __main__ -   Attack failed!

01/02/2025 12:44:16 - INFO - __main__ -   测试:49

01/02/2025 12:47:33 - INFO - __main__ -   Success rate: 90.91%

01/02/2025 12:47:33 - INFO - __main__ -   Successful items count: 30

01/02/2025 12:47:33 - INFO - __main__ -   Total count: 33

01/02/2025 12:47:33 - INFO - __main__ -   Index: 49

No variable_names in the code.
Number of variable_names extracted:  6
Generating population49...
	 0  --most gap -0.08464044
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.0
	 4  --most gap 0.0
两轮结果未更新,进行muteted...
	 5  --most gap 0.0
	 6  --most gap 0.0
	 7  --most gap 0.0
两轮结果未更新,进行muteted...
	 8  --most gap 0.0
	 9  --most gap 0.0
	 10  --most gap 0.0
两轮结果未更新,进行muteted...
	 11  --most gap 0.0
	 12  --most gap 0.0
	 13  --most gap 0.0
两轮结果未更新,进行muteted...
	 14  --most gap 0.0
	 15  --most gap 0.0
	 16  --most gap 0.0
两轮结果未更新,进行muteted...
	 17  --most gap 0.0
	 18  --most gap 0.0
	 19  --most gap 0.0
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 3, 1, 2, 4, 5, 6, 7, 23, 8, 17, 18, 13, 16, 22, 21, 15, 14, 19, 10, 9, 20, 11, 12]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 12, 6, 8, 7, 14, 9, 10, 16, 19, 17, 11, 15, 18, 20, 21, 22, 23]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 12, 6, 8, 7, 14, 9, 10, 16, 19, 17, 11, 15, 18, 20, 21, 22, 23]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 12, 6, 8, 7, 14, 9, 10, 16, 19, 17, 11, 15, 18, 20, 21, 22, 23]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 12, 6, 8, 7, 14, 9, 10, 16, 19, 17, 11, 15, 18, 20, 21, 22, 23]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 12, 6, 8, 7, 14, 9, 10, 16, 19, 17, 11, 15, 18, 20, 21, 22, 23]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 12, 6, 8, 7, 14, 9, 10, 17, 19, 20, 21, 22, 23, 24, 11, 18, 16, 15]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 12, 6, 8, 7, 14, 9, 10, 17, 19, 20, 21, 22, 23, 24, 11, 18, 16, 15]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 12, 6, 8, 7, 14, 9, 10, 17, 19, 20, 21, 22, 23, 24, 11, 18, 16, 15]
Processing examples:  12%|█▎        | 50/400 [20:27<6:06:49, 62.89s/it]01/02/2025 12:47:33 - INFO - __main__ -   测试:50

01/02/2025 12:49:39 - INFO - __main__ -   Success rate: 91.18%

01/02/2025 12:49:39 - INFO - __main__ -   Successful items count: 31

01/02/2025 12:49:39 - INFO - __main__ -   Total count: 34

01/02/2025 12:49:39 - INFO - __main__ -   Index: 50

Number of variable_names extracted:  4
Generating population50...
	 0  --most gap 0.034523289650678635
	 1  --most gap 0.1418631263077259
	 2  --most gap 0.1418631263077259
	 3  --most gap 0.1418631263077259
	 4  --most gap 0.1418631263077259
两轮结果未更新,进行muteted...
	 5  --most gap 0.1418631263077259
	 6  --most gap 0.1418631263077259
	 7  --most gap 0.1418631263077259
两轮结果未更新,进行muteted...
	 8  --most gap 0.1418631263077259
	 9  --most gap 0.1418631263077259
	 10  --most gap 0.1418631263077259
两轮结果未更新,进行muteted...
	 11  --most gap 0.1418631263077259
	 12  --most gap 0.1418631263077259
	 13  --most gap 0.1418631263077259
两轮结果未更新,进行muteted...
	 14  --most gap 0.1418631263077259
	 15  --most gap 0.1418631263077259
	 16  --most gap 0.1418631263077259
两轮结果未更新,进行muteted...
	 17  --most gap 0.1418631263077259
	 18  --most gap 0.1418631263077259
	 19  --most gap 0.1418631263077259
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 9, 8, 12, 13, 14, 7, 10, 11]
sorted_id: [0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 13, 12, 11, 14]
changeCodeStructure SUCCESS!
Processing examples:  13%|█▎        | 51/400 [22:32<7:29:55, 77.35s/it]01/02/2025 12:49:39 - INFO - __main__ -   测试:51

01/02/2025 12:49:39 - INFO - __main__ -   Attack failed!

01/02/2025 12:49:39 - INFO - __main__ -   测试:52

01/02/2025 12:49:42 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  13%|█▎        | 53/400 [22:36<4:33:40, 47.32s/it]01/02/2025 12:49:42 - INFO - __main__ -   测试:53

01/02/2025 12:49:42 - INFO - __main__ -   Attack failed!

01/02/2025 12:49:42 - INFO - __main__ -   测试:54

01/02/2025 12:49:42 - INFO - __main__ -   Success rate: 91.43%

01/02/2025 12:49:42 - INFO - __main__ -   Successful items count: 32

01/02/2025 12:49:42 - INFO - __main__ -   Total count: 35

01/02/2025 12:49:42 - INFO - __main__ -   Index: 54

The original code is misclassified.
Number of variable_names extracted:  10
Generating population54...
init SUCCESS!
Processing examples:  14%|█▍        | 55/400 [22:36<2:53:45, 30.22s/it]01/02/2025 12:49:42 - INFO - __main__ -   测试:55

01/02/2025 12:49:42 - INFO - __main__ -   Attack failed!

01/02/2025 12:49:42 - INFO - __main__ -   测试:56

01/02/2025 12:50:08 - INFO - __main__ -   Success rate: 91.67%

01/02/2025 12:50:08 - INFO - __main__ -   Successful items count: 33

01/02/2025 12:50:08 - INFO - __main__ -   Total count: 36

01/02/2025 12:50:08 - INFO - __main__ -   Index: 56

The original code is misclassified.
Number of variable_names extracted:  9
Generating population56...
	 0  --most gap 0.2201882
	 1  --most gap 0.22018844
	 2  --most gap 0.22018844
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  14%|█▍        | 57/400 [23:01<2:18:37, 24.25s/it]01/02/2025 12:50:08 - INFO - __main__ -   测试:57

01/02/2025 12:50:09 - INFO - __main__ -   Success rate: 91.89%

01/02/2025 12:50:09 - INFO - __main__ -   Successful items count: 34

01/02/2025 12:50:09 - INFO - __main__ -   Total count: 37

01/02/2025 12:50:09 - INFO - __main__ -   Index: 57

Number of variable_names extracted:  10
Generating population57...
	 0  --most gap 0.09455731511116028
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  14%|█▍        | 58/400 [23:03<1:52:20, 19.71s/it]01/02/2025 12:50:09 - INFO - __main__ -   测试:58

01/02/2025 12:50:10 - INFO - __main__ -   Success rate: 92.11%

01/02/2025 12:50:10 - INFO - __main__ -   Successful items count: 35

01/02/2025 12:50:10 - INFO - __main__ -   Total count: 38

01/02/2025 12:50:10 - INFO - __main__ -   Index: 58

Number of variable_names extracted:  9
Generating population58...
	 0  --most gap 0.2723276
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  15%|█▍        | 59/400 [23:04<1:28:47, 15.62s/it]01/02/2025 12:50:10 - INFO - __main__ -   测试:59

01/02/2025 12:50:10 - INFO - __main__ -   Attack failed!

01/02/2025 12:50:10 - INFO - __main__ -   测试:60

01/02/2025 12:50:10 - INFO - __main__ -   Attack failed!

01/02/2025 12:50:10 - INFO - __main__ -   测试:61

01/02/2025 12:50:53 - INFO - __main__ -   Success rate: 92.31%

01/02/2025 12:50:53 - INFO - __main__ -   Successful items count: 36

01/02/2025 12:50:53 - INFO - __main__ -   Total count: 39

01/02/2025 12:50:53 - INFO - __main__ -   Index: 61

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population61...
	 0  --most gap 0.22066396
	 1  --most gap 0.22066635
	 2  --most gap 0.22066635
	 3  --most gap 0.22066635
	 4  --most gap 0.42886508
	 5  --most gap 0.44325525
	 6  --most gap 0.44325525
	 7  --most gap 0.44325525
	 8  --most gap 0.47673
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▌        | 62/400 [23:47<1:24:56, 15.08s/it]01/02/2025 12:50:53 - INFO - __main__ -   测试:62

01/02/2025 12:50:53 - INFO - __main__ -   Success rate: 92.50%

01/02/2025 12:50:53 - INFO - __main__ -   Successful items count: 37

01/02/2025 12:50:53 - INFO - __main__ -   Total count: 40

01/02/2025 12:50:53 - INFO - __main__ -   Index: 62

Number of variable_names extracted:  14
Generating population62...
init SUCCESS!
Processing examples:  16%|█▌        | 63/400 [23:47<1:08:59, 12.28s/it]01/02/2025 12:50:53 - INFO - __main__ -   测试:63

01/02/2025 12:50:53 - INFO - __main__ -   Attack failed!

01/02/2025 12:50:53 - INFO - __main__ -   测试:64

01/02/2025 12:51:30 - INFO - __main__ -   Success rate: 90.24%

01/02/2025 12:51:30 - INFO - __main__ -   Successful items count: 37

01/02/2025 12:51:30 - INFO - __main__ -   Total count: 41

01/02/2025 12:51:30 - INFO - __main__ -   Index: 64

The original code is misclassified.
Number of variable_names extracted:  1
Generating population64...
	 0  --most gap 0.0028151274
	 1  --most gap 0.0028151274
	 2  --most gap 0.0028151274
两轮结果未更新,进行muteted...
	 3  --most gap 0.0028151274
	 4  --most gap 0.0028151274
	 5  --most gap 0.0028151274
两轮结果未更新,进行muteted...
	 6  --most gap 0.0028151274
	 7  --most gap 0.0028151274
	 8  --most gap 0.0028151274
两轮结果未更新,进行muteted...
	 9  --most gap 0.0028151274
	 10  --most gap 0.0028151274
	 11  --most gap 0.0028151274
两轮结果未更新,进行muteted...
	 12  --most gap 0.0028151274
	 13  --most gap 0.0028151274
	 14  --most gap 0.0028151274
两轮结果未更新,进行muteted...
	 15  --most gap 0.0028151274
	 16  --most gap 0.0028151274
	 17  --most gap 0.0028151274
两轮结果未更新,进行muteted...
	 18  --most gap 0.0028151274
	 19  --most gap 0.0028151274
Changing code structure...
sorted_id: [0, 1, 2, 3, 4]
sorted_id: [0, 2, 1, 3, 6, 5, 4, 7]
sorted_id: [0, 1, 2, 3, 4]
sorted_id: [0, 1, 2, 6, 3, 5, 4, 7]
sorted_id: [0, 1, 6, 2, 5, 3, 4, 7, 9, 10, 8, 14, 15, 13, 12, 11]
sorted_id: [0, 1, 2, 3, 4]
sorted_id: [0, 1, 2, 5, 6, 3, 4, 7, 8, 9, 10, 11, 12]
sorted_id: [0, 1, 2, 6, 3, 5, 4, 7, 8, 9, 10, 13, 12, 14, 15, 16, 17, 18, 19, 20, 11]
sorted_id: [0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12]
sorted_id: [0, 3, 1, 4, 2]
Processing examples:  16%|█▋        | 65/400 [24:23<1:19:59, 14.33s/it]01/02/2025 12:51:30 - INFO - __main__ -   测试:65

01/02/2025 12:52:24 - INFO - __main__ -   Success rate: 90.48%

01/02/2025 12:52:24 - INFO - __main__ -   Successful items count: 38

01/02/2025 12:52:24 - INFO - __main__ -   Total count: 42

01/02/2025 12:52:24 - INFO - __main__ -   Index: 65

Number of variable_names extracted:  7
Generating population65...
	 0  --most gap 0.062895596
	 1  --most gap 0.13351166
	 2  --most gap 0.13351166
	 3  --most gap 0.13351166
	 4  --most gap 0.16446525
	 5  --most gap 0.16446525
	 6  --most gap 0.16446525
	 7  --most gap 0.19053137
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▋        | 66/400 [25:18<2:04:24, 22.35s/it]01/02/2025 12:52:24 - INFO - __main__ -   测试:66

01/02/2025 12:52:24 - INFO - __main__ -   Attack failed!

01/02/2025 12:52:24 - INFO - __main__ -   测试:67

01/02/2025 12:52:24 - INFO - __main__ -   Attack failed!

01/02/2025 12:52:24 - INFO - __main__ -   测试:68

01/02/2025 12:52:24 - INFO - __main__ -   Attack failed!

01/02/2025 12:52:24 - INFO - __main__ -   测试:69

01/02/2025 12:56:32 - INFO - __main__ -   Success rate: 88.37%

01/02/2025 12:56:32 - INFO - __main__ -   Successful items count: 38

01/02/2025 12:56:32 - INFO - __main__ -   Total count: 43

01/02/2025 12:56:32 - INFO - __main__ -   Index: 69

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population69...
	 0  --most gap 0.0012221336
	 1  --most gap 0.0012221336
	 2  --most gap 0.0012521744
	 3  --most gap 0.0012521744
	 4  --most gap 0.0012521744
	 5  --most gap 0.0012521744
两轮结果未更新,进行muteted...
	 6  --most gap 0.0021562576
	 7  --most gap 0.0021562576
	 8  --most gap 0.002602756
	 9  --most gap 0.002602756
	 10  --most gap 0.002602756
	 11  --most gap 0.002602756
两轮结果未更新,进行muteted...
	 12  --most gap 0.002602756
	 13  --most gap 0.002602756
	 14  --most gap 0.002602756
两轮结果未更新,进行muteted...
	 15  --most gap 0.002602756
	 16  --most gap 0.002602756
	 17  --most gap 0.002602756
两轮结果未更新,进行muteted...
	 18  --most gap 0.002602756
	 19  --most gap 0.002602756
Changing code structure...
sorted_id: [0, 37, 38, 39, 40, 41, 42, 43, 44, 3, 2, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 13, 22, 27, 28, 26, 29, 14, 30, 17, 20, 19, 15, 23, 18, 16, 31, 24, 21, 32, 33, 34, 35, 36]
sorted_id: [0, 2, 3, 1, 4, 5, 6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 8, 7, 9, 10, 12, 11, 25, 26, 22, 13, 28, 20, 27, 17, 19, 24, 23, 30, 29, 18, 14, 21, 16, 15, 31, 32, 33, 34, 35, 36]
sorted_id: [0, 2, 3, 1, 4, 5, 6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 8, 7, 9, 10, 12, 11, 25, 26, 22, 13, 28, 20, 27, 17, 19, 24, 23, 30, 29, 18, 14, 21, 16, 15, 31, 32, 33, 34, 35, 36]
sorted_id: [0, 2, 3, 1, 4, 5, 6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 8, 7, 9, 10, 12, 11, 25, 26, 22, 13, 28, 20, 27, 17, 19, 24, 23, 30, 29, 18, 14, 21, 16, 15, 31, 32, 33, 34, 35, 36]
sorted_id: [0, 1, 3, 4, 2]
sorted_id: [0, 1, 3, 4, 2]
sorted_id: [0, 3, 4, 2, 1, 5, 6]
sorted_id: [0, 3, 2, 4, 1, 5, 6, 8, 9, 7, 10, 11]
sorted_id: [0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 16, 13, 12, 15, 14, 11]
sorted_id: [0, 1, 4, 3, 2, 5, 6, 8, 9, 7, 10, 13, 16, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 14, 11]
sorted_id: [0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 10, 13, 12, 14, 16, 15, 11]
sorted_id: [0, 3, 4, 2, 1, 5, 6]
sorted_id: [0, 3, 4, 2, 1, 5, 6]
sorted_id: [0, 2, 3, 1, 4, 5, 6, 8, 7, 9, 13, 12, 10, 14, 11]
sorted_id: [0, 2, 1, 4, 3, 5, 6, 7, 9, 8, 13, 16, 12, 17, 18, 19, 10, 15, 14, 11]
Processing examples:  18%|█▊        | 70/400 [29:26<3:58:41, 43.40s/it]01/02/2025 12:56:32 - INFO - __main__ -   测试:70

01/02/2025 12:56:32 - INFO - __main__ -   Success rate: 88.64%

01/02/2025 12:56:32 - INFO - __main__ -   Successful items count: 39

01/02/2025 12:56:32 - INFO - __main__ -   Total count: 44

01/02/2025 12:56:32 - INFO - __main__ -   Index: 70

01/02/2025 12:56:32 - INFO - __main__ -   测试:71

01/02/2025 12:56:32 - INFO - __main__ -   Success rate: 88.89%

01/02/2025 12:56:32 - INFO - __main__ -   Successful items count: 40

01/02/2025 12:56:32 - INFO - __main__ -   Total count: 45

01/02/2025 12:56:32 - INFO - __main__ -   Index: 71

Number of variable_names extracted:  3
Generating population70...
init SUCCESS!
Number of variable_names extracted:  6
Generating population71...
init SUCCESS!
Processing examples:  18%|█▊        | 72/400 [29:26<2:51:58, 31.46s/it]01/02/2025 12:56:32 - INFO - __main__ -   测试:72

01/02/2025 12:59:14 - INFO - __main__ -   Success rate: 89.13%

01/02/2025 12:59:14 - INFO - __main__ -   Successful items count: 41

01/02/2025 12:59:14 - INFO - __main__ -   Total count: 46

01/02/2025 12:59:14 - INFO - __main__ -   Index: 72

Number of variable_names extracted:  7
Generating population72...
	 0  --most gap 0.02828007936477661
	 1  --most gap 0.02828007936477661
	 2  --most gap 0.03424831107258797
	 3  --most gap 0.03975551947951317
	 4  --most gap 0.03975551947951317
	 5  --most gap 0.03975551947951317
	 6  --most gap 0.03975551947951317
两轮结果未更新,进行muteted...
	 7  --most gap 0.049382131546735764
	 8  --most gap 0.049382131546735764
	 9  --most gap 0.049382131546735764
	 10  --most gap 0.049382131546735764
两轮结果未更新,进行muteted...
	 11  --most gap 0.049382131546735764
	 12  --most gap 0.049382131546735764
	 13  --most gap 0.05014953389763832
	 14  --most gap 0.05014953389763832
	 15  --most gap 0.05014953389763832
	 16  --most gap 0.05490857735276222
	 17  --most gap 0.05490857735276222
	 18  --most gap 0.05490857735276222
	 19  --most gap 0.05490857735276222
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 3, 2, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14]
changeCodeStructure SUCCESS!
Processing examples:  18%|█▊        | 73/400 [32:08<4:48:41, 52.97s/it]01/02/2025 12:59:14 - INFO - __main__ -   测试:73

01/02/2025 12:59:14 - INFO - __main__ -   Attack failed!

01/02/2025 12:59:14 - INFO - __main__ -   测试:74

01/02/2025 12:59:14 - INFO - __main__ -   Attack failed!

01/02/2025 12:59:14 - INFO - __main__ -   测试:75

01/02/2025 12:59:15 - INFO - __main__ -   Success rate: 89.36%

01/02/2025 12:59:15 - INFO - __main__ -   Successful items count: 42

01/02/2025 12:59:15 - INFO - __main__ -   Total count: 47

01/02/2025 12:59:15 - INFO - __main__ -   Index: 75

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population75...
	 0  --most gap 0.26696545
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  19%|█▉        | 76/400 [32:09<2:48:47, 31.26s/it]01/02/2025 12:59:15 - INFO - __main__ -   测试:76

01/02/2025 12:59:15 - INFO - __main__ -   Attack failed!

01/02/2025 12:59:15 - INFO - __main__ -   测试:77

01/02/2025 12:59:25 - INFO - __main__ -   Success rate: 89.58%

01/02/2025 12:59:25 - INFO - __main__ -   Successful items count: 43

01/02/2025 12:59:25 - INFO - __main__ -   Total count: 48

01/02/2025 12:59:25 - INFO - __main__ -   Index: 77

The original code is misclassified.
Number of variable_names extracted:  3
Generating population77...
	 0  --most gap 0.12115878
	 1  --most gap 0.12115878
	 2  --most gap 0.12115878
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|█▉        | 78/400 [32:19<2:07:56, 23.84s/it]01/02/2025 12:59:25 - INFO - __main__ -   测试:78

01/02/2025 12:59:33 - INFO - __main__ -   Success rate: 89.80%

01/02/2025 12:59:33 - INFO - __main__ -   Successful items count: 44

01/02/2025 12:59:33 - INFO - __main__ -   Total count: 49

01/02/2025 12:59:33 - INFO - __main__ -   Index: 78

Number of variable_names extracted:  5
Generating population78...
	 0  --most gap 0.29484124667942524
	 1  --most gap 0.29484124667942524
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|█▉        | 79/400 [32:27<1:52:52, 21.10s/it]01/02/2025 12:59:33 - INFO - __main__ -   测试:79

01/02/2025 13:01:27 - INFO - __main__ -   Success rate: 90.00%

01/02/2025 13:01:27 - INFO - __main__ -   Successful items count: 45

01/02/2025 13:01:27 - INFO - __main__ -   Total count: 50

01/02/2025 13:01:27 - INFO - __main__ -   Index: 79

Number of variable_names extracted:  4
Generating population79...
	 0  --most gap 0.011558270081877708
	 1  --most gap 0.011558286845684052
	 2  --most gap 0.054902540519833565
	 3  --most gap 0.054902540519833565
	 4  --most gap 0.054902540519833565
	 5  --most gap 0.054902540519833565
两轮结果未更新,进行muteted...
	 6  --most gap 0.054902540519833565
	 7  --most gap 0.054902540519833565
	 8  --most gap 0.054902540519833565
两轮结果未更新,进行muteted...
	 9  --most gap 0.054902540519833565
	 10  --most gap 0.054902540519833565
	 11  --most gap 0.054902540519833565
两轮结果未更新,进行muteted...
	 12  --most gap 0.054902540519833565
	 13  --most gap 0.054902540519833565
	 14  --most gap 0.054902540519833565
两轮结果未更新,进行muteted...
	 15  --most gap 0.054902540519833565
	 16  --most gap 0.054902540519833565
	 17  --most gap 0.06626101024448872
	 18  --most gap 0.06626101024448872
	 19  --most gap 0.06626101024448872
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 8, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 8, 7]
changeCodeStructure SUCCESS!
Processing examples:  20%|██        | 80/400 [34:21<3:28:49, 39.15s/it]01/02/2025 13:01:27 - INFO - __main__ -   测试:80

01/02/2025 13:02:09 - INFO - __main__ -   Success rate: 90.20%

01/02/2025 13:02:09 - INFO - __main__ -   Successful items count: 46

01/02/2025 13:02:09 - INFO - __main__ -   Total count: 51

01/02/2025 13:02:09 - INFO - __main__ -   Index: 80

Number of variable_names extracted:  8
Generating population80...
	 0  --most gap -0.020721793174743652
	 1  --most gap 0.06642866134643555
	 2  --most gap 0.06642866134643555
	 3  --most gap 0.06642866134643555
	 4  --most gap 0.13110941648483276
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|██        | 81/400 [35:03<3:30:33, 39.60s/it]01/02/2025 13:02:09 - INFO - __main__ -   测试:81

01/02/2025 13:04:39 - INFO - __main__ -   Success rate: 90.38%

01/02/2025 13:04:39 - INFO - __main__ -   Successful items count: 47

01/02/2025 13:04:39 - INFO - __main__ -   Total count: 52

01/02/2025 13:04:39 - INFO - __main__ -   Index: 81

Number of variable_names extracted:  7
Generating population81...
	 0  --most gap 0.006274052895605564
	 1  --most gap 0.006274077109992504
	 2  --most gap 0.012739366851747036
	 3  --most gap 0.016251119785010815
	 4  --most gap 0.016251119785010815
	 5  --most gap 0.016251119785010815
	 6  --most gap 0.016251119785010815
两轮结果未更新,进行muteted...
	 7  --most gap 0.04898560140281916
	 8  --most gap 0.04898560140281916
	 9  --most gap 0.07972452137619257
	 10  --most gap 0.07972452137619257
	 11  --most gap 0.09021592978388071
	 12  --most gap 0.1236661234870553
	 13  --most gap 0.1236661234870553
	 14  --most gap 0.1236661234870553
	 15  --most gap 0.1236661234870553
两轮结果未更新,进行muteted...
	 16  --most gap 0.1236661234870553
	 17  --most gap 0.1236661234870553
	 18  --most gap 0.1236661234870553
两轮结果未更新,进行muteted...
	 19  --most gap 0.1236661234870553
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 7, 12, 11, 13, 14, 15]
changeCodeStructure SUCCESS!
Processing examples:  20%|██        | 82/400 [37:33<5:48:43, 65.80s/it]01/02/2025 13:04:39 - INFO - __main__ -   测试:82

01/02/2025 13:06:43 - INFO - __main__ -   Success rate: 90.57%

01/02/2025 13:06:43 - INFO - __main__ -   Successful items count: 48

01/02/2025 13:06:43 - INFO - __main__ -   Total count: 53

01/02/2025 13:06:43 - INFO - __main__ -   Index: 82

Number of variable_names extracted:  4
Generating population82...
	 0  --most gap 0.003899563103914261
	 1  --most gap 0.04482285678386688
	 2  --most gap 0.06386616826057434
	 3  --most gap 0.06386616826057434
	 4  --most gap 0.06386616826057434
	 5  --most gap 0.06386616826057434
两轮结果未更新,进行muteted...
	 6  --most gap 0.06386616826057434
	 7  --most gap 0.06386616826057434
	 8  --most gap 0.06386616826057434
两轮结果未更新,进行muteted...
	 9  --most gap 0.06386616826057434
	 10  --most gap 0.06386616826057434
	 11  --most gap 0.06386616826057434
两轮结果未更新,进行muteted...
	 12  --most gap 0.06386616826057434
	 13  --most gap 0.06386616826057434
	 14  --most gap 0.06386616826057434
两轮结果未更新,进行muteted...
	 15  --most gap 0.06386616826057434
	 16  --most gap 0.06386616826057434
	 17  --most gap 0.06386616826057434
两轮结果未更新,进行muteted...
	 18  --most gap 0.06386616826057434
	 19  --most gap 0.06386616826057434
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
sorted_id: [0, 2, 1, 3, 4, 5, 6, 8, 7, 9]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 8, 7, 9]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 8, 7, 9]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 8, 7, 9]
changeCodeStructure SUCCESS!
Processing examples:  21%|██        | 83/400 [39:37<7:04:53, 80.42s/it]01/02/2025 13:06:43 - INFO - __main__ -   测试:83

01/02/2025 13:06:43 - INFO - __main__ -   Attack failed!

01/02/2025 13:06:43 - INFO - __main__ -   测试:84

01/02/2025 13:06:43 - INFO - __main__ -   Attack failed!

01/02/2025 13:06:43 - INFO - __main__ -   测试:85

01/02/2025 13:06:46 - INFO - __main__ -   Success rate: 90.74%

01/02/2025 13:06:46 - INFO - __main__ -   Successful items count: 49

01/02/2025 13:06:46 - INFO - __main__ -   Total count: 54

01/02/2025 13:06:46 - INFO - __main__ -   Index: 85

The original code is misclassified.
No variable_names in the code.
Number of variable_names extracted:  6
Generating population85...
	 0  --most gap 0.04978043
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  22%|██▏       | 86/400 [39:40<3:24:55, 39.16s/it]01/02/2025 13:06:46 - INFO - __main__ -   测试:86

01/02/2025 13:06:46 - INFO - __main__ -   Attack failed!

01/02/2025 13:06:46 - INFO - __main__ -   测试:87

01/02/2025 13:06:46 - INFO - __main__ -   Attack failed!

01/02/2025 13:06:46 - INFO - __main__ -   测试:88

01/02/2025 13:06:46 - INFO - __main__ -   Success rate: 90.91%

01/02/2025 13:06:46 - INFO - __main__ -   Successful items count: 50

01/02/2025 13:06:46 - INFO - __main__ -   Total count: 55

01/02/2025 13:06:46 - INFO - __main__ -   Index: 88

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population88...
init SUCCESS!
Processing examples:  22%|██▏       | 89/400 [39:40<1:56:34, 22.49s/it]01/02/2025 13:06:46 - INFO - __main__ -   测试:89

01/02/2025 13:06:46 - INFO - __main__ -   Success rate: 91.07%

01/02/2025 13:06:46 - INFO - __main__ -   Successful items count: 51

01/02/2025 13:06:46 - INFO - __main__ -   Total count: 56

01/02/2025 13:06:46 - INFO - __main__ -   Index: 89

01/02/2025 13:06:46 - INFO - __main__ -   测试:90

01/02/2025 13:06:46 - INFO - __main__ -   Attack failed!

01/02/2025 13:06:46 - INFO - __main__ -   测试:91

Number of variable_names extracted:  4
Generating population89...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  18
Generating population91...
	 0  --most gap 0.00014573336
Processing examples:  22%|██▏       | 89/400 [39:50<1:56:34, 22.49s/it]01/02/2025 13:11:20 - INFO - __main__ -   Success rate: 91.23%

01/02/2025 13:11:20 - INFO - __main__ -   Successful items count: 52

01/02/2025 13:11:20 - INFO - __main__ -   Total count: 57

01/02/2025 13:11:20 - INFO - __main__ -   Index: 91

	 1  --most gap 0.00014966726
	 2  --most gap 0.00014966726
	 3  --most gap 0.00024467707
	 4  --most gap 0.0006724
	 5  --most gap 0.0006760359
	 6  --most gap 0.0006760359
	 7  --most gap 0.0006760359
	 8  --most gap 0.0006760359
两轮结果未更新,进行muteted...
	 9  --most gap 0.000921607
	 10  --most gap 0.0010761023
	 11  --most gap 0.0010761023
	 12  --most gap 0.0010761023
	 13  --most gap 0.0010761023
两轮结果未更新,进行muteted...
	 14  --most gap 0.0011184812
	 15  --most gap 0.0011184812
	 16  --most gap 0.0011184812
	 17  --most gap 0.0013008714
	 18  --most gap 0.0013008714
	 19  --most gap 0.0013008714
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  23%|██▎       | 92/400 [44:14<4:09:27, 48.60s/it]01/02/2025 13:11:20 - INFO - __main__ -   测试:92

01/02/2025 13:11:32 - INFO - __main__ -   Success rate: 91.38%

01/02/2025 13:11:32 - INFO - __main__ -   Successful items count: 53

01/02/2025 13:11:32 - INFO - __main__ -   Total count: 58

01/02/2025 13:11:32 - INFO - __main__ -   Index: 92

Number of variable_names extracted:  1
Generating population92...
	 0  --most gap -0.0009415331296622753
	 1  --most gap -0.0009415331296622753
	 2  --most gap -0.0009415331296622753
	 3  --most gap -0.0009415331296622753
两轮结果未更新,进行muteted...
	 4  --most gap -0.0009415331296622753
	 5  --most gap -0.0009415331296622753
	 6  --most gap -0.0009415331296622753
两轮结果未更新,进行muteted...
	 7  --most gap -0.0009415331296622753
	 8  --most gap -0.0009415331296622753
	 9  --most gap -0.0009415331296622753
两轮结果未更新,进行muteted...
	 10  --most gap -0.0009415331296622753
	 11  --most gap -0.0009415331296622753
	 12  --most gap -0.0009415331296622753
两轮结果未更新,进行muteted...
	 13  --most gap -0.0009415331296622753
	 14  --most gap -0.0009415331296622753
	 15  --most gap -0.0009415331296622753
两轮结果未更新,进行muteted...
	 16  --most gap -0.0009415331296622753
	 17  --most gap -0.0009415331296622753
	 18  --most gap -0.0009415331296622753
两轮结果未更新,进行muteted...
	 19  --most gap -0.0009415331296622753
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  23%|██▎       | 93/400 [44:26<3:39:33, 42.91s/it]01/02/2025 13:11:32 - INFO - __main__ -   测试:93

01/02/2025 13:11:32 - INFO - __main__ -   Attack failed!

01/02/2025 13:11:32 - INFO - __main__ -   测试:94

01/02/2025 13:11:32 - INFO - __main__ -   Attack failed!

01/02/2025 13:11:32 - INFO - __main__ -   测试:95

01/02/2025 13:11:32 - INFO - __main__ -   Attack failed!

01/02/2025 13:11:32 - INFO - __main__ -   测试:96

01/02/2025 13:11:32 - INFO - __main__ -   Attack failed!

01/02/2025 13:11:32 - INFO - __main__ -   测试:97

01/02/2025 13:11:33 - INFO - __main__ -   Success rate: 91.53%

01/02/2025 13:11:33 - INFO - __main__ -   Successful items count: 54

01/02/2025 13:11:33 - INFO - __main__ -   Total count: 59

01/02/2025 13:11:33 - INFO - __main__ -   Index: 97

The original code is misclassified.
The original code is misclassified.
No variable_names in the code.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population97...
	 0  --most gap 0.0332402
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  24%|██▍       | 98/400 [44:27<1:43:46, 20.62s/it]01/02/2025 13:11:33 - INFO - __main__ -   测试:98

01/02/2025 13:11:33 - INFO - __main__ -   Attack failed!

01/02/2025 13:11:33 - INFO - __main__ -   测试:99

01/02/2025 13:11:34 - INFO - __main__ -   Success rate: 91.67%

01/02/2025 13:11:34 - INFO - __main__ -   Successful items count: 55

01/02/2025 13:11:34 - INFO - __main__ -   Total count: 60

01/02/2025 13:11:34 - INFO - __main__ -   Index: 99

The original code is misclassified.
Number of variable_names extracted:  12
Generating population99...
	 0  --most gap -0.030260086059570312
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  25%|██▌       | 100/400 [44:28<1:20:02, 16.01s/it]01/02/2025 13:11:34 - INFO - __main__ -   测试:100

01/02/2025 13:11:34 - INFO - __main__ -   Success rate: 91.80%

01/02/2025 13:11:34 - INFO - __main__ -   Successful items count: 56

01/02/2025 13:11:34 - INFO - __main__ -   Total count: 61

01/02/2025 13:11:34 - INFO - __main__ -   Index: 100

01/02/2025 13:11:34 - INFO - __main__ -   测试:101

01/02/2025 13:12:39 - INFO - __main__ -   Success rate: 91.94%

01/02/2025 13:12:39 - INFO - __main__ -   Successful items count: 57

01/02/2025 13:12:39 - INFO - __main__ -   Total count: 62

01/02/2025 13:12:39 - INFO - __main__ -   Index: 101

Number of variable_names extracted:  4
Generating population100...
init SUCCESS!
Number of variable_names extracted:  3
Generating population101...
	 0  --most gap 0.06330166291445494
	 1  --most gap 0.06330166291445494
	 2  --most gap 0.08787463139742613
	 3  --most gap 0.08787463139742613
	 4  --most gap 0.08787463139742613
	 5  --most gap 0.08787463139742613
两轮结果未更新,进行muteted...
	 6  --most gap 0.08787463139742613
	 7  --most gap 0.08787463139742613
	 8  --most gap 0.08787463139742613
两轮结果未更新,进行muteted...
	 9  --most gap 0.08787463139742613
	 10  --most gap 0.08787463139742613
	 11  --most gap 0.08787463139742613
两轮结果未更新,进行muteted...
	 12  --most gap 0.08787463139742613
	 13  --most gap 0.08787463139742613
	 14  --most gap 0.08787463139742613
两轮结果未更新,进行muteted...
	 15  --most gap 0.08787463139742613
	 16  --most gap 0.08787463139742613
	 17  --most gap 0.08787463139742613
两轮结果未更新,进行muteted...
	 18  --most gap 0.08787463139742613
	 19  --most gap 0.08787463139742613
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  26%|██▌       | 102/400 [45:33<1:39:40, 20.07s/it]01/02/2025 13:12:39 - INFO - __main__ -   测试:102

01/02/2025 13:12:39 - INFO - __main__ -   Success rate: 92.06%

01/02/2025 13:12:39 - INFO - __main__ -   Successful items count: 58

01/02/2025 13:12:39 - INFO - __main__ -   Total count: 63

01/02/2025 13:12:39 - INFO - __main__ -   Index: 102

Number of variable_names extracted:  3
Generating population102...
	 0  --most gap 0.1136118620634079
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  26%|██▌       | 103/400 [45:33<1:25:05, 17.19s/it]01/02/2025 13:12:39 - INFO - __main__ -   测试:103

01/02/2025 13:12:40 - INFO - __main__ -   Attack failed!

01/02/2025 13:12:40 - INFO - __main__ -   测试:104

01/02/2025 13:15:12 - INFO - __main__ -   Success rate: 92.19%

01/02/2025 13:15:12 - INFO - __main__ -   Successful items count: 59

01/02/2025 13:15:12 - INFO - __main__ -   Total count: 64

01/02/2025 13:15:12 - INFO - __main__ -   Index: 104

The original code is misclassified.
Number of variable_names extracted:  7
Generating population104...
	 0  --most gap 0.0072553083300590515
	 1  --most gap 0.026798656210303307
	 2  --most gap 0.08619165979325771
	 3  --most gap 0.11753878556191921
	 4  --most gap 0.11753878556191921
	 5  --most gap 0.1630533542484045
	 6  --most gap 0.20580743812024593
	 7  --most gap 0.20580743812024593
	 8  --most gap 0.20580743812024593
	 9  --most gap 0.20580743812024593
两轮结果未更新,进行muteted...
	 10  --most gap 0.20580743812024593
	 11  --most gap 0.20580743812024593
	 12  --most gap 0.20580743812024593
两轮结果未更新,进行muteted...
	 13  --most gap 0.20580743812024593
	 14  --most gap 0.20580743812024593
	 15  --most gap 0.20580743812024593
两轮结果未更新,进行muteted...
	 16  --most gap 0.20580743812024593
	 17  --most gap 0.20580743812024593
	 18  --most gap 0.20580743812024593
两轮结果未更新,进行muteted...
	 19  --most gap 0.20580743812024593
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  26%|██▋       | 105/400 [48:06<2:51:57, 34.98s/it]01/02/2025 13:15:12 - INFO - __main__ -   测试:105

01/02/2025 13:17:16 - INFO - __main__ -   Success rate: 92.31%

01/02/2025 13:17:16 - INFO - __main__ -   Successful items count: 60

01/02/2025 13:17:16 - INFO - __main__ -   Total count: 65

01/02/2025 13:17:16 - INFO - __main__ -   Index: 105

Number of variable_names extracted:  5
Generating population105...
	 0  --most gap 0.00016809254884719849
	 1  --most gap 0.007038862444460392
	 2  --most gap 0.007038862444460392
	 3  --most gap 0.007038862444460392
	 4  --most gap 0.007038862444460392
两轮结果未更新,进行muteted...
	 5  --most gap 0.007038862444460392
	 6  --most gap 0.009338782168924809
	 7  --most gap 0.009338782168924809
	 8  --most gap 0.009338782168924809
	 9  --most gap 0.009338782168924809
两轮结果未更新,进行muteted...
	 10  --most gap 0.009338782168924809
	 11  --most gap 0.009338782168924809
	 12  --most gap 0.009338782168924809
两轮结果未更新,进行muteted...
	 13  --most gap 0.009338782168924809
	 14  --most gap 0.009338782168924809
	 15  --most gap 0.009338782168924809
两轮结果未更新,进行muteted...
	 16  --most gap 0.009338782168924809
	 17  --most gap 0.009338782168924809
	 18  --most gap 0.009338782168924809
两轮结果未更新,进行muteted...
	 19  --most gap 0.009338782168924809
Changing code structure...
sorted_id: [0, 1]
sorted_id: [0, 1]
sorted_id: [0, 1]
changeCodeStructure SUCCESS!
Processing examples:  26%|██▋       | 106/400 [50:10<4:07:38, 50.54s/it]01/02/2025 13:17:16 - INFO - __main__ -   测试:106

01/02/2025 13:17:16 - INFO - __main__ -   Attack failed!

01/02/2025 13:17:16 - INFO - __main__ -   测试:107

01/02/2025 13:17:16 - INFO - __main__ -   Success rate: 92.42%

01/02/2025 13:17:16 - INFO - __main__ -   Successful items count: 61

01/02/2025 13:17:16 - INFO - __main__ -   Total count: 66

01/02/2025 13:17:16 - INFO - __main__ -   Index: 107

The original code is misclassified.
Number of variable_names extracted:  12
Generating population107...
init SUCCESS!
Processing examples:  27%|██▋       | 108/400 [50:10<2:43:46, 33.65s/it]01/02/2025 13:17:16 - INFO - __main__ -   测试:108

01/02/2025 13:17:16 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  27%|██▋       | 109/400 [50:10<2:11:52, 27.19s/it]01/02/2025 13:17:16 - INFO - __main__ -   测试:109

01/02/2025 13:17:16 - INFO - __main__ -   Success rate: 92.54%

01/02/2025 13:17:16 - INFO - __main__ -   Successful items count: 62

01/02/2025 13:17:16 - INFO - __main__ -   Total count: 67

01/02/2025 13:17:16 - INFO - __main__ -   Index: 109

Number of variable_names extracted:  7
Generating population109...
init SUCCESS!
Processing examples:  28%|██▊       | 110/400 [50:10<1:43:06, 21.33s/it]01/02/2025 13:17:16 - INFO - __main__ -   测试:110

01/02/2025 13:17:16 - INFO - __main__ -   Success rate: 92.65%

01/02/2025 13:17:16 - INFO - __main__ -   Successful items count: 63

01/02/2025 13:17:16 - INFO - __main__ -   Total count: 68

01/02/2025 13:17:16 - INFO - __main__ -   Index: 110

Number of variable_names extracted:  6
Generating population110...
init SUCCESS!
Processing examples:  28%|██▊       | 111/400 [50:10<1:18:39, 16.33s/it]01/02/2025 13:17:16 - INFO - __main__ -   测试:111

01/02/2025 13:17:25 - INFO - __main__ -   Success rate: 92.75%

01/02/2025 13:17:25 - INFO - __main__ -   Successful items count: 64

01/02/2025 13:17:25 - INFO - __main__ -   Total count: 69

01/02/2025 13:17:25 - INFO - __main__ -   Index: 111

Number of variable_names extracted:  1
Generating population111...
	 0  --most gap 0.05594897270202637
	 1  --most gap 0.05594897270202637
	 2  --most gap 0.05594897270202637
	 3  --most gap 0.05594897270202637
两轮结果未更新,进行muteted...
	 4  --most gap 0.05594897270202637
	 5  --most gap 0.05594897270202637
	 6  --most gap 0.05594897270202637
两轮结果未更新,进行muteted...
	 7  --most gap 0.05594897270202637
	 8  --most gap 0.05594897270202637
	 9  --most gap 0.05594897270202637
两轮结果未更新,进行muteted...
	 10  --most gap 0.05594897270202637
	 11  --most gap 0.05594897270202637
	 12  --most gap 0.05594897270202637
两轮结果未更新,进行muteted...
	 13  --most gap 0.05594897270202637
	 14  --most gap 0.05594897270202637
	 15  --most gap 0.05594897270202637
两轮结果未更新,进行muteted...
	 16  --most gap 0.05594897270202637
	 17  --most gap 0.05594897270202637
	 18  --most gap 0.05594897270202637
两轮结果未更新,进行muteted...
	 19  --most gap 0.05594897270202637
Changing code structure...
sorted_id: [0]
changeCodeStructure SUCCESS!
Processing examples:  28%|██▊       | 112/400 [50:19<1:08:48, 14.34s/it]01/02/2025 13:17:25 - INFO - __main__ -   测试:112

01/02/2025 13:17:26 - INFO - __main__ -   Success rate: 92.86%

01/02/2025 13:17:26 - INFO - __main__ -   Successful items count: 65

01/02/2025 13:17:26 - INFO - __main__ -   Total count: 70

01/02/2025 13:17:26 - INFO - __main__ -   Index: 112

Number of variable_names extracted:  3
Generating population112...
	 0  --most gap 0.05750595033168793
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 113/400 [50:20<51:31, 10.77s/it]  01/02/2025 13:17:26 - INFO - __main__ -   测试:113

01/02/2025 13:17:34 - INFO - __main__ -   Success rate: 92.96%

01/02/2025 13:17:34 - INFO - __main__ -   Successful items count: 66

01/02/2025 13:17:34 - INFO - __main__ -   Total count: 71

01/02/2025 13:17:34 - INFO - __main__ -   Index: 113

Number of variable_names extracted:  7
Generating population113...
	 0  --most gap 0.2046467736363411
	 1  --most gap 0.41528210788965225
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 114/400 [50:28<48:17, 10.13s/it]01/02/2025 13:17:34 - INFO - __main__ -   测试:114

01/02/2025 13:17:34 - INFO - __main__ -   Success rate: 93.06%

01/02/2025 13:17:34 - INFO - __main__ -   Successful items count: 67

01/02/2025 13:17:34 - INFO - __main__ -   Total count: 72

01/02/2025 13:17:34 - INFO - __main__ -   Index: 114

01/02/2025 13:17:34 - INFO - __main__ -   测试:115

01/02/2025 13:17:47 - INFO - __main__ -   Success rate: 93.15%

01/02/2025 13:17:47 - INFO - __main__ -   Successful items count: 68

01/02/2025 13:17:47 - INFO - __main__ -   Total count: 73

01/02/2025 13:17:47 - INFO - __main__ -   Index: 115

Number of variable_names extracted:  4
Generating population114...
init SUCCESS!
Number of variable_names extracted:  1
Generating population115...
	 0  --most gap -0.2003958821296692
	 1  --most gap -0.2003958821296692
	 2  --most gap -0.2003958821296692
两轮结果未更新,进行muteted...
	 3  --most gap -0.2003958821296692
	 4  --most gap -0.2003958821296692
	 5  --most gap -0.2003958821296692
两轮结果未更新,进行muteted...
	 6  --most gap -0.2003958821296692
	 7  --most gap -0.2003958821296692
	 8  --most gap -0.2003958821296692
两轮结果未更新,进行muteted...
	 9  --most gap -0.2003958821296692
	 10  --most gap -0.2003958821296692
	 11  --most gap -0.2003958821296692
两轮结果未更新,进行muteted...
	 12  --most gap -0.2003958821296692
	 13  --most gap -0.2003958821296692
	 14  --most gap -0.2003958821296692
两轮结果未更新,进行muteted...
	 15  --most gap -0.2003958821296692
	 16  --most gap -0.2003958821296692
	 17  --most gap -0.2003958821296692
两轮结果未更新,进行muteted...
	 18  --most gap -0.2003958821296692
	 19  --most gap -0.2003958821296692
Changing code structure...
sorted_id: [0]
sorted_id: [0]
sorted_id: [0]
sorted_id: [0]
sorted_id: [0, 4, 1, 3, 2, 5]
changeCodeStructure SUCCESS!
Processing examples:  29%|██▉       | 116/400 [50:41<40:34,  8.57s/it]01/02/2025 13:17:47 - INFO - __main__ -   测试:116

01/02/2025 13:17:47 - INFO - __main__ -   Success rate: 93.24%

01/02/2025 13:17:47 - INFO - __main__ -   Successful items count: 69

01/02/2025 13:17:47 - INFO - __main__ -   Total count: 74

01/02/2025 13:17:47 - INFO - __main__ -   Index: 116

01/02/2025 13:17:47 - INFO - __main__ -   测试:117

01/02/2025 13:17:59 - INFO - __main__ -   Success rate: 93.33%

01/02/2025 13:17:59 - INFO - __main__ -   Successful items count: 70

01/02/2025 13:17:59 - INFO - __main__ -   Total count: 75

01/02/2025 13:17:59 - INFO - __main__ -   Index: 117

Number of variable_names extracted:  3
Generating population116...
init SUCCESS!
Number of variable_names extracted:  1
Generating population117...
	 0  --most gap 0.006360233
	 1  --most gap 0.006360233
	 2  --most gap 0.006360233
两轮结果未更新,进行muteted...
	 3  --most gap 0.006360233
	 4  --most gap 0.006360233
	 5  --most gap 0.006360233
两轮结果未更新,进行muteted...
	 6  --most gap 0.006360233
	 7  --most gap 0.006360233
	 8  --most gap 0.006360233
两轮结果未更新,进行muteted...
	 9  --most gap 0.006360233
	 10  --most gap 0.006360233
	 11  --most gap 0.006360233
两轮结果未更新,进行muteted...
	 12  --most gap 0.006360233
	 13  --most gap 0.006360233
	 14  --most gap 0.006360233
两轮结果未更新,进行muteted...
	 15  --most gap 0.006360233
	 16  --most gap 0.006360233
	 17  --most gap 0.006360233
两轮结果未更新,进行muteted...
	 18  --most gap 0.006360233
	 19  --most gap 0.006360233
Changing code structure...
sorted_id: [0, 1, 2, 3]
sorted_id: [0, 1, 2, 4, 3, 5, 6, 7, 8, 11, 9, 10]
sorted_id: [0, 2, 1, 4, 3, 5, 6, 14, 12, 13, 9, 10, 11, 7, 8]
changeCodeStructure SUCCESS!
Processing examples:  30%|██▉       | 118/400 [50:53<35:31,  7.56s/it]01/02/2025 13:17:59 - INFO - __main__ -   测试:118

01/02/2025 13:22:25 - INFO - __main__ -   Success rate: 93.42%

01/02/2025 13:22:25 - INFO - __main__ -   Successful items count: 71

01/02/2025 13:22:25 - INFO - __main__ -   Total count: 76

01/02/2025 13:22:25 - INFO - __main__ -   Index: 118

Number of variable_names extracted:  5
Generating population118...
	 0  --most gap 0.0049132705
	 1  --most gap 0.009715021
	 2  --most gap 0.009715021
	 3  --most gap 0.009715021
	 4  --most gap 0.010590732
	 5  --most gap 0.010590732
	 6  --most gap 0.010590732
	 7  --most gap 0.010590732
两轮结果未更新,进行muteted...
	 8  --most gap 0.010590732
	 9  --most gap 0.010590732
	 10  --most gap 0.010590732
两轮结果未更新,进行muteted...
	 11  --most gap 0.010590732
	 12  --most gap 0.010590732
	 13  --most gap 0.010590732
两轮结果未更新,进行muteted...
	 14  --most gap 0.010590732
	 15  --most gap 0.010590732
	 16  --most gap 0.010590732
两轮结果未更新,进行muteted...
	 17  --most gap 0.010590732
	 18  --most gap 0.010590732
	 19  --most gap 0.010590732
两轮结果未更新,进行muteted...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  30%|██▉       | 119/400 [55:19<4:57:07, 63.44s/it]01/02/2025 13:22:25 - INFO - __main__ -   测试:119

01/02/2025 13:22:25 - INFO - __main__ -   Attack failed!

01/02/2025 13:22:25 - INFO - __main__ -   测试:120

01/02/2025 13:22:26 - INFO - __main__ -   Success rate: 93.51%

01/02/2025 13:22:26 - INFO - __main__ -   Successful items count: 72

01/02/2025 13:22:26 - INFO - __main__ -   Total count: 77

01/02/2025 13:22:26 - INFO - __main__ -   Index: 120

The original code is misclassified.
Number of variable_names extracted:  4
Generating population120...
	 0  --most gap 0.26518667
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  30%|███       | 121/400 [55:20<3:03:17, 39.42s/it]01/02/2025 13:22:26 - INFO - __main__ -   测试:121

01/02/2025 13:23:48 - INFO - __main__ -   Success rate: 93.59%

01/02/2025 13:23:48 - INFO - __main__ -   Successful items count: 73

01/02/2025 13:23:48 - INFO - __main__ -   Total count: 78

01/02/2025 13:23:48 - INFO - __main__ -   Index: 121

Number of variable_names extracted:  3
Generating population121...
	 0  --most gap 0.03358859
	 1  --most gap 0.15655255
	 2  --most gap 0.15655255
	 3  --most gap 0.15655255
	 4  --most gap 0.3169213
	 5  --most gap 0.3169213
	 6  --most gap 0.3169213
	 7  --most gap 0.3169213
两轮结果未更新,进行muteted...
	 8  --most gap 0.3169213
	 9  --most gap 0.3169213
	 10  --most gap 0.3169213
两轮结果未更新,进行muteted...
	 11  --most gap 0.3169213
	 12  --most gap 0.3169213
	 13  --most gap 0.3169213
两轮结果未更新,进行muteted...
	 14  --most gap 0.3169213
	 15  --most gap 0.3169213
	 16  --most gap 0.3169213
两轮结果未更新,进行muteted...
	 17  --most gap 0.3169213
	 18  --most gap 0.3169213
	 19  --most gap 0.3169213
两轮结果未更新,进行muteted...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  30%|███       | 122/400 [56:42<3:44:54, 48.54s/it]01/02/2025 13:23:48 - INFO - __main__ -   测试:122

01/02/2025 13:24:12 - INFO - __main__ -   Success rate: 93.67%

01/02/2025 13:24:12 - INFO - __main__ -   Successful items count: 74

01/02/2025 13:24:12 - INFO - __main__ -   Total count: 79

01/02/2025 13:24:12 - INFO - __main__ -   Index: 122

Number of variable_names extracted:  2
Generating population122...
	 0  --most gap 0.015665501356124878
	 1  --most gap 0.015665501356124878
	 2  --most gap 0.015665501356124878
	 3  --most gap 0.015665501356124878
两轮结果未更新,进行muteted...
	 4  --most gap 0.015665501356124878
	 5  --most gap 0.015665501356124878
	 6  --most gap 0.015665501356124878
两轮结果未更新,进行muteted...
	 7  --most gap 0.015665501356124878
	 8  --most gap 0.015665501356124878
	 9  --most gap 0.015665501356124878
两轮结果未更新,进行muteted...
	 10  --most gap 0.015665501356124878
	 11  --most gap 0.015665501356124878
	 12  --most gap 0.015665501356124878
两轮结果未更新,进行muteted...
	 13  --most gap 0.015665501356124878
	 14  --most gap 0.015665501356124878
	 15  --most gap 0.015665501356124878
两轮结果未更新,进行muteted...
	 16  --most gap 0.015665501356124878
	 17  --most gap 0.015665501356124878
	 18  --most gap 0.015665501356124878
两轮结果未更新,进行muteted...
	 19  --most gap 0.015665501356124878
Changing code structure...
sorted_id: [0, 1, 3, 2, 4, 6, 5]
changeCodeStructure SUCCESS!
Processing examples:  31%|███       | 123/400 [57:06<3:17:26, 42.77s/it]01/02/2025 13:24:12 - INFO - __main__ -   测试:123

01/02/2025 13:26:11 - INFO - __main__ -   Success rate: 93.75%

01/02/2025 13:26:11 - INFO - __main__ -   Successful items count: 75

01/02/2025 13:26:11 - INFO - __main__ -   Total count: 80

01/02/2025 13:26:11 - INFO - __main__ -   Index: 123

Number of variable_names extracted:  5
Generating population123...
	 0  --most gap 0.0014351345598697662
	 1  --most gap 0.027974573895335197
	 2  --most gap 0.027974573895335197
	 3  --most gap 0.035170840099453926
	 4  --most gap 0.035170840099453926
	 5  --most gap 0.035170840099453926
	 6  --most gap 0.035170840099453926
两轮结果未更新,进行muteted...
	 7  --most gap 0.035170840099453926
	 8  --most gap 0.035170840099453926
	 9  --most gap 0.035170840099453926
两轮结果未更新,进行muteted...
	 10  --most gap 0.035170840099453926
	 11  --most gap 0.035170840099453926
	 12  --most gap 0.035170840099453926
两轮结果未更新,进行muteted...
	 13  --most gap 0.035170840099453926
	 14  --most gap 0.035170840099453926
	 15  --most gap 0.035170840099453926
两轮结果未更新,进行muteted...
	 16  --most gap 0.035170840099453926
	 17  --most gap 0.035170840099453926
	 18  --most gap 0.035170840099453926
两轮结果未更新,进行muteted...
	 19  --most gap 0.035170840099453926
Changing code structure...
sorted_id: [0, 1, 2, 3, 4]
changeCodeStructure SUCCESS!
Processing examples:  31%|███       | 124/400 [59:05<4:44:14, 61.79s/it]01/02/2025 13:26:11 - INFO - __main__ -   测试:124

01/02/2025 13:26:11 - INFO - __main__ -   Attack failed!

01/02/2025 13:26:11 - INFO - __main__ -   测试:125

01/02/2025 13:26:11 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  32%|███▏      | 126/400 [59:05<2:44:35, 36.04s/it]01/02/2025 13:26:11 - INFO - __main__ -   测试:126

01/02/2025 13:26:54 - INFO - __main__ -   Success rate: 92.59%

01/02/2025 13:26:54 - INFO - __main__ -   Successful items count: 75

01/02/2025 13:26:54 - INFO - __main__ -   Total count: 81

01/02/2025 13:26:54 - INFO - __main__ -   Index: 126

Number of variable_names extracted:  2
Generating population126...
	 0  --most gap 0.22562653
	 1  --most gap 0.22562653
	 2  --most gap 0.22562653
两轮结果未更新,进行muteted...
	 3  --most gap 0.22562653
	 4  --most gap 0.22562653
	 5  --most gap 0.22562653
两轮结果未更新,进行muteted...
	 6  --most gap 0.22562653
	 7  --most gap 0.22562653
	 8  --most gap 0.22562653
两轮结果未更新,进行muteted...
	 9  --most gap 0.22562653
	 10  --most gap 0.22562653
	 11  --most gap 0.22562653
两轮结果未更新,进行muteted...
	 12  --most gap 0.22562653
	 13  --most gap 0.22562653
	 14  --most gap 0.22562653
两轮结果未更新,进行muteted...
	 15  --most gap 0.22562653
	 16  --most gap 0.22562653
	 17  --most gap 0.22562653
两轮结果未更新,进行muteted...
	 18  --most gap 0.22562653
	 19  --most gap 0.22562653
Changing code structure...
sorted_id: [0, 3, 2, 4, 1, 5]
sorted_id: [0, 2, 1, 3, 5, 6, 4, 7, 8]
sorted_id: [0, 4, 2, 1, 3, 6, 5, 7, 8, 9, 10, 12, 11, 13, 14, 16, 15]
sorted_id: [0, 4, 2, 1, 3, 6, 5, 7, 8, 9, 10, 12, 11, 13, 14, 16, 15]
sorted_id: [0, 2, 4, 1, 3, 7, 6, 8, 5, 9, 10, 13, 14, 12, 17, 16, 11, 15, 18, 20, 19, 23, 24, 22, 21]
sorted_id: [0, 4, 3, 1, 2, 6, 7, 5, 8, 9, 10, 11, 12, 14, 13, 15, 17, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 24, 22, 23, 25]
sorted_id: [0, 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 12, 14, 13, 16, 17, 15, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 23, 21, 22, 24]
sorted_id: [0, 3, 2, 1, 4, 6, 7, 8, 5, 9, 10, 12, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]
Processing examples:  32%|███▏      | 127/400 [59:48<2:50:51, 37.55s/it]01/02/2025 13:26:54 - INFO - __main__ -   测试:127

01/02/2025 13:28:55 - INFO - __main__ -   Success rate: 92.68%

01/02/2025 13:28:55 - INFO - __main__ -   Successful items count: 76

01/02/2025 13:28:55 - INFO - __main__ -   Total count: 82

01/02/2025 13:28:55 - INFO - __main__ -   Index: 127

Number of variable_names extracted:  10
Generating population127...
	 0  --most gap -0.10573894
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.0
	 4  --most gap 0.0
两轮结果未更新,进行muteted...
	 5  --most gap 0.017262816
	 6  --most gap 0.017262816
	 7  --most gap 0.017262816
	 8  --most gap 0.04830104
	 9  --most gap 0.04830104
	 10  --most gap 0.04830104
	 11  --most gap 0.04830104
两轮结果未更新,进行muteted...
	 12  --most gap 0.05606562
	 13  --most gap 0.05606562
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  32%|███▏      | 128/400 [1:01:49<4:24:00, 58.24s/it]01/02/2025 13:28:55 - INFO - __main__ -   测试:128

01/02/2025 13:28:55 - INFO - __main__ -   Success rate: 92.77%

01/02/2025 13:28:55 - INFO - __main__ -   Successful items count: 77

01/02/2025 13:28:55 - INFO - __main__ -   Total count: 83

01/02/2025 13:28:55 - INFO - __main__ -   Index: 128

01/02/2025 13:28:55 - INFO - __main__ -   测试:129

01/02/2025 13:28:55 - INFO - __main__ -   Attack failed!

01/02/2025 13:28:55 - INFO - __main__ -   测试:130

01/02/2025 13:29:07 - INFO - __main__ -   Success rate: 92.86%

01/02/2025 13:29:07 - INFO - __main__ -   Successful items count: 78

01/02/2025 13:29:07 - INFO - __main__ -   Total count: 84

01/02/2025 13:29:07 - INFO - __main__ -   Index: 130

Number of variable_names extracted:  3
Generating population128...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  12
Generating population130...
	 0  --most gap 0.115888834
	 1  --most gap 0.12539983
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  33%|███▎      | 131/400 [1:02:01<2:15:52, 30.31s/it]01/02/2025 13:29:07 - INFO - __main__ -   测试:131

01/02/2025 13:32:37 - INFO - __main__ -   Success rate: 91.76%

01/02/2025 13:32:37 - INFO - __main__ -   Successful items count: 78

01/02/2025 13:32:37 - INFO - __main__ -   Total count: 85

01/02/2025 13:32:37 - INFO - __main__ -   Index: 131

Number of variable_names extracted:  12
Generating population131...
	 0  --most gap 0.020838678
	 1  --most gap 0.020838797
	 2  --most gap 0.020838797
	 3  --most gap 0.020838797
	 4  --most gap 0.020838797
两轮结果未更新,进行muteted...
	 5  --most gap 0.020838797
	 6  --most gap 0.020838797
	 7  --most gap 0.020838797
两轮结果未更新,进行muteted...
	 8  --most gap 0.020838797
	 9  --most gap 0.020838797
	 10  --most gap 0.020838797
两轮结果未更新,进行muteted...
	 11  --most gap 0.020838797
	 12  --most gap 0.020838797
	 13  --most gap 0.020838797
两轮结果未更新,进行muteted...
	 14  --most gap 0.020838797
	 15  --most gap 0.020838797
	 16  --most gap 0.020838797
两轮结果未更新,进行muteted...
	 17  --most gap 0.020838797
	 18  --most gap 0.020838797
	 19  --most gap 0.020838797
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 9, 8, 7, 12, 10, 11]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7]
Processing examples:  33%|███▎      | 132/400 [1:05:31<4:53:12, 65.64s/it]01/02/2025 13:32:37 - INFO - __main__ -   测试:132

01/02/2025 13:33:26 - INFO - __main__ -   Success rate: 90.70%

01/02/2025 13:33:26 - INFO - __main__ -   Successful items count: 78

01/02/2025 13:33:26 - INFO - __main__ -   Total count: 86

01/02/2025 13:33:26 - INFO - __main__ -   Index: 132

Number of variable_names extracted:  2
Generating population132...
	 0  --most gap -0.026119053
	 1  --most gap -0.026119053
	 2  --most gap -0.026119053
两轮结果未更新,进行muteted...
	 3  --most gap -0.026119053
	 4  --most gap -0.026119053
	 5  --most gap -0.026119053
两轮结果未更新,进行muteted...
	 6  --most gap -0.026119053
	 7  --most gap -0.026119053
	 8  --most gap -0.026119053
两轮结果未更新,进行muteted...
	 9  --most gap -0.026119053
	 10  --most gap -0.026119053
	 11  --most gap -0.026119053
两轮结果未更新,进行muteted...
	 12  --most gap -0.026119053
	 13  --most gap -0.026119053
	 14  --most gap -0.026119053
两轮结果未更新,进行muteted...
	 15  --most gap -0.026119053
	 16  --most gap -0.026119053
	 17  --most gap -0.026119053
两轮结果未更新,进行muteted...
	 18  --most gap -0.026119053
	 19  --most gap -0.026119053
Changing code structure...
sorted_id: [0, 4, 1, 2, 3, 7, 6, 8, 5, 10, 12, 9, 13, 14, 11, 15]
sorted_id: [0, 4, 1, 2, 3, 7, 6, 8, 5, 10, 12, 9, 13, 14, 11, 15]
sorted_id: [0, 4, 1, 2, 3, 7, 6, 8, 5, 10, 12, 9, 13, 14, 11, 15]
sorted_id: [0, 4, 1, 2, 3, 7, 6, 8, 5, 10, 12, 9, 13, 14, 11, 15]
sorted_id: [0, 4, 1, 2, 3, 7, 6, 8, 5, 10, 12, 9, 13, 14, 11, 15]
sorted_id: [0, 4, 1, 2, 3, 7, 6, 8, 5, 10, 12, 9, 13, 14, 11, 15]
sorted_id: [0, 4, 1, 2, 3, 7, 6, 8, 5, 10, 12, 9, 13, 14, 11, 15]
sorted_id: [0, 4, 1, 2, 3, 7, 6, 8, 5, 10, 12, 9, 13, 14, 11, 15]
Processing examples:  33%|███▎      | 133/400 [1:06:20<4:36:31, 62.14s/it]01/02/2025 13:33:26 - INFO - __main__ -   测试:133

01/02/2025 13:33:26 - INFO - __main__ -   Attack failed!

01/02/2025 13:33:26 - INFO - __main__ -   测试:134

01/02/2025 13:33:26 - INFO - __main__ -   Attack failed!

01/02/2025 13:33:26 - INFO - __main__ -   测试:135

01/02/2025 13:33:26 - INFO - __main__ -   Attack failed!

01/02/2025 13:33:26 - INFO - __main__ -   测试:136

01/02/2025 13:33:29 - INFO - __main__ -   Success rate: 90.80%

01/02/2025 13:33:29 - INFO - __main__ -   Successful items count: 79

01/02/2025 13:33:29 - INFO - __main__ -   Total count: 87

01/02/2025 13:33:29 - INFO - __main__ -   Index: 136

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  15
Generating population136...
	 0  --most gap 0.13311684
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  34%|███▍      | 137/400 [1:06:23<2:02:20, 27.91s/it]01/02/2025 13:33:29 - INFO - __main__ -   测试:137

01/02/2025 13:33:29 - INFO - __main__ -   Attack failed!

01/02/2025 13:33:29 - INFO - __main__ -   测试:138

01/02/2025 13:33:29 - INFO - __main__ -   Success rate: 90.91%

01/02/2025 13:33:29 - INFO - __main__ -   Successful items count: 80

01/02/2025 13:33:29 - INFO - __main__ -   Total count: 88

01/02/2025 13:33:29 - INFO - __main__ -   Index: 138

01/02/2025 13:33:29 - INFO - __main__ -   测试:139

01/02/2025 13:33:29 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Number of variable_names extracted:  4
Generating population138...
init SUCCESS!
The original code is misclassified.
Processing examples:  35%|███▌      | 140/400 [1:06:23<1:15:50, 17.50s/it]01/02/2025 13:33:29 - INFO - __main__ -   测试:140

01/02/2025 13:33:29 - INFO - __main__ -   Success rate: 91.01%

01/02/2025 13:33:29 - INFO - __main__ -   Successful items count: 81

01/02/2025 13:33:29 - INFO - __main__ -   Total count: 89

01/02/2025 13:33:29 - INFO - __main__ -   Index: 140

01/02/2025 13:33:29 - INFO - __main__ -   测试:141

01/02/2025 13:33:30 - INFO - __main__ -   Success rate: 91.11%

01/02/2025 13:33:30 - INFO - __main__ -   Successful items count: 82

01/02/2025 13:33:30 - INFO - __main__ -   Total count: 90

01/02/2025 13:33:30 - INFO - __main__ -   Index: 141

Number of variable_names extracted:  9
Generating population140...
init SUCCESS!
Number of variable_names extracted:  8
Generating population141...
	 0  --most gap 0.37055963
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  36%|███▌      | 142/400 [1:06:24<56:13, 13.07s/it]  01/02/2025 13:33:30 - INFO - __main__ -   测试:142

01/02/2025 13:33:30 - INFO - __main__ -   Attack failed!

01/02/2025 13:33:30 - INFO - __main__ -   测试:143

01/02/2025 13:35:24 - INFO - __main__ -   Success rate: 91.21%

01/02/2025 13:35:24 - INFO - __main__ -   Successful items count: 83

01/02/2025 13:35:24 - INFO - __main__ -   Total count: 91

01/02/2025 13:35:24 - INFO - __main__ -   Index: 143

The original code is misclassified.
Number of variable_names extracted:  4
Generating population143...
	 0  --most gap 0.005291592329740524
	 1  --most gap 0.005291592329740524
	 2  --most gap 0.005291592329740524
	 3  --most gap 0.0074650803580880165
	 4  --most gap 0.009467068128287792
	 5  --most gap 0.009467068128287792
	 6  --most gap 0.009467068128287792
	 7  --most gap 0.009467068128287792
两轮结果未更新,进行muteted...
	 8  --most gap 0.009467068128287792
	 9  --most gap 0.009467068128287792
	 10  --most gap 0.009467068128287792
两轮结果未更新,进行muteted...
	 11  --most gap 0.009467068128287792
	 12  --most gap 0.009467068128287792
	 13  --most gap 0.009467068128287792
两轮结果未更新,进行muteted...
	 14  --most gap 0.009467068128287792
	 15  --most gap 0.009467068128287792
	 16  --most gap 0.009467068128287792
两轮结果未更新,进行muteted...
	 17  --most gap 0.009467068128287792
	 18  --most gap 0.009467068128287792
	 19  --most gap 0.009467068128287792
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7, 8, 9]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7, 9, 8]
changeCodeStructure SUCCESS!
Processing examples:  36%|███▌      | 144/400 [1:08:18<1:46:47, 25.03s/it]01/02/2025 13:35:24 - INFO - __main__ -   测试:144

01/02/2025 13:35:24 - INFO - __main__ -   Attack failed!

01/02/2025 13:35:24 - INFO - __main__ -   测试:145

01/02/2025 13:35:24 - INFO - __main__ -   Attack failed!

01/02/2025 13:35:24 - INFO - __main__ -   测试:146

01/02/2025 13:36:40 - INFO - __main__ -   Success rate: 91.30%

01/02/2025 13:36:40 - INFO - __main__ -   Successful items count: 84

01/02/2025 13:36:40 - INFO - __main__ -   Total count: 92

01/02/2025 13:36:40 - INFO - __main__ -   Index: 146

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population146...
	 0  --most gap -0.20974858105182648
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.0
	 4  --most gap 0.0
两轮结果未更新,进行muteted...
	 5  --most gap 0.0
	 6  --most gap 0.0
	 7  --most gap 0.0
两轮结果未更新,进行muteted...
	 8  --most gap 0.0
	 9  --most gap 0.0
	 10  --most gap 0.0
两轮结果未更新,进行muteted...
	 11  --most gap 0.0
	 12  --most gap 0.0
	 13  --most gap 0.0
两轮结果未更新,进行muteted...
	 14  --most gap 0.0
	 15  --most gap 0.0
	 16  --most gap 0.0
两轮结果未更新,进行muteted...
	 17  --most gap 0.0
	 18  --most gap 0.0
	 19  --most gap 0.0
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 3, 4, 1, 2, 7, 8, 6, 5, 9]
changeCodeStructure SUCCESS!
Processing examples:  37%|███▋      | 147/400 [1:09:34<1:46:13, 25.19s/it]01/02/2025 13:36:40 - INFO - __main__ -   测试:147

01/02/2025 13:36:59 - INFO - __main__ -   Success rate: 91.40%

01/02/2025 13:36:59 - INFO - __main__ -   Successful items count: 85

01/02/2025 13:36:59 - INFO - __main__ -   Total count: 93

01/02/2025 13:36:59 - INFO - __main__ -   Index: 147

Number of variable_names extracted:  1
Generating population147...
	 0  --most gap -0.03733978420495987
	 1  --most gap -0.03733978420495987
	 2  --most gap -0.03733978420495987
	 3  --most gap -0.03733978420495987
两轮结果未更新,进行muteted...
	 4  --most gap -0.03733978420495987
	 5  --most gap -0.03733978420495987
	 6  --most gap -0.03733978420495987
两轮结果未更新,进行muteted...
	 7  --most gap -0.03733978420495987
	 8  --most gap -0.03733978420495987
	 9  --most gap -0.03733978420495987
两轮结果未更新,进行muteted...
	 10  --most gap -0.03733978420495987
	 11  --most gap -0.03733978420495987
	 12  --most gap -0.03733978420495987
两轮结果未更新,进行muteted...
	 13  --most gap -0.03733978420495987
	 14  --most gap -0.03733978420495987
	 15  --most gap -0.03733978420495987
两轮结果未更新,进行muteted...
	 16  --most gap -0.03733978420495987
	 17  --most gap -0.03733978420495987
	 18  --most gap -0.03733978420495987
两轮结果未更新,进行muteted...
	 19  --most gap -0.03733978420495987
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  37%|███▋      | 148/400 [1:09:53<1:41:48, 24.24s/it]01/02/2025 13:36:59 - INFO - __main__ -   测试:148

01/02/2025 13:37:23 - INFO - __main__ -   Success rate: 91.49%

01/02/2025 13:37:23 - INFO - __main__ -   Successful items count: 86

01/02/2025 13:37:23 - INFO - __main__ -   Total count: 94

01/02/2025 13:37:23 - INFO - __main__ -   Index: 148

Number of variable_names extracted:  1
Generating population148...
	 0  --most gap -0.04029488191008568
	 1  --most gap -0.04029488191008568
	 2  --most gap -0.04029488191008568
两轮结果未更新,进行muteted...
	 3  --most gap -0.04029488191008568
	 4  --most gap -0.04029488191008568
	 5  --most gap -0.04029488191008568
两轮结果未更新,进行muteted...
	 6  --most gap -0.04029488191008568
	 7  --most gap -0.04029488191008568
	 8  --most gap -0.04029488191008568
两轮结果未更新,进行muteted...
	 9  --most gap -0.04029488191008568
	 10  --most gap -0.04029488191008568
	 11  --most gap -0.04029488191008568
两轮结果未更新,进行muteted...
	 12  --most gap -0.04029488191008568
	 13  --most gap -0.04029488191008568
	 14  --most gap -0.04029488191008568
两轮结果未更新,进行muteted...
	 15  --most gap -0.04029488191008568
	 16  --most gap -0.04029488191008568
	 17  --most gap -0.04029488191008568
两轮结果未更新,进行muteted...
	 18  --most gap -0.04029488191008568
	 19  --most gap -0.04029488191008568
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 11, 12]
changeCodeStructure SUCCESS!
Processing examples:  37%|███▋      | 149/400 [1:10:17<1:41:07, 24.17s/it]01/02/2025 13:37:23 - INFO - __main__ -   测试:149

01/02/2025 13:37:23 - INFO - __main__ -   Attack failed!

01/02/2025 13:37:23 - INFO - __main__ -   测试:150

01/02/2025 13:37:34 - INFO - __main__ -   Success rate: 91.58%

01/02/2025 13:37:34 - INFO - __main__ -   Successful items count: 87

01/02/2025 13:37:34 - INFO - __main__ -   Total count: 95

01/02/2025 13:37:34 - INFO - __main__ -   Index: 150

The original code is misclassified.
Number of variable_names extracted:  1
Generating population150...
	 0  --most gap 0.010667327791452408
	 1  --most gap 0.010667327791452408
	 2  --most gap 0.010667327791452408
两轮结果未更新,进行muteted...
	 3  --most gap 0.010667327791452408
	 4  --most gap 0.010667327791452408
	 5  --most gap 0.010667327791452408
两轮结果未更新,进行muteted...
	 6  --most gap 0.010667327791452408
	 7  --most gap 0.010667327791452408
	 8  --most gap 0.010667327791452408
两轮结果未更新,进行muteted...
	 9  --most gap 0.010667327791452408
	 10  --most gap 0.010667327791452408
	 11  --most gap 0.010667327791452408
两轮结果未更新,进行muteted...
	 12  --most gap 0.010667327791452408
	 13  --most gap 0.010667327791452408
	 14  --most gap 0.010667327791452408
两轮结果未更新,进行muteted...
	 15  --most gap 0.010667327791452408
	 16  --most gap 0.010667327791452408
	 17  --most gap 0.010667327791452408
两轮结果未更新,进行muteted...
	 18  --most gap 0.010667327791452408
	 19  --most gap 0.010667327791452408
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 8, 6, 11, 10, 9, 14, 13, 15, 12, 16]
changeCodeStructure SUCCESS!
Processing examples:  38%|███▊      | 151/400 [1:10:28<1:14:12, 17.88s/it]01/02/2025 13:37:34 - INFO - __main__ -   测试:151

01/02/2025 13:37:34 - INFO - __main__ -   Success rate: 91.67%

01/02/2025 13:37:34 - INFO - __main__ -   Successful items count: 88

01/02/2025 13:37:34 - INFO - __main__ -   Total count: 96

01/02/2025 13:37:34 - INFO - __main__ -   Index: 151

Number of variable_names extracted:  21
Generating population151...
init SUCCESS!
Processing examples:  38%|███▊      | 152/400 [1:10:28<59:50, 14.48s/it]  01/02/2025 13:37:34 - INFO - __main__ -   测试:152

01/02/2025 13:37:34 - INFO - __main__ -   Attack failed!

01/02/2025 13:37:34 - INFO - __main__ -   测试:153

01/02/2025 13:37:34 - INFO - __main__ -   Attack failed!

01/02/2025 13:37:34 - INFO - __main__ -   测试:154

01/02/2025 13:39:54 - INFO - __main__ -   Success rate: 91.75%

01/02/2025 13:39:54 - INFO - __main__ -   Successful items count: 89

01/02/2025 13:39:54 - INFO - __main__ -   Total count: 97

01/02/2025 13:39:54 - INFO - __main__ -   Index: 154

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population154...
	 0  --most gap 0.017974579706788063
	 1  --most gap 0.017974618822336197
	 2  --most gap 0.03559125028550625
	 3  --most gap 0.03559125028550625
	 4  --most gap 0.03559125028550625
	 5  --most gap 0.03559125028550625
两轮结果未更新,进行muteted...
	 6  --most gap 0.03559125028550625
	 7  --most gap 0.03559125028550625
	 8  --most gap 0.03559125028550625
两轮结果未更新,进行muteted...
	 9  --most gap 0.03559125028550625
	 10  --most gap 0.046564819291234016
	 11  --most gap 0.046564819291234016
	 12  --most gap 0.046564819291234016
	 13  --most gap 0.046564819291234016
两轮结果未更新,进行muteted...
	 14  --most gap 0.046564819291234016
	 15  --most gap 0.046564819291234016
	 16  --most gap 0.046564819291234016
两轮结果未更新,进行muteted...
	 17  --most gap 0.04744541086256504
	 18  --most gap 0.04744541086256504
	 19  --most gap 0.07813633792102337
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 8, 9, 7, 10, 12, 11, 15, 13, 16, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 18, 17, 8, 15, 16, 14, 13, 12, 9, 10, 11]
changeCodeStructure SUCCESS!
Processing examples:  39%|███▉      | 155/400 [1:12:48<1:58:34, 29.04s/it]01/02/2025 13:39:54 - INFO - __main__ -   测试:155

01/02/2025 13:42:27 - INFO - __main__ -   Success rate: 91.84%

01/02/2025 13:42:27 - INFO - __main__ -   Successful items count: 90

01/02/2025 13:42:27 - INFO - __main__ -   Total count: 98

01/02/2025 13:42:27 - INFO - __main__ -   Index: 155

Number of variable_names extracted:  6
Generating population155...
	 0  --most gap -0.046783287078142166
	 1  --most gap 0.0
	 2  --most gap 0.06794746220111847
	 3  --most gap 0.06794746220111847
	 4  --most gap 0.1468452662229538
	 5  --most gap 0.1468452662229538
	 6  --most gap 0.1468452662229538
	 7  --most gap 0.37170763313770294
	 8  --most gap 0.37170763313770294
	 9  --most gap 0.37170763313770294
	 10  --most gap 0.37170763313770294
两轮结果未更新,进行muteted...
	 11  --most gap 0.37170763313770294
	 12  --most gap 0.37170763313770294
	 13  --most gap 0.37170763313770294
两轮结果未更新,进行muteted...
	 14  --most gap 0.37170763313770294
	 15  --most gap 0.37170763313770294
	 16  --most gap 0.37170763313770294
两轮结果未更新,进行muteted...
	 17  --most gap 0.37170763313770294
	 18  --most gap 0.37170763313770294
	 19  --most gap 0.37170763313770294
两轮结果未更新,进行muteted...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  39%|███▉      | 156/400 [1:15:20<3:27:03, 50.92s/it]01/02/2025 13:42:27 - INFO - __main__ -   测试:156

01/02/2025 13:42:27 - INFO - __main__ -   Attack failed!

01/02/2025 13:42:27 - INFO - __main__ -   测试:157

01/02/2025 13:42:27 - INFO - __main__ -   Success rate: 91.92%

01/02/2025 13:42:27 - INFO - __main__ -   Successful items count: 91

01/02/2025 13:42:27 - INFO - __main__ -   Total count: 99

01/02/2025 13:42:27 - INFO - __main__ -   Index: 157

01/02/2025 13:42:27 - INFO - __main__ -   测试:158

01/02/2025 13:42:27 - INFO - __main__ -   Attack failed!

01/02/2025 13:42:27 - INFO - __main__ -   测试:159

01/02/2025 13:43:03 - INFO - __main__ -   Success rate: 92.00%

01/02/2025 13:43:03 - INFO - __main__ -   Successful items count: 92

01/02/2025 13:43:03 - INFO - __main__ -   Total count: 100

01/02/2025 13:43:03 - INFO - __main__ -   Index: 159

The original code is misclassified.
Number of variable_names extracted:  2
Generating population157...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  3
Generating population159...
	 0  --most gap 0.051141143
	 1  --most gap 0.051141143
	 2  --most gap 0.051141143
	 3  --most gap 0.051141143
两轮结果未更新,进行muteted...
	 4  --most gap 0.051141143
	 5  --most gap 0.051141143
	 6  --most gap 0.051141143
两轮结果未更新,进行muteted...
	 7  --most gap 0.051141143
	 8  --most gap 0.051141143
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  40%|████      | 160/400 [1:15:57<1:59:31, 29.88s/it]01/02/2025 13:43:03 - INFO - __main__ -   测试:160

01/02/2025 13:43:03 - INFO - __main__ -   Attack failed!

01/02/2025 13:43:03 - INFO - __main__ -   测试:161

01/02/2025 13:44:27 - INFO - __main__ -   Success rate: 92.08%

01/02/2025 13:44:27 - INFO - __main__ -   Successful items count: 93

01/02/2025 13:44:27 - INFO - __main__ -   Total count: 101

01/02/2025 13:44:27 - INFO - __main__ -   Index: 161

The original code is misclassified.
Number of variable_names extracted:  3
Generating population161...
	 0  --most gap -0.006522603332996368
	 1  --most gap 0.0
	 2  --most gap 0.03208315558731556
	 3  --most gap 0.03208315558731556
	 4  --most gap 0.03208315558731556
	 5  --most gap 0.03208315558731556
两轮结果未更新,进行muteted...
	 6  --most gap 0.03208315558731556
	 7  --most gap 0.03208315558731556
	 8  --most gap 0.03471740521490574
	 9  --most gap 0.03471740521490574
	 10  --most gap 0.03471740521490574
	 11  --most gap 0.03471740521490574
两轮结果未更新,进行muteted...
	 12  --most gap 0.03471740521490574
	 13  --most gap 0.03471740521490574
	 14  --most gap 0.03471740521490574
两轮结果未更新,进行muteted...
	 15  --most gap 0.03471740521490574
	 16  --most gap 0.03471740521490574
	 17  --most gap 0.03471740521490574
两轮结果未更新,进行muteted...
	 18  --most gap 0.03471740521490574
	 19  --most gap 0.03471740521490574
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5]
sorted_id: [0, 1, 2, 3, 4, 6, 5, 7, 12, 13, 11, 9, 10, 8]
sorted_id: [0, 1, 2, 3, 4, 5]
changeCodeStructure SUCCESS!
Processing examples:  40%|████      | 162/400 [1:17:21<2:11:07, 33.06s/it]01/02/2025 13:44:27 - INFO - __main__ -   测试:162

01/02/2025 13:44:27 - INFO - __main__ -   Attack failed!

01/02/2025 13:44:27 - INFO - __main__ -   测试:163

01/02/2025 13:46:36 - INFO - __main__ -   Success rate: 91.18%

01/02/2025 13:46:36 - INFO - __main__ -   Successful items count: 93

01/02/2025 13:46:36 - INFO - __main__ -   Total count: 102

01/02/2025 13:46:36 - INFO - __main__ -   Index: 163

The original code is misclassified.
Number of variable_names extracted:  4
Generating population163...
	 0  --most gap -0.085905015
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.0
	 4  --most gap 0.0
两轮结果未更新,进行muteted...
	 5  --most gap 0.0
	 6  --most gap 0.0
	 7  --most gap 0.0
两轮结果未更新,进行muteted...
	 8  --most gap 0.0
	 9  --most gap 0.0
	 10  --most gap 0.0
两轮结果未更新,进行muteted...
	 11  --most gap 0.0
	 12  --most gap 0.0
	 13  --most gap 0.0
两轮结果未更新,进行muteted...
	 14  --most gap 0.0
	 15  --most gap 0.0
	 16  --most gap 0.0
两轮结果未更新,进行muteted...
	 17  --most gap 0.0
	 18  --most gap 0.0
	 19  --most gap 0.0
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7]
Processing examples:  41%|████      | 164/400 [1:19:30<2:44:03, 41.71s/it]01/02/2025 13:46:36 - INFO - __main__ -   测试:164

01/02/2025 13:46:36 - INFO - __main__ -   Attack failed!

01/02/2025 13:46:36 - INFO - __main__ -   测试:165

01/02/2025 13:47:15 - INFO - __main__ -   Success rate: 91.26%

01/02/2025 13:47:15 - INFO - __main__ -   Successful items count: 94

01/02/2025 13:47:15 - INFO - __main__ -   Total count: 103

01/02/2025 13:47:15 - INFO - __main__ -   Index: 165

The original code is misclassified.
Number of variable_names extracted:  16
Generating population165...
	 0  --most gap 0.06204313
	 1  --most gap 0.06204313
	 2  --most gap 0.06204313
	 3  --most gap 0.11221421
	 4  --most gap 0.12755412
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  42%|████▏     | 166/400 [1:20:09<2:18:16, 35.46s/it]01/02/2025 13:47:15 - INFO - __main__ -   测试:166

01/02/2025 13:47:15 - INFO - __main__ -   Success rate: 91.35%

01/02/2025 13:47:15 - INFO - __main__ -   Successful items count: 95

01/02/2025 13:47:15 - INFO - __main__ -   Total count: 104

01/02/2025 13:47:15 - INFO - __main__ -   Index: 166

01/02/2025 13:47:15 - INFO - __main__ -   测试:167

01/02/2025 13:47:15 - INFO - __main__ -   Attack failed!

01/02/2025 13:47:15 - INFO - __main__ -   测试:168

01/02/2025 13:47:15 - INFO - __main__ -   Attack failed!

01/02/2025 13:47:15 - INFO - __main__ -   测试:169

01/02/2025 13:47:15 - INFO - __main__ -   Success rate: 91.43%

01/02/2025 13:47:15 - INFO - __main__ -   Successful items count: 96

01/02/2025 13:47:15 - INFO - __main__ -   Total count: 105

01/02/2025 13:47:15 - INFO - __main__ -   Index: 169

Number of variable_names extracted:  2
Generating population166...
init SUCCESS!
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  9
Generating population169...
init SUCCESS!
Processing examples:  42%|████▎     | 170/400 [1:20:09<1:15:27, 19.68s/it]01/02/2025 13:47:15 - INFO - __main__ -   测试:170

01/02/2025 13:48:51 - INFO - __main__ -   Success rate: 91.51%

01/02/2025 13:48:51 - INFO - __main__ -   Successful items count: 97

01/02/2025 13:48:51 - INFO - __main__ -   Total count: 106

01/02/2025 13:48:51 - INFO - __main__ -   Index: 170

Number of variable_names extracted:  3
Generating population170...
	 0  --most gap 0.005393790081143379
	 1  --most gap 0.005393790081143379
	 2  --most gap 0.005393790081143379
	 3  --most gap 0.005393797531723976
	 4  --most gap 0.005393797531723976
	 5  --most gap 0.038929617032408714
	 6  --most gap 0.038929617032408714
	 7  --most gap 0.038929617032408714
	 8  --most gap 0.038929617032408714
两轮结果未更新,进行muteted...
	 9  --most gap 0.051714448258280754
	 10  --most gap 0.051714448258280754
	 11  --most gap 0.051714448258280754
	 12  --most gap 0.051714448258280754
两轮结果未更新,进行muteted...
	 13  --most gap 0.051714448258280754
	 14  --most gap 0.051714448258280754
	 15  --most gap 0.051714448258280754
两轮结果未更新,进行muteted...
	 16  --most gap 0.051714448258280754
	 17  --most gap 0.051714448258280754
	 18  --most gap 0.051714448258280754
两轮结果未更新,进行muteted...
	 19  --most gap 0.051714448258280754
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 8, 9, 7]
sorted_id: [0, 4, 2, 3, 1, 5, 6, 7, 8, 9, 11, 10]
changeCodeStructure SUCCESS!
Processing examples:  43%|████▎     | 171/400 [1:21:45<1:55:03, 30.15s/it]01/02/2025 13:48:51 - INFO - __main__ -   测试:171

01/02/2025 13:51:51 - INFO - __main__ -   Success rate: 90.65%

01/02/2025 13:51:51 - INFO - __main__ -   Successful items count: 97

01/02/2025 13:51:51 - INFO - __main__ -   Total count: 107

01/02/2025 13:51:51 - INFO - __main__ -   Index: 171

Number of variable_names extracted:  8
Generating population171...
	 0  --most gap 0.016131830401718616
	 1  --most gap 0.018391390331089497
	 2  --most gap 0.018391390331089497
	 3  --most gap 0.018391390331089497
	 4  --most gap 0.018391390331089497
两轮结果未更新,进行muteted...
	 5  --most gap 0.018391390331089497
	 6  --most gap 0.018391390331089497
	 7  --most gap 0.018391390331089497
两轮结果未更新,进行muteted...
	 8  --most gap 0.018391390331089497
	 9  --most gap 0.018391390331089497
	 10  --most gap 0.018391390331089497
两轮结果未更新,进行muteted...
	 11  --most gap 0.018391390331089497
	 12  --most gap 0.018391390331089497
	 13  --most gap 0.018391390331089497
两轮结果未更新,进行muteted...
	 14  --most gap 0.029743862338364124
	 15  --most gap 0.05701803881675005
	 16  --most gap 0.13016088772565126
	 17  --most gap 0.1419451730325818
	 18  --most gap 0.1419451730325818
	 19  --most gap 0.1419451730325818
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 9, 11, 10, 8, 5, 7, 6]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 12, 9]
Processing examples:  43%|████▎     | 172/400 [1:24:45<3:27:51, 54.70s/it]01/02/2025 13:51:51 - INFO - __main__ -   测试:172

01/02/2025 13:52:29 - INFO - __main__ -   Success rate: 90.74%

01/02/2025 13:52:29 - INFO - __main__ -   Successful items count: 98

01/02/2025 13:52:29 - INFO - __main__ -   Total count: 108

01/02/2025 13:52:29 - INFO - __main__ -   Index: 172

Number of variable_names extracted:  2
Generating population172...
	 0  --most gap -0.06579935550689697
	 1  --most gap -0.06579935550689697
	 2  --most gap -0.06579935550689697
	 3  --most gap -0.06579935550689697
两轮结果未更新,进行muteted...
	 4  --most gap -0.06579935550689697
	 5  --most gap -0.06579935550689697
	 6  --most gap -0.06579935550689697
两轮结果未更新,进行muteted...
	 7  --most gap -0.06579935550689697
	 8  --most gap -0.06579935550689697
	 9  --most gap -0.06579935550689697
两轮结果未更新,进行muteted...
	 10  --most gap -0.06579935550689697
	 11  --most gap -0.06579935550689697
	 12  --most gap -0.06579935550689697
两轮结果未更新,进行muteted...
	 13  --most gap -0.06579935550689697
	 14  --most gap -0.06579935550689697
	 15  --most gap -0.06579935550689697
两轮结果未更新,进行muteted...
	 16  --most gap -0.06579935550689697
	 17  --most gap -0.06579935550689697
	 18  --most gap -0.06579935550689697
两轮结果未更新,进行muteted...
	 19  --most gap -0.06579935550689697
Changing code structure...
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 15, 18, 19, 13, 16, 21, 20, 23, 14, 22, 24]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 15, 18, 19, 13, 16, 21, 20, 23, 14, 22, 24]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 29, 15, 17, 13, 18, 21, 16, 14, 19, 22, 23, 20, 25, 26, 27, 28, 24]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 29, 15, 17, 13, 18, 21, 16, 14, 19, 22, 23, 20, 25, 26, 27, 28, 24]
changeCodeStructure SUCCESS!
Processing examples:  43%|████▎     | 173/400 [1:25:23<3:15:17, 51.62s/it]01/02/2025 13:52:29 - INFO - __main__ -   测试:173

01/02/2025 13:52:30 - INFO - __main__ -   Success rate: 90.83%

01/02/2025 13:52:30 - INFO - __main__ -   Successful items count: 99

01/02/2025 13:52:30 - INFO - __main__ -   Total count: 109

01/02/2025 13:52:30 - INFO - __main__ -   Index: 173

Number of variable_names extracted:  5
Generating population173...
init SUCCESS!
Processing examples:  44%|████▎     | 174/400 [1:25:24<2:33:02, 40.63s/it]01/02/2025 13:52:30 - INFO - __main__ -   测试:174

01/02/2025 13:52:30 - INFO - __main__ -   Attack failed!

01/02/2025 13:52:30 - INFO - __main__ -   测试:175

01/02/2025 13:53:22 - INFO - __main__ -   Success rate: 90.00%

01/02/2025 13:53:22 - INFO - __main__ -   Successful items count: 99

01/02/2025 13:53:22 - INFO - __main__ -   Total count: 110

01/02/2025 13:53:22 - INFO - __main__ -   Index: 175

The original code is misclassified.
Number of variable_names extracted:  2
Generating population175...
	 0  --most gap 0.010132788680493832
	 1  --most gap 0.010132788680493832
	 2  --most gap 0.010132788680493832
两轮结果未更新,进行muteted...
	 3  --most gap 0.010132788680493832
	 4  --most gap 0.010132788680493832
	 5  --most gap 0.010132788680493832
两轮结果未更新,进行muteted...
	 6  --most gap 0.010132788680493832
	 7  --most gap 0.010132788680493832
	 8  --most gap 0.010132788680493832
两轮结果未更新,进行muteted...
	 9  --most gap 0.010132788680493832
	 10  --most gap 0.010132788680493832
	 11  --most gap 0.010132788680493832
两轮结果未更新,进行muteted...
	 12  --most gap 0.010132788680493832
	 13  --most gap 0.010132788680493832
	 14  --most gap 0.010132788680493832
两轮结果未更新,进行muteted...
	 15  --most gap 0.010132788680493832
	 16  --most gap 0.010132788680493832
	 17  --most gap 0.010132788680493832
两轮结果未更新,进行muteted...
	 18  --most gap 0.010132788680493832
	 19  --most gap 0.010132788680493832
Changing code structure...
sorted_id: [0]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 16, 12, 13, 11, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 18, 19, 20, 21, 22, 23, 24, 15, 10, 12, 17, 13, 11, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 11, 12, 10, 13, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 16, 12, 13, 11, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 21, 9, 15, 16, 17, 10, 18, 19, 12, 14, 13, 20, 11]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 15, 17, 16, 10, 13, 12, 14, 11]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 16, 12, 13, 11, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 11, 17, 18, 19, 20, 21, 22, 23, 24, 13, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 16, 6, 14, 7, 15, 8, 13, 12, 9, 11, 10]
Processing examples:  44%|████▍     | 176/400 [1:26:15<2:10:57, 35.08s/it]01/02/2025 13:53:22 - INFO - __main__ -   测试:176

01/02/2025 13:53:34 - INFO - __main__ -   Success rate: 90.09%

01/02/2025 13:53:34 - INFO - __main__ -   Successful items count: 100

01/02/2025 13:53:34 - INFO - __main__ -   Total count: 111

01/02/2025 13:53:34 - INFO - __main__ -   Index: 176

Number of variable_names extracted:  1
Generating population176...
	 0  --most gap -0.0006705373525619507
	 1  --most gap -0.0006705373525619507
	 2  --most gap -0.0006705373525619507
两轮结果未更新,进行muteted...
	 3  --most gap -0.0006705373525619507
	 4  --most gap -0.0006705373525619507
	 5  --most gap -0.0006705373525619507
两轮结果未更新,进行muteted...
	 6  --most gap -0.0006705373525619507
	 7  --most gap -0.0006705373525619507
	 8  --most gap -0.0006705373525619507
两轮结果未更新,进行muteted...
	 9  --most gap -0.0006705373525619507
	 10  --most gap -0.0006705373525619507
	 11  --most gap -0.0006705373525619507
两轮结果未更新,进行muteted...
	 12  --most gap -0.0006705373525619507
	 13  --most gap -0.0006705373525619507
	 14  --most gap -0.0006705373525619507
两轮结果未更新,进行muteted...
	 15  --most gap -0.0006705373525619507
	 16  --most gap -0.0006705373525619507
	 17  --most gap -0.0006705373525619507
两轮结果未更新,进行muteted...
	 18  --most gap -0.0006705373525619507
	 19  --most gap -0.0006705373525619507
Changing code structure...
sorted_id: [0, 3, 4, 1, 2, 5, 6, 7]
changeCodeStructure SUCCESS!
Processing examples:  44%|████▍     | 177/400 [1:26:28<1:52:26, 30.25s/it]01/02/2025 13:53:34 - INFO - __main__ -   测试:177

01/02/2025 13:53:34 - INFO - __main__ -   Attack failed!

01/02/2025 13:53:34 - INFO - __main__ -   测试:178

01/02/2025 13:55:07 - INFO - __main__ -   Success rate: 90.18%

01/02/2025 13:55:07 - INFO - __main__ -   Successful items count: 101

01/02/2025 13:55:07 - INFO - __main__ -   Total count: 112

01/02/2025 13:55:07 - INFO - __main__ -   Index: 178

The original code is misclassified.
Number of variable_names extracted:  17
Generating population178...
	 0  --most gap 0.20205522
	 1  --most gap 0.2502522
	 2  --most gap 0.2502522
	 3  --most gap 0.2502522
	 4  --most gap 0.2502522
两轮结果未更新,进行muteted...
	 5  --most gap 0.2502522
	 6  --most gap 0.2502522
	 7  --most gap 0.27981257
	 8  --most gap 0.3622414
	 9  --most gap 0.3622414
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  45%|████▍     | 179/400 [1:28:01<2:14:09, 36.42s/it]01/02/2025 13:55:07 - INFO - __main__ -   测试:179

01/02/2025 13:55:08 - INFO - __main__ -   Success rate: 90.27%

01/02/2025 13:55:08 - INFO - __main__ -   Successful items count: 102

01/02/2025 13:55:08 - INFO - __main__ -   Total count: 113

01/02/2025 13:55:08 - INFO - __main__ -   Index: 179

Number of variable_names extracted:  10
Generating population179...
	 0  --most gap 0.21033449470996857
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  45%|████▌     | 180/400 [1:28:02<1:45:58, 28.90s/it]01/02/2025 13:55:08 - INFO - __main__ -   测试:180

01/02/2025 13:55:08 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:08 - INFO - __main__ -   测试:181

01/02/2025 13:55:08 - INFO - __main__ -   Success rate: 90.35%

01/02/2025 13:55:08 - INFO - __main__ -   Successful items count: 103

01/02/2025 13:55:08 - INFO - __main__ -   Total count: 114

01/02/2025 13:55:08 - INFO - __main__ -   Index: 181

01/02/2025 13:55:08 - INFO - __main__ -   测试:182

01/02/2025 13:55:08 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:08 - INFO - __main__ -   测试:183

01/02/2025 13:55:08 - INFO - __main__ -   Success rate: 90.43%

01/02/2025 13:55:08 - INFO - __main__ -   Successful items count: 104

01/02/2025 13:55:08 - INFO - __main__ -   Total count: 115

01/02/2025 13:55:08 - INFO - __main__ -   Index: 183

The original code is misclassified.
Number of variable_names extracted:  4
Generating population181...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  5
Generating population183...
init SUCCESS!
Processing examples:  46%|████▌     | 184/400 [1:28:02<47:03, 13.07s/it]  01/02/2025 13:55:08 - INFO - __main__ -   测试:184

01/02/2025 13:55:08 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:08 - INFO - __main__ -   测试:185

01/02/2025 13:55:08 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:08 - INFO - __main__ -   测试:186

01/02/2025 13:55:08 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:08 - INFO - __main__ -   测试:187

01/02/2025 13:55:08 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:08 - INFO - __main__ -   测试:188

01/02/2025 13:55:08 - INFO - __main__ -   Success rate: 90.52%

01/02/2025 13:55:08 - INFO - __main__ -   Successful items count: 105

01/02/2025 13:55:08 - INFO - __main__ -   Total count: 116

01/02/2025 13:55:08 - INFO - __main__ -   Index: 188

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population188...
init SUCCESS!
Processing examples:  47%|████▋     | 189/400 [1:28:02<23:16,  6.62s/it]01/02/2025 13:55:08 - INFO - __main__ -   测试:189

01/02/2025 13:55:08 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:08 - INFO - __main__ -   测试:190

The original code is misclassified.
Number of variable_names extracted:  8
Generating population190...
	 0  --most gap -0.14348618686199188
Processing examples:  47%|████▋     | 189/400 [1:28:20<23:16,  6.62s/it]01/02/2025 13:55:37 - INFO - __main__ -   Success rate: 90.60%

01/02/2025 13:55:37 - INFO - __main__ -   Successful items count: 106

01/02/2025 13:55:37 - INFO - __main__ -   Total count: 117

01/02/2025 13:55:37 - INFO - __main__ -   Index: 190

	 1  --most gap 0.0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  48%|████▊     | 191/400 [1:28:31<28:52,  8.29s/it]01/02/2025 13:55:37 - INFO - __main__ -   测试:191

01/02/2025 13:55:37 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:37 - INFO - __main__ -   测试:192

01/02/2025 13:55:37 - INFO - __main__ -   Attack failed!

01/02/2025 13:55:37 - INFO - __main__ -   测试:193

01/02/2025 13:58:14 - INFO - __main__ -   Success rate: 90.68%

01/02/2025 13:58:14 - INFO - __main__ -   Successful items count: 107

01/02/2025 13:58:14 - INFO - __main__ -   Total count: 118

01/02/2025 13:58:14 - INFO - __main__ -   Index: 193

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population193...
	 0  --most gap 0.001508637797087431
	 1  --most gap 0.0017593023367226124
	 2  --most gap 0.0017593023367226124
	 3  --most gap 0.002456244546920061
	 4  --most gap 0.002456244546920061
	 5  --most gap 0.0032083229161798954
	 6  --most gap 0.0032083229161798954
	 7  --most gap 0.0032083229161798954
	 8  --most gap 0.0032083229161798954
两轮结果未更新,进行muteted...
	 9  --most gap 0.0032083229161798954
	 10  --most gap 0.014745782595127821
	 11  --most gap 0.014745782595127821
	 12  --most gap 0.014745782595127821
	 13  --most gap 0.014745782595127821
两轮结果未更新,进行muteted...
	 14  --most gap 0.014745782595127821
	 15  --most gap 0.014745782595127821
	 16  --most gap 0.014745782595127821
两轮结果未更新,进行muteted...
	 17  --most gap 0.014745782595127821
	 18  --most gap 0.014745782595127821
	 19  --most gap 0.014745782595127821
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 6, 5, 7, 9, 8]
sorted_id: [0, 1, 2, 3, 4, 6, 5, 7, 9, 8]
sorted_id: [0, 1, 2, 3, 4, 6, 5, 7, 9, 8]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6, 8, 10, 9]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6, 8, 10, 9]
changeCodeStructure SUCCESS!
Processing examples:  48%|████▊     | 194/400 [1:31:07<1:16:50, 22.38s/it]01/02/2025 13:58:14 - INFO - __main__ -   测试:194

01/02/2025 13:58:26 - INFO - __main__ -   Success rate: 90.76%

01/02/2025 13:58:26 - INFO - __main__ -   Successful items count: 108

01/02/2025 13:58:26 - INFO - __main__ -   Total count: 119

01/02/2025 13:58:26 - INFO - __main__ -   Index: 194

Number of variable_names extracted:  9
Generating population194...
	 0  --most gap 0.18899637460708618
	 1  --most gap 0.24537110328674316
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  49%|████▉     | 195/400 [1:31:20<1:11:52, 21.04s/it]01/02/2025 13:58:26 - INFO - __main__ -   测试:195

01/02/2025 13:58:26 - INFO - __main__ -   Success rate: 90.83%

01/02/2025 13:58:26 - INFO - __main__ -   Successful items count: 109

01/02/2025 13:58:26 - INFO - __main__ -   Total count: 120

01/02/2025 13:58:26 - INFO - __main__ -   Index: 195

Number of variable_names extracted:  22
Generating population195...
init SUCCESS!
Processing examples:  49%|████▉     | 196/400 [1:31:20<1:00:18, 17.74s/it]01/02/2025 13:58:26 - INFO - __main__ -   测试:196

01/02/2025 13:58:26 - INFO - __main__ -   Attack failed!

01/02/2025 13:58:26 - INFO - __main__ -   测试:197

01/02/2025 13:58:26 - INFO - __main__ -   Success rate: 90.91%

01/02/2025 13:58:26 - INFO - __main__ -   Successful items count: 110

01/02/2025 13:58:26 - INFO - __main__ -   Total count: 121

01/02/2025 13:58:26 - INFO - __main__ -   Index: 197

The original code is misclassified.
Number of variable_names extracted:  8
Generating population197...
init SUCCESS!
Processing examples:  50%|████▉     | 198/400 [1:31:20<41:06, 12.21s/it]  01/02/2025 13:58:26 - INFO - __main__ -   测试:198

01/02/2025 13:58:26 - INFO - __main__ -   Attack failed!

01/02/2025 13:58:26 - INFO - __main__ -   测试:199

01/02/2025 13:58:26 - INFO - __main__ -   Attack failed!

01/02/2025 13:58:26 - INFO - __main__ -   测试:200

01/02/2025 13:58:26 - INFO - __main__ -   Success rate: 90.98%

01/02/2025 13:58:26 - INFO - __main__ -   Successful items count: 111

01/02/2025 13:58:26 - INFO - __main__ -   Total count: 122

01/02/2025 13:58:26 - INFO - __main__ -   Index: 200

01/02/2025 13:58:26 - INFO - __main__ -   测试:201

01/02/2025 13:58:26 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population200...
init SUCCESS!
The original code is misclassified.
Processing examples:  50%|█████     | 202/400 [1:31:20<21:19,  6.46s/it]01/02/2025 13:58:26 - INFO - __main__ -   测试:202

01/02/2025 13:58:26 - INFO - __main__ -   Attack failed!

01/02/2025 13:58:26 - INFO - __main__ -   测试:203

01/02/2025 13:58:27 - INFO - __main__ -   Success rate: 91.06%

01/02/2025 13:58:27 - INFO - __main__ -   Successful items count: 112

01/02/2025 13:58:27 - INFO - __main__ -   Total count: 123

01/02/2025 13:58:27 - INFO - __main__ -   Index: 203

01/02/2025 13:58:27 - INFO - __main__ -   测试:204

The original code is misclassified.
Number of variable_names extracted:  18
Generating population203...
init SUCCESS!
Number of variable_names extracted:  4
Generating population204...
	 0  --most gap 0.15821281261742115
	 1  --most gap 0.2829782534390688
	 2  --most gap 0.2829782534390688
Processing examples:  50%|█████     | 202/400 [1:31:30<21:19,  6.46s/it]01/02/2025 13:58:45 - INFO - __main__ -   Success rate: 91.13%

01/02/2025 13:58:45 - INFO - __main__ -   Successful items count: 113

01/02/2025 13:58:45 - INFO - __main__ -   Total count: 124

01/02/2025 13:58:45 - INFO - __main__ -   Index: 204

	 3  --most gap 0.33148457296192646
	 4  --most gap 0.33148457296192646
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  51%|█████▏    | 205/400 [1:31:39<20:53,  6.43s/it]01/02/2025 13:58:45 - INFO - __main__ -   测试:205

01/02/2025 13:58:45 - INFO - __main__ -   Attack failed!

01/02/2025 13:58:45 - INFO - __main__ -   测试:206

01/02/2025 14:03:33 - INFO - __main__ -   Success rate: 91.20%

01/02/2025 14:03:33 - INFO - __main__ -   Successful items count: 114

01/02/2025 14:03:33 - INFO - __main__ -   Total count: 125

01/02/2025 14:03:33 - INFO - __main__ -   Index: 206

The original code is misclassified.
Number of variable_names extracted:  4
Generating population206...
	 0  --most gap -0.2521520406007767
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.0
	 4  --most gap 0.0
两轮结果未更新,进行muteted...
	 5  --most gap 0.0
	 6  --most gap 0.0
	 7  --most gap 0.0
两轮结果未更新,进行muteted...
	 8  --most gap 0.0
	 9  --most gap 0.0
	 10  --most gap 0.0
两轮结果未更新,进行muteted...
	 11  --most gap 0.0
	 12  --most gap 0.0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 207/400 [1:36:27<2:07:52, 39.75s/it]01/02/2025 14:03:33 - INFO - __main__ -   测试:207

01/02/2025 14:03:59 - INFO - __main__ -   Success rate: 91.27%

01/02/2025 14:03:59 - INFO - __main__ -   Successful items count: 115

01/02/2025 14:03:59 - INFO - __main__ -   Total count: 126

01/02/2025 14:03:59 - INFO - __main__ -   Index: 207

Number of variable_names extracted:  6
Generating population207...
	 0  --most gap 0.24545859545469284
	 1  --most gap 0.24545859545469284
	 2  --most gap 0.24545859545469284
	 3  --most gap 0.24545859545469284
两轮结果未更新,进行muteted...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 208/400 [1:36:53<2:00:45, 37.74s/it]01/02/2025 14:03:59 - INFO - __main__ -   测试:208

01/02/2025 14:03:59 - INFO - __main__ -   Attack failed!

01/02/2025 14:03:59 - INFO - __main__ -   测试:209

01/02/2025 14:04:36 - INFO - __main__ -   Success rate: 90.55%

01/02/2025 14:04:36 - INFO - __main__ -   Successful items count: 115

01/02/2025 14:04:36 - INFO - __main__ -   Total count: 127

01/02/2025 14:04:36 - INFO - __main__ -   Index: 209

The original code is misclassified.
Number of variable_names extracted:  1
Generating population209...
	 0  --most gap 0.0119645
	 1  --most gap 0.0119645
	 2  --most gap 0.0119645
两轮结果未更新,进行muteted...
	 3  --most gap 0.0119645
	 4  --most gap 0.0119645
	 5  --most gap 0.0119645
两轮结果未更新,进行muteted...
	 6  --most gap 0.0119645
	 7  --most gap 0.0119645
	 8  --most gap 0.0119645
两轮结果未更新,进行muteted...
	 9  --most gap 0.0119645
	 10  --most gap 0.0119645
	 11  --most gap 0.0119645
两轮结果未更新,进行muteted...
	 12  --most gap 0.0119645
	 13  --most gap 0.0119645
	 14  --most gap 0.0119645
两轮结果未更新,进行muteted...
	 15  --most gap 0.0119645
	 16  --most gap 0.0119645
	 17  --most gap 0.0119645
两轮结果未更新,进行muteted...
	 18  --most gap 0.0119645
	 19  --most gap 0.0119645
Changing code structure...
sorted_id: [0, 1, 3, 2]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8]
sorted_id: [0, 1, 2, 3]
sorted_id: [0, 1, 2, 3]
sorted_id: [0, 1, 2, 3]
sorted_id: [5, 4, 0, 3, 2, 1]
Processing examples:  52%|█████▎    | 210/400 [1:37:30<1:41:28, 32.04s/it]01/02/2025 14:04:36 - INFO - __main__ -   测试:210

01/02/2025 14:04:36 - INFO - __main__ -   Attack failed!

01/02/2025 14:04:36 - INFO - __main__ -   测试:211

01/02/2025 14:04:37 - INFO - __main__ -   Attack failed!

01/02/2025 14:04:37 - INFO - __main__ -   测试:212

01/02/2025 14:04:37 - INFO - __main__ -   Success rate: 90.62%

01/02/2025 14:04:37 - INFO - __main__ -   Successful items count: 116

01/02/2025 14:04:37 - INFO - __main__ -   Total count: 128

01/02/2025 14:04:37 - INFO - __main__ -   Index: 212

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  4
Generating population212...
init SUCCESS!
Processing examples:  53%|█████▎    | 213/400 [1:37:31<1:01:06, 19.61s/it]01/02/2025 14:04:37 - INFO - __main__ -   测试:213

01/02/2025 14:04:37 - INFO - __main__ -   Success rate: 90.70%

01/02/2025 14:04:37 - INFO - __main__ -   Successful items count: 117

01/02/2025 14:04:37 - INFO - __main__ -   Total count: 129

01/02/2025 14:04:37 - INFO - __main__ -   Index: 213

01/02/2025 14:04:37 - INFO - __main__ -   测试:214

Number of variable_names extracted:  4
Generating population213...
	 0  --most gap 0.15398858487606049
select_best_replacement SUCCESS!
update SUCCESS!
Number of variable_names extracted:  1
Generating population214...
	 0  --most gap -0.026950933039188385
	 1  --most gap -0.026950933039188385
	 2  --most gap -0.026950933039188385
	 3  --most gap -0.026950933039188385
两轮结果未更新,进行muteted...
	 4  --most gap -0.026950933039188385
	 5  --most gap -0.026950933039188385
	 6  --most gap -0.026950933039188385
两轮结果未更新,进行muteted...
	 7  --most gap -0.026950933039188385
	 8  --most gap -0.026950933039188385
	 9  --most gap -0.026950933039188385
两轮结果未更新,进行muteted...
	 10  --most gap -0.026950933039188385
	 11  --most gap -0.026950933039188385
	 12  --most gap -0.026950933039188385
两轮结果未更新,进行muteted...
	 13  --most gap -0.026950933039188385
	 14  --most gap -0.026950933039188385
	 15  --most gap -0.026950933039188385
两轮结果未更新,进行muteted...
	 16  --most gap -0.026950933039188385
	 17  --most gap -0.026950933039188385
	 18  --most gap -0.026950933039188385
两轮结果未更新,进行muteted...
Processing examples:  53%|█████▎    | 213/400 [1:37:41<1:01:06, 19.61s/it]01/02/2025 14:04:51 - INFO - __main__ -   Success rate: 90.77%

01/02/2025 14:04:51 - INFO - __main__ -   Successful items count: 118

01/02/2025 14:04:51 - INFO - __main__ -   Total count: 130

01/02/2025 14:04:51 - INFO - __main__ -   Index: 214

	 19  --most gap -0.026950933039188385
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  54%|█████▍    | 215/400 [1:37:45<50:13, 16.29s/it]  01/02/2025 14:04:51 - INFO - __main__ -   测试:215

01/02/2025 14:04:51 - INFO - __main__ -   Attack failed!

01/02/2025 14:04:51 - INFO - __main__ -   测试:216

01/02/2025 14:06:09 - INFO - __main__ -   Success rate: 90.84%

01/02/2025 14:06:09 - INFO - __main__ -   Successful items count: 119

01/02/2025 14:06:09 - INFO - __main__ -   Total count: 131

01/02/2025 14:06:09 - INFO - __main__ -   Index: 216

The original code is misclassified.
Number of variable_names extracted:  5
Generating population216...
	 0  --most gap 0.13551563
	 1  --most gap 0.13551563
	 2  --most gap 0.34591007
	 3  --most gap 0.34591007
	 4  --most gap 0.34591007
	 5  --most gap 0.38353837
	 6  --most gap 0.38353837
	 7  --most gap 0.38353837
	 8  --most gap 0.38353837
两轮结果未更新,进行muteted...
	 9  --most gap 0.38353837
	 10  --most gap 0.38353837
	 11  --most gap 0.38353837
两轮结果未更新,进行muteted...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  54%|█████▍    | 217/400 [1:39:03<1:08:54, 22.59s/it]01/02/2025 14:06:09 - INFO - __main__ -   测试:217

01/02/2025 14:06:09 - INFO - __main__ -   Attack failed!

01/02/2025 14:06:09 - INFO - __main__ -   测试:218

01/02/2025 14:06:09 - INFO - __main__ -   Attack failed!

01/02/2025 14:06:09 - INFO - __main__ -   测试:219

01/02/2025 14:06:09 - INFO - __main__ -   Attack failed!

01/02/2025 14:06:09 - INFO - __main__ -   测试:220

01/02/2025 14:06:09 - INFO - __main__ -   Success rate: 90.91%

01/02/2025 14:06:09 - INFO - __main__ -   Successful items count: 120

01/02/2025 14:06:09 - INFO - __main__ -   Total count: 132

01/02/2025 14:06:09 - INFO - __main__ -   Index: 220

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  8
Generating population220...
init SUCCESS!
Processing examples:  55%|█████▌    | 221/400 [1:39:03<37:35, 12.60s/it]  01/02/2025 14:06:09 - INFO - __main__ -   测试:221

01/02/2025 14:06:09 - INFO - __main__ -   Attack failed!

01/02/2025 14:06:09 - INFO - __main__ -   测试:222

The original code is misclassified.
Number of variable_names extracted:  6
Generating population222...
	 0  --most gap 0.0016018748
	 1  --most gap 0.0019921064
	 2  --most gap 0.0019921064
Processing examples:  55%|█████▌    | 221/400 [1:39:21<37:35, 12.60s/it]01/02/2025 14:09:29 - INFO - __main__ -   Success rate: 90.23%

01/02/2025 14:09:29 - INFO - __main__ -   Successful items count: 120

01/02/2025 14:09:29 - INFO - __main__ -   Total count: 133

01/02/2025 14:09:29 - INFO - __main__ -   Index: 222

	 3  --most gap 0.0020974278
	 4  --most gap 0.0020974278
	 5  --most gap 0.0020974278
	 6  --most gap 0.0020974278
两轮结果未更新,进行muteted...
	 7  --most gap 0.0020974278
	 8  --most gap 0.0020974278
	 9  --most gap 0.0020974278
两轮结果未更新,进行muteted...
	 10  --most gap 0.0020974278
	 11  --most gap 0.0020974278
	 12  --most gap 0.0020974278
两轮结果未更新,进行muteted...
	 13  --most gap 0.0020974278
	 14  --most gap 0.0020974278
	 15  --most gap 0.0020974278
两轮结果未更新,进行muteted...
	 16  --most gap 0.0020974278
	 17  --most gap 0.0020974278
	 18  --most gap 0.0025932193
	 19  --most gap 0.0025932193
Changing code structure...
sorted_id: [0, 6, 1, 2, 5, 3, 4, 7, 8, 9]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14]
Processing examples:  56%|█████▌    | 223/400 [1:42:23<1:38:56, 33.54s/it]01/02/2025 14:09:29 - INFO - __main__ -   测试:223

01/02/2025 14:09:29 - INFO - __main__ -   Success rate: 90.30%

01/02/2025 14:09:29 - INFO - __main__ -   Successful items count: 121

01/02/2025 14:09:29 - INFO - __main__ -   Total count: 134

01/02/2025 14:09:29 - INFO - __main__ -   Index: 223

Number of variable_names extracted:  30
Generating population223...
init SUCCESS!
Processing examples:  56%|█████▌    | 224/400 [1:42:23<1:24:11, 28.70s/it]01/02/2025 14:09:29 - INFO - __main__ -   测试:224

01/02/2025 14:09:29 - INFO - __main__ -   Success rate: 90.37%

01/02/2025 14:09:29 - INFO - __main__ -   Successful items count: 122

01/02/2025 14:09:29 - INFO - __main__ -   Total count: 135

01/02/2025 14:09:29 - INFO - __main__ -   Index: 224

01/02/2025 14:09:29 - INFO - __main__ -   测试:225

01/02/2025 14:09:29 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  10
Generating population224...
init SUCCESS!
The original code is misclassified.
Processing examples:  56%|█████▋    | 226/400 [1:42:23<58:45, 20.26s/it]  01/02/2025 14:09:29 - INFO - __main__ -   测试:226

01/02/2025 14:09:29 - INFO - __main__ -   Attack failed!

01/02/2025 14:09:29 - INFO - __main__ -   测试:227

01/02/2025 14:09:29 - INFO - __main__ -   Attack failed!

01/02/2025 14:09:29 - INFO - __main__ -   测试:228

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population228...
	 0  --most gap 0.0005346108227968216
	 1  --most gap 0.0006490359082818031
	 2  --most gap 0.0007864702492952347
	 3  --most gap 0.0007864702492952347
	 4  --most gap 0.0007864702492952347
	 5  --most gap 0.0007864702492952347
两轮结果未更新,进行muteted...
Processing examples:  56%|█████▋    | 226/400 [1:42:41<58:45, 20.26s/it]01/02/2025 14:10:39 - INFO - __main__ -   Success rate: 90.44%

01/02/2025 14:10:39 - INFO - __main__ -   Successful items count: 123

01/02/2025 14:10:39 - INFO - __main__ -   Total count: 136

01/02/2025 14:10:39 - INFO - __main__ -   Index: 228

	 6  --most gap 0.0007864702492952347
	 7  --most gap 0.0007864702492952347
	 8  --most gap 0.0007864702492952347
两轮结果未更新,进行muteted...
	 9  --most gap 0.0007864702492952347
	 10  --most gap 0.0007864702492952347
	 11  --most gap 0.0007864702492952347
两轮结果未更新,进行muteted...
	 12  --most gap 0.0007864702492952347
	 13  --most gap 0.0007864702492952347
	 14  --most gap 0.0007864702492952347
两轮结果未更新,进行muteted...
	 15  --most gap 0.0007864702492952347
	 16  --most gap 0.0007864702492952347
	 17  --most gap 0.0007864702492952347
两轮结果未更新,进行muteted...
	 18  --most gap 0.0007864702492952347
	 19  --most gap 0.0007864702492952347
Changing code structure...
sorted_id: [0]
sorted_id: [0, 1, 2, 5, 6, 3, 4]
changeCodeStructure SUCCESS!
Processing examples:  57%|█████▋    | 229/400 [1:43:33<1:01:05, 21.43s/it]01/02/2025 14:10:39 - INFO - __main__ -   测试:229

01/02/2025 14:10:39 - INFO - __main__ -   Attack failed!

01/02/2025 14:10:39 - INFO - __main__ -   测试:230

01/02/2025 14:10:58 - INFO - __main__ -   Success rate: 90.51%

01/02/2025 14:10:58 - INFO - __main__ -   Successful items count: 124

01/02/2025 14:10:58 - INFO - __main__ -   Total count: 137

01/02/2025 14:10:58 - INFO - __main__ -   Index: 230

The original code is misclassified.
Number of variable_names extracted:  2
Generating population230...
	 0  --most gap 0.02782925870269537
	 1  --most gap 0.02782925870269537
	 2  --most gap 0.02782925870269537
两轮结果未更新,进行muteted...
	 3  --most gap 0.02782925870269537
	 4  --most gap 0.02782925870269537
	 5  --most gap 0.02782925870269537
两轮结果未更新,进行muteted...
	 6  --most gap 0.02782925870269537
	 7  --most gap 0.02782925870269537
	 8  --most gap 0.02782925870269537
两轮结果未更新,进行muteted...
	 9  --most gap 0.02782925870269537
	 10  --most gap 0.02782925870269537
	 11  --most gap 0.02782925870269537
两轮结果未更新,进行muteted...
	 12  --most gap 0.02782925870269537
	 13  --most gap 0.02782925870269537
	 14  --most gap 0.02782925870269537
两轮结果未更新,进行muteted...
	 15  --most gap 0.02782925870269537
	 16  --most gap 0.02782925870269537
	 17  --most gap 0.02782925870269537
两轮结果未更新,进行muteted...
	 18  --most gap 0.02782925870269537
	 19  --most gap 0.02782925870269537
Changing code structure...
sorted_id: [0, 1, 2, 3, 4]
sorted_id: [0, 1, 2, 3, 4]
sorted_id: [0, 1, 2, 3, 4]
sorted_id: [0, 4, 2, 3, 1, 5, 6]
changeCodeStructure SUCCESS!
Processing examples:  58%|█████▊    | 231/400 [1:43:52<51:04, 18.14s/it]  01/02/2025 14:10:58 - INFO - __main__ -   测试:231

01/02/2025 14:10:58 - INFO - __main__ -   Attack failed!

01/02/2025 14:10:58 - INFO - __main__ -   测试:232

01/02/2025 14:11:00 - INFO - __main__ -   Success rate: 90.58%

01/02/2025 14:11:00 - INFO - __main__ -   Successful items count: 125

01/02/2025 14:11:00 - INFO - __main__ -   Total count: 138

01/02/2025 14:11:00 - INFO - __main__ -   Index: 232

The original code is misclassified.
Number of variable_names extracted:  13
Generating population232...
	 0  --most gap 0.03954821825027466
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  58%|█████▊    | 233/400 [1:43:54<37:15, 13.39s/it]01/02/2025 14:11:00 - INFO - __main__ -   测试:233

01/02/2025 14:11:00 - INFO - __main__ -   Attack failed!

01/02/2025 14:11:00 - INFO - __main__ -   测试:234

01/02/2025 14:11:00 - INFO - __main__ -   Attack failed!

01/02/2025 14:11:00 - INFO - __main__ -   测试:235

01/02/2025 14:11:08 - INFO - __main__ -   Success rate: 90.65%

01/02/2025 14:11:08 - INFO - __main__ -   Successful items count: 126

01/02/2025 14:11:08 - INFO - __main__ -   Total count: 139

01/02/2025 14:11:08 - INFO - __main__ -   Index: 235

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  1
Generating population235...
	 0  --most gap -0.058445997536182404
	 1  --most gap -0.058445997536182404
	 2  --most gap -0.058445997536182404
两轮结果未更新,进行muteted...
	 3  --most gap -0.058445997536182404
	 4  --most gap -0.058445997536182404
	 5  --most gap -0.058445997536182404
两轮结果未更新,进行muteted...
	 6  --most gap -0.058445997536182404
	 7  --most gap -0.058445997536182404
	 8  --most gap -0.058445997536182404
两轮结果未更新,进行muteted...
	 9  --most gap -0.058445997536182404
	 10  --most gap -0.058445997536182404
	 11  --most gap -0.058445997536182404
两轮结果未更新,进行muteted...
	 12  --most gap -0.058445997536182404
	 13  --most gap -0.058445997536182404
	 14  --most gap -0.058445997536182404
两轮结果未更新,进行muteted...
	 15  --most gap -0.058445997536182404
	 16  --most gap -0.058445997536182404
	 17  --most gap -0.058445997536182404
两轮结果未更新,进行muteted...
	 18  --most gap -0.058445997536182404
	 19  --most gap -0.058445997536182404
Changing code structure...
sorted_id: [0]
changeCodeStructure SUCCESS!
Processing examples:  59%|█████▉    | 236/400 [1:44:02<25:41,  9.40s/it]01/02/2025 14:11:08 - INFO - __main__ -   测试:236

01/02/2025 14:11:08 - INFO - __main__ -   Attack failed!

01/02/2025 14:11:08 - INFO - __main__ -   测试:237

01/02/2025 14:11:08 - INFO - __main__ -   Success rate: 90.71%

01/02/2025 14:11:08 - INFO - __main__ -   Successful items count: 127

01/02/2025 14:11:08 - INFO - __main__ -   Total count: 140

01/02/2025 14:11:08 - INFO - __main__ -   Index: 237

01/02/2025 14:11:08 - INFO - __main__ -   测试:238

01/02/2025 14:11:08 - INFO - __main__ -   Success rate: 90.78%

01/02/2025 14:11:08 - INFO - __main__ -   Successful items count: 128

01/02/2025 14:11:08 - INFO - __main__ -   Total count: 141

01/02/2025 14:11:08 - INFO - __main__ -   Index: 238

The original code is misclassified.
Number of variable_names extracted:  4
Generating population237...
init SUCCESS!
Number of variable_names extracted:  10
Generating population238...
init SUCCESS!
Processing examples:  60%|█████▉    | 239/400 [1:44:02<16:30,  6.15s/it]01/02/2025 14:11:08 - INFO - __main__ -   测试:239

01/02/2025 14:13:22 - INFO - __main__ -   Success rate: 90.14%

01/02/2025 14:13:22 - INFO - __main__ -   Successful items count: 128

01/02/2025 14:13:22 - INFO - __main__ -   Total count: 142

01/02/2025 14:13:22 - INFO - __main__ -   Index: 239

Number of variable_names extracted:  4
Generating population239...
	 0  --most gap 0.0031895432621240616
	 1  --most gap 0.004127725958824158
	 2  --most gap 0.004127725958824158
	 3  --most gap 0.004127725958824158
	 4  --most gap 0.004127725958824158
两轮结果未更新,进行muteted...
	 5  --most gap 0.004127725958824158
	 6  --most gap 0.004127725958824158
	 7  --most gap 0.004127725958824158
两轮结果未更新,进行muteted...
	 8  --most gap 0.004127725958824158
	 9  --most gap 0.004127725958824158
	 10  --most gap 0.004127725958824158
两轮结果未更新,进行muteted...
	 11  --most gap 0.004127725958824158
	 12  --most gap 0.004127725958824158
	 13  --most gap 0.004127725958824158
两轮结果未更新,进行muteted...
	 14  --most gap 0.004127725958824158
	 15  --most gap 0.004127725958824158
	 16  --most gap 0.004127725958824158
两轮结果未更新,进行muteted...
	 17  --most gap 0.004127725958824158
	 18  --most gap 0.004127725958824158
	 19  --most gap 0.004127725958824158
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6]
sorted_id: [0, 1, 2, 3, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14]
sorted_id: [0, 1, 2, 3, 5, 4, 7, 6, 8, 9, 13, 14, 15, 16, 17, 12, 11, 10]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6, 8, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 9]
sorted_id: [0, 1, 2, 3, 5, 4, 7, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 11, 10, 9]
sorted_id: [0, 1, 2, 3, 5, 4, 7, 8, 6, 11, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 10, 12]
Processing examples:  60%|██████    | 240/400 [1:46:16<1:04:41, 24.26s/it]01/02/2025 14:13:22 - INFO - __main__ -   测试:240

01/02/2025 14:13:22 - INFO - __main__ -   Attack failed!

01/02/2025 14:13:22 - INFO - __main__ -   测试:241

01/02/2025 14:15:45 - INFO - __main__ -   Success rate: 90.21%

01/02/2025 14:15:45 - INFO - __main__ -   Successful items count: 129

01/02/2025 14:15:45 - INFO - __main__ -   Total count: 143

01/02/2025 14:15:45 - INFO - __main__ -   Index: 241

The original code is misclassified.
Number of variable_names extracted:  6
Generating population241...
	 0  --most gap -0.17387790977954865
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.0
	 4  --most gap 0.0
两轮结果未更新,进行muteted...
	 5  --most gap 0.0
	 6  --most gap 0.0
	 7  --most gap 0.0
两轮结果未更新,进行muteted...
	 8  --most gap 0.0
	 9  --most gap 0.0
	 10  --most gap 0.0
两轮结果未更新,进行muteted...
	 11  --most gap 0.0
	 12  --most gap 0.0
	 13  --most gap 0.0
两轮结果未更新,进行muteted...
	 14  --most gap 0.0
	 15  --most gap 0.0
	 16  --most gap 0.0
两轮结果未更新,进行muteted...
	 17  --most gap 0.0
	 18  --most gap 0.0
	 19  --most gap 0.0
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 2, 1, 3, 4, 5]
changeCodeStructure SUCCESS!
Processing examples:  60%|██████    | 242/400 [1:48:39<1:39:48, 37.90s/it]01/02/2025 14:15:45 - INFO - __main__ -   测试:242

01/02/2025 14:15:45 - INFO - __main__ -   Attack failed!

01/02/2025 14:15:45 - INFO - __main__ -   测试:243

01/02/2025 14:16:04 - INFO - __main__ -   Success rate: 90.28%

01/02/2025 14:16:04 - INFO - __main__ -   Successful items count: 130

01/02/2025 14:16:04 - INFO - __main__ -   Total count: 144

01/02/2025 14:16:04 - INFO - __main__ -   Index: 243

The original code is misclassified.
Number of variable_names extracted:  2
Generating population243...
	 0  --most gap 0.00045371056
	 1  --most gap 0.00045371056
	 2  --most gap 0.00045371056
两轮结果未更新,进行muteted...
	 3  --most gap 0.00045371056
	 4  --most gap 0.00045371056
	 5  --most gap 0.00045371056
两轮结果未更新,进行muteted...
	 6  --most gap 0.00045371056
	 7  --most gap 0.00045371056
	 8  --most gap 0.00045371056
两轮结果未更新,进行muteted...
	 9  --most gap 0.00045371056
	 10  --most gap 0.00045371056
	 11  --most gap 0.00045371056
两轮结果未更新,进行muteted...
	 12  --most gap 0.00045371056
	 13  --most gap 0.00045371056
	 14  --most gap 0.00045371056
两轮结果未更新,进行muteted...
	 15  --most gap 0.00045371056
	 16  --most gap 0.00045371056
	 17  --most gap 0.00045371056
两轮结果未更新,进行muteted...
	 18  --most gap 0.00045371056
	 19  --most gap 0.00045371056
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  61%|██████    | 244/400 [1:48:58<1:17:12, 29.70s/it]01/02/2025 14:16:04 - INFO - __main__ -   测试:244

01/02/2025 14:16:42 - INFO - __main__ -   Success rate: 89.66%

01/02/2025 14:16:42 - INFO - __main__ -   Successful items count: 130

01/02/2025 14:16:42 - INFO - __main__ -   Total count: 145

01/02/2025 14:16:42 - INFO - __main__ -   Index: 244

Number of variable_names extracted:  2
Generating population244...
	 0  --most gap 0.030893445
	 1  --most gap 0.030893445
	 2  --most gap 0.030893445
	 3  --most gap 0.030893445
两轮结果未更新,进行muteted...
	 4  --most gap 0.030893445
	 5  --most gap 0.030893445
	 6  --most gap 0.030893445
两轮结果未更新,进行muteted...
	 7  --most gap 0.030893445
	 8  --most gap 0.030893445
	 9  --most gap 0.030893445
两轮结果未更新,进行muteted...
	 10  --most gap 0.030893445
	 11  --most gap 0.030893445
	 12  --most gap 0.030893445
两轮结果未更新,进行muteted...
	 13  --most gap 0.030893445
	 14  --most gap 0.030893445
	 15  --most gap 0.030893445
两轮结果未更新,进行muteted...
	 16  --most gap 0.030893445
	 17  --most gap 0.030893445
	 18  --most gap 0.030893445
两轮结果未更新,进行muteted...
	 19  --most gap 0.030893445
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5]
sorted_id: [0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 9, 6, 8, 7]
sorted_id: [0, 1, 2, 3, 4, 5]
sorted_id: [0, 1, 2, 3, 4, 5]
Processing examples:  61%|██████▏   | 245/400 [1:49:36<1:20:23, 31.12s/it]01/02/2025 14:16:42 - INFO - __main__ -   测试:245

01/02/2025 14:18:19 - INFO - __main__ -   Success rate: 89.73%

01/02/2025 14:18:19 - INFO - __main__ -   Successful items count: 131

01/02/2025 14:18:19 - INFO - __main__ -   Total count: 146

01/02/2025 14:18:19 - INFO - __main__ -   Index: 245

Number of variable_names extracted:  3
Generating population245...
	 0  --most gap 0.01447664201259613
	 1  --most gap 0.01447664201259613
	 2  --most gap 0.027480319142341614
	 3  --most gap 0.027480319142341614
	 4  --most gap 0.027480319142341614
	 5  --most gap 0.027480319142341614
两轮结果未更新,进行muteted...
	 6  --most gap 0.027480319142341614
	 7  --most gap 0.027480319142341614
	 8  --most gap 0.03648810461163521
	 9  --most gap 0.03648810461163521
	 10  --most gap 0.03648810461163521
	 11  --most gap 0.03648810461163521
两轮结果未更新,进行muteted...
	 12  --most gap 0.03648810461163521
	 13  --most gap 0.03648810461163521
	 14  --most gap 0.03648810461163521
两轮结果未更新,进行muteted...
	 15  --most gap 0.16809356585144997
	 16  --most gap 0.16809356585144997
	 17  --most gap 0.16809356585144997
	 18  --most gap 0.16809356585144997
两轮结果未更新,进行muteted...
	 19  --most gap 0.16809356585144997
Changing code structure...
sorted_id: [0, 1, 2, 3]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
sorted_id: [0, 3, 2, 1]
sorted_id: [0, 2, 1, 3]
changeCodeStructure SUCCESS!
Processing examples:  62%|██████▏   | 246/400 [1:51:13<1:53:14, 44.12s/it]01/02/2025 14:18:19 - INFO - __main__ -   测试:246

01/02/2025 14:18:19 - INFO - __main__ -   Success rate: 89.80%

01/02/2025 14:18:19 - INFO - __main__ -   Successful items count: 132

01/02/2025 14:18:19 - INFO - __main__ -   Total count: 147

01/02/2025 14:18:19 - INFO - __main__ -   Index: 246

Number of variable_names extracted:  5
Generating population246...
init SUCCESS!
Processing examples:  62%|██████▏   | 247/400 [1:51:13<1:27:47, 34.43s/it]01/02/2025 14:18:19 - INFO - __main__ -   测试:247

01/02/2025 14:18:19 - INFO - __main__ -   Attack failed!

01/02/2025 14:18:19 - INFO - __main__ -   测试:248

01/02/2025 14:18:45 - INFO - __main__ -   Success rate: 89.86%

01/02/2025 14:18:45 - INFO - __main__ -   Successful items count: 133

01/02/2025 14:18:45 - INFO - __main__ -   Total count: 148

01/02/2025 14:18:45 - INFO - __main__ -   Index: 248

The original code is misclassified.
Number of variable_names extracted:  8
Generating population248...
	 0  --most gap 0.067301035
	 1  --most gap 0.09055996
	 2  --most gap 0.09055996
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  62%|██████▏   | 249/400 [1:51:39<1:05:43, 26.12s/it]01/02/2025 14:18:45 - INFO - __main__ -   测试:249

01/02/2025 14:18:45 - INFO - __main__ -   Attack failed!

01/02/2025 14:18:45 - INFO - __main__ -   测试:250

01/02/2025 14:18:59 - INFO - __main__ -   Success rate: 89.93%

01/02/2025 14:18:59 - INFO - __main__ -   Successful items count: 134

01/02/2025 14:18:59 - INFO - __main__ -   Total count: 149

01/02/2025 14:18:59 - INFO - __main__ -   Index: 250

The original code is misclassified.
Number of variable_names extracted:  4
Generating population250...
	 0  --most gap 0.005805850028991699
	 1  --most gap 0.005805850028991699
	 2  --most gap 0.11608654260635376
	 3  --most gap 0.11608654260635376
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  63%|██████▎   | 251/400 [1:51:53<47:58, 19.32s/it]  01/02/2025 14:18:59 - INFO - __main__ -   测试:251

01/02/2025 14:18:59 - INFO - __main__ -   Attack failed!

01/02/2025 14:18:59 - INFO - __main__ -   测试:252

01/02/2025 14:22:29 - INFO - __main__ -   Success rate: 90.00%

01/02/2025 14:22:29 - INFO - __main__ -   Successful items count: 135

01/02/2025 14:22:29 - INFO - __main__ -   Total count: 150

01/02/2025 14:22:29 - INFO - __main__ -   Index: 252

The original code is misclassified.
Number of variable_names extracted:  7
Generating population252...
	 0  --most gap 0.11007959
	 1  --most gap 0.11007959
	 2  --most gap 0.11007959
两轮结果未更新,进行muteted...
	 3  --most gap 0.15876287
	 4  --most gap 0.15876287
	 5  --most gap 0.18150908
	 6  --most gap 0.18150908
	 7  --most gap 0.28273588
	 8  --most gap 0.28273588
	 9  --most gap 0.28273588
	 10  --most gap 0.28273588
两轮结果未更新,进行muteted...
	 11  --most gap 0.28273588
	 12  --most gap 0.28273588
	 13  --most gap 0.28273588
两轮结果未更新,进行muteted...
	 14  --most gap 0.28273588
	 15  --most gap 0.28273588
	 16  --most gap 0.28273588
两轮结果未更新,进行muteted...
	 17  --most gap 0.28273588
	 18  --most gap 0.28273588
	 19  --most gap 0.28273588
两轮结果未更新,进行muteted...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  63%|██████▎   | 253/400 [1:55:23<1:58:05, 48.20s/it]01/02/2025 14:22:29 - INFO - __main__ -   测试:253

01/02/2025 14:22:29 - INFO - __main__ -   Success rate: 90.07%

01/02/2025 14:22:29 - INFO - __main__ -   Successful items count: 136

01/02/2025 14:22:29 - INFO - __main__ -   Total count: 151

01/02/2025 14:22:29 - INFO - __main__ -   Index: 253

01/02/2025 14:22:29 - INFO - __main__ -   测试:254

01/02/2025 14:22:29 - INFO - __main__ -   Success rate: 90.13%

01/02/2025 14:22:29 - INFO - __main__ -   Successful items count: 137

01/02/2025 14:22:29 - INFO - __main__ -   Total count: 152

01/02/2025 14:22:29 - INFO - __main__ -   Index: 254

Number of variable_names extracted:  5
Generating population253...
init SUCCESS!
Number of variable_names extracted:  15
Generating population254...
init SUCCESS!
Processing examples:  64%|██████▍   | 255/400 [1:55:23<1:18:47, 32.60s/it]01/02/2025 14:22:29 - INFO - __main__ -   测试:255

01/02/2025 14:22:31 - INFO - __main__ -   Success rate: 90.20%

01/02/2025 14:22:31 - INFO - __main__ -   Successful items count: 138

01/02/2025 14:22:31 - INFO - __main__ -   Total count: 153

01/02/2025 14:22:31 - INFO - __main__ -   Index: 255

Number of variable_names extracted:  5
Generating population255...
	 0  --most gap 0.06461560726165771
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  64%|██████▍   | 256/400 [1:55:25<1:04:24, 26.84s/it]01/02/2025 14:22:31 - INFO - __main__ -   测试:256

01/02/2025 14:22:31 - INFO - __main__ -   Attack failed!

01/02/2025 14:22:31 - INFO - __main__ -   测试:257

01/02/2025 14:22:56 - INFO - __main__ -   Success rate: 90.26%

01/02/2025 14:22:56 - INFO - __main__ -   Successful items count: 139

01/02/2025 14:22:56 - INFO - __main__ -   Total count: 154

01/02/2025 14:22:56 - INFO - __main__ -   Index: 257

The original code is misclassified.
Number of variable_names extracted:  1
Generating population257...
	 0  --most gap 0.003797062672674656
	 1  --most gap 0.003797062672674656
	 2  --most gap 0.003797062672674656
两轮结果未更新,进行muteted...
	 3  --most gap 0.003797062672674656
	 4  --most gap 0.003797062672674656
	 5  --most gap 0.003797062672674656
两轮结果未更新,进行muteted...
	 6  --most gap 0.003797062672674656
	 7  --most gap 0.003797062672674656
	 8  --most gap 0.003797062672674656
两轮结果未更新,进行muteted...
	 9  --most gap 0.003797062672674656
	 10  --most gap 0.003797062672674656
	 11  --most gap 0.003797062672674656
两轮结果未更新,进行muteted...
	 12  --most gap 0.003797062672674656
	 13  --most gap 0.003797062672674656
	 14  --most gap 0.003797062672674656
两轮结果未更新,进行muteted...
	 15  --most gap 0.003797062672674656
	 16  --most gap 0.003797062672674656
	 17  --most gap 0.003797062672674656
两轮结果未更新,进行muteted...
	 18  --most gap 0.003797062672674656
	 19  --most gap 0.003797062672674656
Changing code structure...
sorted_id: [0]
sorted_id: [0]
sorted_id: [0]
sorted_id: [0, 2, 1]
changeCodeStructure SUCCESS!
Processing examples:  64%|██████▍   | 258/400 [1:55:50<51:32, 21.78s/it]  01/02/2025 14:22:56 - INFO - __main__ -   测试:258

01/02/2025 14:25:18 - INFO - __main__ -   Success rate: 90.32%

01/02/2025 14:25:18 - INFO - __main__ -   Successful items count: 140

01/02/2025 14:25:18 - INFO - __main__ -   Total count: 155

01/02/2025 14:25:18 - INFO - __main__ -   Index: 258

Number of variable_names extracted:  5
Generating population258...
	 0  --most gap 0.006195937283337116
	 1  --most gap 0.011748356744647026
	 2  --most gap 0.011748356744647026
	 3  --most gap 0.03299620375037193
	 4  --most gap 0.03299620375037193
	 5  --most gap 0.03299620375037193
	 6  --most gap 0.03299620375037193
两轮结果未更新,进行muteted...
	 7  --most gap 0.03299620375037193
	 8  --most gap 0.03299620375037193
	 9  --most gap 0.03299620375037193
两轮结果未更新,进行muteted...
	 10  --most gap 0.03299620375037193
	 11  --most gap 0.03299620375037193
	 12  --most gap 0.03299620375037193
两轮结果未更新,进行muteted...
	 13  --most gap 0.03299620375037193
	 14  --most gap 0.03299620375037193
	 15  --most gap 0.03299620375037193
两轮结果未更新,进行muteted...
	 16  --most gap 0.03299620375037193
	 17  --most gap 0.03299620375037193
	 18  --most gap 0.03299620375037193
两轮结果未更新,进行muteted...
	 19  --most gap 0.03299620375037193
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6, 8, 10, 9]
changeCodeStructure SUCCESS!
Processing examples:  65%|██████▍   | 259/400 [1:58:12<1:47:21, 45.69s/it]01/02/2025 14:25:18 - INFO - __main__ -   测试:259

01/02/2025 14:27:01 - INFO - __main__ -   Success rate: 89.74%

01/02/2025 14:27:01 - INFO - __main__ -   Successful items count: 140

01/02/2025 14:27:01 - INFO - __main__ -   Total count: 156

01/02/2025 14:27:01 - INFO - __main__ -   Index: 259

Number of variable_names extracted:  3
Generating population259...
	 0  --most gap 0.0036558276042342186
	 1  --most gap 0.0036558276042342186
	 2  --most gap 0.0036558276042342186
两轮结果未更新,进行muteted...
	 3  --most gap 0.0036558276042342186
	 4  --most gap 0.013366980478167534
	 5  --most gap 0.013366980478167534
	 6  --most gap 0.013366980478167534
	 7  --most gap 0.013366980478167534
两轮结果未更新,进行muteted...
	 8  --most gap 0.013366980478167534
	 9  --most gap 0.013366980478167534
	 10  --most gap 0.013366980478167534
两轮结果未更新,进行muteted...
	 11  --most gap 0.013366980478167534
	 12  --most gap 0.013366980478167534
	 13  --most gap 0.013366980478167534
两轮结果未更新,进行muteted...
	 14  --most gap 0.013366980478167534
	 15  --most gap 0.013366980478167534
	 16  --most gap 0.013366980478167534
两轮结果未更新,进行muteted...
	 17  --most gap 0.013366980478167534
	 18  --most gap 0.013366980478167534
	 19  --most gap 0.013366980478167534
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 9, 7, 8, 10, 12, 11]
Processing examples:  65%|██████▌   | 260/400 [1:59:54<2:16:16, 58.40s/it]01/02/2025 14:27:01 - INFO - __main__ -   测试:260

01/02/2025 14:27:31 - INFO - __main__ -   Success rate: 89.81%

01/02/2025 14:27:31 - INFO - __main__ -   Successful items count: 141

01/02/2025 14:27:31 - INFO - __main__ -   Total count: 157

01/02/2025 14:27:31 - INFO - __main__ -   Index: 260

Number of variable_names extracted:  9
Generating population260...
	 0  --most gap 0.3224326893687248
	 1  --most gap 0.3224326893687248
	 2  --most gap 0.3224326893687248
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  65%|██████▌   | 261/400 [2:00:25<1:59:29, 51.58s/it]01/02/2025 14:27:31 - INFO - __main__ -   测试:261

01/02/2025 14:27:31 - INFO - __main__ -   Attack failed!

01/02/2025 14:27:31 - INFO - __main__ -   测试:262

01/02/2025 14:27:51 - INFO - __main__ -   Success rate: 89.87%

01/02/2025 14:27:51 - INFO - __main__ -   Successful items count: 142

01/02/2025 14:27:51 - INFO - __main__ -   Total count: 158

01/02/2025 14:27:51 - INFO - __main__ -   Index: 262

The original code is misclassified.
Number of variable_names extracted:  2
Generating population262...
	 0  --most gap 0.103042185
	 1  --most gap 0.103042185
	 2  --most gap 0.103042185
	 3  --most gap 0.103042185
两轮结果未更新,进行muteted...
	 4  --most gap 0.103042185
	 5  --most gap 0.103042185
	 6  --most gap 0.103042185
两轮结果未更新,进行muteted...
	 7  --most gap 0.103042185
	 8  --most gap 0.103042185
	 9  --most gap 0.103042185
两轮结果未更新,进行muteted...
	 10  --most gap 0.103042185
	 11  --most gap 0.103042185
	 12  --most gap 0.103042185
两轮结果未更新,进行muteted...
	 13  --most gap 0.103042185
	 14  --most gap 0.103042185
	 15  --most gap 0.103042185
两轮结果未更新,进行muteted...
	 16  --most gap 0.103042185
	 17  --most gap 0.103042185
	 18  --most gap 0.103042185
两轮结果未更新,进行muteted...
	 19  --most gap 0.103042185
Changing code structure...
sorted_id: [0, 1, 2, 3]
sorted_id: [0, 1, 4, 2, 3, 5, 6, 7, 8, 9]
sorted_id: [0, 1, 2, 4, 3, 5, 6, 7, 8, 10, 9, 12, 11, 14, 13, 16, 15, 17]
changeCodeStructure SUCCESS!
Processing examples:  66%|██████▌   | 263/400 [2:00:45<1:19:27, 34.80s/it]01/02/2025 14:27:51 - INFO - __main__ -   测试:263

01/02/2025 14:28:08 - INFO - __main__ -   Success rate: 89.94%

01/02/2025 14:28:08 - INFO - __main__ -   Successful items count: 143

01/02/2025 14:28:08 - INFO - __main__ -   Total count: 159

01/02/2025 14:28:08 - INFO - __main__ -   Index: 263

Number of variable_names extracted:  7
Generating population263...
	 0  --most gap -0.06247586
	 1  --most gap 0.010739505
	 2  --most gap 0.010739505
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  66%|██████▌   | 264/400 [2:01:02<1:09:37, 30.72s/it]01/02/2025 14:28:08 - INFO - __main__ -   测试:264

01/02/2025 14:28:35 - INFO - __main__ -   Success rate: 90.00%

01/02/2025 14:28:35 - INFO - __main__ -   Successful items count: 144

01/02/2025 14:28:35 - INFO - __main__ -   Total count: 160

01/02/2025 14:28:35 - INFO - __main__ -   Index: 264

Number of variable_names extracted:  10
Generating population264...
	 0  --most gap 0.043461442
	 1  --most gap 0.09048885
	 2  --most gap 0.10459471
	 3  --most gap 0.17729205
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  66%|██████▋   | 265/400 [2:01:29<1:07:02, 29.80s/it]01/02/2025 14:28:35 - INFO - __main__ -   测试:265

01/02/2025 14:28:35 - INFO - __main__ -   Attack failed!

01/02/2025 14:28:35 - INFO - __main__ -   测试:266

01/02/2025 14:29:55 - INFO - __main__ -   Success rate: 90.06%

01/02/2025 14:29:55 - INFO - __main__ -   Successful items count: 145

01/02/2025 14:29:55 - INFO - __main__ -   Total count: 161

01/02/2025 14:29:55 - INFO - __main__ -   Index: 266

No variable_names in the code.
Number of variable_names extracted:  3
Generating population266...
	 0  --most gap 0.04331181198358536
	 1  --most gap 0.13912668824195862
	 2  --most gap 0.13912668824195862
	 3  --most gap 0.13912668824195862
	 4  --most gap 0.13912668824195862
两轮结果未更新,进行muteted...
	 5  --most gap 0.13912668824195862
	 6  --most gap 0.13912668824195862
	 7  --most gap 0.13912668824195862
两轮结果未更新,进行muteted...
	 8  --most gap 0.13912668824195862
	 9  --most gap 0.13912668824195862
	 10  --most gap 0.13912668824195862
两轮结果未更新,进行muteted...
	 11  --most gap 0.13912668824195862
	 12  --most gap 0.13912668824195862
	 13  --most gap 0.13912668824195862
两轮结果未更新,进行muteted...
	 14  --most gap 0.13912668824195862
	 15  --most gap 0.13912668824195862
	 16  --most gap 0.13912668824195862
两轮结果未更新,进行muteted...
	 17  --most gap 0.13912668824195862
	 18  --most gap 0.13912668824195862
	 19  --most gap 0.13912668824195862
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 3, 4, 2, 1, 5, 6]
changeCodeStructure SUCCESS!
Processing examples:  67%|██████▋   | 267/400 [2:02:49<1:15:19, 33.98s/it]01/02/2025 14:29:55 - INFO - __main__ -   测试:267

01/02/2025 14:31:09 - INFO - __main__ -   Success rate: 90.12%

01/02/2025 14:31:09 - INFO - __main__ -   Successful items count: 146

01/02/2025 14:31:09 - INFO - __main__ -   Total count: 162

01/02/2025 14:31:09 - INFO - __main__ -   Index: 267

Number of variable_names extracted:  3
Generating population267...
	 0  --most gap 0.15163397789001465
	 1  --most gap 0.15163397789001465
	 2  --most gap 0.3719640076160431
	 3  --most gap 0.3719640076160431
	 4  --most gap 0.3719640076160431
	 5  --most gap 0.3719640076160431
两轮结果未更新,进行muteted...
	 6  --most gap 0.3719640076160431
	 7  --most gap 0.3719640076160431
	 8  --most gap 0.3719640076160431
两轮结果未更新,进行muteted...
	 9  --most gap 0.3719640076160431
	 10  --most gap 0.3719640076160431
	 11  --most gap 0.3719640076160431
两轮结果未更新,进行muteted...
	 12  --most gap 0.3719640076160431
	 13  --most gap 0.3719640076160431
	 14  --most gap 0.3719640076160431
两轮结果未更新,进行muteted...
	 15  --most gap 0.3719640076160431
	 16  --most gap 0.3719640076160431
	 17  --most gap 0.3719640076160431
两轮结果未更新,进行muteted...
	 18  --most gap 0.3719640076160431
	 19  --most gap 0.3719640076160431
Changing code structure...
sorted_id: [0, 1, 4, 3, 2, 5]
changeCodeStructure SUCCESS!
Processing examples:  67%|██████▋   | 268/400 [2:04:03<1:34:31, 42.96s/it]01/02/2025 14:31:09 - INFO - __main__ -   测试:268

01/02/2025 14:31:35 - INFO - __main__ -   Success rate: 90.18%

01/02/2025 14:31:35 - INFO - __main__ -   Successful items count: 147

01/02/2025 14:31:35 - INFO - __main__ -   Total count: 163

01/02/2025 14:31:35 - INFO - __main__ -   Index: 268

Number of variable_names extracted:  8
Generating population268...
	 0  --most gap -0.0008234381675720215
	 1  --most gap 0.009608171880245209
	 2  --most gap 0.06574884802103043
	 3  --most gap 0.06574884802103043
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  67%|██████▋   | 269/400 [2:04:29<1:24:46, 38.83s/it]01/02/2025 14:31:35 - INFO - __main__ -   测试:269

01/02/2025 14:33:41 - INFO - __main__ -   Success rate: 90.24%

01/02/2025 14:33:41 - INFO - __main__ -   Successful items count: 148

01/02/2025 14:33:41 - INFO - __main__ -   Total count: 164

01/02/2025 14:33:41 - INFO - __main__ -   Index: 269

Number of variable_names extracted:  4
Generating population269...
	 0  --most gap 0.005084495060145855
	 1  --most gap 0.005084495060145855
	 2  --most gap 0.005084519274532795
	 3  --most gap 0.006047604605555534
	 4  --most gap 0.006047604605555534
	 5  --most gap 0.00823995005339384
	 6  --most gap 0.00823995005339384
	 7  --most gap 0.033557393588125706
	 8  --most gap 0.033557393588125706
	 9  --most gap 0.033557393588125706
	 10  --most gap 0.033557393588125706
两轮结果未更新,进行muteted...
	 11  --most gap 0.033557393588125706
	 12  --most gap 0.033557393588125706
	 13  --most gap 0.033557393588125706
两轮结果未更新,进行muteted...
	 14  --most gap 0.033557393588125706
	 15  --most gap 0.033557393588125706
	 16  --most gap 0.033557393588125706
两轮结果未更新,进行muteted...
	 17  --most gap 0.033557393588125706
	 18  --most gap 0.033557393588125706
	 19  --most gap 0.033557393588125706
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 7, 6, 5, 8, 9, 10, 11]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 11, 10]
changeCodeStructure SUCCESS!
Processing examples:  68%|██████▊   | 270/400 [2:06:35<2:12:58, 61.37s/it]01/02/2025 14:33:41 - INFO - __main__ -   测试:270

01/02/2025 14:35:29 - INFO - __main__ -   Success rate: 90.30%

01/02/2025 14:35:29 - INFO - __main__ -   Successful items count: 149

01/02/2025 14:35:29 - INFO - __main__ -   Total count: 165

01/02/2025 14:35:29 - INFO - __main__ -   Index: 270

Number of variable_names extracted:  4
Generating population270...
	 0  --most gap 0.2013343796133995
	 1  --most gap 0.20586063712835312
	 2  --most gap 0.26664330810308456
	 3  --most gap 0.26664330810308456
	 4  --most gap 0.28648295253515244
	 5  --most gap 0.28648295253515244
	 6  --most gap 0.29190265387296677
	 7  --most gap 0.29190265387296677
	 8  --most gap 0.29190265387296677
	 9  --most gap 0.3217516466975212
	 10  --most gap 0.3217516466975212
	 11  --most gap 0.3217516466975212
	 12  --most gap 0.3217516466975212
两轮结果未更新,进行muteted...
	 13  --most gap 0.3217516466975212
	 14  --most gap 0.3217516466975212
	 15  --most gap 0.3217516466975212
两轮结果未更新,进行muteted...
	 16  --most gap 0.3217516466975212
	 17  --most gap 0.3217516466975212
	 18  --most gap 0.3217516466975212
两轮结果未更新,进行muteted...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  68%|██████▊   | 271/400 [2:08:23<2:39:27, 74.16s/it]01/02/2025 14:35:29 - INFO - __main__ -   测试:271

01/02/2025 14:35:29 - INFO - __main__ -   Success rate: 90.36%

01/02/2025 14:35:29 - INFO - __main__ -   Successful items count: 150

01/02/2025 14:35:29 - INFO - __main__ -   Total count: 166

01/02/2025 14:35:29 - INFO - __main__ -   Index: 271

01/02/2025 14:35:29 - INFO - __main__ -   测试:272

01/02/2025 14:35:29 - INFO - __main__ -   Attack failed!

01/02/2025 14:35:29 - INFO - __main__ -   测试:273

01/02/2025 14:35:29 - INFO - __main__ -   Attack failed!

01/02/2025 14:35:29 - INFO - __main__ -   测试:274

01/02/2025 14:35:29 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  4
Generating population271...
init SUCCESS!
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  69%|██████▉   | 275/400 [2:08:23<1:00:47, 29.18s/it]01/02/2025 14:35:29 - INFO - __main__ -   测试:275

01/02/2025 14:35:29 - INFO - __main__ -   Attack failed!

01/02/2025 14:35:29 - INFO - __main__ -   测试:276

01/02/2025 14:35:29 - INFO - __main__ -   Attack failed!

01/02/2025 14:35:29 - INFO - __main__ -   测试:277

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population277...
	 0  --most gap 0.03570576012134552
	 1  --most gap 0.035706207156181335
	 2  --most gap 0.07841765880584717
	 3  --most gap 0.07841765880584717
Processing examples:  69%|██████▉   | 275/400 [2:08:41<1:00:47, 29.18s/it]01/02/2025 14:37:41 - INFO - __main__ -   Success rate: 90.42%

01/02/2025 14:37:41 - INFO - __main__ -   Successful items count: 151

01/02/2025 14:37:41 - INFO - __main__ -   Total count: 167

01/02/2025 14:37:41 - INFO - __main__ -   Index: 277

	 4  --most gap 0.07841765880584717
	 5  --most gap 0.07841765880584717
两轮结果未更新,进行muteted...
	 6  --most gap 0.07841765880584717
	 7  --most gap 0.16180282831192017
	 8  --most gap 0.16180282831192017
	 9  --most gap 0.16180282831192017
	 10  --most gap 0.16180282831192017
两轮结果未更新,进行muteted...
	 11  --most gap 0.16180282831192017
	 12  --most gap 0.16180282831192017
	 13  --most gap 0.1709919273853302
	 14  --most gap 0.1709919273853302
	 15  --most gap 0.1709919273853302
	 16  --most gap 0.1709919273853302
两轮结果未更新,进行muteted...
	 17  --most gap 0.1709919273853302
	 18  --most gap 0.1709919273853302
	 19  --most gap 0.1709919273853302
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 5, 3, 6, 1, 4, 2, 8, 7, 9, 10]
sorted_id: [0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16]
sorted_id: [0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 11, 12, 14, 15, 17, 21, 19, 13, 18, 20, 16]
changeCodeStructure SUCCESS!
Processing examples:  70%|██████▉   | 278/400 [2:10:35<1:11:10, 35.00s/it]01/02/2025 14:37:41 - INFO - __main__ -   测试:278

01/02/2025 14:37:41 - INFO - __main__ -   Attack failed!

01/02/2025 14:37:41 - INFO - __main__ -   测试:279

01/02/2025 14:37:41 - INFO - __main__ -   Attack failed!

01/02/2025 14:37:41 - INFO - __main__ -   测试:280

01/02/2025 14:37:41 - INFO - __main__ -   Success rate: 90.48%

01/02/2025 14:37:41 - INFO - __main__ -   Successful items count: 152

01/02/2025 14:37:41 - INFO - __main__ -   Total count: 168

01/02/2025 14:37:41 - INFO - __main__ -   Index: 280

01/02/2025 14:37:41 - INFO - __main__ -   测试:281

01/02/2025 14:37:41 - INFO - __main__ -   Attack failed!

01/02/2025 14:37:41 - INFO - __main__ -   测试:282

01/02/2025 14:37:42 - INFO - __main__ -   Success rate: 90.53%

01/02/2025 14:37:42 - INFO - __main__ -   Successful items count: 153

01/02/2025 14:37:42 - INFO - __main__ -   Total count: 169

01/02/2025 14:37:42 - INFO - __main__ -   Index: 282

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  2
Generating population280...
init SUCCESS!
No variable_names in the code.
Number of variable_names extracted:  5
Generating population282...
init SUCCESS!
Processing examples:  71%|███████   | 283/400 [2:10:35<35:15, 18.08s/it]  01/02/2025 14:37:42 - INFO - __main__ -   测试:283

Number of variable_names extracted:  3
Generating population283...
	 0  --most gap 0.0006178626790642738
	 1  --most gap 0.0009623188525438309
	 2  --most gap 0.002182643860578537
	 3  --most gap 0.002182643860578537
	 4  --most gap 0.002182643860578537
Processing examples:  71%|███████   | 283/400 [2:10:51<35:15, 18.08s/it]01/02/2025 14:39:27 - INFO - __main__ -   Success rate: 90.00%

01/02/2025 14:39:27 - INFO - __main__ -   Successful items count: 153

01/02/2025 14:39:27 - INFO - __main__ -   Total count: 170

01/02/2025 14:39:27 - INFO - __main__ -   Index: 283

	 5  --most gap 0.002182643860578537
两轮结果未更新,进行muteted...
	 6  --most gap 0.002182643860578537
	 7  --most gap 0.002182643860578537
	 8  --most gap 0.002182643860578537
两轮结果未更新,进行muteted...
	 9  --most gap 0.002182643860578537
	 10  --most gap 0.002182643860578537
	 11  --most gap 0.002182643860578537
两轮结果未更新,进行muteted...
	 12  --most gap 0.002182643860578537
	 13  --most gap 0.002182643860578537
	 14  --most gap 0.002182643860578537
两轮结果未更新,进行muteted...
	 15  --most gap 0.002182643860578537
	 16  --most gap 0.002182643860578537
	 17  --most gap 0.002182643860578537
两轮结果未更新,进行muteted...
	 18  --most gap 0.002182643860578537
	 19  --most gap 0.002182643860578537
Changing code structure...
sorted_id: [0]
sorted_id: [0]
sorted_id: [0]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
sorted_id: [0]
sorted_id: [0, 1, 5, 6, 7, 8, 2, 3, 4]
sorted_id: [0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11]
sorted_id: [0, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1]
sorted_id: [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 4, 3, 2, 1]
sorted_id: [0]
sorted_id: [0, 1, 2, 3, 5, 6, 7, 8, 4]
sorted_id: [0, 1, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
sorted_id: [0]
Processing examples:  71%|███████   | 284/400 [2:12:21<55:23, 28.65s/it]01/02/2025 14:39:27 - INFO - __main__ -   测试:284

01/02/2025 14:39:27 - INFO - __main__ -   Attack failed!

01/02/2025 14:39:27 - INFO - __main__ -   测试:285

01/02/2025 14:39:27 - INFO - __main__ -   Attack failed!

01/02/2025 14:39:27 - INFO - __main__ -   测试:286

01/02/2025 14:39:27 - INFO - __main__ -   Attack failed!

01/02/2025 14:39:27 - INFO - __main__ -   测试:287

01/02/2025 14:39:27 - INFO - __main__ -   Attack failed!

01/02/2025 14:39:27 - INFO - __main__ -   测试:288

01/02/2025 14:39:49 - INFO - __main__ -   Success rate: 90.06%

01/02/2025 14:39:49 - INFO - __main__ -   Successful items count: 154

01/02/2025 14:39:49 - INFO - __main__ -   Total count: 171

01/02/2025 14:39:49 - INFO - __main__ -   Index: 288

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  12
Generating population288...
	 0  --most gap 0.11697500944137573
	 1  --most gap 0.11697500944137573
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  72%|███████▏  | 289/400 [2:12:43<32:16, 17.45s/it]01/02/2025 14:39:49 - INFO - __main__ -   测试:289

01/02/2025 14:39:49 - INFO - __main__ -   Attack failed!

01/02/2025 14:39:49 - INFO - __main__ -   测试:290

01/02/2025 14:40:27 - INFO - __main__ -   Success rate: 90.12%

01/02/2025 14:40:27 - INFO - __main__ -   Successful items count: 155

01/02/2025 14:40:27 - INFO - __main__ -   Total count: 172

01/02/2025 14:40:27 - INFO - __main__ -   Index: 290

The original code is misclassified.
Number of variable_names extracted:  1
Generating population290...
	 0  --most gap 0.036473240703344345
	 1  --most gap 0.036473240703344345
	 2  --most gap 0.036473240703344345
	 3  --most gap 0.036473240703344345
两轮结果未更新,进行muteted...
	 4  --most gap 0.036473240703344345
	 5  --most gap 0.036473240703344345
	 6  --most gap 0.036473240703344345
两轮结果未更新,进行muteted...
	 7  --most gap 0.036473240703344345
	 8  --most gap 0.036473240703344345
	 9  --most gap 0.036473240703344345
两轮结果未更新,进行muteted...
	 10  --most gap 0.036473240703344345
	 11  --most gap 0.036473240703344345
	 12  --most gap 0.036473240703344345
两轮结果未更新,进行muteted...
	 13  --most gap 0.036473240703344345
	 14  --most gap 0.036473240703344345
	 15  --most gap 0.036473240703344345
两轮结果未更新,进行muteted...
	 16  --most gap 0.036473240703344345
	 17  --most gap 0.036473240703344345
	 18  --most gap 0.036473240703344345
两轮结果未更新,进行muteted...
	 19  --most gap 0.036473240703344345
Changing code structure...
sorted_id: [0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 29, 16, 15, 23, 24, 13, 30, 19, 14, 17, 25, 21, 20, 37, 26, 28, 18, 31, 22, 27, 38, 35, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 34, 39, 36, 40]
changeCodeStructure SUCCESS!
Processing examples:  73%|███████▎  | 291/400 [2:13:21<32:12, 17.73s/it]01/02/2025 14:40:27 - INFO - __main__ -   测试:291

01/02/2025 14:40:27 - INFO - __main__ -   Attack failed!

01/02/2025 14:40:27 - INFO - __main__ -   测试:292

01/02/2025 14:40:27 - INFO - __main__ -   Attack failed!

01/02/2025 14:40:27 - INFO - __main__ -   测试:293

01/02/2025 14:40:27 - INFO - __main__ -   Attack failed!

01/02/2025 14:40:27 - INFO - __main__ -   测试:294

01/02/2025 14:40:59 - INFO - __main__ -   Success rate: 90.17%

01/02/2025 14:40:59 - INFO - __main__ -   Successful items count: 156

01/02/2025 14:40:59 - INFO - __main__ -   Total count: 173

01/02/2025 14:40:59 - INFO - __main__ -   Index: 294

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population294...
	 0  --most gap 0.06362659
	 1  --most gap 0.06362659
	 2  --most gap 0.06362659
两轮结果未更新,进行muteted...
	 3  --most gap 0.06362659
	 4  --most gap 0.25864798
	 5  --most gap 0.25864798
	 6  --most gap 0.25864798
	 7  --most gap 0.25864798
两轮结果未更新,进行muteted...
	 8  --most gap 0.25864798
	 9  --most gap 0.25864798
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  74%|███████▍  | 295/400 [2:13:53<24:38, 14.08s/it]01/02/2025 14:40:59 - INFO - __main__ -   测试:295

01/02/2025 14:40:59 - INFO - __main__ -   Attack failed!

01/02/2025 14:40:59 - INFO - __main__ -   测试:296

01/02/2025 14:40:59 - INFO - __main__ -   Success rate: 90.23%

01/02/2025 14:40:59 - INFO - __main__ -   Successful items count: 157

01/02/2025 14:40:59 - INFO - __main__ -   Total count: 174

01/02/2025 14:40:59 - INFO - __main__ -   Index: 296

01/02/2025 14:40:59 - INFO - __main__ -   测试:297

01/02/2025 14:40:59 - INFO - __main__ -   Success rate: 90.29%

01/02/2025 14:40:59 - INFO - __main__ -   Successful items count: 158

01/02/2025 14:40:59 - INFO - __main__ -   Total count: 175

01/02/2025 14:40:59 - INFO - __main__ -   Index: 297

The original code is misclassified.
Number of variable_names extracted:  5
Generating population296...
init SUCCESS!
Number of variable_names extracted:  4
Generating population297...
init SUCCESS!
Processing examples:  74%|███████▍  | 298/400 [2:13:53<17:06, 10.06s/it]01/02/2025 14:40:59 - INFO - __main__ -   测试:298

01/02/2025 14:40:59 - INFO - __main__ -   Attack failed!

01/02/2025 14:40:59 - INFO - __main__ -   测试:299

01/02/2025 14:40:59 - INFO - __main__ -   Success rate: 90.34%

01/02/2025 14:40:59 - INFO - __main__ -   Successful items count: 159

01/02/2025 14:40:59 - INFO - __main__ -   Total count: 176

01/02/2025 14:40:59 - INFO - __main__ -   Index: 299

The original code is misclassified.
Number of variable_names extracted:  12
Generating population299...
init SUCCESS!
Processing examples:  75%|███████▌  | 300/400 [2:13:53<13:12,  7.92s/it]01/02/2025 14:40:59 - INFO - __main__ -   测试:300

01/02/2025 14:40:59 - INFO - __main__ -   Success rate: 90.40%

01/02/2025 14:40:59 - INFO - __main__ -   Successful items count: 160

01/02/2025 14:40:59 - INFO - __main__ -   Total count: 177

01/02/2025 14:40:59 - INFO - __main__ -   Index: 300

01/02/2025 14:40:59 - INFO - __main__ -   测试:301

01/02/2025 14:40:59 - INFO - __main__ -   Attack failed!

01/02/2025 14:40:59 - INFO - __main__ -   测试:302

Number of variable_names extracted:  5
Generating population300...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  4
Generating population302...
	 0  --most gap 0.008044068235903978
	 1  --most gap 0.022606695536524057
	 2  --most gap 0.022606695536524057
	 3  --most gap 0.022606695536524057
Processing examples:  75%|███████▌  | 300/400 [2:14:11<13:12,  7.92s/it]01/02/2025 14:43:11 - INFO - __main__ -   Success rate: 89.89%

01/02/2025 14:43:11 - INFO - __main__ -   Successful items count: 160

01/02/2025 14:43:11 - INFO - __main__ -   Total count: 178

01/02/2025 14:43:11 - INFO - __main__ -   Index: 302

	 4  --most gap 0.022606695536524057
两轮结果未更新,进行muteted...
	 5  --most gap 0.022606695536524057
	 6  --most gap 0.022606695536524057
	 7  --most gap 0.029014742467552423
	 8  --most gap 0.04977125534787774
	 9  --most gap 0.04977125534787774
	 10  --most gap 0.04977125534787774
	 11  --most gap 0.04977125534787774
两轮结果未更新,进行muteted...
	 12  --most gap 0.04977125534787774
	 13  --most gap 0.04977125534787774
	 14  --most gap 0.04977125534787774
两轮结果未更新,进行muteted...
	 15  --most gap 0.04977125534787774
	 16  --most gap 0.04977125534787774
	 17  --most gap 0.04977125534787774
两轮结果未更新,进行muteted...
	 18  --most gap 0.04977125534787774
	 19  --most gap 0.04977125534787774
Changing code structure...
sorted_id: [0, 8, 10, 11, 1, 2, 9, 3, 7, 4, 6, 5]
Processing examples:  76%|███████▌  | 303/400 [2:16:05<31:11, 19.30s/it]01/02/2025 14:43:11 - INFO - __main__ -   测试:303

01/02/2025 14:43:11 - INFO - __main__ -   Attack failed!

01/02/2025 14:43:11 - INFO - __main__ -   测试:304

01/02/2025 14:44:23 - INFO - __main__ -   Success rate: 89.94%

01/02/2025 14:44:23 - INFO - __main__ -   Successful items count: 161

01/02/2025 14:44:23 - INFO - __main__ -   Total count: 179

01/02/2025 14:44:23 - INFO - __main__ -   Index: 304

The original code is misclassified.
Number of variable_names extracted:  4
Generating population304...
	 0  --most gap 0.06974661
	 1  --most gap 0.06974661
	 2  --most gap 0.06974661
两轮结果未更新,进行muteted...
	 3  --most gap 0.105640054
	 4  --most gap 0.105640054
	 5  --most gap 0.14536971
	 6  --most gap 0.3235662
	 7  --most gap 0.3235662
	 8  --most gap 0.3235662
	 9  --most gap 0.3235662
两轮结果未更新,进行muteted...
	 10  --most gap 0.3235662
	 11  --most gap 0.3235662
	 12  --most gap 0.3235662
两轮结果未更新,进行muteted...
	 13  --most gap 0.3235662
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  76%|███████▋  | 305/400 [2:17:17<36:36, 23.12s/it]01/02/2025 14:44:23 - INFO - __main__ -   测试:305

01/02/2025 14:44:23 - INFO - __main__ -   Success rate: 90.00%

01/02/2025 14:44:23 - INFO - __main__ -   Successful items count: 162

01/02/2025 14:44:23 - INFO - __main__ -   Total count: 180

01/02/2025 14:44:23 - INFO - __main__ -   Index: 305

01/02/2025 14:44:23 - INFO - __main__ -   测试:306

01/02/2025 14:44:23 - INFO - __main__ -   Attack failed!

01/02/2025 14:44:23 - INFO - __main__ -   测试:307

01/02/2025 14:44:23 - INFO - __main__ -   Attack failed!

01/02/2025 14:44:23 - INFO - __main__ -   测试:308

01/02/2025 14:44:29 - INFO - __main__ -   Success rate: 90.06%

01/02/2025 14:44:29 - INFO - __main__ -   Successful items count: 163

01/02/2025 14:44:29 - INFO - __main__ -   Total count: 181

01/02/2025 14:44:29 - INFO - __main__ -   Index: 308

Number of variable_names extracted:  3
Generating population305...
init SUCCESS!
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population308...
	 0  --most gap 0.02754560112953186
	 1  --most gap 0.02754625678062439
	 2  --most gap 0.02754625678062439
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  77%|███████▋  | 309/400 [2:17:23<22:01, 14.53s/it]01/02/2025 14:44:29 - INFO - __main__ -   测试:309

Number of variable_names extracted:  10
Generating population309...
	 0  --most gap 0.2603546530008316
	 1  --most gap 0.26093442738056183
	 2  --most gap 0.2776951342821121
Processing examples:  77%|███████▋  | 309/400 [2:17:41<22:01, 14.53s/it]01/02/2025 14:45:21 - INFO - __main__ -   Success rate: 90.11%

01/02/2025 14:45:21 - INFO - __main__ -   Successful items count: 164

01/02/2025 14:45:21 - INFO - __main__ -   Total count: 182

01/02/2025 14:45:21 - INFO - __main__ -   Index: 309

	 3  --most gap 0.3071158081293106
	 4  --most gap 0.3649548143148422
	 5  --most gap 0.3649548143148422
	 6  --most gap 0.3649548143148422
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  78%|███████▊  | 310/400 [2:18:15<28:42, 19.14s/it]01/02/2025 14:45:21 - INFO - __main__ -   测试:310

01/02/2025 14:45:49 - INFO - __main__ -   Success rate: 89.62%

01/02/2025 14:45:49 - INFO - __main__ -   Successful items count: 164

01/02/2025 14:45:49 - INFO - __main__ -   Total count: 183

01/02/2025 14:45:49 - INFO - __main__ -   Index: 310

Number of variable_names extracted:  1
Generating population310...
	 0  --most gap 0.022082925
	 1  --most gap 0.022082925
	 2  --most gap 0.022082925
两轮结果未更新,进行muteted...
	 3  --most gap 0.022082925
	 4  --most gap 0.022082925
	 5  --most gap 0.022082925
两轮结果未更新,进行muteted...
	 6  --most gap 0.022082925
	 7  --most gap 0.022082925
	 8  --most gap 0.022082925
两轮结果未更新,进行muteted...
	 9  --most gap 0.022082925
	 10  --most gap 0.022082925
	 11  --most gap 0.022082925
两轮结果未更新,进行muteted...
	 12  --most gap 0.022082925
	 13  --most gap 0.022082925
	 14  --most gap 0.022082925
两轮结果未更新,进行muteted...
	 15  --most gap 0.022082925
	 16  --most gap 0.022082925
	 17  --most gap 0.022082925
两轮结果未更新,进行muteted...
	 18  --most gap 0.022082925
	 19  --most gap 0.022082925
Changing code structure...
sorted_id: [0, 1]
sorted_id: [0, 1]
sorted_id: [0, 1]
sorted_id: [0, 1]
sorted_id: [0, 1, 2, 3, 5, 4, 6]
sorted_id: [0, 1]
sorted_id: [0, 1]
sorted_id: [0, 1, 2, 5, 3, 4, 6]
sorted_id: [0, 1, 2, 6, 7, 8, 9, 3, 5, 4]
sorted_id: [0, 1]
sorted_id: [0, 1]
Processing examples:  78%|███████▊  | 311/400 [2:18:43<30:27, 20.54s/it]01/02/2025 14:45:49 - INFO - __main__ -   测试:311

01/02/2025 14:48:56 - INFO - __main__ -   Success rate: 89.13%

01/02/2025 14:48:56 - INFO - __main__ -   Successful items count: 164

01/02/2025 14:48:56 - INFO - __main__ -   Total count: 184

01/02/2025 14:48:56 - INFO - __main__ -   Index: 311

Number of variable_names extracted:  8
Generating population311...
	 0  --most gap 0.00014424324
	 1  --most gap 0.00027388334
	 2  --most gap 0.00027388334
	 3  --most gap 0.0011387467
	 4  --most gap 0.0011387467
	 5  --most gap 0.0011387467
	 6  --most gap 0.0011387467
两轮结果未更新,进行muteted...
	 7  --most gap 0.0011387467
	 8  --most gap 0.0011387467
	 9  --most gap 0.0011387467
两轮结果未更新,进行muteted...
	 10  --most gap 0.0011387467
	 11  --most gap 0.0011387467
	 12  --most gap 0.0011387467
两轮结果未更新,进行muteted...
	 13  --most gap 0.0011387467
	 14  --most gap 0.0011387467
	 15  --most gap 0.0011387467
两轮结果未更新,进行muteted...
	 16  --most gap 0.0011387467
	 17  --most gap 0.0011387467
	 18  --most gap 0.0011387467
两轮结果未更新,进行muteted...
	 19  --most gap 0.0011387467
Changing code structure...
sorted_id: [0, 1]
sorted_id: [0, 1]
sorted_id: [0, 1]
sorted_id: [0, 1]
sorted_id: [0, 1]
Processing examples:  78%|███████▊  | 312/400 [2:21:49<1:13:13, 49.92s/it]01/02/2025 14:48:56 - INFO - __main__ -   测试:312

01/02/2025 14:49:45 - INFO - __main__ -   Success rate: 89.19%

01/02/2025 14:49:45 - INFO - __main__ -   Successful items count: 165

01/02/2025 14:49:45 - INFO - __main__ -   Total count: 185

01/02/2025 14:49:45 - INFO - __main__ -   Index: 312

Number of variable_names extracted:  5
Generating population312...
	 0  --most gap -0.057225764
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.0
	 4  --most gap 0.0
两轮结果未更新,进行muteted...
	 5  --most gap 0.0
	 6  --most gap 0.0
	 7  --most gap 0.07347894
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  78%|███████▊  | 313/400 [2:22:39<1:12:20, 49.89s/it]01/02/2025 14:49:45 - INFO - __main__ -   测试:313

01/02/2025 14:49:45 - INFO - __main__ -   Attack failed!

01/02/2025 14:49:45 - INFO - __main__ -   测试:314

01/02/2025 14:50:38 - INFO - __main__ -   Success rate: 89.25%

01/02/2025 14:50:38 - INFO - __main__ -   Successful items count: 166

01/02/2025 14:50:38 - INFO - __main__ -   Total count: 186

01/02/2025 14:50:38 - INFO - __main__ -   Index: 314

The original code is misclassified.
Number of variable_names extracted:  9
Generating population314...
	 0  --most gap 0.04070407
	 1  --most gap 0.33163255
	 2  --most gap 0.33163255
	 3  --most gap 0.33163255
	 4  --most gap 0.33163255
两轮结果未更新,进行muteted...
	 5  --most gap 0.39952105
	 6  --most gap 0.39952105
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  79%|███████▉  | 315/400 [2:23:32<58:23, 41.22s/it]  01/02/2025 14:50:38 - INFO - __main__ -   测试:315

01/02/2025 14:50:38 - INFO - __main__ -   Attack failed!

01/02/2025 14:50:38 - INFO - __main__ -   测试:316

01/02/2025 14:50:44 - INFO - __main__ -   Success rate: 89.30%

01/02/2025 14:50:44 - INFO - __main__ -   Successful items count: 167

01/02/2025 14:50:44 - INFO - __main__ -   Total count: 187

01/02/2025 14:50:44 - INFO - __main__ -   Index: 316

The original code is misclassified.
Number of variable_names extracted:  3
Generating population316...
	 0  --most gap 0.082974255
	 1  --most gap 0.082974255
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  79%|███████▉  | 317/400 [2:23:37<38:50, 28.07s/it]01/02/2025 14:50:44 - INFO - __main__ -   测试:317

01/02/2025 14:50:44 - INFO - __main__ -   Attack failed!

01/02/2025 14:50:44 - INFO - __main__ -   测试:318

01/02/2025 14:53:40 - INFO - __main__ -   Success rate: 88.83%

01/02/2025 14:53:40 - INFO - __main__ -   Successful items count: 167

01/02/2025 14:53:40 - INFO - __main__ -   Total count: 188

01/02/2025 14:53:40 - INFO - __main__ -   Index: 318

The original code is misclassified.
Number of variable_names extracted:  6
Generating population318...
	 0  --most gap 0.003186865709722042
	 1  --most gap 0.0032808007672429085
	 2  --most gap 0.0032808007672429085
	 3  --most gap 0.005373882129788399
	 4  --most gap 0.005373882129788399
	 5  --most gap 0.005373882129788399
	 6  --most gap 0.005373882129788399
两轮结果未更新,进行muteted...
	 7  --most gap 0.005373882129788399
	 8  --most gap 0.005373882129788399
	 9  --most gap 0.03102552518248558
	 10  --most gap 0.03102552518248558
	 11  --most gap 0.03102552518248558
	 12  --most gap 0.03102552518248558
两轮结果未更新,进行muteted...
	 13  --most gap 0.03102552518248558
	 14  --most gap 0.03102552518248558
	 15  --most gap 0.03102552518248558
两轮结果未更新,进行muteted...
	 16  --most gap 0.03102552518248558
	 17  --most gap 0.03102552518248558
	 18  --most gap 0.03102552518248558
两轮结果未更新,进行muteted...
	 19  --most gap 0.03102552518248558
Changing code structure...
sorted_id: [0, 1, 2, 3, 7, 4, 6, 8, 5, 9, 11, 10]
sorted_id: [0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11]
sorted_id: [0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11]
sorted_id: [0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11]
Processing examples:  80%|███████▉  | 319/400 [2:26:34<1:04:42, 47.93s/it]01/02/2025 14:53:40 - INFO - __main__ -   测试:319

01/02/2025 14:53:41 - INFO - __main__ -   Success rate: 88.89%

01/02/2025 14:53:41 - INFO - __main__ -   Successful items count: 168

01/02/2025 14:53:41 - INFO - __main__ -   Total count: 189

01/02/2025 14:53:41 - INFO - __main__ -   Index: 319

Number of variable_names extracted:  34
Generating population319...
init SUCCESS!
Processing examples:  80%|████████  | 320/400 [2:26:35<51:53, 38.92s/it]  01/02/2025 14:53:41 - INFO - __main__ -   测试:320

01/02/2025 14:53:41 - INFO - __main__ -   Attack failed!

01/02/2025 14:53:41 - INFO - __main__ -   测试:321

01/02/2025 14:53:41 - INFO - __main__ -   Success rate: 88.95%

01/02/2025 14:53:41 - INFO - __main__ -   Successful items count: 169

01/02/2025 14:53:41 - INFO - __main__ -   Total count: 190

01/02/2025 14:53:41 - INFO - __main__ -   Index: 321

The original code is misclassified.
Number of variable_names extracted:  8
Generating population321...
init SUCCESS!
Processing examples:  80%|████████  | 322/400 [2:26:35<32:49, 25.24s/it]01/02/2025 14:53:41 - INFO - __main__ -   测试:322

01/02/2025 14:53:41 - INFO - __main__ -   Attack failed!

01/02/2025 14:53:41 - INFO - __main__ -   测试:323

01/02/2025 14:53:41 - INFO - __main__ -   Attack failed!

01/02/2025 14:53:41 - INFO - __main__ -   测试:324

01/02/2025 14:54:14 - INFO - __main__ -   Success rate: 89.01%

01/02/2025 14:54:14 - INFO - __main__ -   Successful items count: 170

01/02/2025 14:54:14 - INFO - __main__ -   Total count: 191

01/02/2025 14:54:14 - INFO - __main__ -   Index: 324

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  15
Generating population324...
	 0  --most gap 0.11739361
	 1  --most gap 0.11739367
	 2  --most gap 0.20179647
	 3  --most gap 0.20179647
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  81%|████████▏ | 325/400 [2:27:08<23:50, 19.08s/it]01/02/2025 14:54:14 - INFO - __main__ -   测试:325

01/02/2025 14:54:14 - INFO - __main__ -   Attack failed!

01/02/2025 14:54:14 - INFO - __main__ -   测试:326

01/02/2025 14:54:14 - INFO - __main__ -   Attack failed!

01/02/2025 14:54:14 - INFO - __main__ -   测试:327

01/02/2025 14:54:14 - INFO - __main__ -   Attack failed!

01/02/2025 14:54:14 - INFO - __main__ -   测试:328

01/02/2025 14:56:31 - INFO - __main__ -   Success rate: 89.06%

01/02/2025 14:56:31 - INFO - __main__ -   Successful items count: 171

01/02/2025 14:56:31 - INFO - __main__ -   Total count: 192

01/02/2025 14:56:31 - INFO - __main__ -   Index: 328

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  32
Generating population328...
	 0  --most gap 0.022616290487349033
	 1  --most gap 0.022616409696638584
	 2  --most gap 0.026908197440207005
	 3  --most gap 0.026908197440207005
	 4  --most gap 0.0870266417041421
	 5  --most gap 0.13166654203087091
	 6  --most gap 0.20170843694359064
	 7  --most gap 0.20170843694359064
	 8  --most gap 0.29147610161453485
	 9  --most gap 0.29147610161453485
	 10  --most gap 0.35128840897232294
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  82%|████████▏ | 329/400 [2:29:25<30:40, 25.92s/it]01/02/2025 14:56:31 - INFO - __main__ -   测试:329

01/02/2025 14:58:53 - INFO - __main__ -   Success rate: 89.12%

01/02/2025 14:58:53 - INFO - __main__ -   Successful items count: 172

01/02/2025 14:58:53 - INFO - __main__ -   Total count: 193

01/02/2025 14:58:53 - INFO - __main__ -   Index: 329

Number of variable_names extracted:  7
Generating population329...
	 0  --most gap -0.023085180670022964
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.019916623830795288
	 4  --most gap 0.04192126542329788
	 5  --most gap 0.04192126542329788
	 6  --most gap 0.249246746301651
	 7  --most gap 0.249246746301651
	 8  --most gap 0.34688854217529297
	 9  --most gap 0.34688854217529297
	 10  --most gap 0.34688854217529297
	 11  --most gap 0.34688854217529297
两轮结果未更新,进行muteted...
	 12  --most gap 0.34688854217529297
	 13  --most gap 0.34688854217529297
	 14  --most gap 0.34688854217529297
两轮结果未更新,进行muteted...
	 15  --most gap 0.34688854217529297
	 16  --most gap 0.34688854217529297
	 17  --most gap 0.34688854217529297
两轮结果未更新,进行muteted...
	 18  --most gap 0.34688854217529297
	 19  --most gap 0.34688854217529297
Changing code structure...
sorted_id: [0, 1]
changeCodeStructure SUCCESS!
Processing examples:  82%|████████▎ | 330/400 [2:31:47<48:58, 41.98s/it]01/02/2025 14:58:53 - INFO - __main__ -   测试:330

01/02/2025 14:58:53 - INFO - __main__ -   Success rate: 89.18%

01/02/2025 14:58:53 - INFO - __main__ -   Successful items count: 173

01/02/2025 14:58:53 - INFO - __main__ -   Total count: 194

01/02/2025 14:58:53 - INFO - __main__ -   Index: 330

01/02/2025 14:58:53 - INFO - __main__ -   测试:331

01/02/2025 15:03:55 - INFO - __main__ -   Success rate: 89.23%

01/02/2025 15:03:55 - INFO - __main__ -   Successful items count: 174

01/02/2025 15:03:55 - INFO - __main__ -   Total count: 195

01/02/2025 15:03:55 - INFO - __main__ -   Index: 331

Number of variable_names extracted:  8
Generating population330...
init SUCCESS!
Number of variable_names extracted:  35
Generating population331...
	 0  --most gap 0.008497567847371101
	 1  --most gap 0.008497567847371101
	 2  --most gap 0.019588379189372063
	 3  --most gap 0.027136029675602913
	 4  --most gap 0.058811062946915627
	 5  --most gap 0.1131665650755167
	 6  --most gap 0.1131665650755167
	 7  --most gap 0.11945451237261295
	 8  --most gap 0.11945451237261295
	 9  --most gap 0.21264241077005863
	 10  --most gap 0.21264241077005863
	 11  --most gap 0.21264241077005863
	 12  --most gap 0.26278884150087833
	 13  --most gap 0.32047964073717594
	 14  --most gap 0.32047964073717594
	 15  --most gap 0.32895965315401554
	 16  --most gap 0.39213318563997746
	 17  --most gap 0.39213318563997746
	 18  --most gap 0.39213318563997746
	 19  --most gap 0.44721717573702335
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]
changeCodeStructure SUCCESS!
Processing examples:  83%|████████▎ | 332/400 [2:36:49<1:22:42, 72.98s/it]01/02/2025 15:03:55 - INFO - __main__ -   测试:332

01/02/2025 15:03:56 - INFO - __main__ -   Success rate: 89.29%

01/02/2025 15:03:56 - INFO - __main__ -   Successful items count: 175

01/02/2025 15:03:56 - INFO - __main__ -   Total count: 196

01/02/2025 15:03:56 - INFO - __main__ -   Index: 332

Number of variable_names extracted:  16
Generating population332...
init SUCCESS!
Processing examples:  83%|████████▎ | 333/400 [2:36:49<1:07:48, 60.72s/it]01/02/2025 15:03:56 - INFO - __main__ -   测试:333

01/02/2025 15:03:56 - INFO - __main__ -   Success rate: 89.34%

01/02/2025 15:03:56 - INFO - __main__ -   Successful items count: 176

01/02/2025 15:03:56 - INFO - __main__ -   Total count: 197

01/02/2025 15:03:56 - INFO - __main__ -   Index: 333

01/02/2025 15:03:56 - INFO - __main__ -   测试:334

01/02/2025 15:04:55 - INFO - __main__ -   Success rate: 88.89%

01/02/2025 15:04:55 - INFO - __main__ -   Successful items count: 176

01/02/2025 15:04:55 - INFO - __main__ -   Total count: 198

01/02/2025 15:04:55 - INFO - __main__ -   Index: 334

Number of variable_names extracted:  9
Generating population333...
init SUCCESS!
Number of variable_names extracted:  1
Generating population334...
	 0  --most gap 0.0016872287
	 1  --most gap 0.0016872287
	 2  --most gap 0.0016872287
两轮结果未更新,进行muteted...
	 3  --most gap 0.0016872287
	 4  --most gap 0.0016872287
	 5  --most gap 0.0016872287
两轮结果未更新,进行muteted...
	 6  --most gap 0.0016872287
	 7  --most gap 0.0016872287
	 8  --most gap 0.0016872287
两轮结果未更新,进行muteted...
	 9  --most gap 0.0016872287
	 10  --most gap 0.0016872287
	 11  --most gap 0.0016872287
两轮结果未更新,进行muteted...
	 12  --most gap 0.0016872287
	 13  --most gap 0.0016872287
	 14  --most gap 0.0016872287
两轮结果未更新,进行muteted...
	 15  --most gap 0.0016872287
	 16  --most gap 0.0016872287
	 17  --most gap 0.0016872287
两轮结果未更新,进行muteted...
	 18  --most gap 0.0016872287
	 19  --most gap 0.0016872287
Changing code structure...
sorted_id: [0, 1, 2, 3, 16, 17, 18, 19, 20, 21, 4, 14, 5, 15, 13, 6, 11, 10, 12, 7, 9, 8]
sorted_id: [0, 1, 2, 3, 4, 5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 14, 6, 13, 15, 11, 7, 12, 10, 9, 8]
sorted_id: [0, 2, 1, 3, 4, 16, 17, 18, 19, 20, 21, 5, 15, 14, 13, 12, 6, 11, 7, 8, 9, 10]
Processing examples:  84%|████████▍ | 335/400 [2:37:49<54:56, 50.72s/it]  01/02/2025 15:04:55 - INFO - __main__ -   测试:335

01/02/2025 15:04:55 - INFO - __main__ -   Attack failed!

01/02/2025 15:04:55 - INFO - __main__ -   测试:336

01/02/2025 15:04:55 - INFO - __main__ -   Attack failed!

01/02/2025 15:04:55 - INFO - __main__ -   测试:337

01/02/2025 15:05:05 - INFO - __main__ -   Success rate: 88.94%

01/02/2025 15:05:05 - INFO - __main__ -   Successful items count: 177

01/02/2025 15:05:05 - INFO - __main__ -   Total count: 199

01/02/2025 15:05:05 - INFO - __main__ -   Index: 337

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population337...
	 0  --most gap 0.20852917
	 1  --most gap 0.20852941
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  84%|████████▍ | 338/400 [2:37:59<32:18, 31.27s/it]01/02/2025 15:05:05 - INFO - __main__ -   测试:338

01/02/2025 15:05:16 - INFO - __main__ -   Success rate: 89.00%

01/02/2025 15:05:16 - INFO - __main__ -   Successful items count: 178

01/02/2025 15:05:16 - INFO - __main__ -   Total count: 200

01/02/2025 15:05:16 - INFO - __main__ -   Index: 338

Number of variable_names extracted:  2
Generating population338...
	 0  --most gap 0.034066793508827686
	 1  --most gap 0.034066793508827686
	 2  --most gap 0.034066793508827686
两轮结果未更新,进行muteted...
	 3  --most gap 0.034066793508827686
	 4  --most gap 0.034066793508827686
	 5  --most gap 0.034066793508827686
两轮结果未更新,进行muteted...
	 6  --most gap 0.034066793508827686
	 7  --most gap 0.034066793508827686
	 8  --most gap 0.034066793508827686
两轮结果未更新,进行muteted...
	 9  --most gap 0.034066793508827686
	 10  --most gap 0.034066793508827686
	 11  --most gap 0.034066793508827686
两轮结果未更新,进行muteted...
	 12  --most gap 0.034066793508827686
	 13  --most gap 0.034066793508827686
	 14  --most gap 0.034066793508827686
两轮结果未更新,进行muteted...
	 15  --most gap 0.034066793508827686
	 16  --most gap 0.034066793508827686
	 17  --most gap 0.034066793508827686
两轮结果未更新,进行muteted...
	 18  --most gap 0.034066793508827686
	 19  --most gap 0.034066793508827686
Changing code structure...
sorted_id: [0, 1, 2]
changeCodeStructure SUCCESS!
Processing examples:  85%|████████▍ | 339/400 [2:38:10<28:25, 27.96s/it]01/02/2025 15:05:16 - INFO - __main__ -   测试:339

01/02/2025 15:14:46 - INFO - __main__ -   Success rate: 89.05%

01/02/2025 15:14:46 - INFO - __main__ -   Successful items count: 179

01/02/2025 15:14:46 - INFO - __main__ -   Total count: 201

01/02/2025 15:14:46 - INFO - __main__ -   Index: 339

Number of variable_names extracted:  22
Generating population339...
	 0  --most gap -0.06706681847572327
	 1  --most gap 0.0
	 2  --most gap 0.07189218699932098
	 3  --most gap 0.07189218699932098
	 4  --most gap 0.07189218699932098
	 5  --most gap 0.07189218699932098
两轮结果未更新,进行muteted...
	 6  --most gap 0.07189218699932098
	 7  --most gap 0.07189218699932098
	 8  --most gap 0.07189218699932098
两轮结果未更新,进行muteted...
	 9  --most gap 0.2148357480764389
	 10  --most gap 0.2148357480764389
	 11  --most gap 0.2148357480764389
	 12  --most gap 0.2148357480764389
两轮结果未更新,进行muteted...
	 13  --most gap 0.2148357480764389
	 14  --most gap 0.2148357480764389
	 15  --most gap 0.2148357480764389
两轮结果未更新,进行muteted...
	 16  --most gap 0.2148357480764389
	 17  --most gap 0.2148357480764389
	 18  --most gap 0.2148357480764389
两轮结果未更新,进行muteted...
	 19  --most gap 0.2148357480764389
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  85%|████████▌ | 340/400 [2:47:39<2:10:24, 130.41s/it]01/02/2025 15:14:46 - INFO - __main__ -   测试:340

01/02/2025 15:18:18 - INFO - __main__ -   Success rate: 89.11%

01/02/2025 15:18:18 - INFO - __main__ -   Successful items count: 180

01/02/2025 15:18:18 - INFO - __main__ -   Total count: 202

01/02/2025 15:18:18 - INFO - __main__ -   Index: 340

Number of variable_names extracted:  8
Generating population340...
	 0  --most gap 0.008681650273501873
	 1  --most gap 0.008681650273501873
	 2  --most gap 0.009652192704379559
	 3  --most gap 0.012531326152384281
	 4  --most gap 0.018022525124251842
	 5  --most gap 0.02288545574992895
	 6  --most gap 0.02288545574992895
	 7  --most gap 0.02288545574992895
	 8  --most gap 0.04368921276181936
	 9  --most gap 0.04368921276181936
	 10  --most gap 0.04368921276181936
	 11  --most gap 0.04368921276181936
两轮结果未更新,进行muteted...
	 12  --most gap 0.04368921276181936
	 13  --most gap 0.04368921276181936
	 14  --most gap 0.04368921276181936
两轮结果未更新,进行muteted...
	 15  --most gap 0.04368921276181936
	 16  --most gap 0.04368921276181936
	 17  --most gap 0.04368921276181936
两轮结果未更新,进行muteted...
	 18  --most gap 0.04368921276181936
	 19  --most gap 0.04368921276181936
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 12, 13, 5, 6, 11, 7, 9, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 10, 8, 15]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 12, 9, 13, 11, 8, 14, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 15]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 11, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 10, 8]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 12, 9, 13, 11, 8, 14, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 15]
sorted_id: [0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 12, 7, 6, 9, 11, 10, 8]
changeCodeStructure SUCCESS!
Processing examples:  85%|████████▌ | 341/400 [2:51:12<2:25:30, 147.97s/it]01/02/2025 15:18:18 - INFO - __main__ -   测试:341

01/02/2025 15:18:29 - INFO - __main__ -   Success rate: 89.16%

01/02/2025 15:18:29 - INFO - __main__ -   Successful items count: 181

01/02/2025 15:18:29 - INFO - __main__ -   Total count: 203

01/02/2025 15:18:29 - INFO - __main__ -   Index: 341

Number of variable_names extracted:  8
Generating population341...
	 0  --most gap 0.2479428
	 1  --most gap 0.39849746
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  86%|████████▌ | 342/400 [2:51:23<1:52:09, 116.03s/it]01/02/2025 15:18:29 - INFO - __main__ -   测试:342

01/02/2025 15:18:30 - INFO - __main__ -   Success rate: 89.22%

01/02/2025 15:18:30 - INFO - __main__ -   Successful items count: 182

01/02/2025 15:18:30 - INFO - __main__ -   Total count: 204

01/02/2025 15:18:30 - INFO - __main__ -   Index: 342

Number of variable_names extracted:  6
Generating population342...
	 0  --most gap 0.19153976
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  86%|████████▌ | 343/400 [2:51:24<1:22:53, 87.26s/it] 01/02/2025 15:18:30 - INFO - __main__ -   测试:343

01/02/2025 15:20:27 - INFO - __main__ -   Success rate: 89.27%

01/02/2025 15:20:27 - INFO - __main__ -   Successful items count: 183

01/02/2025 15:20:27 - INFO - __main__ -   Total count: 205

01/02/2025 15:20:27 - INFO - __main__ -   Index: 343

Number of variable_names extracted:  5
Generating population343...
	 0  --most gap 0.015363336
	 1  --most gap 0.01654023
	 2  --most gap 0.07569677
	 3  --most gap 0.07569677
	 4  --most gap 0.07569677
	 5  --most gap 0.07569677
两轮结果未更新,进行muteted...
	 6  --most gap 0.07569677
	 7  --most gap 0.07569677
	 8  --most gap 0.07569677
两轮结果未更新,进行muteted...
	 9  --most gap 0.07569677
	 10  --most gap 0.07569677
	 11  --most gap 0.07569677
两轮结果未更新,进行muteted...
	 12  --most gap 0.07569677
	 13  --most gap 0.07569677
	 14  --most gap 0.07569677
两轮结果未更新,进行muteted...
	 15  --most gap 0.07569677
	 16  --most gap 0.07569677
	 17  --most gap 0.07569677
两轮结果未更新,进行muteted...
	 18  --most gap 0.07569677
	 19  --most gap 0.07569677
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  86%|████████▌ | 344/400 [2:53:21<1:28:45, 95.09s/it]01/02/2025 15:20:27 - INFO - __main__ -   测试:344

01/02/2025 15:20:28 - INFO - __main__ -   Success rate: 89.32%

01/02/2025 15:20:28 - INFO - __main__ -   Successful items count: 184

01/02/2025 15:20:28 - INFO - __main__ -   Total count: 206

01/02/2025 15:20:28 - INFO - __main__ -   Index: 344

Number of variable_names extracted:  23
Generating population344...
init SUCCESS!
Processing examples:  86%|████████▋ | 345/400 [2:53:22<1:03:25, 69.19s/it]01/02/2025 15:20:28 - INFO - __main__ -   测试:345

01/02/2025 15:20:28 - INFO - __main__ -   Attack failed!

01/02/2025 15:20:28 - INFO - __main__ -   测试:346

01/02/2025 15:20:55 - INFO - __main__ -   Success rate: 89.37%

01/02/2025 15:20:55 - INFO - __main__ -   Successful items count: 185

01/02/2025 15:20:55 - INFO - __main__ -   Total count: 207

01/02/2025 15:20:55 - INFO - __main__ -   Index: 346

The original code is misclassified.
Number of variable_names extracted:  4
Generating population346...
	 0  --most gap 0.035888672
	 1  --most gap 0.0580312
	 2  --most gap 0.1980409
	 3  --most gap 0.27913338
	 4  --most gap 0.27913338
	 5  --most gap 0.27913338
	 6  --most gap 0.27913338
两轮结果未更新,进行muteted...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  87%|████████▋ | 347/400 [2:53:49<39:42, 44.96s/it]  01/02/2025 15:20:55 - INFO - __main__ -   测试:347

01/02/2025 15:20:57 - INFO - __main__ -   Success rate: 89.42%

01/02/2025 15:20:57 - INFO - __main__ -   Successful items count: 186

01/02/2025 15:20:57 - INFO - __main__ -   Total count: 208

01/02/2025 15:20:57 - INFO - __main__ -   Index: 347

Number of variable_names extracted:  4
Generating population347...
	 0  --most gap -0.04242921
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  87%|████████▋ | 348/400 [2:53:51<29:56, 34.55s/it]01/02/2025 15:20:57 - INFO - __main__ -   测试:348

01/02/2025 15:20:57 - INFO - __main__ -   Attack failed!

01/02/2025 15:20:57 - INFO - __main__ -   测试:349

01/02/2025 15:20:57 - INFO - __main__ -   Attack failed!

01/02/2025 15:20:57 - INFO - __main__ -   测试:350

01/02/2025 15:21:03 - INFO - __main__ -   Success rate: 89.47%

01/02/2025 15:21:03 - INFO - __main__ -   Successful items count: 187

01/02/2025 15:21:03 - INFO - __main__ -   Total count: 209

01/02/2025 15:21:03 - INFO - __main__ -   Index: 350

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population350...
	 0  --most gap 0.056768656
	 1  --most gap 0.056768656
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  88%|████████▊ | 351/400 [2:53:57<14:51, 18.19s/it]01/02/2025 15:21:03 - INFO - __main__ -   测试:351

01/02/2025 15:21:03 - INFO - __main__ -   Success rate: 89.52%

01/02/2025 15:21:03 - INFO - __main__ -   Successful items count: 188

01/02/2025 15:21:03 - INFO - __main__ -   Total count: 210

01/02/2025 15:21:03 - INFO - __main__ -   Index: 351

Number of variable_names extracted:  13
Generating population351...
init SUCCESS!
Processing examples:  88%|████████▊ | 352/400 [2:53:57<11:44, 14.68s/it]01/02/2025 15:21:03 - INFO - __main__ -   测试:352

01/02/2025 15:21:05 - INFO - __main__ -   Success rate: 89.57%

01/02/2025 15:21:05 - INFO - __main__ -   Successful items count: 189

01/02/2025 15:21:05 - INFO - __main__ -   Total count: 211

01/02/2025 15:21:05 - INFO - __main__ -   Index: 352

Number of variable_names extracted:  7
Generating population352...
	 0  --most gap 0.21376145
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  88%|████████▊ | 353/400 [2:53:59<09:21, 11.94s/it]01/02/2025 15:21:05 - INFO - __main__ -   测试:353

01/02/2025 15:21:05 - INFO - __main__ -   Success rate: 89.62%

01/02/2025 15:21:05 - INFO - __main__ -   Successful items count: 190

01/02/2025 15:21:05 - INFO - __main__ -   Total count: 212

01/02/2025 15:21:05 - INFO - __main__ -   Index: 353

01/02/2025 15:21:05 - INFO - __main__ -   测试:354

01/02/2025 15:21:32 - INFO - __main__ -   Success rate: 89.67%

01/02/2025 15:21:32 - INFO - __main__ -   Successful items count: 191

01/02/2025 15:21:32 - INFO - __main__ -   Total count: 213

01/02/2025 15:21:32 - INFO - __main__ -   Index: 354

Number of variable_names extracted:  3
Generating population353...
init SUCCESS!
Number of variable_names extracted:  5
Generating population354...
	 0  --most gap 0.15194857
	 1  --most gap 0.15194857
	 2  --most gap 0.15194857
	 3  --most gap 0.15194857
两轮结果未更新,进行muteted...
	 4  --most gap 0.38242334
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  89%|████████▉ | 355/400 [2:54:26<09:23, 12.52s/it]01/02/2025 15:21:32 - INFO - __main__ -   测试:355

01/02/2025 15:21:32 - INFO - __main__ -   Attack failed!

01/02/2025 15:21:32 - INFO - __main__ -   测试:356

01/02/2025 15:21:34 - INFO - __main__ -   Success rate: 89.72%

01/02/2025 15:21:34 - INFO - __main__ -   Successful items count: 192

01/02/2025 15:21:34 - INFO - __main__ -   Total count: 214

01/02/2025 15:21:34 - INFO - __main__ -   Index: 356

The original code is misclassified.
Number of variable_names extracted:  8
Generating population356...
	 0  --most gap 0.102696836
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  89%|████████▉ | 357/400 [2:54:28<06:01,  8.42s/it]01/02/2025 15:21:34 - INFO - __main__ -   测试:357

01/02/2025 15:21:34 - INFO - __main__ -   Attack failed!

01/02/2025 15:21:34 - INFO - __main__ -   测试:358

01/02/2025 15:24:29 - INFO - __main__ -   Success rate: 89.30%

01/02/2025 15:24:29 - INFO - __main__ -   Successful items count: 192

01/02/2025 15:24:29 - INFO - __main__ -   Total count: 215

01/02/2025 15:24:29 - INFO - __main__ -   Index: 358

The original code is misclassified.
Number of variable_names extracted:  5
Generating population358...
	 0  --most gap 0.10095465
	 1  --most gap 0.14357442
	 2  --most gap 0.14707983
	 3  --most gap 0.14707983
	 4  --most gap 0.14707983
	 5  --most gap 0.14707983
两轮结果未更新,进行muteted...
	 6  --most gap 0.14707983
	 7  --most gap 0.18721783
	 8  --most gap 0.18721783
	 9  --most gap 0.18721783
	 10  --most gap 0.18721783
两轮结果未更新,进行muteted...
	 11  --most gap 0.18721783
	 12  --most gap 0.18721783
	 13  --most gap 0.18721783
两轮结果未更新,进行muteted...
	 14  --most gap 0.20445567
	 15  --most gap 0.20445567
	 16  --most gap 0.20445567
	 17  --most gap 0.20445567
两轮结果未更新,进行muteted...
	 18  --most gap 0.20445567
	 19  --most gap 0.20445567
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 13]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
Processing examples:  90%|████████▉ | 359/400 [2:57:23<23:50, 34.89s/it]01/02/2025 15:24:29 - INFO - __main__ -   测试:359

01/02/2025 15:24:29 - INFO - __main__ -   Attack failed!

01/02/2025 15:24:29 - INFO - __main__ -   测试:360

01/02/2025 15:27:14 - INFO - __main__ -   Success rate: 89.35%

01/02/2025 15:27:14 - INFO - __main__ -   Successful items count: 193

01/02/2025 15:27:14 - INFO - __main__ -   Total count: 216

01/02/2025 15:27:14 - INFO - __main__ -   Index: 360

The original code is misclassified.
Number of variable_names extracted:  4
Generating population360...
	 0  --most gap -0.006102830171585083
	 1  --most gap 0.0
	 2  --most gap 0.1086432933807373
	 3  --most gap 0.1086432933807373
	 4  --most gap 0.1086432933807373
	 5  --most gap 0.1086432933807373
两轮结果未更新,进行muteted...
	 6  --most gap 0.1086432933807373
	 7  --most gap 0.1086432933807373
	 8  --most gap 0.1086432933807373
两轮结果未更新,进行muteted...
	 9  --most gap 0.1086432933807373
	 10  --most gap 0.1086432933807373
	 11  --most gap 0.1086432933807373
两轮结果未更新,进行muteted...
	 12  --most gap 0.1086432933807373
	 13  --most gap 0.1086432933807373
	 14  --most gap 0.1086432933807373
两轮结果未更新,进行muteted...
	 15  --most gap 0.1086432933807373
	 16  --most gap 0.1086432933807373
	 17  --most gap 0.1086432933807373
两轮结果未更新,进行muteted...
	 18  --most gap 0.1086432933807373
	 19  --most gap 0.1086432933807373
Changing code structure...
sorted_id: [0, 46, 47, 48, 49, 50, 51, 52, 53, 45, 44, 42, 43, 1, 3, 2, 41, 40, 4, 6, 5, 38, 8, 7, 39, 36, 34, 10, 33, 35, 37, 11, 9, 26, 32, 27, 30, 12, 29, 20, 28, 31, 21, 23, 24, 22, 17, 15, 18, 25, 13, 19, 16, 14]
changeCodeStructure SUCCESS!
Processing examples:  90%|█████████ | 361/400 [3:00:07<32:40, 50.28s/it]01/02/2025 15:27:14 - INFO - __main__ -   测试:361

01/02/2025 15:29:27 - INFO - __main__ -   Success rate: 89.40%

01/02/2025 15:29:27 - INFO - __main__ -   Successful items count: 194

01/02/2025 15:29:27 - INFO - __main__ -   Total count: 217

01/02/2025 15:29:27 - INFO - __main__ -   Index: 361

Number of variable_names extracted:  4
Generating population361...
	 0  --most gap 0.03188921511173248
	 1  --most gap 0.03188921511173248
	 2  --most gap 0.03188921511173248
	 3  --most gap 0.14332236349582672
	 4  --most gap 0.14332236349582672
	 5  --most gap 0.14332236349582672
	 6  --most gap 0.14332236349582672
两轮结果未更新,进行muteted...
	 7  --most gap 0.14332236349582672
	 8  --most gap 0.14332236349582672
	 9  --most gap 0.14332236349582672
两轮结果未更新,进行muteted...
	 10  --most gap 0.14332236349582672
	 11  --most gap 0.14332236349582672
	 12  --most gap 0.330130398273468
	 13  --most gap 0.330130398273468
	 14  --most gap 0.330130398273468
	 15  --most gap 0.330130398273468
两轮结果未更新,进行muteted...
	 16  --most gap 0.330130398273468
	 17  --most gap 0.330130398273468
	 18  --most gap 0.330130398273468
两轮结果未更新,进行muteted...
	 19  --most gap 0.330130398273468
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 7, 8, 6, 9, 10, 11]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 8, 6, 9, 10, 11, 17, 12, 15, 16, 14, 13]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 8, 6, 9, 10, 11]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 8, 9, 6, 10, 11, 14, 15, 16, 17, 18, 19, 12, 13]
sorted_id: [0, 1, 2, 3, 4, 5, 7, 8, 6, 9, 10, 11]
changeCodeStructure SUCCESS!
Processing examples:  90%|█████████ | 362/400 [3:02:21<41:46, 65.97s/it]01/02/2025 15:29:27 - INFO - __main__ -   测试:362

01/02/2025 15:29:50 - INFO - __main__ -   Success rate: 89.45%

01/02/2025 15:29:50 - INFO - __main__ -   Successful items count: 195

01/02/2025 15:29:50 - INFO - __main__ -   Total count: 218

01/02/2025 15:29:50 - INFO - __main__ -   Index: 362

Number of variable_names extracted:  2
Generating population362...
	 0  --most gap 0.16766592860221863
	 1  --most gap 0.16766592860221863
	 2  --most gap 0.16766592860221863
两轮结果未更新,进行muteted...
	 3  --most gap 0.16766592860221863
	 4  --most gap 0.16766592860221863
	 5  --most gap 0.16766592860221863
两轮结果未更新,进行muteted...
	 6  --most gap 0.16766592860221863
	 7  --most gap 0.16766592860221863
	 8  --most gap 0.16766592860221863
两轮结果未更新,进行muteted...
	 9  --most gap 0.16766592860221863
	 10  --most gap 0.16766592860221863
	 11  --most gap 0.16766592860221863
两轮结果未更新,进行muteted...
	 12  --most gap 0.16766592860221863
	 13  --most gap 0.16766592860221863
	 14  --most gap 0.16766592860221863
两轮结果未更新,进行muteted...
	 15  --most gap 0.16766592860221863
	 16  --most gap 0.16766592860221863
	 17  --most gap 0.16766592860221863
两轮结果未更新,进行muteted...
	 18  --most gap 0.16766592860221863
	 19  --most gap 0.16766592860221863
Changing code structure...
sorted_id: [0, 1, 2, 21, 3, 19, 17, 20, 4, 18, 16, 15, 5, 7, 14, 6, 22, 9, 23, 8, 11, 13, 10, 12]
changeCodeStructure SUCCESS!
Processing examples:  91%|█████████ | 363/400 [3:02:44<35:00, 56.77s/it]01/02/2025 15:29:50 - INFO - __main__ -   测试:363

01/02/2025 15:29:57 - INFO - __main__ -   Success rate: 89.50%

01/02/2025 15:29:57 - INFO - __main__ -   Successful items count: 196

01/02/2025 15:29:57 - INFO - __main__ -   Total count: 219

01/02/2025 15:29:57 - INFO - __main__ -   Index: 363

Number of variable_names extracted:  5
Generating population363...
	 0  --most gap 0.22330333292484283
	 1  --most gap 0.22330354154109955
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  91%|█████████ | 364/400 [3:02:51<27:13, 45.37s/it]01/02/2025 15:29:57 - INFO - __main__ -   测试:364

01/02/2025 15:30:16 - INFO - __main__ -   Success rate: 89.55%

01/02/2025 15:30:16 - INFO - __main__ -   Successful items count: 197

01/02/2025 15:30:16 - INFO - __main__ -   Total count: 220

01/02/2025 15:30:16 - INFO - __main__ -   Index: 364

Number of variable_names extracted:  2
Generating population364...
	 0  --most gap 0.009169846773147583
	 1  --most gap 0.009169846773147583
	 2  --most gap 0.009169846773147583
	 3  --most gap 0.009169846773147583
两轮结果未更新,进行muteted...
	 4  --most gap 0.009169846773147583
	 5  --most gap 0.009169846773147583
	 6  --most gap 0.009169846773147583
两轮结果未更新,进行muteted...
	 7  --most gap 0.009169846773147583
	 8  --most gap 0.009169846773147583
	 9  --most gap 0.009169846773147583
两轮结果未更新,进行muteted...
	 10  --most gap 0.009169846773147583
	 11  --most gap 0.009169846773147583
	 12  --most gap 0.009169846773147583
两轮结果未更新,进行muteted...
	 13  --most gap 0.009169846773147583
	 14  --most gap 0.009169846773147583
	 15  --most gap 0.009169846773147583
两轮结果未更新,进行muteted...
	 16  --most gap 0.009169846773147583
	 17  --most gap 0.009169846773147583
	 18  --most gap 0.009169846773147583
两轮结果未更新,进行muteted...
	 19  --most gap 0.009169846773147583
Changing code structure...
sorted_id: [0]
changeCodeStructure SUCCESS!
Processing examples:  91%|█████████▏| 365/400 [3:03:10<22:31, 38.62s/it]01/02/2025 15:30:16 - INFO - __main__ -   测试:365

01/02/2025 15:30:34 - INFO - __main__ -   Success rate: 89.59%

01/02/2025 15:30:34 - INFO - __main__ -   Successful items count: 198

01/02/2025 15:30:34 - INFO - __main__ -   Total count: 221

01/02/2025 15:30:34 - INFO - __main__ -   Index: 365

Number of variable_names extracted:  5
Generating population365...
	 0  --most gap 0.2568862549960613
	 1  --most gap 0.27064190432429314
	 2  --most gap 0.4218740276992321
	 3  --most gap 0.4218740276992321
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 366/400 [3:03:28<18:49, 33.23s/it]01/02/2025 15:30:34 - INFO - __main__ -   测试:366

01/02/2025 15:30:57 - INFO - __main__ -   Success rate: 89.64%

01/02/2025 15:30:57 - INFO - __main__ -   Successful items count: 199

01/02/2025 15:30:57 - INFO - __main__ -   Total count: 222

01/02/2025 15:30:57 - INFO - __main__ -   Index: 366

Number of variable_names extracted:  4
Generating population366...
	 0  --most gap 0.0688072070479393
	 1  --most gap 0.16798322647809982
	 2  --most gap 0.20482275635004044
	 3  --most gap 0.20482275635004044
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 367/400 [3:03:51<16:44, 30.45s/it]01/02/2025 15:30:57 - INFO - __main__ -   测试:367

01/02/2025 15:31:07 - INFO - __main__ -   Success rate: 89.69%

01/02/2025 15:31:07 - INFO - __main__ -   Successful items count: 200

01/02/2025 15:31:07 - INFO - __main__ -   Total count: 223

01/02/2025 15:31:07 - INFO - __main__ -   Index: 367

Number of variable_names extracted:  1
Generating population367...
	 0  --most gap -0.015973180532455444
	 1  --most gap -0.015973180532455444
	 2  --most gap -0.015973180532455444
	 3  --most gap -0.015973180532455444
两轮结果未更新,进行muteted...
	 4  --most gap -0.015973180532455444
	 5  --most gap -0.015973180532455444
	 6  --most gap -0.015973180532455444
两轮结果未更新,进行muteted...
	 7  --most gap -0.015973180532455444
	 8  --most gap -0.015973180532455444
	 9  --most gap -0.015973180532455444
两轮结果未更新,进行muteted...
	 10  --most gap -0.015973180532455444
	 11  --most gap -0.015973180532455444
	 12  --most gap -0.015973180532455444
两轮结果未更新,进行muteted...
	 13  --most gap -0.015973180532455444
	 14  --most gap -0.015973180532455444
	 15  --most gap -0.015973180532455444
两轮结果未更新,进行muteted...
	 16  --most gap -0.015973180532455444
	 17  --most gap -0.015973180532455444
	 18  --most gap -0.015973180532455444
两轮结果未更新,进行muteted...
	 19  --most gap -0.015973180532455444
Changing code structure...
sorted_id: [0, 1, 2]
changeCodeStructure SUCCESS!
Processing examples:  92%|█████████▏| 368/400 [3:04:01<13:14, 24.83s/it]01/02/2025 15:31:07 - INFO - __main__ -   测试:368

01/02/2025 15:31:16 - INFO - __main__ -   Success rate: 89.73%

01/02/2025 15:31:16 - INFO - __main__ -   Successful items count: 201

01/02/2025 15:31:16 - INFO - __main__ -   Total count: 224

01/02/2025 15:31:16 - INFO - __main__ -   Index: 368

Number of variable_names extracted:  8
Generating population368...
	 0  --most gap 0.2191062867641449
	 1  --most gap 0.2807672917842865
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 369/400 [3:04:10<10:25, 20.17s/it]01/02/2025 15:31:16 - INFO - __main__ -   测试:369

01/02/2025 15:33:42 - INFO - __main__ -   Success rate: 89.78%

01/02/2025 15:33:42 - INFO - __main__ -   Successful items count: 202

01/02/2025 15:33:42 - INFO - __main__ -   Total count: 225

01/02/2025 15:33:42 - INFO - __main__ -   Index: 369

Number of variable_names extracted:  7
Generating population369...
	 0  --most gap 0.06141404248774052
	 1  --most gap 0.06141404248774052
	 2  --most gap 0.10011244006454945
	 3  --most gap 0.10011244006454945
	 4  --most gap 0.10011244006454945
	 5  --most gap 0.2260718960314989
	 6  --most gap 0.24391859956085682
	 7  --most gap 0.24391859956085682
	 8  --most gap 0.24391859956085682
	 9  --most gap 0.45347473211586475
	 10  --most gap 0.45347473211586475
	 11  --most gap 0.45347473211586475
	 12  --most gap 0.45347473211586475
两轮结果未更新,进行muteted...
	 13  --most gap 0.45347473211586475
	 14  --most gap 0.45347473211586475
	 15  --most gap 0.45347473211586475
两轮结果未更新,进行muteted...
	 16  --most gap 0.45347473211586475
	 17  --most gap 0.45347473211586475
	 18  --most gap 0.45347473211586475
两轮结果未更新,进行muteted...
	 19  --most gap 0.45347473211586475
Changing code structure...
sorted_id: [0, 1, 2, 5, 6, 4, 3, 7, 8]
changeCodeStructure SUCCESS!
Processing examples:  92%|█████████▎| 370/400 [3:06:36<28:18, 56.62s/it]01/02/2025 15:33:42 - INFO - __main__ -   测试:370

01/02/2025 15:33:42 - INFO - __main__ -   Success rate: 89.82%

01/02/2025 15:33:42 - INFO - __main__ -   Successful items count: 203

01/02/2025 15:33:42 - INFO - __main__ -   Total count: 226

01/02/2025 15:33:42 - INFO - __main__ -   Index: 370

01/02/2025 15:33:42 - INFO - __main__ -   测试:371

01/02/2025 15:36:25 - INFO - __main__ -   Success rate: 89.87%

01/02/2025 15:36:25 - INFO - __main__ -   Successful items count: 204

01/02/2025 15:36:25 - INFO - __main__ -   Total count: 227

01/02/2025 15:36:25 - INFO - __main__ -   Index: 371

Number of variable_names extracted:  9
Generating population370...
init SUCCESS!
Number of variable_names extracted:  6
Generating population371...
	 0  --most gap 0.1762288734316826
	 1  --most gap 0.2139025256037712
	 2  --most gap 0.2139025256037712
	 3  --most gap 0.2139025256037712
	 4  --most gap 0.2535623535513878
	 5  --most gap 0.2535623535513878
	 6  --most gap 0.2535623535513878
	 7  --most gap 0.2535623535513878
两轮结果未更新,进行muteted...
	 8  --most gap 0.2535623535513878
	 9  --most gap 0.2535623535513878
	 10  --most gap 0.2535623535513878
两轮结果未更新,进行muteted...
	 11  --most gap 0.2535623535513878
	 12  --most gap 0.2535623535513878
	 13  --most gap 0.2535623535513878
两轮结果未更新,进行muteted...
	 14  --most gap 0.2535623535513878
	 15  --most gap 0.2535623535513878
	 16  --most gap 0.2535623535513878
两轮结果未更新,进行muteted...
	 17  --most gap 0.2535623535513878
	 18  --most gap 0.2535623535513878
	 19  --most gap 0.2535623535513878
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 16, 13, 17, 11, 10, 12, 15, 18]
changeCodeStructure SUCCESS!
Processing examples:  93%|█████████▎| 372/400 [3:09:19<31:44, 68.03s/it]01/02/2025 15:36:25 - INFO - __main__ -   测试:372

01/02/2025 15:38:25 - INFO - __main__ -   Success rate: 89.47%

01/02/2025 15:38:25 - INFO - __main__ -   Successful items count: 204

01/02/2025 15:38:25 - INFO - __main__ -   Total count: 228

01/02/2025 15:38:25 - INFO - __main__ -   Index: 372

Number of variable_names extracted:  3
Generating population372...
	 0  --most gap 0.0228315107524395
	 1  --most gap 0.0228315107524395
	 2  --most gap 0.0228315107524395
两轮结果未更新,进行muteted...
	 3  --most gap 0.0228315107524395
	 4  --most gap 0.0228315107524395
	 5  --most gap 0.0228315107524395
两轮结果未更新,进行muteted...
	 6  --most gap 0.0228315107524395
	 7  --most gap 0.0228315107524395
	 8  --most gap 0.0228315107524395
两轮结果未更新,进行muteted...
	 9  --most gap 0.0228315107524395
	 10  --most gap 0.0228315107524395
	 11  --most gap 0.022831525653600693
	 12  --most gap 0.022831525653600693
	 13  --most gap 0.022831525653600693
	 14  --most gap 0.022831525653600693
两轮结果未更新,进行muteted...
	 15  --most gap 0.022831525653600693
	 16  --most gap 0.022831525653600693
	 17  --most gap 0.022831525653600693
两轮结果未更新,进行muteted...
	 18  --most gap 0.022831525653600693
	 19  --most gap 0.022831525653600693
Changing code structure...
sorted_id: [0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 13, 15, 12, 14, 16]
sorted_id: [0, 1, 2, 3, 5, 4, 6, 7, 8, 13, 9, 15, 14, 12, 10, 16, 11]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 8, 7, 9, 18, 16, 17, 10, 15, 12, 13, 14, 11]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 8, 7, 9, 20, 21, 22, 23, 19, 10, 12, 18, 13, 17, 16, 15, 11, 14]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 10, 12, 13, 14, 11]
sorted_id: [0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 12, 11]
Processing examples:  93%|█████████▎| 373/400 [3:11:19<36:20, 80.75s/it]01/02/2025 15:38:25 - INFO - __main__ -   测试:373

01/02/2025 15:39:12 - INFO - __main__ -   Success rate: 89.08%

01/02/2025 15:39:12 - INFO - __main__ -   Successful items count: 204

01/02/2025 15:39:12 - INFO - __main__ -   Total count: 229

01/02/2025 15:39:12 - INFO - __main__ -   Index: 373

Number of variable_names extracted:  2
Generating population373...
	 0  --most gap 0.005644315853714943
	 1  --most gap 0.005644315853714943
	 2  --most gap 0.005644315853714943
两轮结果未更新,进行muteted...
	 3  --most gap 0.005644315853714943
	 4  --most gap 0.005644315853714943
	 5  --most gap 0.005644315853714943
两轮结果未更新,进行muteted...
	 6  --most gap 0.005644315853714943
	 7  --most gap 0.005644315853714943
	 8  --most gap 0.005644315853714943
两轮结果未更新,进行muteted...
	 9  --most gap 0.005644315853714943
	 10  --most gap 0.005644315853714943
	 11  --most gap 0.005644315853714943
两轮结果未更新,进行muteted...
	 12  --most gap 0.005644315853714943
	 13  --most gap 0.005644315853714943
	 14  --most gap 0.005644315853714943
两轮结果未更新,进行muteted...
	 15  --most gap 0.005644315853714943
	 16  --most gap 0.005644315853714943
	 17  --most gap 0.005644315853714943
两轮结果未更新,进行muteted...
	 18  --most gap 0.005644315853714943
	 19  --most gap 0.005644315853714943
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 11, 12, 13, 14, 9, 10, 20, 17, 18, 19]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 15, 9, 11, 12, 13, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 14, 17, 18, 19]
sorted_id: [0, 1, 2, 3, 4, 5, 6, 7, 15, 16, 11, 12, 14, 13, 8, 9, 20, 17, 10, 18, 19]
Processing examples:  94%|█████████▎| 374/400 [3:12:06<31:08, 71.85s/it]01/02/2025 15:39:12 - INFO - __main__ -   测试:374

01/02/2025 15:39:12 - INFO - __main__ -   Success rate: 89.13%

01/02/2025 15:39:12 - INFO - __main__ -   Successful items count: 205

01/02/2025 15:39:12 - INFO - __main__ -   Total count: 230

01/02/2025 15:39:12 - INFO - __main__ -   Index: 374

01/02/2025 15:39:12 - INFO - __main__ -   测试:375

01/02/2025 15:39:12 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  5
Generating population374...
init SUCCESS!
The original code is misclassified.
Processing examples:  94%|█████████▍| 376/400 [3:12:06<16:31, 41.33s/it]01/02/2025 15:39:12 - INFO - __main__ -   测试:376

01/02/2025 15:40:09 - INFO - __main__ -   Success rate: 89.18%

01/02/2025 15:40:09 - INFO - __main__ -   Successful items count: 206

01/02/2025 15:40:09 - INFO - __main__ -   Total count: 231

01/02/2025 15:40:09 - INFO - __main__ -   Index: 376

Number of variable_names extracted:  9
Generating population376...
	 0  --most gap 0.2674054
	 1  --most gap 0.32118046
	 2  --most gap 0.39904958
	 3  --most gap 0.40905124
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  94%|█████████▍| 377/400 [3:13:03<17:15, 45.01s/it]01/02/2025 15:40:09 - INFO - __main__ -   测试:377

01/02/2025 15:41:21 - INFO - __main__ -   Success rate: 89.22%

01/02/2025 15:41:21 - INFO - __main__ -   Successful items count: 207

01/02/2025 15:41:21 - INFO - __main__ -   Total count: 232

01/02/2025 15:41:21 - INFO - __main__ -   Index: 377

Number of variable_names extracted:  3
Generating population377...
	 0  --most gap 0.0011710203252732754
	 1  --most gap 0.0028741215355694294
	 2  --most gap 0.0028741215355694294
	 3  --most gap 0.0028741215355694294
	 4  --most gap 0.0028741215355694294
两轮结果未更新,进行muteted...
	 5  --most gap 0.0028741215355694294
	 6  --most gap 0.0028741215355694294
	 7  --most gap 0.0028741215355694294
两轮结果未更新,进行muteted...
	 8  --most gap 0.004461399745196104
	 9  --most gap 0.004461399745196104
	 10  --most gap 0.004461399745196104
	 11  --most gap 0.004461399745196104
两轮结果未更新,进行muteted...
	 12  --most gap 0.004461399745196104
	 13  --most gap 0.004461399745196104
	 14  --most gap 0.004461399745196104
两轮结果未更新,进行muteted...
	 15  --most gap 0.004461399745196104
	 16  --most gap 0.004461399745196104
	 17  --most gap 0.004461399745196104
两轮结果未更新,进行muteted...
	 18  --most gap 0.004461399745196104
	 19  --most gap 0.004461399745196104
Changing code structure...
sorted_id: [0]
changeCodeStructure SUCCESS!
Processing examples:  94%|█████████▍| 378/400 [3:14:15<18:56, 51.66s/it]01/02/2025 15:41:21 - INFO - __main__ -   测试:378

01/02/2025 15:42:31 - INFO - __main__ -   Success rate: 89.27%

01/02/2025 15:42:31 - INFO - __main__ -   Successful items count: 208

01/02/2025 15:42:31 - INFO - __main__ -   Total count: 233

01/02/2025 15:42:31 - INFO - __main__ -   Index: 378

Number of variable_names extracted:  6
Generating population378...
	 0  --most gap -0.027133837342262268
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.008601326495409012
	 4  --most gap 0.008601326495409012
	 5  --most gap 0.13147645816206932
	 6  --most gap 0.13147645816206932
	 7  --most gap 0.13147645816206932
	 8  --most gap 0.16530511900782585
	 9  --most gap 0.16530511900782585
	 10  --most gap 0.16530511900782585
	 11  --most gap 0.16530511900782585
两轮结果未更新,进行muteted...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  95%|█████████▍| 379/400 [3:15:25<19:50, 56.68s/it]01/02/2025 15:42:31 - INFO - __main__ -   测试:379

01/02/2025 15:42:39 - INFO - __main__ -   Success rate: 89.32%

01/02/2025 15:42:39 - INFO - __main__ -   Successful items count: 209

01/02/2025 15:42:39 - INFO - __main__ -   Total count: 234

01/02/2025 15:42:39 - INFO - __main__ -   Index: 379

Number of variable_names extracted:  2
Generating population379...
	 0  --most gap 0.070805624127388
	 1  --most gap 0.070805624127388
	 2  --most gap 0.070805624127388
	 3  --most gap 0.070805624127388
两轮结果未更新,进行muteted...
	 4  --most gap 0.070805624127388
	 5  --most gap 0.070805624127388
	 6  --most gap 0.070805624127388
两轮结果未更新,进行muteted...
	 7  --most gap 0.070805624127388
	 8  --most gap 0.070805624127388
	 9  --most gap 0.070805624127388
两轮结果未更新,进行muteted...
	 10  --most gap 0.070805624127388
	 11  --most gap 0.070805624127388
	 12  --most gap 0.070805624127388
两轮结果未更新,进行muteted...
	 13  --most gap 0.070805624127388
	 14  --most gap 0.070805624127388
	 15  --most gap 0.070805624127388
两轮结果未更新,进行muteted...
	 16  --most gap 0.070805624127388
	 17  --most gap 0.070805624127388
	 18  --most gap 0.070805624127388
两轮结果未更新,进行muteted...
	 19  --most gap 0.070805624127388
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  95%|█████████▌| 380/400 [3:15:33<14:26, 43.33s/it]01/02/2025 15:42:39 - INFO - __main__ -   测试:380

01/02/2025 15:42:41 - INFO - __main__ -   Success rate: 89.36%

01/02/2025 15:42:41 - INFO - __main__ -   Successful items count: 210

01/02/2025 15:42:41 - INFO - __main__ -   Total count: 235

01/02/2025 15:42:41 - INFO - __main__ -   Index: 380

Number of variable_names extracted:  8
Generating population380...
	 0  --most gap 0.3876716159284115
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  95%|█████████▌| 381/400 [3:15:34<09:59, 31.56s/it]01/02/2025 15:42:41 - INFO - __main__ -   测试:381

01/02/2025 15:42:59 - INFO - __main__ -   Success rate: 89.41%

01/02/2025 15:42:59 - INFO - __main__ -   Successful items count: 211

01/02/2025 15:42:59 - INFO - __main__ -   Total count: 236

01/02/2025 15:42:59 - INFO - __main__ -   Index: 381

Number of variable_names extracted:  2
Generating population381...
	 0  --most gap -0.08252527192234993
	 1  --most gap -0.08252527192234993
	 2  --most gap -0.08252527192234993
两轮结果未更新,进行muteted...
	 3  --most gap -0.08252527192234993
	 4  --most gap -0.08252527192234993
	 5  --most gap -0.08252527192234993
两轮结果未更新,进行muteted...
	 6  --most gap -0.08252527192234993
	 7  --most gap -0.08252527192234993
	 8  --most gap -0.08252527192234993
两轮结果未更新,进行muteted...
	 9  --most gap -0.08252527192234993
	 10  --most gap -0.08252527192234993
	 11  --most gap -0.08252527192234993
两轮结果未更新,进行muteted...
	 12  --most gap -0.08252527192234993
	 13  --most gap -0.08252527192234993
	 14  --most gap -0.08252527192234993
两轮结果未更新,进行muteted...
	 15  --most gap -0.08252527192234993
	 16  --most gap -0.08252527192234993
	 17  --most gap -0.08252527192234993
两轮结果未更新,进行muteted...
	 18  --most gap -0.08252527192234993
	 19  --most gap -0.08252527192234993
Changing code structure...
sorted_id: [0, 1, 2, 4, 3, 6, 5]
changeCodeStructure SUCCESS!
Processing examples:  96%|█████████▌| 382/400 [3:15:53<08:22, 27.91s/it]01/02/2025 15:42:59 - INFO - __main__ -   测试:382

01/02/2025 15:42:59 - INFO - __main__ -   Attack failed!

01/02/2025 15:42:59 - INFO - __main__ -   测试:383

01/02/2025 15:42:59 - INFO - __main__ -   Attack failed!

01/02/2025 15:42:59 - INFO - __main__ -   测试:384

01/02/2025 15:42:59 - INFO - __main__ -   Attack failed!

01/02/2025 15:42:59 - INFO - __main__ -   测试:385

01/02/2025 15:42:59 - INFO - __main__ -   Attack failed!

01/02/2025 15:42:59 - INFO - __main__ -   测试:386

01/02/2025 15:42:59 - INFO - __main__ -   Attack failed!

01/02/2025 15:42:59 - INFO - __main__ -   测试:387

01/02/2025 15:42:59 - INFO - __main__ -   Attack failed!

01/02/2025 15:42:59 - INFO - __main__ -   测试:388

01/02/2025 15:42:59 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  97%|█████████▋| 389/400 [3:15:53<01:19,  7.24s/it]01/02/2025 15:42:59 - INFO - __main__ -   测试:389

01/02/2025 15:42:59 - INFO - __main__ -   Attack failed!

01/02/2025 15:42:59 - INFO - __main__ -   测试:390

The original code is misclassified.
Number of variable_names extracted:  9
Generating population390...
	 0  --most gap 0.115561485
	 1  --most gap 0.11712986
	 2  --most gap 0.11712986
Processing examples:  97%|█████████▋| 389/400 [3:16:12<01:19,  7.24s/it]01/02/2025 15:43:52 - INFO - __main__ -   Success rate: 89.45%

01/02/2025 15:43:52 - INFO - __main__ -   Successful items count: 212

01/02/2025 15:43:52 - INFO - __main__ -   Total count: 237

01/02/2025 15:43:52 - INFO - __main__ -   Index: 390

	 3  --most gap 0.24048036
	 4  --most gap 0.34762126
	 5  --most gap 0.35858417
	 6  --most gap 0.35858417
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  98%|█████████▊| 391/400 [3:16:46<01:44, 11.62s/it]01/02/2025 15:43:52 - INFO - __main__ -   测试:391

01/02/2025 15:43:52 - INFO - __main__ -   Attack failed!

01/02/2025 15:43:52 - INFO - __main__ -   测试:392

01/02/2025 15:46:12 - INFO - __main__ -   Success rate: 89.50%

01/02/2025 15:46:12 - INFO - __main__ -   Successful items count: 213

01/02/2025 15:46:12 - INFO - __main__ -   Total count: 238

01/02/2025 15:46:12 - INFO - __main__ -   Index: 392

The original code is misclassified.
Number of variable_names extracted:  6
Generating population392...
	 0  --most gap 0.0049223448149859905
	 1  --most gap 0.007806839887052774
	 2  --most gap 0.009365790989249945
	 3  --most gap 0.009365790989249945
	 4  --most gap 0.009365790989249945
	 5  --most gap 0.009365790989249945
两轮结果未更新,进行muteted...
	 6  --most gap 0.009365790989249945
	 7  --most gap 0.011865419801324606
	 8  --most gap 0.2142792078666389
	 9  --most gap 0.2142792078666389
	 10  --most gap 0.2142792078666389
	 11  --most gap 0.2142792078666389
两轮结果未更新,进行muteted...
	 12  --most gap 0.2142792078666389
	 13  --most gap 0.2142792078666389
	 14  --most gap 0.2142792078666389
两轮结果未更新,进行muteted...
	 15  --most gap 0.2142792078666389
	 16  --most gap 0.2142792078666389
	 17  --most gap 0.2142792078666389
两轮结果未更新,进行muteted...
	 18  --most gap 0.22512807277962565
	 19  --most gap 0.22512807277962565
Changing code structure...
sorted_id: [0, 1, 2, 3, 4, 10, 9, 6, 5, 8, 7]
sorted_id: [0, 1, 2, 3, 4, 11, 10, 12, 9, 6, 5, 15, 13, 14, 8, 7]
changeCodeStructure SUCCESS!
Processing examples:  98%|█████████▊| 393/400 [3:19:06<03:03, 26.26s/it]01/02/2025 15:46:12 - INFO - __main__ -   测试:393

01/02/2025 15:53:38 - INFO - __main__ -   Success rate: 89.12%

01/02/2025 15:53:38 - INFO - __main__ -   Successful items count: 213

01/02/2025 15:53:38 - INFO - __main__ -   Total count: 239

01/02/2025 15:53:38 - INFO - __main__ -   Index: 393

Number of variable_names extracted:  19
Generating population393...
	 0  --most gap -0.12304586
	 1  --most gap 0.0
	 2  --most gap 0.0
	 3  --most gap 0.0
	 4  --most gap 0.0
两轮结果未更新,进行muteted...
	 5  --most gap 0.0
	 6  --most gap 0.0
	 7  --most gap 0.0
两轮结果未更新,进行muteted...
	 8  --most gap 0.0
	 9  --most gap 0.0
	 10  --most gap 0.0
两轮结果未更新,进行muteted...
	 11  --most gap 0.0
	 12  --most gap 0.0
	 13  --most gap 0.0
两轮结果未更新,进行muteted...
	 14  --most gap 0.0
	 15  --most gap 0.0
	 16  --most gap 0.0
两轮结果未更新,进行muteted...
	 17  --most gap 0.0
	 18  --most gap 0.0
	 19  --most gap 0.0
两轮结果未更新,进行muteted...
Changing code structure...
sorted_id: [0, 1, 27, 2, 28, 4, 3, 31, 29, 5, 30, 25, 34, 33, 32, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 23, 6, 7, 24, 8, 21, 9, 22, 10, 18, 19, 17, 20, 11, 15, 12, 16, 13, 14]
sorted_id: [0, 1, 27, 2, 28, 4, 3, 31, 29, 5, 30, 25, 34, 33, 32, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 23, 6, 7, 24, 8, 21, 9, 22, 10, 18, 19, 17, 20, 11, 15, 12, 16, 13, 14]
sorted_id: [0, 1, 27, 2, 28, 4, 3, 31, 29, 5, 30, 25, 34, 33, 32, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 23, 6, 7, 24, 8, 21, 9, 22, 10, 18, 19, 17, 20, 11, 15, 12, 16, 13, 14]
sorted_id: [0, 1, 27, 2, 28, 4, 3, 31, 29, 5, 30, 25, 34, 33, 32, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 23, 6, 7, 24, 8, 21, 9, 22, 10, 18, 19, 17, 20, 11, 15, 12, 16, 13, 14]
sorted_id: [0, 1, 27, 2, 28, 4, 3, 31, 29, 5, 30, 25, 34, 33, 32, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 23, 6, 7, 24, 8, 21, 9, 22, 10, 18, 19, 17, 20, 11, 15, 12, 16, 13, 14]
sorted_id: [0, 1, 27, 2, 28, 4, 3, 31, 29, 5, 30, 25, 34, 33, 32, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 23, 6, 7, 24, 8, 21, 9, 22, 10, 18, 19, 17, 20, 11, 15, 12, 16, 13, 14]
Processing examples:  98%|█████████▊| 394/400 [3:26:32<08:57, 89.55s/it]01/02/2025 15:53:38 - INFO - __main__ -   测试:394

01/02/2025 15:53:38 - INFO - __main__ -   Success rate: 89.17%

01/02/2025 15:53:38 - INFO - __main__ -   Successful items count: 214

01/02/2025 15:53:38 - INFO - __main__ -   Total count: 240

01/02/2025 15:53:38 - INFO - __main__ -   Index: 394

Number of variable_names extracted:  20
Generating population394...
init SUCCESS!
Processing examples:  99%|█████████▉| 395/400 [3:26:32<06:08, 73.69s/it]01/02/2025 15:53:38 - INFO - __main__ -   测试:395

01/02/2025 15:53:38 - INFO - __main__ -   Success rate: 89.21%

01/02/2025 15:53:38 - INFO - __main__ -   Successful items count: 215

01/02/2025 15:53:38 - INFO - __main__ -   Total count: 241

01/02/2025 15:53:38 - INFO - __main__ -   Index: 395

01/02/2025 15:53:38 - INFO - __main__ -   测试:396

Number of variable_names extracted:  31
Generating population395...
init SUCCESS!
Number of variable_names extracted:  9
Generating population396...
	 0  --most gap 0.14238936
	 1  --most gap 0.15073061
Processing examples:  99%|█████████▉| 395/400 [3:26:43<06:08, 73.69s/it]01/02/2025 15:56:42 - INFO - __main__ -   Success rate: 89.26%

01/02/2025 15:56:42 - INFO - __main__ -   Successful items count: 216

01/02/2025 15:56:42 - INFO - __main__ -   Total count: 242

01/02/2025 15:56:42 - INFO - __main__ -   Index: 396

	 2  --most gap 0.15073061
	 3  --most gap 0.15073061
	 4  --most gap 0.15073061
两轮结果未更新,进行muteted...
	 5  --most gap 0.17093366
	 6  --most gap 0.17093366
	 7  --most gap 0.27876115
	 8  --most gap 0.27876115
	 9  --most gap 0.27876115
	 10  --most gap 0.27876115
两轮结果未更新,进行muteted...
	 11  --most gap 0.27876115
	 12  --most gap 0.27876115
	 13  --most gap 0.27876115
两轮结果未更新,进行muteted...
	 14  --most gap 0.27876115
	 15  --most gap 0.27876115
	 16  --most gap 0.27876115
两轮结果未更新,进行muteted...
	 17  --most gap 0.27876115
	 18  --most gap 0.27876115
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  99%|█████████▉| 397/400 [3:29:35<03:59, 79.79s/it]01/02/2025 15:56:42 - INFO - __main__ -   测试:397

01/02/2025 15:57:10 - INFO - __main__ -   Success rate: 89.30%

01/02/2025 15:57:10 - INFO - __main__ -   Successful items count: 217

01/02/2025 15:57:10 - INFO - __main__ -   Total count: 243

01/02/2025 15:57:10 - INFO - __main__ -   Index: 397

Number of variable_names extracted:  7
Generating population397...
	 0  --most gap 0.35464174
	 1  --most gap 0.3546424
	 2  --most gap 0.3546424
	 3  --most gap 0.3546424
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples: 100%|█████████▉| 398/400 [3:30:04<02:19, 69.83s/it]01/02/2025 15:57:10 - INFO - __main__ -   测试:398

01/02/2025 15:57:10 - INFO - __main__ -   Attack failed!

01/02/2025 15:57:10 - INFO - __main__ -   测试:399

01/02/2025 15:57:10 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples: 100%|██████████| 400/400 [3:30:04<00:00, 31.51s/it]
ALL examples time cost:  210.07 min
