Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at microsoft/codebert-base-mlm and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/run.py:112: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/test.py:105: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).

 cached_features_file:  ../dataset/codebert_cached_test_subs_0_400
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]12/24/2024 22:15:26 - INFO - __main__ -   测试:141

12/24/2024 22:15:42 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 22:15:42 - INFO - __main__ -   Successful items count: 1

12/24/2024 22:15:42 - INFO - __main__ -   Total count: 1

12/24/2024 22:15:42 - INFO - __main__ -   Index: 141

Number of variable_names extracted:  7
Generating population141...
	 0  --gap prob  0.09091711
	 1  --gap prob  0.36345547
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  36%|███▌      | 142/400 [00:16<00:29,  8.68it/s]12/24/2024 22:15:42 - INFO - __main__ -   测试:142

12/24/2024 22:15:42 - INFO - __main__ -   Attack failed!

12/24/2024 22:15:42 - INFO - __main__ -   测试:143

12/24/2024 22:21:22 - INFO - __main__ -   Success rate: 50.00%

12/24/2024 22:21:22 - INFO - __main__ -   Successful items count: 1

12/24/2024 22:21:22 - INFO - __main__ -   Total count: 2

12/24/2024 22:21:22 - INFO - __main__ -   Index: 143

The original code is misclassified.
Number of variable_names extracted:  4
Generating population143...
	 0  --gap prob  0.0018391702324151993
	 1  --gap prob  0.005412507802248001
	 2  --gap prob  0.005412507802248001
	 3  --gap prob  0.008879763074219227
	 4  --gap prob  0.008879763074219227
	 5  --gap prob  0.008879763074219227
	 6  --gap prob  0.009658333845436573
	 7  --gap prob  0.009658333845436573
	 8  --gap prob  0.009658333845436573
	 9  --gap prob  0.009658333845436573
	 10  --gap prob  0.006512229330837727
	 11  --gap prob  0.006512229330837727
	 12  --gap prob  0.006512229330837727
	 13  --gap prob  0.006512229330837727
	 14  --gap prob  0.004733683541417122
	 15  --gap prob  0.004733683541417122
	 16  --gap prob  0.004733683541417122
	 17  --gap prob  0.004733683541417122
	 18  --gap prob  0.006033218465745449
	 19  --gap prob  0.006033218465745449
Changing code structure...
Processing examples:  36%|███▌      | 144/400 [05:55<14:46,  3.46s/it]12/24/2024 22:21:22 - INFO - __main__ -   测试:144

12/24/2024 22:21:22 - INFO - __main__ -   Attack failed!

12/24/2024 22:21:22 - INFO - __main__ -   测试:145

12/24/2024 22:21:22 - INFO - __main__ -   Attack failed!

12/24/2024 22:21:22 - INFO - __main__ -   测试:146

12/24/2024 22:21:22 - INFO - __main__ -   Success rate: 66.67%

12/24/2024 22:21:22 - INFO - __main__ -   Successful items count: 2

12/24/2024 22:21:22 - INFO - __main__ -   Total count: 3

12/24/2024 22:21:22 - INFO - __main__ -   Index: 146

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population146...
init SUCCESS!
Processing examples:  37%|███▋      | 147/400 [05:56<14:00,  3.32s/it]12/24/2024 22:21:22 - INFO - __main__ -   测试:147

Number of variable_names extracted:  1
Generating population147...
	 0  --gap prob  -0.014976587146520615
Processing examples:  37%|███▋      | 147/400 [06:10<14:00,  3.32s/it]12/24/2024 22:28:30 - INFO - __main__ -   Success rate: 50.00%

12/24/2024 22:28:30 - INFO - __main__ -   Successful items count: 2

12/24/2024 22:28:30 - INFO - __main__ -   Total count: 4

12/24/2024 22:28:30 - INFO - __main__ -   Index: 147

	 1  --gap prob  -0.014976587146520615
	 2  --gap prob  -0.014976587146520615
	 3  --gap prob  -0.014976587146520615
	 4  --gap prob  0.1485285833477974
	 5  --gap prob  0.1485285833477974
	 6  --gap prob  0.1485285833477974
	 7  --gap prob  0.1485285833477974
	 8  --gap prob  0.04192689061164856
	 9  --gap prob  0.04192689061164856
	 10  --gap prob  0.04192689061164856
	 11  --gap prob  0.04192689061164856
	 12  --gap prob  0.057563938200473785
	 13  --gap prob  0.057563938200473785
	 14  --gap prob  0.057563938200473785
	 15  --gap prob  0.057563938200473785
	 16  --gap prob  0.0552942231297493
	 17  --gap prob  0.0552942231297493
	 18  --gap prob  0.0552942231297493
	 19  --gap prob  0.0552942231297493
Changing code structure...
Processing examples:  37%|███▋      | 148/400 [13:04<47:48, 11.38s/it]12/24/2024 22:28:31 - INFO - __main__ -   测试:148

12/24/2024 22:31:41 - INFO - __main__ -   Success rate: 60.00%

12/24/2024 22:31:41 - INFO - __main__ -   Successful items count: 3

12/24/2024 22:31:41 - INFO - __main__ -   Total count: 5

12/24/2024 22:31:41 - INFO - __main__ -   Index: 148

Number of variable_names extracted:  1
Generating population148...
	 0  --gap prob  0.06787913292646408
	 1  --gap prob  0.06787913292646408
	 2  --gap prob  0.06787913292646408
	 3  --gap prob  0.06787913292646408
	 4  --gap prob  0.24090389162302017
	 5  --gap prob  0.24090389162302017
	 6  --gap prob  0.24090389162302017
	 7  --gap prob  0.24090389162302017
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  37%|███▋      | 149/400 [16:15<1:07:23, 16.11s/it]12/24/2024 22:31:41 - INFO - __main__ -   测试:149

12/24/2024 22:31:41 - INFO - __main__ -   Attack failed!

12/24/2024 22:31:41 - INFO - __main__ -   测试:150

12/24/2024 22:38:56 - INFO - __main__ -   Success rate: 50.00%

12/24/2024 22:38:56 - INFO - __main__ -   Successful items count: 3

12/24/2024 22:38:56 - INFO - __main__ -   Total count: 6

12/24/2024 22:38:56 - INFO - __main__ -   Index: 150

The original code is misclassified.
Number of variable_names extracted:  1
Generating population150...
	 0  --gap prob  -0.0033249910920858383
	 1  --gap prob  -0.0033249910920858383
	 2  --gap prob  -0.0033249910920858383
	 3  --gap prob  -0.0033249910920858383
	 4  --gap prob  -0.0033249910920858383
	 5  --gap prob  -0.0033249910920858383
	 6  --gap prob  -0.0033249910920858383
	 7  --gap prob  -0.0033249910920858383
	 8  --gap prob  -0.0033249910920858383
	 9  --gap prob  -0.0033249910920858383
	 10  --gap prob  -0.0003046877682209015
	 11  --gap prob  -0.0003046877682209015
	 12  --gap prob  -0.0003046877682209015
	 13  --gap prob  -0.0003046877682209015
	 14  --gap prob  -0.0033249910920858383
	 15  --gap prob  -0.0033249910920858383
	 16  --gap prob  -0.0033249910920858383
	 17  --gap prob  -0.0033249910920858383
	 18  --gap prob  0.001200227066874504
	 19  --gap prob  0.001200227066874504
Changing code structure...
Processing examples:  38%|███▊      | 151/400 [23:30<2:05:20, 30.20s/it]12/24/2024 22:38:56 - INFO - __main__ -   测试:151

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 22:40:28 - INFO - __main__ -   Success rate: 57.14%

12/24/2024 22:40:28 - INFO - __main__ -   Successful items count: 4

12/24/2024 22:40:28 - INFO - __main__ -   Total count: 7

12/24/2024 22:40:28 - INFO - __main__ -   Index: 151

Number of variable_names extracted:  21
Generating population151...
	 0  --gap prob  -0.09649431705474854
	 1  --gap prob  -0.09649431705474854
	 2  --gap prob  -0.09649431705474854
	 3  --gap prob  -0.09649431705474854
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  38%|███▊      | 152/400 [25:02<2:17:01, 33.15s/it]12/24/2024 22:40:28 - INFO - __main__ -   测试:152

12/24/2024 22:40:28 - INFO - __main__ -   Attack failed!

12/24/2024 22:40:28 - INFO - __main__ -   测试:153

12/24/2024 22:40:28 - INFO - __main__ -   Attack failed!

12/24/2024 22:40:28 - INFO - __main__ -   测试:154

12/24/2024 22:46:47 - INFO - __main__ -   Success rate: 62.50%

12/24/2024 22:46:47 - INFO - __main__ -   Successful items count: 5

12/24/2024 22:46:47 - INFO - __main__ -   Total count: 8

12/24/2024 22:46:47 - INFO - __main__ -   Index: 154

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population154...
	 0  --gap prob  -0.002358604222536087
	 1  --gap prob  0.0004275422543287277
	 2  --gap prob  0.0004275422543287277
	 3  --gap prob  0.0010269004851579666
	 4  --gap prob  0.0010269004851579666
	 5  --gap prob  0.0010269004851579666
	 6  --gap prob  0.0004275422543287277
	 7  --gap prob  0.0004275422543287277
	 8  --gap prob  0.0004275422543287277
	 9  --gap prob  0.0004275422543287277
	 10  --gap prob  0.00023038778454065323
	 11  --gap prob  0.00023038778454065323
	 12  --gap prob  0.001337418332695961
	 13  --gap prob  0.001337418332695961
	 14  --gap prob  0.0040743472054600716
	 15  --gap prob  0.0040743472054600716
	 16  --gap prob  0.03995772823691368
	 17  --gap prob  0.03995772823691368
	 18  --gap prob  0.03995772823691368
	 19  --gap prob  0.03995772823691368
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  39%|███▉      | 155/400 [31:21<3:19:49, 48.94s/it]12/24/2024 22:46:47 - INFO - __main__ -   测试:155

12/24/2024 22:54:21 - INFO - __main__ -   Success rate: 66.67%

12/24/2024 22:54:21 - INFO - __main__ -   Successful items count: 6

12/24/2024 22:54:21 - INFO - __main__ -   Total count: 9

12/24/2024 22:54:21 - INFO - __main__ -   Index: 155

Number of variable_names extracted:  6
Generating population155...
	 0  --gap prob  -0.04736611619591713
	 1  --gap prob  -0.04736611619591713
	 2  --gap prob  -0.04736611619591713
	 3  --gap prob  -0.04736611619591713
	 4  --gap prob  -0.013608299195766449
	 5  --gap prob  -0.013608299195766449
	 6  --gap prob  -0.013608299195766449
	 7  --gap prob  -0.013608299195766449
	 8  --gap prob  -0.016599632799625397
	 9  --gap prob  -0.016599632799625397
	 10  --gap prob  -0.016599632799625397
	 11  --gap prob  -0.016599632799625397
	 12  --gap prob  -0.047977447509765625
	 13  --gap prob  -0.047977447509765625
	 14  --gap prob  -0.047977447509765625
	 15  --gap prob  -0.047977447509765625
	 16  --gap prob  -0.012571632862091064
	 17  --gap prob  -0.012571632862091064
	 18  --gap prob  -0.012571632862091064
	 19  --gap prob  -0.012571632862091064
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  39%|███▉      | 156/400 [38:55<5:22:04, 79.20s/it]12/24/2024 22:54:21 - INFO - __main__ -   测试:156

12/24/2024 22:54:21 - INFO - __main__ -   Attack failed!

12/24/2024 22:54:21 - INFO - __main__ -   测试:157

12/24/2024 22:54:21 - INFO - __main__ -   Success rate: 70.00%

12/24/2024 22:54:21 - INFO - __main__ -   Successful items count: 7

12/24/2024 22:54:21 - INFO - __main__ -   Total count: 10

12/24/2024 22:54:21 - INFO - __main__ -   Index: 157

The original code is misclassified.
Number of variable_names extracted:  2
Generating population157...
init SUCCESS!
Processing examples:  40%|███▉      | 158/400 [38:55<4:23:17, 65.28s/it]12/24/2024 22:54:21 - INFO - __main__ -   测试:158

12/24/2024 22:54:21 - INFO - __main__ -   Attack failed!

12/24/2024 22:54:21 - INFO - __main__ -   测试:159

12/24/2024 22:54:23 - INFO - __main__ -   Success rate: 72.73%

12/24/2024 22:54:23 - INFO - __main__ -   Successful items count: 8

12/24/2024 22:54:23 - INFO - __main__ -   Total count: 11

12/24/2024 22:54:23 - INFO - __main__ -   Index: 159

The original code is misclassified.
Number of variable_names extracted:  4
Generating population159...
	 0  --gap prob  0.038993
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  40%|████      | 160/400 [38:57<3:29:20, 52.34s/it]12/24/2024 22:54:23 - INFO - __main__ -   测试:160

12/24/2024 22:54:23 - INFO - __main__ -   Attack failed!

12/24/2024 22:54:23 - INFO - __main__ -   测试:161

The original code is misclassified.
Number of variable_names extracted:  3
Generating population161...
	 0  --gap prob  -0.01047254353761673
	 1  --gap prob  -0.01047254353761673
Processing examples:  40%|████      | 160/400 [39:10<3:29:20, 52.34s/it]12/24/2024 22:58:55 - INFO - __main__ -   Success rate: 75.00%

12/24/2024 22:58:55 - INFO - __main__ -   Successful items count: 9

12/24/2024 22:58:55 - INFO - __main__ -   Total count: 12

12/24/2024 22:58:55 - INFO - __main__ -   Index: 161

	 2  --gap prob  -0.01047254353761673
	 3  --gap prob  -0.01047254353761673
	 4  --gap prob  -0.008903482928872108
	 5  --gap prob  -0.008903482928872108
	 6  --gap prob  -0.008903482928872108
	 7  --gap prob  -0.008903482928872108
	 8  --gap prob  0.02632119506597519
	 9  --gap prob  0.02632119506597519
	 10  --gap prob  0.02632119506597519
	 11  --gap prob  0.02632119506597519
	 12  --gap prob  0.0062942467629909515
	 13  --gap prob  0.0062942467629909515
	 14  --gap prob  0.0062942467629909515
	 15  --gap prob  0.0062942467629909515
	 16  --gap prob  0.0064260512590408325
	 17  --gap prob  0.0064260512590408325
	 18  --gap prob  0.0064260512590408325
	 19  --gap prob  0.0064260512590408325
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  40%|████      | 162/400 [43:29<4:41:49, 71.05s/it]12/24/2024 22:58:55 - INFO - __main__ -   测试:162

12/24/2024 22:58:55 - INFO - __main__ -   Attack failed!

12/24/2024 22:58:55 - INFO - __main__ -   测试:163

12/24/2024 22:58:56 - INFO - __main__ -   Success rate: 76.92%

12/24/2024 22:58:56 - INFO - __main__ -   Successful items count: 10

12/24/2024 22:58:56 - INFO - __main__ -   Total count: 13

12/24/2024 22:58:56 - INFO - __main__ -   Index: 163

The original code is misclassified.
Number of variable_names extracted:  4
Generating population163...
init SUCCESS!
Processing examples:  41%|████      | 164/400 [43:29<3:32:00, 53.90s/it]12/24/2024 22:58:56 - INFO - __main__ -   测试:164

12/24/2024 22:58:56 - INFO - __main__ -   Attack failed!

12/24/2024 22:58:56 - INFO - __main__ -   测试:165

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 22:58:56 - INFO - __main__ -   Success rate: 78.57%

12/24/2024 22:58:56 - INFO - __main__ -   Successful items count: 11

12/24/2024 22:58:56 - INFO - __main__ -   Total count: 14

12/24/2024 22:58:56 - INFO - __main__ -   Index: 165

The original code is misclassified.
Number of variable_names extracted:  16
Generating population165...
init SUCCESS!
Processing examples:  42%|████▏     | 166/400 [43:30<2:36:28, 40.12s/it]12/24/2024 22:58:56 - INFO - __main__ -   测试:166

12/24/2024 22:58:56 - INFO - __main__ -   Success rate: 80.00%

12/24/2024 22:58:56 - INFO - __main__ -   Successful items count: 12

12/24/2024 22:58:56 - INFO - __main__ -   Total count: 15

12/24/2024 22:58:56 - INFO - __main__ -   Index: 166

12/24/2024 22:58:56 - INFO - __main__ -   测试:167

12/24/2024 22:58:56 - INFO - __main__ -   Attack failed!

12/24/2024 22:58:56 - INFO - __main__ -   测试:168

12/24/2024 22:58:56 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  2
Generating population166...
init SUCCESS!
The original code is misclassified.
The original code is misclassified.
Processing examples:  42%|████▏     | 169/400 [43:30<1:39:44, 25.91s/it]12/24/2024 22:58:56 - INFO - __main__ -   测试:169

Number of variable_names extracted:  9
Generating population169...
	 0  --gap prob  0.0798645
Processing examples:  42%|████▏     | 169/400 [43:40<1:39:44, 25.91s/it]12/24/2024 23:03:40 - INFO - __main__ -   Success rate: 81.25%

12/24/2024 23:03:40 - INFO - __main__ -   Successful items count: 13

12/24/2024 23:03:40 - INFO - __main__ -   Total count: 16

12/24/2024 23:03:40 - INFO - __main__ -   Index: 169

	 1  --gap prob  0.124184966
	 2  --gap prob  0.14053494
	 3  --gap prob  0.18686968
	 4  --gap prob  0.18686968
	 5  --gap prob  0.20416969
	 6  --gap prob  0.2208879
	 7  --gap prob  0.32685524
	 8  --gap prob  0.32685524
	 9  --gap prob  0.32685524
	 10  --gap prob  0.28975165
	 11  --gap prob  0.28975165
	 12  --gap prob  0.28975165
	 13  --gap prob  0.28975165
	 14  --gap prob  0.27661604
	 15  --gap prob  0.28016275
	 16  --gap prob  0.30293894
	 17  --gap prob  0.30293894
	 18  --gap prob  0.30293894
	 19  --gap prob  0.30293894
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  42%|████▎     | 170/400 [48:14<4:02:09, 63.17s/it]12/24/2024 23:03:40 - INFO - __main__ -   测试:170

12/24/2024 23:09:24 - INFO - __main__ -   Success rate: 76.47%

12/24/2024 23:09:24 - INFO - __main__ -   Successful items count: 13

12/24/2024 23:09:24 - INFO - __main__ -   Total count: 17

12/24/2024 23:09:24 - INFO - __main__ -   Index: 170

Number of variable_names extracted:  3
Generating population170...
	 0  --gap prob  0.0287538543343544
	 1  --gap prob  0.07922826334834099
	 2  --gap prob  0.11433367803692818
	 3  --gap prob  0.11433367803692818
	 4  --gap prob  0.11433367803692818
	 5  --gap prob  0.11433367803692818
	 6  --gap prob  0.07943572476506233
	 7  --gap prob  0.07943572476506233
	 8  --gap prob  0.07943572476506233
	 9  --gap prob  0.07943572476506233
	 10  --gap prob  0.07772809639573097
	 11  --gap prob  0.07772809639573097
	 12  --gap prob  0.07772809639573097
	 13  --gap prob  0.07772809639573097
	 14  --gap prob  0.14979757741093636
	 15  --gap prob  0.14979757741093636
	 16  --gap prob  0.14979757741093636
	 17  --gap prob  0.14979757741093636
	 18  --gap prob  0.3372759260237217
	 19  --gap prob  0.3372759260237217
Changing code structure...
Processing examples:  43%|████▎     | 171/400 [53:58<7:04:46, 111.29s/it]12/24/2024 23:09:24 - INFO - __main__ -   测试:171

12/24/2024 23:15:08 - INFO - __main__ -   Success rate: 72.22%

12/24/2024 23:15:08 - INFO - __main__ -   Successful items count: 13

12/24/2024 23:15:08 - INFO - __main__ -   Total count: 18

12/24/2024 23:15:08 - INFO - __main__ -   Index: 171

Number of variable_names extracted:  8
Generating population171...
	 0  --gap prob  -8.912850171327591e-05
	 1  --gap prob  0.00039775483310222626
	 2  --gap prob  0.00039775483310222626
	 3  --gap prob  0.0011417316272854805
	 4  --gap prob  0.0017552450299263
	 5  --gap prob  0.002073993906378746
	 6  --gap prob  0.002073993906378746
	 7  --gap prob  0.002812447026371956
	 8  --gap prob  0.002812447026371956
	 9  --gap prob  0.004893084987998009
	 10  --gap prob  0.004893084987998009
	 11  --gap prob  0.004893084987998009
	 12  --gap prob  0.007336290553212166
	 13  --gap prob  0.007336290553212166
	 14  --gap prob  0.0070864129811525345
	 15  --gap prob  0.0070864129811525345
	 16  --gap prob  0.0070864129811525345
	 17  --gap prob  0.0070864129811525345
	 18  --gap prob  0.005424900911748409
	 19  --gap prob  0.005424900911748409
Changing code structure...
Processing examples:  43%|████▎     | 172/400 [59:42<9:56:28, 156.97s/it]12/24/2024 23:15:08 - INFO - __main__ -   测试:172

12/24/2024 23:19:31 - INFO - __main__ -   Success rate: 73.68%

12/24/2024 23:19:31 - INFO - __main__ -   Successful items count: 14

12/24/2024 23:19:31 - INFO - __main__ -   Total count: 19

12/24/2024 23:19:31 - INFO - __main__ -   Index: 172

Number of variable_names extracted:  2
Generating population172...
	 0  --gap prob  -0.19642214477062225
	 1  --gap prob  -0.19642214477062225
	 2  --gap prob  -0.19642214477062225
	 3  --gap prob  -0.04160311818122864
	 4  --gap prob  0.08761894702911377
	 5  --gap prob  0.08761894702911377
	 6  --gap prob  0.08761894702911377
	 7  --gap prob  0.08761894702911377
evaluate SUCCESS!
Processing examples:  43%|████▎     | 173/400 [1:04:05<11:22:02, 180.28s/it]12/24/2024 23:19:31 - INFO - __main__ -   测试:173

12/24/2024 23:28:36 - INFO - __main__ -   Success rate: 70.00%

12/24/2024 23:28:36 - INFO - __main__ -   Successful items count: 14

12/24/2024 23:28:36 - INFO - __main__ -   Total count: 20

12/24/2024 23:28:36 - INFO - __main__ -   Index: 173

Number of variable_names extracted:  5
Generating population173...
	 0  --gap prob  -0.006844410672783852
	 1  --gap prob  0.0017563849687576294
	 2  --gap prob  0.0028814468532800674
	 3  --gap prob  0.004239093512296677
	 4  --gap prob  0.004239093512296677
	 5  --gap prob  0.025112256407737732
	 6  --gap prob  0.0266728475689888
	 7  --gap prob  0.0266728475689888
	 8  --gap prob  0.0266728475689888
	 9  --gap prob  0.025112256407737732
	 10  --gap prob  0.025112256407737732
	 11  --gap prob  0.08876724913716316
	 12  --gap prob  0.08876724913716316
	 13  --gap prob  0.08876724913716316
	 14  --gap prob  0.07636725530028343
	 15  --gap prob  0.07636725530028343
	 16  --gap prob  0.07636725530028343
	 17  --gap prob  0.07636725530028343
	 18  --gap prob  0.052455078810453415
	 19  --gap prob  0.052455078810453415
Changing code structure...
Processing examples:  44%|████▎     | 174/400 [1:13:10<16:46:10, 267.13s/it]12/24/2024 23:28:36 - INFO - __main__ -   测试:174

12/24/2024 23:28:36 - INFO - __main__ -   Attack failed!

12/24/2024 23:28:36 - INFO - __main__ -   测试:175

12/24/2024 23:32:53 - INFO - __main__ -   Success rate: 66.67%

12/24/2024 23:32:53 - INFO - __main__ -   Successful items count: 14

12/24/2024 23:32:53 - INFO - __main__ -   Total count: 21

12/24/2024 23:32:53 - INFO - __main__ -   Index: 175

The original code is misclassified.
Number of variable_names extracted:  2
Generating population175...
	 0  --gap prob  -0.0003523295745253563
	 1  --gap prob  -0.0003523295745253563
	 2  --gap prob  -0.0003523295745253563
	 3  --gap prob  0.015817818231880665
	 4  --gap prob  0.015817818231880665
	 5  --gap prob  0.012351886369287968
	 6  --gap prob  0.012351886369287968
	 7  --gap prob  0.012351886369287968
	 8  --gap prob  0.012351886369287968
	 9  --gap prob  0.06804927717894316
	 10  --gap prob  0.06804927717894316
	 11  --gap prob  0.06804927717894316
	 12  --gap prob  0.06804927717894316
	 13  --gap prob  0.046327739022672176
	 14  --gap prob  0.046327739022672176
	 15  --gap prob  0.046327739022672176
	 16  --gap prob  0.046327739022672176
	 17  --gap prob  0.1289409575983882
	 18  --gap prob  0.1289409575983882
	 19  --gap prob  0.1289409575983882
Changing code structure...
Processing examples:  44%|████▍     | 176/400 [1:17:27<13:07:30, 210.94s/it]12/24/2024 23:32:53 - INFO - __main__ -   测试:176

12/24/2024 23:39:01 - INFO - __main__ -   Success rate: 68.18%

12/24/2024 23:39:01 - INFO - __main__ -   Successful items count: 15

12/24/2024 23:39:01 - INFO - __main__ -   Total count: 22

12/24/2024 23:39:01 - INFO - __main__ -   Index: 176

Number of variable_names extracted:  1
Generating population176...
	 0  --gap prob  -0.006705421954393387
	 1  --gap prob  -0.006705421954393387
	 2  --gap prob  -0.006705421954393387
	 3  --gap prob  -0.006705421954393387
	 4  --gap prob  0.009459070861339569
	 5  --gap prob  0.009459070861339569
	 6  --gap prob  0.009459070861339569
	 7  --gap prob  0.009459070861339569
	 8  --gap prob  -0.006705421954393387
	 9  --gap prob  -0.006705421954393387
	 10  --gap prob  -0.006705421954393387
	 11  --gap prob  -0.006705421954393387
	 12  --gap prob  0.0026369988918304443
	 13  --gap prob  0.0026369988918304443
	 14  --gap prob  0.0026369988918304443
	 15  --gap prob  0.0026369988918304443
	 16  --gap prob  0.015750467777252197
	 17  --gap prob  0.015750467777252197
	 18  --gap prob  0.015750467777252197
	 19  --gap prob  0.015750467777252197
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  44%|████▍     | 177/400 [1:23:35<15:15:11, 246.24s/it]12/24/2024 23:39:01 - INFO - __main__ -   测试:177

12/24/2024 23:39:01 - INFO - __main__ -   Attack failed!

12/24/2024 23:39:01 - INFO - __main__ -   测试:178

12/24/2024 23:40:07 - INFO - __main__ -   Success rate: 69.57%

12/24/2024 23:40:07 - INFO - __main__ -   Successful items count: 16

12/24/2024 23:40:07 - INFO - __main__ -   Total count: 23

12/24/2024 23:40:07 - INFO - __main__ -   Index: 178

The original code is misclassified.
Number of variable_names extracted:  17
Generating population178...
	 0  --gap prob  0.2966143
	 1  --gap prob  0.3926869
	 2  --gap prob  0.3926869
	 3  --gap prob  0.3926869
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  45%|████▍     | 179/400 [1:24:41<10:00:00, 162.90s/it]12/24/2024 23:40:07 - INFO - __main__ -   测试:179

12/24/2024 23:40:07 - INFO - __main__ -   Success rate: 70.83%

12/24/2024 23:40:07 - INFO - __main__ -   Successful items count: 17

12/24/2024 23:40:07 - INFO - __main__ -   Total count: 24

12/24/2024 23:40:07 - INFO - __main__ -   Index: 179

Number of variable_names extracted:  9
Generating population179...
init SUCCESS!
Processing examples:  45%|████▌     | 180/400 [1:24:41<7:47:12, 127.42s/it] 12/24/2024 23:40:07 - INFO - __main__ -   测试:180

12/24/2024 23:40:07 - INFO - __main__ -   Attack failed!

12/24/2024 23:40:07 - INFO - __main__ -   测试:181

12/24/2024 23:40:24 - INFO - __main__ -   Success rate: 72.00%

12/24/2024 23:40:24 - INFO - __main__ -   Successful items count: 18

12/24/2024 23:40:24 - INFO - __main__ -   Total count: 25

12/24/2024 23:40:24 - INFO - __main__ -   Index: 181

The original code is misclassified.
Number of variable_names extracted:  4
Generating population181...
	 0  --gap prob  0.07264801859855652
	 1  --gap prob  0.07264801859855652
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  46%|████▌     | 182/400 [1:24:58<4:56:48, 81.69s/it] 12/24/2024 23:40:24 - INFO - __main__ -   测试:182

12/24/2024 23:40:24 - INFO - __main__ -   Attack failed!

12/24/2024 23:40:24 - INFO - __main__ -   测试:183

12/24/2024 23:40:24 - INFO - __main__ -   Success rate: 73.08%

12/24/2024 23:40:24 - INFO - __main__ -   Successful items count: 19

12/24/2024 23:40:24 - INFO - __main__ -   Total count: 26

12/24/2024 23:40:24 - INFO - __main__ -   Index: 183

12/24/2024 23:40:24 - INFO - __main__ -   测试:184

12/24/2024 23:40:24 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Number of variable_names extracted:  5
Generating population183...
init SUCCESS!
The original code is misclassified.
Processing examples:  46%|████▋     | 185/400 [1:24:58<2:40:38, 44.83s/it]12/24/2024 23:40:24 - INFO - __main__ -   测试:185

12/24/2024 23:40:24 - INFO - __main__ -   Attack failed!

12/24/2024 23:40:24 - INFO - __main__ -   测试:186

12/24/2024 23:40:24 - INFO - __main__ -   Attack failed!

12/24/2024 23:40:24 - INFO - __main__ -   测试:187

12/24/2024 23:40:24 - INFO - __main__ -   Attack failed!

12/24/2024 23:40:24 - INFO - __main__ -   测试:188

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population188...
	 0  --gap prob  -0.0799960196018219
Processing examples:  46%|████▋     | 185/400 [1:25:10<2:40:38, 44.83s/it]12/24/2024 23:46:53 - INFO - __main__ -   Success rate: 74.07%

12/24/2024 23:46:53 - INFO - __main__ -   Successful items count: 20

12/24/2024 23:46:53 - INFO - __main__ -   Total count: 27

12/24/2024 23:46:53 - INFO - __main__ -   Index: 188

	 1  --gap prob  0.03110295534133911
	 2  --gap prob  0.03110295534133911
	 3  --gap prob  0.03110295534133911
	 4  --gap prob  0.03110295534133911
	 5  --gap prob  -0.09045064449310303
	 6  --gap prob  -0.09045064449310303
	 7  --gap prob  -0.09045064449310303
	 8  --gap prob  -0.09045064449310303
	 9  --gap prob  -0.09045064449310303
	 10  --gap prob  -0.09045064449310303
	 11  --gap prob  -0.09045064449310303
	 12  --gap prob  -0.09045064449310303
	 13  --gap prob  -0.09045064449310303
	 14  --gap prob  -0.09045064449310303
	 15  --gap prob  -0.058210134506225586
	 16  --gap prob  -0.058210134506225586
	 17  --gap prob  -0.058210134506225586
	 18  --gap prob  -0.058210134506225586
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  47%|████▋     | 189/400 [1:31:27<4:02:55, 69.08s/it]12/24/2024 23:46:53 - INFO - __main__ -   测试:189

12/24/2024 23:46:53 - INFO - __main__ -   Attack failed!

12/24/2024 23:46:53 - INFO - __main__ -   测试:190

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 23:46:58 - INFO - __main__ -   Success rate: 75.00%

12/24/2024 23:46:58 - INFO - __main__ -   Successful items count: 21

12/24/2024 23:46:58 - INFO - __main__ -   Total count: 28

12/24/2024 23:46:58 - INFO - __main__ -   Index: 190

The original code is misclassified.
Number of variable_names extracted:  8
Generating population190...
	 0  --gap prob  0.0045705437660217285
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  48%|████▊     | 191/400 [1:31:32<3:03:09, 52.58s/it]12/24/2024 23:46:58 - INFO - __main__ -   测试:191

12/24/2024 23:46:58 - INFO - __main__ -   Attack failed!

12/24/2024 23:46:58 - INFO - __main__ -   测试:192

12/24/2024 23:46:58 - INFO - __main__ -   Attack failed!

12/24/2024 23:46:58 - INFO - __main__ -   测试:193

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population193...
	 0  --gap prob  -0.0007298882119357586
	 1  --gap prob  -0.0007298882119357586
Processing examples:  48%|████▊     | 191/400 [1:31:50<3:03:09, 52.58s/it]12/24/2024 23:55:12 - INFO - __main__ -   Success rate: 75.86%

12/24/2024 23:55:12 - INFO - __main__ -   Successful items count: 22

12/24/2024 23:55:12 - INFO - __main__ -   Total count: 29

12/24/2024 23:55:12 - INFO - __main__ -   Index: 193

	 2  --gap prob  -0.0007298882119357586
	 3  --gap prob  -0.0007298882119357586
	 4  --gap prob  -0.0006960555911064148
	 5  --gap prob  -0.0006960555911064148
	 6  --gap prob  -0.0006960555911064148
	 7  --gap prob  -0.0006960555911064148
	 8  --gap prob  -0.00036105234175920486
	 9  --gap prob  -0.00036105234175920486
	 10  --gap prob  -0.00036105234175920486
	 11  --gap prob  -0.00036105234175920486
	 12  --gap prob  0.04565999424085021
	 13  --gap prob  0.04565999424085021
	 14  --gap prob  0.04565999424085021
	 15  --gap prob  0.04565999424085021
	 16  --gap prob  0.048046772833913565
	 17  --gap prob  0.048046772833913565
	 18  --gap prob  0.048046772833913565
	 19  --gap prob  0.048046772833913565
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  48%|████▊     | 194/400 [1:39:46<5:13:57, 91.45s/it]12/24/2024 23:55:12 - INFO - __main__ -   测试:194

12/24/2024 23:56:06 - INFO - __main__ -   Success rate: 76.67%

12/24/2024 23:56:06 - INFO - __main__ -   Successful items count: 23

12/24/2024 23:56:06 - INFO - __main__ -   Total count: 30

12/24/2024 23:56:06 - INFO - __main__ -   Index: 194

Number of variable_names extracted:  9
Generating population194...
	 0  --gap prob  -0.058755725622177124
	 1  --gap prob  0.029254764318466187
	 2  --gap prob  0.029254764318466187
	 3  --gap prob  0.3050742894411087
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  49%|████▉     | 195/400 [1:40:40<4:54:28, 86.19s/it]12/24/2024 23:56:06 - INFO - __main__ -   测试:195

12/25/2024 00:00:29 - INFO - __main__ -   Success rate: 77.42%

12/25/2024 00:00:29 - INFO - __main__ -   Successful items count: 24

12/25/2024 00:00:29 - INFO - __main__ -   Total count: 31

12/25/2024 00:00:29 - INFO - __main__ -   Index: 195

Number of variable_names extracted:  22
Generating population195...
	 0  --gap prob  -0.10023018717765808
	 1  --gap prob  -0.10023018717765808
	 2  --gap prob  -0.10023018717765808
	 3  --gap prob  -0.10023018717765808
	 4  --gap prob  -0.07913857698440552
	 5  --gap prob  -0.07913857698440552
	 6  --gap prob  -0.07913857698440552
	 7  --gap prob  -0.07913857698440552
	 8  --gap prob  -0.024732917547225952
	 9  --gap prob  -0.024732917547225952
	 10  --gap prob  -0.024732917547225952
	 11  --gap prob  -0.024732917547225952
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  49%|████▉     | 196/400 [1:45:02<6:33:55, 115.86s/it]12/25/2024 00:00:29 - INFO - __main__ -   测试:196

12/25/2024 00:00:29 - INFO - __main__ -   Attack failed!

12/25/2024 00:00:29 - INFO - __main__ -   测试:197

12/25/2024 00:00:29 - INFO - __main__ -   Success rate: 78.12%

12/25/2024 00:00:29 - INFO - __main__ -   Successful items count: 25

12/25/2024 00:00:29 - INFO - __main__ -   Total count: 32

12/25/2024 00:00:29 - INFO - __main__ -   Index: 197

The original code is misclassified.
Number of variable_names extracted:  8
Generating population197...
init SUCCESS!
Processing examples:  50%|████▉     | 198/400 [1:45:02<4:23:21, 78.22s/it] 12/25/2024 00:00:29 - INFO - __main__ -   测试:198

12/25/2024 00:00:29 - INFO - __main__ -   Attack failed!

12/25/2024 00:00:29 - INFO - __main__ -   测试:199

12/25/2024 00:00:29 - INFO - __main__ -   Attack failed!

12/25/2024 00:00:29 - INFO - __main__ -   测试:200

12/25/2024 00:00:31 - INFO - __main__ -   Success rate: 78.79%

12/25/2024 00:00:31 - INFO - __main__ -   Successful items count: 26

12/25/2024 00:00:31 - INFO - __main__ -   Total count: 33

12/25/2024 00:00:31 - INFO - __main__ -   Index: 200

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population200...
	 0  --gap prob  0.20691127
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  50%|█████     | 201/400 [1:45:04<2:33:45, 46.36s/it]12/25/2024 00:00:31 - INFO - __main__ -   测试:201

12/25/2024 00:00:31 - INFO - __main__ -   Attack failed!

12/25/2024 00:00:31 - INFO - __main__ -   测试:202

12/25/2024 00:00:31 - INFO - __main__ -   Attack failed!

12/25/2024 00:00:31 - INFO - __main__ -   测试:203

12/25/2024 00:01:41 - INFO - __main__ -   Success rate: 79.41%

12/25/2024 00:01:41 - INFO - __main__ -   Successful items count: 27

12/25/2024 00:01:41 - INFO - __main__ -   Total count: 34

12/25/2024 00:01:41 - INFO - __main__ -   Index: 203

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  18
Generating population203...
	 0  --gap prob  -0.008342891931533813
	 1  --gap prob  0.004011228680610657
	 2  --gap prob  0.029165402054786682
evaluate SUCCESS!
Processing examples:  51%|█████     | 204/400 [1:46:15<2:03:53, 37.93s/it]12/25/2024 00:01:41 - INFO - __main__ -   测试:204

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/25/2024 00:05:34 - INFO - __main__ -   Success rate: 80.00%

12/25/2024 00:05:34 - INFO - __main__ -   Successful items count: 28

12/25/2024 00:05:34 - INFO - __main__ -   Total count: 35

12/25/2024 00:05:34 - INFO - __main__ -   Index: 204

Number of variable_names extracted:  4
Generating population204...
	 0  --gap prob  0.001925140619277954
	 1  --gap prob  0.011229999363422394
	 2  --gap prob  0.011229999363422394
	 3  --gap prob  0.017715172842144966
	 4  --gap prob  0.019364817067980766
	 5  --gap prob  0.019364817067980766
	 6  --gap prob  0.019364817067980766
	 7  --gap prob  0.0480931606143713
	 8  --gap prob  0.0480931606143713
	 9  --gap prob  0.0480931606143713
	 10  --gap prob  0.0480931606143713
	 11  --gap prob  0.08897246979176998
	 12  --gap prob  0.08897246979176998
	 13  --gap prob  0.08897246979176998
	 14  --gap prob  0.08897246979176998
evaluate SUCCESS!
Processing examples:  51%|█████▏    | 205/400 [1:50:08<3:38:04, 67.10s/it]12/25/2024 00:05:34 - INFO - __main__ -   测试:205

12/25/2024 00:05:34 - INFO - __main__ -   Attack failed!

12/25/2024 00:05:34 - INFO - __main__ -   测试:206

12/25/2024 00:05:34 - INFO - __main__ -   Success rate: 80.56%

12/25/2024 00:05:34 - INFO - __main__ -   Successful items count: 29

12/25/2024 00:05:34 - INFO - __main__ -   Total count: 36

12/25/2024 00:05:34 - INFO - __main__ -   Index: 206

The original code is misclassified.
Number of variable_names extracted:  4
Generating population206...
init SUCCESS!
Processing examples:  52%|█████▏    | 207/400 [1:50:08<2:31:16, 47.03s/it]12/25/2024 00:05:34 - INFO - __main__ -   测试:207

12/25/2024 00:08:14 - INFO - __main__ -   Success rate: 81.08%

12/25/2024 00:08:14 - INFO - __main__ -   Successful items count: 30

12/25/2024 00:08:14 - INFO - __main__ -   Total count: 37

12/25/2024 00:08:14 - INFO - __main__ -   Index: 207

Number of variable_names extracted:  6
Generating population207...
	 0  --gap prob  -0.07311394065618515
	 1  --gap prob  -0.07311394065618515
	 2  --gap prob  -0.07311394065618515
	 3  --gap prob  -0.07311394065618515
	 4  --gap prob  -0.054930754005908966
	 5  --gap prob  -0.054930754005908966
	 6  --gap prob  -0.054930754005908966
	 7  --gap prob  -0.054930754005908966
	 8  --gap prob  0.3550141006708145
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 208/400 [1:52:48<3:34:00, 66.88s/it]12/25/2024 00:08:14 - INFO - __main__ -   测试:208

12/25/2024 00:08:14 - INFO - __main__ -   Attack failed!

12/25/2024 00:08:14 - INFO - __main__ -   测试:209

12/25/2024 00:14:41 - INFO - __main__ -   Success rate: 81.58%

12/25/2024 00:14:41 - INFO - __main__ -   Successful items count: 31

12/25/2024 00:14:41 - INFO - __main__ -   Total count: 38

12/25/2024 00:14:41 - INFO - __main__ -   Index: 209

The original code is misclassified.
Number of variable_names extracted:  1
Generating population209...
	 0  --gap prob  0.02464503
	 1  --gap prob  0.02464503
	 2  --gap prob  0.02464503
	 3  --gap prob  0.025636435
	 4  --gap prob  0.025636435
	 5  --gap prob  0.025636435
	 6  --gap prob  0.025636435
	 7  --gap prob  0.02464503
	 8  --gap prob  0.02464503
	 9  --gap prob  0.02464503
	 10  --gap prob  0.02464503
	 11  --gap prob  0.025636435
	 12  --gap prob  0.025636435
	 13  --gap prob  0.025636435
	 14  --gap prob  0.025636435
	 15  --gap prob  0.02464503
	 16  --gap prob  0.02464503
	 17  --gap prob  0.02464503
	 18  --gap prob  0.02464503
	 19  --gap prob  0.025636435
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  52%|█████▎    | 210/400 [1:59:15<5:46:21, 109.38s/it]12/25/2024 00:14:41 - INFO - __main__ -   测试:210

12/25/2024 00:14:41 - INFO - __main__ -   Attack failed!

12/25/2024 00:14:41 - INFO - __main__ -   测试:211

12/25/2024 00:14:41 - INFO - __main__ -   Attack failed!

12/25/2024 00:14:41 - INFO - __main__ -   测试:212

12/25/2024 00:14:42 - INFO - __main__ -   Success rate: 82.05%

12/25/2024 00:14:42 - INFO - __main__ -   Successful items count: 32

12/25/2024 00:14:42 - INFO - __main__ -   Total count: 39

12/25/2024 00:14:42 - INFO - __main__ -   Index: 212

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  4
Generating population212...
init SUCCESS!
Processing examples:  53%|█████▎    | 213/400 [1:59:15<3:18:33, 63.71s/it] 12/25/2024 00:14:42 - INFO - __main__ -   测试:213

12/25/2024 00:14:42 - INFO - __main__ -   Success rate: 82.50%

12/25/2024 00:14:42 - INFO - __main__ -   Successful items count: 33

12/25/2024 00:14:42 - INFO - __main__ -   Total count: 40

12/25/2024 00:14:42 - INFO - __main__ -   Index: 213

12/25/2024 00:14:42 - INFO - __main__ -   测试:214

Number of variable_names extracted:  4
Generating population213...
init SUCCESS!
Number of variable_names extracted:  1
Generating population214...
	 0  --gap prob  -0.006018459796905518
Processing examples:  53%|█████▎    | 213/400 [1:59:30<3:18:33, 63.71s/it]12/25/2024 00:18:00 - INFO - __main__ -   Success rate: 82.93%

12/25/2024 00:18:00 - INFO - __main__ -   Successful items count: 34

12/25/2024 00:18:00 - INFO - __main__ -   Total count: 41

12/25/2024 00:18:00 - INFO - __main__ -   Index: 214

	 1  --gap prob  -0.006018459796905518
	 2  --gap prob  -0.006018459796905518
	 3  --gap prob  -0.006018459796905518
	 4  --gap prob  -3.0517578125e-05
	 5  --gap prob  -3.0517578125e-05
	 6  --gap prob  -3.0517578125e-05
	 7  --gap prob  -3.0517578125e-05
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  54%|█████▍    | 215/400 [2:02:34<3:47:45, 73.87s/it]12/25/2024 00:18:00 - INFO - __main__ -   测试:215

12/25/2024 00:18:00 - INFO - __main__ -   Attack failed!

12/25/2024 00:18:00 - INFO - __main__ -   测试:216

12/25/2024 00:24:24 - INFO - __main__ -   Success rate: 80.95%

12/25/2024 00:24:24 - INFO - __main__ -   Successful items count: 34

12/25/2024 00:24:24 - INFO - __main__ -   Total count: 42

12/25/2024 00:24:24 - INFO - __main__ -   Index: 216

The original code is misclassified.
Number of variable_names extracted:  5
Generating population216...
	 0  --gap prob  -0.000780344
	 1  --gap prob  0.01139456
	 2  --gap prob  0.03181231
	 3  --gap prob  0.03181231
	 4  --gap prob  0.03181231
	 5  --gap prob  0.03252977
	 6  --gap prob  0.03252977
	 7  --gap prob  0.03252977
	 8  --gap prob  0.03252977
	 9  --gap prob  0.020939589
	 10  --gap prob  0.020939589
	 11  --gap prob  0.025093436
	 12  --gap prob  0.025093436
	 13  --gap prob  0.025093436
	 14  --gap prob  0.020939589
	 15  --gap prob  0.020939589
	 16  --gap prob  0.020939589
	 17  --gap prob  0.020939589
	 18  --gap prob  0.018941939
	 19  --gap prob  0.018941939
Changing code structure...
Processing examples:  54%|█████▍    | 217/400 [2:08:57<5:29:07, 107.91s/it]12/25/2024 00:24:24 - INFO - __main__ -   测试:217

12/25/2024 00:24:24 - INFO - __main__ -   Attack failed!

12/25/2024 00:24:24 - INFO - __main__ -   测试:218

12/25/2024 00:24:24 - INFO - __main__ -   Attack failed!

12/25/2024 00:24:24 - INFO - __main__ -   测试:219

12/25/2024 00:24:24 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  55%|█████▌    | 220/400 [2:08:57<3:19:56, 66.65s/it] 12/25/2024 00:24:24 - INFO - __main__ -   测试:220

12/25/2024 00:24:24 - INFO - __main__ -   Success rate: 81.40%

12/25/2024 00:24:24 - INFO - __main__ -   Successful items count: 35

12/25/2024 00:24:24 - INFO - __main__ -   Total count: 43

12/25/2024 00:24:24 - INFO - __main__ -   Index: 220

12/25/2024 00:24:24 - INFO - __main__ -   测试:221

12/25/2024 00:24:24 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  8
Generating population220...
init SUCCESS!
The original code is misclassified.
Processing examples:  56%|█████▌    | 222/400 [2:08:58<2:24:58, 48.87s/it]12/25/2024 00:24:24 - INFO - __main__ -   测试:222

Number of variable_names extracted:  6
Generating population222...
	 0  --gap prob  0.00095427036
Processing examples:  56%|█████▌    | 222/400 [2:09:10<2:24:58, 48.87s/it]12/25/2024 00:32:50 - INFO - __main__ -   Success rate: 79.55%

12/25/2024 00:32:50 - INFO - __main__ -   Successful items count: 35

12/25/2024 00:32:50 - INFO - __main__ -   Total count: 44

12/25/2024 00:32:50 - INFO - __main__ -   Index: 222

	 1  --gap prob  0.001080215
	 2  --gap prob  0.0011506677
	 3  --gap prob  0.0011506677
	 4  --gap prob  0.0013487339
	 5  --gap prob  0.0013487339
	 6  --gap prob  0.0011424422
	 7  --gap prob  0.0013033152
	 8  --gap prob  0.0013033152
	 9  --gap prob  0.0013033152
	 10  --gap prob  0.0013033152
	 11  --gap prob  0.0017828941
	 12  --gap prob  0.0019932985
	 13  --gap prob  0.0019932985
	 14  --gap prob  0.0019932985
	 15  --gap prob  0.0019932985
	 16  --gap prob  0.0020028949
	 17  --gap prob  0.0020028949
	 18  --gap prob  0.0020028949
	 19  --gap prob  0.0020028949
Changing code structure...
Processing examples:  56%|█████▌    | 223/400 [2:17:24<6:00:17, 122.14s/it]12/25/2024 00:32:50 - INFO - __main__ -   测试:223

12/25/2024 00:34:01 - INFO - __main__ -   Success rate: 80.00%

12/25/2024 00:34:01 - INFO - __main__ -   Successful items count: 36

12/25/2024 00:34:01 - INFO - __main__ -   Total count: 45

12/25/2024 00:34:01 - INFO - __main__ -   Index: 223

Number of variable_names extracted:  30
Generating population223...
	 0  --gap prob  0.11561533808708191
	 1  --gap prob  0.13287973403930664
	 2  --gap prob  0.15822958946228027
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  56%|█████▌    | 224/400 [2:18:34<5:29:59, 112.50s/it]12/25/2024 00:34:01 - INFO - __main__ -   测试:224

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/25/2024 00:34:01 - INFO - __main__ -   Success rate: 80.43%

12/25/2024 00:34:01 - INFO - __main__ -   Successful items count: 37

12/25/2024 00:34:01 - INFO - __main__ -   Total count: 46

12/25/2024 00:34:01 - INFO - __main__ -   Index: 224

12/25/2024 00:34:01 - INFO - __main__ -   测试:225

12/25/2024 00:34:01 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  10
Generating population224...
init SUCCESS!
The original code is misclassified.
Processing examples:  56%|█████▋    | 226/400 [2:18:34<3:33:00, 73.45s/it] 12/25/2024 00:34:01 - INFO - __main__ -   测试:226

12/25/2024 00:34:01 - INFO - __main__ -   Attack failed!

12/25/2024 00:34:01 - INFO - __main__ -   测试:227

12/25/2024 00:34:01 - INFO - __main__ -   Attack failed!

12/25/2024 00:34:01 - INFO - __main__ -   测试:228

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population228...
	 0  --gap prob  0.00019604479894042015
	 1  --gap prob  0.00033841095864772797
Processing examples:  56%|█████▋    | 226/400 [2:18:51<3:33:00, 73.45s/it]12/25/2024 00:38:32 - INFO - __main__ -   Success rate: 78.72%

12/25/2024 00:38:32 - INFO - __main__ -   Successful items count: 37

12/25/2024 00:38:32 - INFO - __main__ -   Total count: 47

12/25/2024 00:38:32 - INFO - __main__ -   Index: 228

	 2  --gap prob  0.0007712091319262981
	 3  --gap prob  0.0007712091319262981
	 4  --gap prob  0.0007712091319262981
	 5  --gap prob  0.0007712091319262981
	 6  --gap prob  0.0013878983445465565
	 7  --gap prob  0.0013878983445465565
	 8  --gap prob  0.0013878983445465565
	 9  --gap prob  0.0013878983445465565
	 10  --gap prob  0.0004747901111841202
	 11  --gap prob  0.0004747901111841202
	 12  --gap prob  0.0004747901111841202
	 13  --gap prob  0.0004747901111841202
	 14  --gap prob  0.0003404649905860424
	 15  --gap prob  0.0003404649905860424
	 16  --gap prob  0.0003404649905860424
	 17  --gap prob  0.0003404649905860424
	 18  --gap prob  0.00025150319561362267
	 19  --gap prob  0.00025150319561362267
Changing code structure...
Processing examples:  57%|█████▋    | 229/400 [2:23:06<3:50:00, 80.70s/it]12/25/2024 00:38:32 - INFO - __main__ -   测试:229

12/25/2024 00:38:32 - INFO - __main__ -   Attack failed!

12/25/2024 00:38:32 - INFO - __main__ -   测试:230

12/25/2024 00:43:20 - INFO - __main__ -   Success rate: 77.08%

12/25/2024 00:43:20 - INFO - __main__ -   Successful items count: 37

12/25/2024 00:43:20 - INFO - __main__ -   Total count: 48

12/25/2024 00:43:20 - INFO - __main__ -   Index: 230

The original code is misclassified.
Number of variable_names extracted:  2
Generating population230...
	 0  --gap prob  0.009189940989017487
	 1  --gap prob  0.009189940989017487
	 2  --gap prob  0.037874097004532814
	 3  --gap prob  0.037874097004532814
	 4  --gap prob  0.037874097004532814
	 5  --gap prob  0.008240267634391785
	 6  --gap prob  0.008240267634391785
	 7  --gap prob  0.008240267634391785
	 8  --gap prob  0.008240267634391785
	 9  --gap prob  0.008240267634391785
	 10  --gap prob  0.008240267634391785
	 11  --gap prob  0.008240267634391785
	 12  --gap prob  0.017167935147881508
	 13  --gap prob  0.017167935147881508
	 14  --gap prob  0.017167935147881508
	 15  --gap prob  0.017167935147881508
	 16  --gap prob  0.011542290449142456
	 17  --gap prob  0.011542290449142456
	 18  --gap prob  0.011542290449142456
	 19  --gap prob  0.011542290449142456
Changing code structure...
Processing examples:  58%|█████▊    | 231/400 [2:27:54<4:38:58, 99.05s/it]12/25/2024 00:43:20 - INFO - __main__ -   测试:231

12/25/2024 00:43:20 - INFO - __main__ -   Attack failed!

12/25/2024 00:43:20 - INFO - __main__ -   测试:232

12/25/2024 00:54:29 - INFO - __main__ -   Success rate: 75.51%

12/25/2024 00:54:29 - INFO - __main__ -   Successful items count: 37

12/25/2024 00:54:29 - INFO - __main__ -   Total count: 49

12/25/2024 00:54:29 - INFO - __main__ -   Index: 232

The original code is misclassified.
Number of variable_names extracted:  9
Generating population232...
	 0  --gap prob  -0.10691791772842407
	 1  --gap prob  -0.10691791772842407
	 2  --gap prob  -0.10691791772842407
	 3  --gap prob  -0.10691791772842407
	 4  --gap prob  -0.11822664737701416
	 5  --gap prob  -0.11822664737701416
	 6  --gap prob  -0.11822664737701416
	 7  --gap prob  -0.11822664737701416
	 8  --gap prob  -0.10871979594230652
	 9  --gap prob  -0.10871979594230652
	 10  --gap prob  -0.10871979594230652
	 11  --gap prob  -0.10871979594230652
	 12  --gap prob  -0.00034818053245544434
	 13  --gap prob  -0.00034818053245544434
	 14  --gap prob  -0.00034818053245544434
	 15  --gap prob  -0.00034818053245544434
	 16  --gap prob  0.059556543827056885
	 17  --gap prob  0.059556543827056885
	 18  --gap prob  0.059556543827056885
	 19  --gap prob  0.059556543827056885
Changing code structure...
Processing examples:  58%|█████▊    | 233/400 [2:39:03<7:47:09, 167.84s/it]12/25/2024 00:54:29 - INFO - __main__ -   测试:233

12/25/2024 00:54:29 - INFO - __main__ -   Attack failed!

12/25/2024 00:54:29 - INFO - __main__ -   测试:234

12/25/2024 00:54:29 - INFO - __main__ -   Attack failed!

12/25/2024 00:54:29 - INFO - __main__ -   测试:235

12/25/2024 00:58:15 - INFO - __main__ -   Success rate: 76.00%

12/25/2024 00:58:15 - INFO - __main__ -   Successful items count: 38

12/25/2024 00:58:15 - INFO - __main__ -   Total count: 50

12/25/2024 00:58:15 - INFO - __main__ -   Index: 235

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  1
Generating population235...
	 0  --gap prob  -0.016135364770889282
	 1  --gap prob  -0.016135364770889282
	 2  --gap prob  -0.016135364770889282
	 3  --gap prob  -0.016135364770889282
	 4  --gap prob  -0.016135364770889282
	 5  --gap prob  -0.016135364770889282
	 6  --gap prob  -0.016135364770889282
	 7  --gap prob  -0.016135364770889282
	 8  --gap prob  -0.016135364770889282
	 9  --gap prob  -0.016135364770889282
	 10  --gap prob  -0.016135364770889282
	 11  --gap prob  -0.016135364770889282
	 12  --gap prob  -0.016135364770889282
	 13  --gap prob  -0.016135364770889282
	 14  --gap prob  -0.016135364770889282
	 15  --gap prob  -0.016135364770889282
	 16  --gap prob  -0.016135364770889282
	 17  --gap prob  -0.016135364770889282
	 18  --gap prob  -0.016135364770889282
	 19  --gap prob  -0.016135364770889282
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  59%|█████▉    | 236/400 [2:42:49<6:01:19, 132.19s/it]12/25/2024 00:58:15 - INFO - __main__ -   测试:236

12/25/2024 00:58:15 - INFO - __main__ -   Attack failed!

12/25/2024 00:58:15 - INFO - __main__ -   测试:237

12/25/2024 01:00:56 - INFO - __main__ -   Success rate: 76.47%

12/25/2024 01:00:56 - INFO - __main__ -   Successful items count: 39

12/25/2024 01:00:56 - INFO - __main__ -   Total count: 51

12/25/2024 01:00:56 - INFO - __main__ -   Index: 237

The original code is misclassified.
Number of variable_names extracted:  4
Generating population237...
	 0  --gap prob  -0.011725282296538353
	 1  --gap prob  -0.011725282296538353
	 2  --gap prob  -0.011725282296538353
	 3  --gap prob  -0.011725282296538353
	 4  --gap prob  -0.012376628816127777
	 5  --gap prob  -0.012376628816127777
	 6  --gap prob  -0.012376628816127777
	 7  --gap prob  -0.012376628816127777
	 8  --gap prob  -0.010152187198400497
	 9  --gap prob  -0.010152187198400497
	 10  --gap prob  -0.010152187198400497
	 11  --gap prob  -0.010152187198400497
	 12  --gap prob  0.016432274132966995
	 13  --gap prob  0.016432274132966995
	 14  --gap prob  0.016432274132966995
	 15  --gap prob  0.016432274132966995
	 16  --gap prob  0.018001902848482132
	 17  --gap prob  0.018001902848482132
	 18  --gap prob  0.018001902848482132
	 19  --gap prob  0.018001902848482132
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  60%|█████▉    | 238/400 [2:45:30<5:19:34, 118.36s/it]12/25/2024 01:00:56 - INFO - __main__ -   测试:238

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
Number of variable_names extracted:  9
Generating population238...
	 0  --gap prob  -0.10280469059944153
	 1  --gap prob  -0.10280469059944153
	 2  --gap prob  -0.10280469059944153
	 3  --gap prob  -0.10280469059944153
	 4  --gap prob  -0.10280469059944153
	 5  --gap prob  -0.10280469059944153
	 6  --gap prob  0.03965502977371216
Processing examples:  60%|█████▉    | 238/400 [2:48:15<1:54:32, 42.42s/it] 
Traceback (most recent call last):
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/test.py", line 177, in <module>
    main()
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/test.py", line 151, in main
    is_success, final_code, min_gap_prob = attacker.attack(
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/pso.py", line 676, in attack
    V_P[id][dim] = Omega * V_P[id][dim] + (1 - Omega) * (self.equal(current_var_name, part_best_code_tokens[dim]) + self.equal(current_var_name,all_best_code_tokens[dim]))
IndexError: list index out of range
