Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at microsoft/codebert-base-mlm and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/run.py:112: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/test.py:105: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).

 cached_features_file:  ../dataset/codebert_cached_test_subs_0_400
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]12/24/2024 22:15:26 - INFO - __main__ -   测试:141

12/24/2024 22:15:42 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 22:15:42 - INFO - __main__ -   Successful items count: 1

12/24/2024 22:15:42 - INFO - __main__ -   Total count: 1

12/24/2024 22:15:42 - INFO - __main__ -   Index: 141

Number of variable_names extracted:  7
Generating population141...
	 0  --gap prob  0.09091711
	 1  --gap prob  0.36345547
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  36%|███▌      | 142/400 [00:16<00:29,  8.68it/s]12/24/2024 22:15:42 - INFO - __main__ -   测试:142

12/24/2024 22:15:42 - INFO - __main__ -   Attack failed!

12/24/2024 22:15:42 - INFO - __main__ -   测试:143

12/24/2024 22:21:22 - INFO - __main__ -   Success rate: 50.00%

12/24/2024 22:21:22 - INFO - __main__ -   Successful items count: 1

12/24/2024 22:21:22 - INFO - __main__ -   Total count: 2

12/24/2024 22:21:22 - INFO - __main__ -   Index: 143

The original code is misclassified.
Number of variable_names extracted:  4
Generating population143...
	 0  --gap prob  0.0018391702324151993
	 1  --gap prob  0.005412507802248001
	 2  --gap prob  0.005412507802248001
	 3  --gap prob  0.008879763074219227
	 4  --gap prob  0.008879763074219227
	 5  --gap prob  0.008879763074219227
	 6  --gap prob  0.009658333845436573
	 7  --gap prob  0.009658333845436573
	 8  --gap prob  0.009658333845436573
	 9  --gap prob  0.009658333845436573
	 10  --gap prob  0.006512229330837727
	 11  --gap prob  0.006512229330837727
	 12  --gap prob  0.006512229330837727
	 13  --gap prob  0.006512229330837727
	 14  --gap prob  0.004733683541417122
	 15  --gap prob  0.004733683541417122
	 16  --gap prob  0.004733683541417122
	 17  --gap prob  0.004733683541417122
	 18  --gap prob  0.006033218465745449
	 19  --gap prob  0.006033218465745449
Changing code structure...
Processing examples:  36%|███▌      | 144/400 [05:55<14:46,  3.46s/it]12/24/2024 22:21:22 - INFO - __main__ -   测试:144

12/24/2024 22:21:22 - INFO - __main__ -   Attack failed!

12/24/2024 22:21:22 - INFO - __main__ -   测试:145

12/24/2024 22:21:22 - INFO - __main__ -   Attack failed!

12/24/2024 22:21:22 - INFO - __main__ -   测试:146

12/24/2024 22:21:22 - INFO - __main__ -   Success rate: 66.67%

12/24/2024 22:21:22 - INFO - __main__ -   Successful items count: 2

12/24/2024 22:21:22 - INFO - __main__ -   Total count: 3

12/24/2024 22:21:22 - INFO - __main__ -   Index: 146

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population146...
init SUCCESS!
Processing examples:  37%|███▋      | 147/400 [05:56<14:00,  3.32s/it]12/24/2024 22:21:22 - INFO - __main__ -   测试:147

Number of variable_names extracted:  1
Generating population147...
	 0  --gap prob  -0.014976587146520615
Processing examples:  37%|███▋      | 147/400 [06:10<14:00,  3.32s/it]12/24/2024 22:28:30 - INFO - __main__ -   Success rate: 50.00%

12/24/2024 22:28:30 - INFO - __main__ -   Successful items count: 2

12/24/2024 22:28:30 - INFO - __main__ -   Total count: 4

12/24/2024 22:28:30 - INFO - __main__ -   Index: 147

	 1  --gap prob  -0.014976587146520615
	 2  --gap prob  -0.014976587146520615
	 3  --gap prob  -0.014976587146520615
	 4  --gap prob  0.1485285833477974
	 5  --gap prob  0.1485285833477974
	 6  --gap prob  0.1485285833477974
	 7  --gap prob  0.1485285833477974
	 8  --gap prob  0.04192689061164856
	 9  --gap prob  0.04192689061164856
	 10  --gap prob  0.04192689061164856
	 11  --gap prob  0.04192689061164856
	 12  --gap prob  0.057563938200473785
	 13  --gap prob  0.057563938200473785
	 14  --gap prob  0.057563938200473785
	 15  --gap prob  0.057563938200473785
	 16  --gap prob  0.0552942231297493
	 17  --gap prob  0.0552942231297493
	 18  --gap prob  0.0552942231297493
	 19  --gap prob  0.0552942231297493
Changing code structure...
Processing examples:  37%|███▋      | 148/400 [13:04<47:48, 11.38s/it]12/24/2024 22:28:31 - INFO - __main__ -   测试:148

12/24/2024 22:31:41 - INFO - __main__ -   Success rate: 60.00%

12/24/2024 22:31:41 - INFO - __main__ -   Successful items count: 3

12/24/2024 22:31:41 - INFO - __main__ -   Total count: 5

12/24/2024 22:31:41 - INFO - __main__ -   Index: 148

Number of variable_names extracted:  1
Generating population148...
	 0  --gap prob  0.06787913292646408
	 1  --gap prob  0.06787913292646408
	 2  --gap prob  0.06787913292646408
	 3  --gap prob  0.06787913292646408
	 4  --gap prob  0.24090389162302017
	 5  --gap prob  0.24090389162302017
	 6  --gap prob  0.24090389162302017
	 7  --gap prob  0.24090389162302017
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  37%|███▋      | 149/400 [16:15<1:07:23, 16.11s/it]12/24/2024 22:31:41 - INFO - __main__ -   测试:149

12/24/2024 22:31:41 - INFO - __main__ -   Attack failed!

12/24/2024 22:31:41 - INFO - __main__ -   测试:150

12/24/2024 22:38:56 - INFO - __main__ -   Success rate: 50.00%

12/24/2024 22:38:56 - INFO - __main__ -   Successful items count: 3

12/24/2024 22:38:56 - INFO - __main__ -   Total count: 6

12/24/2024 22:38:56 - INFO - __main__ -   Index: 150

The original code is misclassified.
Number of variable_names extracted:  1
Generating population150...
	 0  --gap prob  -0.0033249910920858383
	 1  --gap prob  -0.0033249910920858383
	 2  --gap prob  -0.0033249910920858383
	 3  --gap prob  -0.0033249910920858383
	 4  --gap prob  -0.0033249910920858383
	 5  --gap prob  -0.0033249910920858383
	 6  --gap prob  -0.0033249910920858383
	 7  --gap prob  -0.0033249910920858383
	 8  --gap prob  -0.0033249910920858383
	 9  --gap prob  -0.0033249910920858383
	 10  --gap prob  -0.0003046877682209015
	 11  --gap prob  -0.0003046877682209015
	 12  --gap prob  -0.0003046877682209015
	 13  --gap prob  -0.0003046877682209015
	 14  --gap prob  -0.0033249910920858383
	 15  --gap prob  -0.0033249910920858383
	 16  --gap prob  -0.0033249910920858383
	 17  --gap prob  -0.0033249910920858383
	 18  --gap prob  0.001200227066874504
	 19  --gap prob  0.001200227066874504
Changing code structure...
Processing examples:  38%|███▊      | 151/400 [23:30<2:05:20, 30.20s/it]12/24/2024 22:38:56 - INFO - __main__ -   测试:151

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 22:40:28 - INFO - __main__ -   Success rate: 57.14%

12/24/2024 22:40:28 - INFO - __main__ -   Successful items count: 4

12/24/2024 22:40:28 - INFO - __main__ -   Total count: 7

12/24/2024 22:40:28 - INFO - __main__ -   Index: 151

Number of variable_names extracted:  21
Generating population151...
	 0  --gap prob  -0.09649431705474854
	 1  --gap prob  -0.09649431705474854
	 2  --gap prob  -0.09649431705474854
	 3  --gap prob  -0.09649431705474854
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  38%|███▊      | 152/400 [25:02<2:17:01, 33.15s/it]12/24/2024 22:40:28 - INFO - __main__ -   测试:152

12/24/2024 22:40:28 - INFO - __main__ -   Attack failed!

12/24/2024 22:40:28 - INFO - __main__ -   测试:153

12/24/2024 22:40:28 - INFO - __main__ -   Attack failed!

12/24/2024 22:40:28 - INFO - __main__ -   测试:154

12/24/2024 22:46:47 - INFO - __main__ -   Success rate: 62.50%

12/24/2024 22:46:47 - INFO - __main__ -   Successful items count: 5

12/24/2024 22:46:47 - INFO - __main__ -   Total count: 8

12/24/2024 22:46:47 - INFO - __main__ -   Index: 154

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population154...
	 0  --gap prob  -0.002358604222536087
	 1  --gap prob  0.0004275422543287277
	 2  --gap prob  0.0004275422543287277
	 3  --gap prob  0.0010269004851579666
	 4  --gap prob  0.0010269004851579666
	 5  --gap prob  0.0010269004851579666
	 6  --gap prob  0.0004275422543287277
	 7  --gap prob  0.0004275422543287277
	 8  --gap prob  0.0004275422543287277
	 9  --gap prob  0.0004275422543287277
	 10  --gap prob  0.00023038778454065323
	 11  --gap prob  0.00023038778454065323
	 12  --gap prob  0.001337418332695961
	 13  --gap prob  0.001337418332695961
	 14  --gap prob  0.0040743472054600716
	 15  --gap prob  0.0040743472054600716
	 16  --gap prob  0.03995772823691368
	 17  --gap prob  0.03995772823691368
	 18  --gap prob  0.03995772823691368
	 19  --gap prob  0.03995772823691368
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  39%|███▉      | 155/400 [31:21<3:19:49, 48.94s/it]12/24/2024 22:46:47 - INFO - __main__ -   测试:155

12/24/2024 22:54:21 - INFO - __main__ -   Success rate: 66.67%

12/24/2024 22:54:21 - INFO - __main__ -   Successful items count: 6

12/24/2024 22:54:21 - INFO - __main__ -   Total count: 9

12/24/2024 22:54:21 - INFO - __main__ -   Index: 155

Number of variable_names extracted:  6
Generating population155...
	 0  --gap prob  -0.04736611619591713
	 1  --gap prob  -0.04736611619591713
	 2  --gap prob  -0.04736611619591713
	 3  --gap prob  -0.04736611619591713
	 4  --gap prob  -0.013608299195766449
	 5  --gap prob  -0.013608299195766449
	 6  --gap prob  -0.013608299195766449
	 7  --gap prob  -0.013608299195766449
	 8  --gap prob  -0.016599632799625397
	 9  --gap prob  -0.016599632799625397
	 10  --gap prob  -0.016599632799625397
	 11  --gap prob  -0.016599632799625397
	 12  --gap prob  -0.047977447509765625
	 13  --gap prob  -0.047977447509765625
	 14  --gap prob  -0.047977447509765625
	 15  --gap prob  -0.047977447509765625
	 16  --gap prob  -0.012571632862091064
	 17  --gap prob  -0.012571632862091064
	 18  --gap prob  -0.012571632862091064
	 19  --gap prob  -0.012571632862091064
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  39%|███▉      | 156/400 [38:55<5:22:04, 79.20s/it]12/24/2024 22:54:21 - INFO - __main__ -   测试:156

12/24/2024 22:54:21 - INFO - __main__ -   Attack failed!

12/24/2024 22:54:21 - INFO - __main__ -   测试:157

12/24/2024 22:54:21 - INFO - __main__ -   Success rate: 70.00%

12/24/2024 22:54:21 - INFO - __main__ -   Successful items count: 7

12/24/2024 22:54:21 - INFO - __main__ -   Total count: 10

12/24/2024 22:54:21 - INFO - __main__ -   Index: 157

The original code is misclassified.
Number of variable_names extracted:  2
Generating population157...
init SUCCESS!
Processing examples:  40%|███▉      | 158/400 [38:55<4:23:17, 65.28s/it]12/24/2024 22:54:21 - INFO - __main__ -   测试:158

12/24/2024 22:54:21 - INFO - __main__ -   Attack failed!

12/24/2024 22:54:21 - INFO - __main__ -   测试:159

12/24/2024 22:54:23 - INFO - __main__ -   Success rate: 72.73%

12/24/2024 22:54:23 - INFO - __main__ -   Successful items count: 8

12/24/2024 22:54:23 - INFO - __main__ -   Total count: 11

12/24/2024 22:54:23 - INFO - __main__ -   Index: 159

The original code is misclassified.
Number of variable_names extracted:  4
Generating population159...
	 0  --gap prob  0.038993
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  40%|████      | 160/400 [38:57<3:29:20, 52.34s/it]12/24/2024 22:54:23 - INFO - __main__ -   测试:160

12/24/2024 22:54:23 - INFO - __main__ -   Attack failed!

12/24/2024 22:54:23 - INFO - __main__ -   测试:161

The original code is misclassified.
Number of variable_names extracted:  3
Generating population161...
	 0  --gap prob  -0.01047254353761673
	 1  --gap prob  -0.01047254353761673
Processing examples:  40%|████      | 160/400 [39:10<3:29:20, 52.34s/it]12/24/2024 22:58:55 - INFO - __main__ -   Success rate: 75.00%

12/24/2024 22:58:55 - INFO - __main__ -   Successful items count: 9

12/24/2024 22:58:55 - INFO - __main__ -   Total count: 12

12/24/2024 22:58:55 - INFO - __main__ -   Index: 161

	 2  --gap prob  -0.01047254353761673
	 3  --gap prob  -0.01047254353761673
	 4  --gap prob  -0.008903482928872108
	 5  --gap prob  -0.008903482928872108
	 6  --gap prob  -0.008903482928872108
	 7  --gap prob  -0.008903482928872108
	 8  --gap prob  0.02632119506597519
	 9  --gap prob  0.02632119506597519
	 10  --gap prob  0.02632119506597519
	 11  --gap prob  0.02632119506597519
	 12  --gap prob  0.0062942467629909515
	 13  --gap prob  0.0062942467629909515
	 14  --gap prob  0.0062942467629909515
	 15  --gap prob  0.0062942467629909515
	 16  --gap prob  0.0064260512590408325
	 17  --gap prob  0.0064260512590408325
	 18  --gap prob  0.0064260512590408325
	 19  --gap prob  0.0064260512590408325
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  40%|████      | 162/400 [43:29<4:41:49, 71.05s/it]12/24/2024 22:58:55 - INFO - __main__ -   测试:162

12/24/2024 22:58:55 - INFO - __main__ -   Attack failed!

12/24/2024 22:58:55 - INFO - __main__ -   测试:163

12/24/2024 22:58:56 - INFO - __main__ -   Success rate: 76.92%

12/24/2024 22:58:56 - INFO - __main__ -   Successful items count: 10

12/24/2024 22:58:56 - INFO - __main__ -   Total count: 13

12/24/2024 22:58:56 - INFO - __main__ -   Index: 163

The original code is misclassified.
Number of variable_names extracted:  4
Generating population163...
init SUCCESS!
Processing examples:  41%|████      | 164/400 [43:29<3:32:00, 53.90s/it]12/24/2024 22:58:56 - INFO - __main__ -   测试:164

12/24/2024 22:58:56 - INFO - __main__ -   Attack failed!

12/24/2024 22:58:56 - INFO - __main__ -   测试:165

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 22:58:56 - INFO - __main__ -   Success rate: 78.57%

12/24/2024 22:58:56 - INFO - __main__ -   Successful items count: 11

12/24/2024 22:58:56 - INFO - __main__ -   Total count: 14

12/24/2024 22:58:56 - INFO - __main__ -   Index: 165

The original code is misclassified.
Number of variable_names extracted:  16
Generating population165...
init SUCCESS!
Processing examples:  42%|████▏     | 166/400 [43:30<2:36:28, 40.12s/it]12/24/2024 22:58:56 - INFO - __main__ -   测试:166

12/24/2024 22:58:56 - INFO - __main__ -   Success rate: 80.00%

12/24/2024 22:58:56 - INFO - __main__ -   Successful items count: 12

12/24/2024 22:58:56 - INFO - __main__ -   Total count: 15

12/24/2024 22:58:56 - INFO - __main__ -   Index: 166

12/24/2024 22:58:56 - INFO - __main__ -   测试:167

12/24/2024 22:58:56 - INFO - __main__ -   Attack failed!

12/24/2024 22:58:56 - INFO - __main__ -   测试:168

12/24/2024 22:58:56 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  2
Generating population166...
init SUCCESS!
The original code is misclassified.
The original code is misclassified.
Processing examples:  42%|████▏     | 169/400 [43:30<1:39:44, 25.91s/it]12/24/2024 22:58:56 - INFO - __main__ -   测试:169

Number of variable_names extracted:  9
Generating population169...
	 0  --gap prob  0.0798645
Processing examples:  42%|████▏     | 169/400 [43:40<1:39:44, 25.91s/it]