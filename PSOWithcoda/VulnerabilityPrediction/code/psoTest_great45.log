Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at microsoft/codebert-base-mlm and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/run.py:112: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/test.py:105: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).

 cached_features_file:  ../dataset/codebert_cached_test_subs_0_400
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]12/24/2024 15:39:24 - INFO - __main__ -   测试:45

12/24/2024 15:44:49 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:44:49 - INFO - __main__ -   Successful items count: 1

12/24/2024 15:44:49 - INFO - __main__ -   Total count: 1

12/24/2024 15:44:49 - INFO - __main__ -   Index: 45

Number of variable_names extracted:  50
Generating population45...
	 0  --gap prob  0.15008956
	 1  --gap prob  0.17869699
	 2  --gap prob  0.21938682
	 3  --gap prob  0.25166154
	 4  --gap prob  0.2663769
	 5  --gap prob  0.30111408
	 6  --gap prob  0.3372199
	 7  --gap prob  0.3372199
	 8  --gap prob  0.3372199
	 9  --gap prob  0.3372199
	 10  --gap prob  0.32602578
	 11  --gap prob  0.32602578
	 12  --gap prob  0.32872736
	 13  --gap prob  0.32872736
	 14  --gap prob  0.33515483
	 15  --gap prob  0.33515483
	 16  --gap prob  0.32872736
	 17  --gap prob  0.33948243
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  12%|█▏        | 46/400 [05:25<41:48,  7.09s/it]12/24/2024 15:44:49 - INFO - __main__ -   测试:46

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 15:44:50 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:44:50 - INFO - __main__ -   Successful items count: 2

12/24/2024 15:44:50 - INFO - __main__ -   Total count: 2

12/24/2024 15:44:50 - INFO - __main__ -   Index: 46

Number of variable_names extracted:  62
Generating population46...
init SUCCESS!
Processing examples:  12%|█▏        | 47/400 [05:26<40:27,  6.88s/it]12/24/2024 15:44:50 - INFO - __main__ -   测试:47

12/24/2024 15:46:24 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:46:24 - INFO - __main__ -   Successful items count: 3

12/24/2024 15:46:24 - INFO - __main__ -   Total count: 3

12/24/2024 15:46:24 - INFO - __main__ -   Index: 47

Number of variable_names extracted:  5
Generating population47...
	 0  --gap prob  -0.0003230087459087372
	 1  --gap prob  0.004633971489965916
	 2  --gap prob  0.004633971489965916
	 3  --gap prob  0.004633971489965916
	 4  --gap prob  0.004633971489965916
	 5  --gap prob  -0.0003230087459087372
	 6  --gap prob  -0.0003230087459087372
	 7  --gap prob  -0.0003230087459087372
	 8  --gap prob  -0.0003230087459087372
	 9  --gap prob  6.696302443742752e-05
	 10  --gap prob  6.696302443742752e-05
	 11  --gap prob  6.696302443742752e-05
	 12  --gap prob  6.696302443742752e-05
	 13  --gap prob  0.0008986257016658783
	 14  --gap prob  0.0008986257016658783
	 15  --gap prob  0.0008986257016658783
	 16  --gap prob  0.0008986257016658783
	 17  --gap prob  -0.0003230087459087372
	 18  --gap prob  -0.0003230087459087372
	 19  --gap prob  -0.0003230087459087372
Changing code structure...
Processing examples:  12%|█▏        | 48/400 [07:00<1:01:34, 10.49s/it]12/24/2024 15:46:24 - INFO - __main__ -   测试:48

12/24/2024 15:46:24 - INFO - __main__ -   Attack failed!

12/24/2024 15:46:24 - INFO - __main__ -   测试:49

12/24/2024 15:46:58 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:46:58 - INFO - __main__ -   Successful items count: 4

12/24/2024 15:46:58 - INFO - __main__ -   Total count: 4

12/24/2024 15:46:58 - INFO - __main__ -   Index: 49

Number of variable_names extracted:  5
substituions_len == 0
Number of variable_names extracted:  20
Generating population49...
	 0  --gap prob  0.048298895
	 1  --gap prob  0.12706017
	 2  --gap prob  0.13964611
	 3  --gap prob  0.13964611
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  12%|█▎        | 50/400 [07:34<1:05:06, 11.16s/it]12/24/2024 15:46:58 - INFO - __main__ -   测试:50

12/24/2024 15:52:22 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:52:22 - INFO - __main__ -   Successful items count: 5

12/24/2024 15:52:22 - INFO - __main__ -   Total count: 5

12/24/2024 15:52:22 - INFO - __main__ -   Index: 50

Number of variable_names extracted:  29
Generating population50...
	 0  --gap prob  -0.008161891251802444
	 1  --gap prob  -0.008161891251802444
	 2  --gap prob  0.0040035247802734375
	 3  --gap prob  0.0040035247802734375
	 4  --gap prob  0.03479047864675522
	 5  --gap prob  0.03479047864675522
	 6  --gap prob  0.038614414632320404
	 7  --gap prob  0.038614414632320404
	 8  --gap prob  0.038614414632320404
	 9  --gap prob  0.038614414632320404
	 10  --gap prob  0.18932675570249557
	 11  --gap prob  0.18932675570249557
	 12  --gap prob  0.18932675570249557
	 13  --gap prob  0.18932675570249557
	 14  --gap prob  0.31363996118307114
	 15  --gap prob  0.31363996118307114
	 16  --gap prob  0.31363996118307114
	 17  --gap prob  0.31363996118307114
	 18  --gap prob  0.14771776646375656
	 19  --gap prob  0.14771776646375656
Changing code structure...
Processing examples:  13%|█▎        | 51/400 [12:58<3:12:15, 33.05s/it]12/24/2024 15:52:22 - INFO - __main__ -   测试:51

12/24/2024 15:52:22 - INFO - __main__ -   Attack failed!

12/24/2024 15:52:22 - INFO - __main__ -   测试:52

12/24/2024 15:52:31 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  13%|█▎        | 53/400 [13:07<2:43:39, 28.30s/it]12/24/2024 15:52:31 - INFO - __main__ -   测试:53

12/24/2024 15:52:31 - INFO - __main__ -   Attack failed!

12/24/2024 15:52:31 - INFO - __main__ -   测试:54

12/24/2024 15:52:49 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:52:49 - INFO - __main__ -   Successful items count: 6

12/24/2024 15:52:49 - INFO - __main__ -   Total count: 6

12/24/2024 15:52:49 - INFO - __main__ -   Index: 54

The original code is misclassified.
Number of variable_names extracted:  26
Generating population54...
	 0  --gap prob  0.14243966
	 1  --gap prob  0.23529822
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  14%|█▍        | 55/400 [13:25<2:21:26, 24.60s/it]12/24/2024 15:52:49 - INFO - __main__ -   测试:55

12/24/2024 15:52:49 - INFO - __main__ -   Attack failed!

12/24/2024 15:52:49 - INFO - __main__ -   测试:56

12/24/2024 15:52:49 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:52:49 - INFO - __main__ -   Successful items count: 7

12/24/2024 15:52:49 - INFO - __main__ -   Total count: 7

12/24/2024 15:52:49 - INFO - __main__ -   Index: 56

12/24/2024 15:52:49 - INFO - __main__ -   测试:57

12/24/2024 15:54:49 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:54:49 - INFO - __main__ -   Successful items count: 8

12/24/2024 15:54:49 - INFO - __main__ -   Total count: 8

12/24/2024 15:54:49 - INFO - __main__ -   Index: 57

The original code is misclassified.
Number of variable_names extracted:  36
Generating population56...
init SUCCESS!
Number of variable_names extracted:  34
Generating population57...
	 0  --gap prob  -0.10704000294208527
	 1  --gap prob  -0.10704000294208527
	 2  --gap prob  -0.10704000294208527
	 3  --gap prob  -0.10704000294208527
	 4  --gap prob  0.018927156925201416
	 5  --gap prob  0.08076727390289307
	 6  --gap prob  0.09462219476699829
	 7  --gap prob  0.11775001883506775
	 8  --gap prob  0.13565579056739807
	 9  --gap prob  0.13565579056739807
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  14%|█▍        | 58/400 [15:25<2:46:06, 29.14s/it]12/24/2024 15:54:49 - INFO - __main__ -   测试:58

12/24/2024 15:55:22 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:55:22 - INFO - __main__ -   Successful items count: 9

12/24/2024 15:55:22 - INFO - __main__ -   Total count: 9

12/24/2024 15:55:22 - INFO - __main__ -   Index: 58

Number of variable_names extracted:  22
Generating population58...
	 0  --gap prob  0.26397163
	 1  --gap prob  0.2911589
	 2  --gap prob  0.31567115
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  15%|█▍        | 59/400 [15:58<2:48:03, 29.57s/it]12/24/2024 15:55:22 - INFO - __main__ -   测试:59

12/24/2024 15:55:22 - INFO - __main__ -   Attack failed!

12/24/2024 15:55:22 - INFO - __main__ -   测试:60

12/24/2024 15:55:22 - INFO - __main__ -   Attack failed!

12/24/2024 15:55:22 - INFO - __main__ -   测试:61

12/24/2024 15:55:22 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:55:22 - INFO - __main__ -   Successful items count: 10

12/24/2024 15:55:22 - INFO - __main__ -   Total count: 10

12/24/2024 15:55:22 - INFO - __main__ -   Index: 61

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  6
Generating population61...
init SUCCESS!
Processing examples:  16%|█▌        | 62/400 [15:58<1:49:27, 19.43s/it]12/24/2024 15:55:22 - INFO - __main__ -   测试:62

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
Number of variable_names extracted:  40
Generating population62...
	 0  --gap prob  0.08920571208000183
Processing examples:  16%|█▌        | 62/400 [16:10<1:49:27, 19.43s/it]12/24/2024 15:55:34 - INFO - __main__ -   Success rate: 100.00%

12/24/2024 15:55:34 - INFO - __main__ -   Successful items count: 11

12/24/2024 15:55:34 - INFO - __main__ -   Total count: 11

12/24/2024 15:55:34 - INFO - __main__ -   Index: 62

	 1  --gap prob  0.14397752285003662
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▌        | 63/400 [16:10<1:43:34, 18.44s/it]12/24/2024 15:55:34 - INFO - __main__ -   测试:63

12/24/2024 15:55:34 - INFO - __main__ -   Attack failed!

12/24/2024 15:55:34 - INFO - __main__ -   测试:64

12/24/2024 15:59:53 - INFO - __main__ -   Success rate: 91.67%

12/24/2024 15:59:53 - INFO - __main__ -   Successful items count: 11

12/24/2024 15:59:53 - INFO - __main__ -   Total count: 12

12/24/2024 15:59:53 - INFO - __main__ -   Index: 64

The original code is misclassified.
Number of variable_names extracted:  4
Generating population64...
	 0  --gap prob  0.014786243
	 1  --gap prob  0.014786243
	 2  --gap prob  0.014786243
	 3  --gap prob  0.014786243
	 4  --gap prob  0.014786243
	 5  --gap prob  0.014786243
	 6  --gap prob  0.014786243
	 7  --gap prob  0.014786243
	 8  --gap prob  0.014786243
	 9  --gap prob  0.014786243
	 10  --gap prob  0.014786243
	 11  --gap prob  0.014786243
	 12  --gap prob  0.014786243
	 13  --gap prob  0.014786243
	 14  --gap prob  0.014786243
	 15  --gap prob  0.014786243
	 16  --gap prob  0.014786243
	 17  --gap prob  0.014786243
	 18  --gap prob  0.014786243
	 19  --gap prob  0.014786243
Changing code structure...
Processing examples:  16%|█▋        | 65/400 [20:29<4:40:37, 50.26s/it]12/24/2024 15:59:53 - INFO - __main__ -   测试:65

12/24/2024 16:01:50 - INFO - __main__ -   Success rate: 92.31%

12/24/2024 16:01:50 - INFO - __main__ -   Successful items count: 12

12/24/2024 16:01:50 - INFO - __main__ -   Total count: 13

12/24/2024 16:01:50 - INFO - __main__ -   Index: 65

Number of variable_names extracted:  33
Generating population65...
	 0  --gap prob  -0.024318099
	 1  --gap prob  0.018990755
	 2  --gap prob  0.078105986
	 3  --gap prob  0.08852595
	 4  --gap prob  0.21335971
	 5  --gap prob  0.21335971
	 6  --gap prob  0.26893812
	 7  --gap prob  0.26893812
	 8  --gap prob  0.26893812
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▋        | 66/400 [22:26<5:42:20, 61.50s/it]12/24/2024 16:01:50 - INFO - __main__ -   测试:66

12/24/2024 16:01:50 - INFO - __main__ -   Attack failed!

12/24/2024 16:01:50 - INFO - __main__ -   测试:67

12/24/2024 16:01:50 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  17%|█▋        | 68/400 [22:26<3:49:11, 41.42s/it]12/24/2024 16:01:50 - INFO - __main__ -   测试:68

12/24/2024 16:01:50 - INFO - __main__ -   Attack failed!

12/24/2024 16:01:50 - INFO - __main__ -   测试:69

The original code is misclassified.
Number of variable_names extracted:  48
Generating population69...
	 0  --gap prob  0.00052654743
Processing examples:  17%|█▋        | 68/400 [22:40<3:49:11, 41.42s/it]12/24/2024 16:12:25 - INFO - __main__ -   Success rate: 92.86%

12/24/2024 16:12:25 - INFO - __main__ -   Successful items count: 13

12/24/2024 16:12:25 - INFO - __main__ -   Total count: 14

12/24/2024 16:12:25 - INFO - __main__ -   Index: 69

	 1  --gap prob  0.0007894039
	 2  --gap prob  0.00080919266
	 3  --gap prob  0.0009239316
	 4  --gap prob  0.0011555552
	 5  --gap prob  0.0011555552
	 6  --gap prob  0.0011555552
	 7  --gap prob  0.0012601614
	 8  --gap prob  0.0012601614
	 9  --gap prob  0.0012601614
	 10  --gap prob  0.0012601614
	 11  --gap prob  0.0013462305
	 12  --gap prob  0.0013462305
	 13  --gap prob  0.0013462305
	 14  --gap prob  0.0013462305
	 15  --gap prob  0.0010715127
	 16  --gap prob  0.0010715127
	 17  --gap prob  0.0010715127
	 18  --gap prob  0.0010715127
	 19  --gap prob  0.0009275675
Changing code structure...
Processing examples:  18%|█▊        | 70/400 [33:01<11:51:05, 129.29s/it]12/24/2024 16:12:25 - INFO - __main__ -   测试:70

12/24/2024 16:12:46 - INFO - __main__ -   Success rate: 93.33%

12/24/2024 16:12:46 - INFO - __main__ -   Successful items count: 14

12/24/2024 16:12:46 - INFO - __main__ -   Total count: 15

12/24/2024 16:12:46 - INFO - __main__ -   Index: 70

Number of variable_names extracted:  22
Generating population70...
	 0  --gap prob  -0.09803444
	 1  --gap prob  0.012387633
	 2  --gap prob  0.012387633
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  18%|█▊        | 71/400 [33:22<9:59:25, 109.32s/it] 12/24/2024 16:12:46 - INFO - __main__ -   测试:71

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 16:12:47 - INFO - __main__ -   Success rate: 93.75%

12/24/2024 16:12:47 - INFO - __main__ -   Successful items count: 15

12/24/2024 16:12:47 - INFO - __main__ -   Total count: 16

12/24/2024 16:12:47 - INFO - __main__ -   Index: 71

12/24/2024 16:12:47 - INFO - __main__ -   测试:72

12/24/2024 16:16:04 - INFO - __main__ -   Success rate: 94.12%

12/24/2024 16:16:04 - INFO - __main__ -   Successful items count: 16

12/24/2024 16:16:04 - INFO - __main__ -   Total count: 17

12/24/2024 16:16:04 - INFO - __main__ -   Index: 72

Number of variable_names extracted:  23
Generating population71...
init SUCCESS!
Number of variable_names extracted:  35
Generating population72...
	 0  --gap prob  -0.006120005622506142
	 1  --gap prob  -0.006120005622506142
	 2  --gap prob  -0.006120005622506142
	 3  --gap prob  -0.006120005622506142
	 4  --gap prob  0.0006768703460693359
	 5  --gap prob  0.002478592097759247
	 6  --gap prob  0.002478592097759247
	 7  --gap prob  0.01351633295416832
	 8  --gap prob  0.024424362927675247
	 9  --gap prob  0.024424362927675247
	 10  --gap prob  0.027625132352113724
	 11  --gap prob  0.027625132352113724
	 12  --gap prob  0.017338331788778305
	 13  --gap prob  0.017338331788778305
	 14  --gap prob  0.017338331788778305
	 15  --gap prob  0.03859679028391838
	 16  --gap prob  0.03859679028391838
	 17  --gap prob  0.03969858959317207
	 18  --gap prob  0.03969858959317207
	 19  --gap prob  0.03969858959317207
Changing code structure...
Processing examples:  18%|█▊        | 73/400 [36:40<9:35:28, 105.59s/it]12/24/2024 16:16:04 - INFO - __main__ -   测试:73

12/24/2024 16:16:04 - INFO - __main__ -   Attack failed!

12/24/2024 16:16:04 - INFO - __main__ -   测试:74

12/24/2024 16:16:04 - INFO - __main__ -   Attack failed!

12/24/2024 16:16:04 - INFO - __main__ -   测试:75

12/24/2024 16:16:12 - INFO - __main__ -   Success rate: 94.44%

12/24/2024 16:16:12 - INFO - __main__ -   Successful items count: 17

12/24/2024 16:16:12 - INFO - __main__ -   Total count: 18

12/24/2024 16:16:12 - INFO - __main__ -   Index: 75

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  8
Generating population75...
	 0  --gap prob  0.20485508
	 1  --gap prob  0.39028966
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  19%|█▉        | 76/400 [36:48<5:34:07, 61.88s/it] 12/24/2024 16:16:12 - INFO - __main__ -   测试:76

12/24/2024 16:16:12 - INFO - __main__ -   Attack failed!

12/24/2024 16:16:12 - INFO - __main__ -   测试:77

12/24/2024 16:16:12 - INFO - __main__ -   Success rate: 94.74%

12/24/2024 16:16:12 - INFO - __main__ -   Successful items count: 18

12/24/2024 16:16:12 - INFO - __main__ -   Total count: 19

12/24/2024 16:16:12 - INFO - __main__ -   Index: 77

The original code is misclassified.
Number of variable_names extracted:  29
Generating population77...
init SUCCESS!
Processing examples:  20%|█▉        | 78/400 [36:48<3:56:20, 44.04s/it]12/24/2024 16:16:12 - INFO - __main__ -   测试:78

Number of variable_names extracted:  12
Generating population78...
	 0  --gap prob  0.002722511999309063
	 1  --gap prob  0.010344836860895157
	 2  --gap prob  0.023446667939424515
Processing examples:  20%|█▉        | 78/400 [37:00<3:56:20, 44.04s/it]12/24/2024 16:18:08 - INFO - __main__ -   Success rate: 95.00%

12/24/2024 16:18:08 - INFO - __main__ -   Successful items count: 19

12/24/2024 16:18:08 - INFO - __main__ -   Total count: 20

12/24/2024 16:18:08 - INFO - __main__ -   Index: 78

	 3  --gap prob  0.023446667939424515
	 4  --gap prob  0.03859389200806618
	 5  --gap prob  0.03859389200806618
	 6  --gap prob  0.03859389200806618
	 7  --gap prob  0.04974750801920891
	 8  --gap prob  0.04974750801920891
	 9  --gap prob  0.04974750801920891
	 10  --gap prob  0.04974750801920891
	 11  --gap prob  0.14058206230401993
	 12  --gap prob  0.14058206230401993
	 13  --gap prob  0.14058206230401993
	 14  --gap prob  0.14058206230401993
	 15  --gap prob  0.1620788350701332
	 16  --gap prob  0.1620788350701332
	 17  --gap prob  0.1620788350701332
	 18  --gap prob  0.1620788350701332
	 19  --gap prob  0.03461122885346413
Changing code structure...
Processing examples:  20%|█▉        | 79/400 [38:44<5:01:12, 56.30s/it]12/24/2024 16:18:08 - INFO - __main__ -   测试:79

12/24/2024 16:19:55 - INFO - __main__ -   Success rate: 95.24%

12/24/2024 16:19:55 - INFO - __main__ -   Successful items count: 20

12/24/2024 16:19:55 - INFO - __main__ -   Total count: 21

12/24/2024 16:19:55 - INFO - __main__ -   Index: 79

Number of variable_names extracted:  17
Generating population79...
	 0  --gap prob  0.010395131073892117
	 1  --gap prob  0.01528156641870737
	 2  --gap prob  0.01528156641870737
	 3  --gap prob  0.0401059715077281
	 4  --gap prob  0.0401059715077281
	 5  --gap prob  0.056457473896443844
	 6  --gap prob  0.056457473896443844
	 7  --gap prob  0.14053239580243826
	 8  --gap prob  0.14053239580243826
	 9  --gap prob  0.14053239580243826
	 10  --gap prob  0.14053239580243826
	 11  --gap prob  0.13922867830842733
	 12  --gap prob  0.13922867830842733
	 13  --gap prob  0.13922867830842733
	 14  --gap prob  0.13922867830842733
evaluate SUCCESS!
Processing examples:  20%|██        | 80/400 [40:31<5:53:10, 66.22s/it]12/24/2024 16:19:55 - INFO - __main__ -   测试:80

12/24/2024 16:20:14 - INFO - __main__ -   Success rate: 95.45%

12/24/2024 16:20:14 - INFO - __main__ -   Successful items count: 21

12/24/2024 16:20:14 - INFO - __main__ -   Total count: 22

12/24/2024 16:20:14 - INFO - __main__ -   Index: 80

Number of variable_names extracted:  44
Generating population80...
	 0  --gap prob  0.015178084373474121
	 1  --gap prob  0.10933488607406616
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|██        | 81/400 [40:50<4:56:43, 55.81s/it]12/24/2024 16:20:14 - INFO - __main__ -   测试:81

12/24/2024 16:22:53 - INFO - __main__ -   Success rate: 95.65%

12/24/2024 16:22:53 - INFO - __main__ -   Successful items count: 22

12/24/2024 16:22:53 - INFO - __main__ -   Total count: 23

12/24/2024 16:22:53 - INFO - __main__ -   Index: 81

Number of variable_names extracted:  18
Generating population81...
	 0  --gap prob  0.0020456844940781593
	 1  --gap prob  0.01110331155359745
	 2  --gap prob  0.019160224124789238
	 3  --gap prob  0.02082698605954647
	 4  --gap prob  0.02082698605954647
	 5  --gap prob  0.02082698605954647
	 6  --gap prob  0.02082698605954647
	 7  --gap prob  0.07631626166403294
	 8  --gap prob  0.07631626166403294
	 9  --gap prob  0.07631626166403294
	 10  --gap prob  0.07631626166403294
	 11  --gap prob  0.13362250663340092
	 12  --gap prob  0.13362250663340092
	 13  --gap prob  0.13362250663340092
	 14  --gap prob  0.13362250663340092
	 15  --gap prob  0.101023243740201
	 16  --gap prob  0.101023243740201
	 17  --gap prob  0.101023243740201
	 18  --gap prob  0.101023243740201
	 19  --gap prob  0.15609020926058292
Changing code structure...
Processing examples:  20%|██        | 82/400 [43:29<7:06:50, 80.54s/it]12/24/2024 16:22:53 - INFO - __main__ -   测试:82

12/24/2024 16:25:44 - INFO - __main__ -   Success rate: 95.83%

12/24/2024 16:25:44 - INFO - __main__ -   Successful items count: 23

12/24/2024 16:25:44 - INFO - __main__ -   Total count: 24

12/24/2024 16:25:44 - INFO - __main__ -   Index: 82

Number of variable_names extracted:  15
Generating population82...
	 0  --gap prob  -0.01964267436414957
	 1  --gap prob  -0.01964267436414957
	 2  --gap prob  -0.01964267436414957
	 3  --gap prob  -0.01964267436414957
	 4  --gap prob  -0.018423015251755714
	 5  --gap prob  -0.018423015251755714
	 6  --gap prob  -0.018423015251755714
	 7  --gap prob  -0.018423015251755714
	 8  --gap prob  -0.011435406282544136
	 9  --gap prob  -0.011435406282544136
	 10  --gap prob  -0.011435406282544136
	 11  --gap prob  -0.011435406282544136
	 12  --gap prob  -0.0038726329803466797
	 13  --gap prob  0.005691014230251312
	 14  --gap prob  0.005691014230251312
	 15  --gap prob  0.005691014230251312
	 16  --gap prob  0.005691014230251312
	 17  --gap prob  -0.0003989003598690033
	 18  --gap prob  -0.0003989003598690033
	 19  --gap prob  -0.0003989003598690033
Changing code structure...
Processing examples:  21%|██        | 83/400 [46:20<9:06:01, 103.35s/it]12/24/2024 16:25:44 - INFO - __main__ -   测试:83

12/24/2024 16:25:44 - INFO - __main__ -   Attack failed!

12/24/2024 16:25:44 - INFO - __main__ -   测试:84

12/24/2024 16:25:44 - INFO - __main__ -   Attack failed!

12/24/2024 16:25:44 - INFO - __main__ -   测试:85

12/24/2024 16:25:44 - INFO - __main__ -   Success rate: 96.00%

12/24/2024 16:25:44 - INFO - __main__ -   Successful items count: 24

12/24/2024 16:25:44 - INFO - __main__ -   Total count: 25

12/24/2024 16:25:44 - INFO - __main__ -   Index: 85

The original code is misclassified.
Number of variable_names extracted:  5
substituions_len == 0
Number of variable_names extracted:  28
Generating population85...
init SUCCESS!
Processing examples:  22%|██▏       | 86/400 [46:20<4:19:10, 49.52s/it] 12/24/2024 16:25:44 - INFO - __main__ -   测试:86

12/24/2024 16:25:44 - INFO - __main__ -   Attack failed!

12/24/2024 16:25:44 - INFO - __main__ -   测试:87

12/24/2024 16:25:44 - INFO - __main__ -   Attack failed!

12/24/2024 16:25:44 - INFO - __main__ -   测试:88

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  11
Generating population88...
	 0  --gap prob  0.0828712
	 1  --gap prob  0.0828712
Processing examples:  22%|██▏       | 86/400 [46:30<4:19:10, 49.52s/it]12/24/2024 16:29:02 - INFO - __main__ -   Success rate: 92.31%

12/24/2024 16:29:02 - INFO - __main__ -   Successful items count: 24

12/24/2024 16:29:02 - INFO - __main__ -   Total count: 26

12/24/2024 16:29:02 - INFO - __main__ -   Index: 88

	 2  --gap prob  0.09190363
	 3  --gap prob  0.09190363
	 4  --gap prob  0.25090557
	 5  --gap prob  0.25090557
	 6  --gap prob  0.08809054
	 7  --gap prob  0.08809054
	 8  --gap prob  0.08809054
	 9  --gap prob  0.08809054
	 10  --gap prob  0.0828712
	 11  --gap prob  0.23401445
	 12  --gap prob  0.23401445
	 13  --gap prob  0.23401445
	 14  --gap prob  0.23401445
	 15  --gap prob  0.16206193
	 16  --gap prob  0.16206193
	 17  --gap prob  0.16206193
	 18  --gap prob  0.16206193
	 19  --gap prob  0.10157865
Changing code structure...
Processing examples:  22%|██▏       | 89/400 [49:37<4:52:50, 56.50s/it]12/24/2024 16:29:02 - INFO - __main__ -   测试:89

12/24/2024 16:29:02 - INFO - __main__ -   Success rate: 92.59%

12/24/2024 16:29:02 - INFO - __main__ -   Successful items count: 25

12/24/2024 16:29:02 - INFO - __main__ -   Total count: 27

12/24/2024 16:29:02 - INFO - __main__ -   Index: 89

12/24/2024 16:29:02 - INFO - __main__ -   测试:90

12/24/2024 16:29:02 - INFO - __main__ -   Attack failed!

12/24/2024 16:29:02 - INFO - __main__ -   测试:91

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 16:36:31 - INFO - __main__ -   Success rate: 89.29%

12/24/2024 16:36:31 - INFO - __main__ -   Successful items count: 25

12/24/2024 16:36:31 - INFO - __main__ -   Total count: 28

12/24/2024 16:36:31 - INFO - __main__ -   Index: 91

Number of variable_names extracted:  27
Generating population89...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  64
Generating population91...
	 0  --gap prob  0.000577271
	 1  --gap prob  0.00065904856
	 2  --gap prob  0.00073981285
	 3  --gap prob  0.001029551
	 4  --gap prob  0.0010429025
	 5  --gap prob  0.0010429025
	 6  --gap prob  0.0011168718
	 7  --gap prob  0.0011866689
	 8  --gap prob  0.0012668371
	 9  --gap prob  0.0013802648
	 10  --gap prob  0.001445055
	 11  --gap prob  0.0016412139
	 12  --gap prob  0.0016412139
	 13  --gap prob  0.0013798475
	 14  --gap prob  0.0013798475
	 15  --gap prob  0.0013798475
	 16  --gap prob  0.0013798475
	 17  --gap prob  0.0014688969
	 18  --gap prob  0.0014688969
	 19  --gap prob  0.001563251
Changing code structure...
Processing examples:  23%|██▎       | 92/400 [57:07<7:51:25, 91.84s/it]12/24/2024 16:36:31 - INFO - __main__ -   测试:92

12/24/2024 16:38:06 - INFO - __main__ -   Success rate: 89.66%

12/24/2024 16:38:06 - INFO - __main__ -   Successful items count: 26

12/24/2024 16:38:06 - INFO - __main__ -   Total count: 29

12/24/2024 16:38:06 - INFO - __main__ -   Index: 92

Number of variable_names extracted:  4
Generating population92...
	 0  --gap prob  -0.0007202913984656334
	 1  --gap prob  -0.0007202913984656334
	 2  --gap prob  -0.0007202913984656334
	 3  --gap prob  -0.0007202913984656334
	 4  --gap prob  -0.00024209683761000633
	 5  --gap prob  -0.00024209683761000633
	 6  --gap prob  -0.00024209683761000633
	 7  --gap prob  -0.00024209683761000633
	 8  --gap prob  0.005442970432341099
	 9  --gap prob  0.005442970432341099
	 10  --gap prob  0.005442970432341099
	 11  --gap prob  0.005442970432341099
	 12  --gap prob  0.013306139037013054
	 13  --gap prob  0.013306139037013054
	 14  --gap prob  0.013306139037013054
	 15  --gap prob  0.013306139037013054
	 16  --gap prob  0.02520686760544777
	 17  --gap prob  0.02520686760544777
	 18  --gap prob  0.02520686760544777
	 19  --gap prob  0.02520686760544777
Changing code structure...
Processing examples:  23%|██▎       | 93/400 [58:42<7:52:19, 92.31s/it]12/24/2024 16:38:06 - INFO - __main__ -   测试:93

12/24/2024 16:38:06 - INFO - __main__ -   Attack failed!

12/24/2024 16:38:06 - INFO - __main__ -   测试:94

12/24/2024 16:38:06 - INFO - __main__ -   Attack failed!

12/24/2024 16:38:06 - INFO - __main__ -   测试:95

12/24/2024 16:38:06 - INFO - __main__ -   Attack failed!

12/24/2024 16:38:06 - INFO - __main__ -   测试:96

12/24/2024 16:38:06 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  6
substituions_len == 0
The original code is misclassified.
Processing examples:  24%|██▍       | 97/400 [58:42<4:08:55, 49.29s/it]12/24/2024 16:38:06 - INFO - __main__ -   测试:97

Number of variable_names extracted:  10
Generating population97...
	 0  --gap prob  -0.10795379
	 1  --gap prob  -0.10795379
	 2  --gap prob  -0.10795379
Processing examples:  24%|██▍       | 97/400 [59:01<4:08:55, 49.29s/it]12/24/2024 16:38:56 - INFO - __main__ -   Success rate: 90.00%

12/24/2024 16:38:56 - INFO - __main__ -   Successful items count: 27

12/24/2024 16:38:56 - INFO - __main__ -   Total count: 30

12/24/2024 16:38:56 - INFO - __main__ -   Index: 97

	 3  --gap prob  -0.10795379
	 4  --gap prob  0.2977785
	 5  --gap prob  0.2977785
	 6  --gap prob  0.2977785
	 7  --gap prob  0.2977785
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  24%|██▍       | 98/400 [59:32<4:08:54, 49.45s/it]12/24/2024 16:38:56 - INFO - __main__ -   测试:98

12/24/2024 16:38:56 - INFO - __main__ -   Attack failed!

12/24/2024 16:38:56 - INFO - __main__ -   测试:99

12/24/2024 16:43:25 - INFO - __main__ -   Success rate: 90.32%

12/24/2024 16:43:25 - INFO - __main__ -   Successful items count: 28

12/24/2024 16:43:25 - INFO - __main__ -   Total count: 31

12/24/2024 16:43:25 - INFO - __main__ -   Index: 99

The original code is misclassified.
Number of variable_names extracted:  39
Generating population99...
	 0  --gap prob  -0.15533119440078735
	 1  --gap prob  -0.15533119440078735
	 2  --gap prob  -0.15533119440078735
	 3  --gap prob  -0.1357284039258957
	 4  --gap prob  -0.1357284039258957
	 5  --gap prob  -0.1357284039258957
	 6  --gap prob  -0.1357284039258957
	 7  --gap prob  -0.14557228982448578
	 8  --gap prob  -0.14557228982448578
	 9  --gap prob  -0.14557228982448578
	 10  --gap prob  -0.14557228982448578
	 11  --gap prob  -0.12919101119041443
	 12  --gap prob  -0.12919101119041443
	 13  --gap prob  -0.12919101119041443
	 14  --gap prob  -0.12919101119041443
	 15  --gap prob  0.05665269494056702
	 16  --gap prob  0.05665269494056702
	 17  --gap prob  0.05665269494056702
	 18  --gap prob  0.05665269494056702
	 19  --gap prob  -0.05641809105873108
Changing code structure...
Processing examples:  25%|██▌       | 100/400 [1:04:01<6:10:29, 74.10s/it]12/24/2024 16:43:25 - INFO - __main__ -   测试:100

12/24/2024 16:43:53 - INFO - __main__ -   Success rate: 90.62%

12/24/2024 16:43:53 - INFO - __main__ -   Successful items count: 29

12/24/2024 16:43:53 - INFO - __main__ -   Total count: 32

12/24/2024 16:43:53 - INFO - __main__ -   Index: 100

Number of variable_names extracted:  12
Generating population100...
	 0  --gap prob  -0.19398785
	 1  --gap prob  -0.19398785
	 2  --gap prob  -0.19398785
	 3  --gap prob  -0.19398785
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  25%|██▌       | 101/400 [1:04:29<5:29:33, 66.13s/it]12/24/2024 16:43:53 - INFO - __main__ -   测试:101

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 16:46:06 - INFO - __main__ -   Success rate: 90.91%

12/24/2024 16:46:06 - INFO - __main__ -   Successful items count: 30

12/24/2024 16:46:06 - INFO - __main__ -   Total count: 33

12/24/2024 16:46:06 - INFO - __main__ -   Index: 101

Number of variable_names extracted:  6
Generating population101...
	 0  --gap prob  0.024713974446058273
	 1  --gap prob  0.0219850093126297
	 2  --gap prob  0.0687403604388237
	 3  --gap prob  0.0687403604388237
	 4  --gap prob  0.0687403604388237
	 5  --gap prob  0.0687403604388237
	 6  --gap prob  0.011733932420611382
	 7  --gap prob  0.011733932420611382
	 8  --gap prob  0.011733932420611382
	 9  --gap prob  0.011733932420611382
	 10  --gap prob  0.04389765486121178
	 11  --gap prob  0.04389765486121178
	 12  --gap prob  0.04389765486121178
	 13  --gap prob  0.04389765486121178
	 14  --gap prob  0.017164267599582672
	 15  --gap prob  0.017164267599582672
	 16  --gap prob  0.017164267599582672
	 17  --gap prob  0.017164267599582672
	 18  --gap prob  0.014086313545703888
	 19  --gap prob  0.014086313545703888
Changing code structure...
Processing examples:  26%|██▌       | 102/400 [1:06:42<6:33:39, 79.26s/it]12/24/2024 16:46:06 - INFO - __main__ -   测试:102

12/24/2024 16:47:31 - INFO - __main__ -   Success rate: 91.18%

12/24/2024 16:47:31 - INFO - __main__ -   Successful items count: 31

12/24/2024 16:47:31 - INFO - __main__ -   Total count: 34

12/24/2024 16:47:31 - INFO - __main__ -   Index: 102

Number of variable_names extracted:  11
Generating population102...
	 0  --gap prob  0.11777344346046448
	 1  --gap prob  0.25359484553337097
	 2  --gap prob  0.3077841103076935
	 3  --gap prob  0.3077841103076935
	 4  --gap prob  0.3077841103076935
	 5  --gap prob  0.3077841103076935
	 6  --gap prob  0.25359484553337097
	 7  --gap prob  0.25359484553337097
	 8  --gap prob  0.25359484553337097
	 9  --gap prob  0.25359484553337097
	 10  --gap prob  0.21763044595718384
	 11  --gap prob  0.21763044595718384
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  26%|██▌       | 103/400 [1:08:07<6:39:06, 80.63s/it]12/24/2024 16:47:31 - INFO - __main__ -   测试:103

12/24/2024 16:47:31 - INFO - __main__ -   Attack failed!

12/24/2024 16:47:31 - INFO - __main__ -   测试:104

12/24/2024 16:49:16 - INFO - __main__ -   Success rate: 91.43%

12/24/2024 16:49:16 - INFO - __main__ -   Successful items count: 32

12/24/2024 16:49:16 - INFO - __main__ -   Total count: 35

12/24/2024 16:49:16 - INFO - __main__ -   Index: 104

The original code is misclassified.
Number of variable_names extracted:  20
Generating population104...
	 0  --gap prob  0.00012905709445476532
	 1  --gap prob  0.0016660885885357857
	 2  --gap prob  0.0019142944365739822
	 3  --gap prob  0.002268725074827671
	 4  --gap prob  0.002268725074827671
	 5  --gap prob  0.00752211082726717
	 6  --gap prob  0.00803759042173624
	 7  --gap prob  0.00803759042173624
	 8  --gap prob  0.00724897813051939
	 9  --gap prob  0.010281381197273731
	 10  --gap prob  0.010281381197273731
	 11  --gap prob  0.010281381197273731
	 12  --gap prob  0.010281381197273731
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  26%|██▋       | 105/400 [1:09:52<5:42:48, 69.72s/it]12/24/2024 16:49:16 - INFO - __main__ -   测试:105

12/24/2024 16:51:05 - INFO - __main__ -   Success rate: 91.67%

12/24/2024 16:51:05 - INFO - __main__ -   Successful items count: 33

12/24/2024 16:51:05 - INFO - __main__ -   Total count: 36

12/24/2024 16:51:05 - INFO - __main__ -   Index: 105

Number of variable_names extracted:  12
Generating population105...
	 0  --gap prob  -0.0012178588658571243
	 1  --gap prob  -0.0012178588658571243
	 2  --gap prob  -0.0012178588658571243
	 3  --gap prob  -0.0012241937220096588
	 4  --gap prob  -0.0012241937220096588
	 5  --gap prob  -0.0012241937220096588
	 6  --gap prob  -0.0012241937220096588
	 7  --gap prob  0.00027473084628582
	 8  --gap prob  0.00027473084628582
	 9  --gap prob  0.00027473084628582
	 10  --gap prob  0.00027473084628582
	 11  --gap prob  0.00013996008783578873
	 12  --gap prob  0.00013996008783578873
	 13  --gap prob  0.00013996008783578873
	 14  --gap prob  0.00013996008783578873
	 15  --gap prob  0.0010705050081014633
	 16  --gap prob  0.0010705050081014633
	 17  --gap prob  0.0010705050081014633
	 18  --gap prob  0.0010705050081014633
	 19  --gap prob  0.001937326043844223
Changing code structure...
Processing examples:  26%|██▋       | 106/400 [1:11:41<6:22:47, 78.12s/it]12/24/2024 16:51:05 - INFO - __main__ -   测试:106

12/24/2024 16:51:05 - INFO - __main__ -   Attack failed!

12/24/2024 16:51:05 - INFO - __main__ -   测试:107

12/24/2024 16:51:11 - INFO - __main__ -   Success rate: 91.89%

12/24/2024 16:51:11 - INFO - __main__ -   Successful items count: 34

12/24/2024 16:51:11 - INFO - __main__ -   Total count: 37

12/24/2024 16:51:11 - INFO - __main__ -   Index: 107

The original code is misclassified.
Number of variable_names extracted:  90
Generating population107...
	 0  --gap prob  0.13834274
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  27%|██▋       | 108/400 [1:11:46<4:00:32, 49.43s/it]12/24/2024 16:51:11 - INFO - __main__ -   测试:108

12/24/2024 16:51:11 - INFO - __main__ -   Attack failed!

12/24/2024 16:51:11 - INFO - __main__ -   测试:109

The original code is misclassified.
Number of variable_names extracted:  10
Generating population109...
	 0  --gap prob  0.01220715045928955
	 1  --gap prob  0.14274665713310242
Processing examples:  27%|██▋       | 108/400 [1:12:02<4:00:32, 49.43s/it]12/24/2024 16:51:26 - INFO - __main__ -   Success rate: 92.11%

12/24/2024 16:51:26 - INFO - __main__ -   Successful items count: 35

12/24/2024 16:51:26 - INFO - __main__ -   Total count: 38

12/24/2024 16:51:26 - INFO - __main__ -   Index: 109

select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 110/400 [1:12:02<2:47:30, 34.66s/it]12/24/2024 16:51:26 - INFO - __main__ -   测试:110

12/24/2024 16:54:28 - INFO - __main__ -   Success rate: 92.31%

12/24/2024 16:54:28 - INFO - __main__ -   Successful items count: 36

12/24/2024 16:54:28 - INFO - __main__ -   Total count: 39

12/24/2024 16:54:28 - INFO - __main__ -   Index: 110

Number of variable_names extracted:  35
Generating population110...
	 0  --gap prob  -0.22964317351579666
	 1  --gap prob  -0.22964317351579666
	 2  --gap prob  -0.22964317351579666
	 3  --gap prob  -0.22964317351579666
	 4  --gap prob  -0.21523016691207886
	 5  --gap prob  -0.21523016691207886
	 6  --gap prob  -0.21523016691207886
	 7  --gap prob  -0.21523016691207886
	 8  --gap prob  -0.18507936596870422
	 9  --gap prob  -0.18507936596870422
	 10  --gap prob  -0.18507936596870422
	 11  --gap prob  0.024009138345718384
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 111/400 [1:15:04<5:10:32, 64.47s/it]12/24/2024 16:54:28 - INFO - __main__ -   测试:111

12/24/2024 16:55:42 - INFO - __main__ -   Success rate: 92.50%

12/24/2024 16:55:42 - INFO - __main__ -   Successful items count: 37

12/24/2024 16:55:42 - INFO - __main__ -   Total count: 40

12/24/2024 16:55:42 - INFO - __main__ -   Index: 111

Number of variable_names extracted:  2
Generating population111...
	 0  --gap prob  0.049539536237716675
	 1  --gap prob  0.049539536237716675
	 2  --gap prob  0.049539536237716675
	 3  --gap prob  0.049539536237716675
	 4  --gap prob  0.049539536237716675
	 5  --gap prob  0.049539536237716675
	 6  --gap prob  0.049539536237716675
	 7  --gap prob  0.049539536237716675
	 8  --gap prob  0.049539536237716675
	 9  --gap prob  0.049539536237716675
	 10  --gap prob  0.049539536237716675
	 11  --gap prob  0.049539536237716675
	 12  --gap prob  0.049539536237716675
	 13  --gap prob  0.049539536237716675
	 14  --gap prob  0.049539536237716675
	 15  --gap prob  0.049539536237716675
	 16  --gap prob  0.049539536237716675
	 17  --gap prob  0.049539536237716675
	 18  --gap prob  0.049539536237716675
	 19  --gap prob  0.049539536237716675
Changing code structure...
Processing examples:  28%|██▊       | 112/400 [1:16:18<5:19:14, 66.51s/it]12/24/2024 16:55:42 - INFO - __main__ -   测试:112

12/24/2024 16:55:43 - INFO - __main__ -   Success rate: 92.68%

12/24/2024 16:55:43 - INFO - __main__ -   Successful items count: 38

12/24/2024 16:55:43 - INFO - __main__ -   Total count: 41

12/24/2024 16:55:43 - INFO - __main__ -   Index: 112

Number of variable_names extracted:  15
Generating population112...
	 0  --gap prob  0.03296464681625366
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 113/400 [1:16:19<4:02:25, 50.68s/it]12/24/2024 16:55:43 - INFO - __main__ -   测试:113

Number of variable_names extracted:  23
Generating population113...
	 0  --gap prob  0.020822979509830475
	 1  --gap prob  0.058304764330387115
Processing examples:  28%|██▊       | 113/400 [1:16:32<4:02:25, 50.68s/it]12/24/2024 16:57:18 - INFO - __main__ -   Success rate: 92.86%

12/24/2024 16:57:18 - INFO - __main__ -   Successful items count: 39

12/24/2024 16:57:18 - INFO - __main__ -   Total count: 42

12/24/2024 16:57:18 - INFO - __main__ -   Index: 113

	 2  --gap prob  0.16917184740304947
	 3  --gap prob  0.21648816019296646
	 4  --gap prob  0.3010980859398842
	 5  --gap prob  0.3010980859398842
	 6  --gap prob  0.3010980859398842
	 7  --gap prob  0.35259444266557693
	 8  --gap prob  0.35259444266557693
	 9  --gap prob  0.25172368437051773
	 10  --gap prob  0.25172368437051773
	 11  --gap prob  0.25172368437051773
	 12  --gap prob  0.25172368437051773
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 114/400 [1:17:54<4:55:13, 61.94s/it]12/24/2024 16:57:18 - INFO - __main__ -   测试:114

12/24/2024 16:57:18 - INFO - __main__ -   Success rate: 93.02%

12/24/2024 16:57:18 - INFO - __main__ -   Successful items count: 40

12/24/2024 16:57:18 - INFO - __main__ -   Total count: 43

12/24/2024 16:57:18 - INFO - __main__ -   Index: 114

Number of variable_names extracted:  52
Generating population114...
init SUCCESS!
Processing examples:  29%|██▉       | 115/400 [1:17:54<3:35:24, 45.35s/it]12/24/2024 16:57:18 - INFO - __main__ -   测试:115

12/24/2024 16:59:06 - INFO - __main__ -   Success rate: 93.18%

12/24/2024 16:59:06 - INFO - __main__ -   Successful items count: 41

12/24/2024 16:59:06 - INFO - __main__ -   Total count: 44

12/24/2024 16:59:06 - INFO - __main__ -   Index: 115

Number of variable_names extracted:  8
Generating population115...
	 0  --gap prob  0.11571681499481201
	 1  --gap prob  0.11571681499481201
	 2  --gap prob  0.11571681499481201
	 3  --gap prob  0.11571681499481201
	 4  --gap prob  0.12061861157417297
	 5  --gap prob  0.12061861157417297
	 6  --gap prob  0.12061861157417297
	 7  --gap prob  0.12061861157417297
	 8  --gap prob  0.11571681499481201
	 9  --gap prob  0.11571681499481201
	 10  --gap prob  0.11571681499481201
	 11  --gap prob  0.11571681499481201
	 12  --gap prob  0.12061861157417297
	 13  --gap prob  0.12061861157417297
	 14  --gap prob  0.12061861157417297
	 15  --gap prob  0.12061861157417297
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  29%|██▉       | 116/400 [1:19:42<4:57:32, 62.86s/it]12/24/2024 16:59:06 - INFO - __main__ -   测试:116

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 16:59:07 - INFO - __main__ -   Success rate: 93.33%

12/24/2024 16:59:07 - INFO - __main__ -   Successful items count: 42

12/24/2024 16:59:07 - INFO - __main__ -   Total count: 45

12/24/2024 16:59:07 - INFO - __main__ -   Index: 116

Number of variable_names extracted:  8
Generating population116...
	 0  --gap prob  0.23666996
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  29%|██▉       | 117/400 [1:19:43<3:33:49, 45.33s/it]12/24/2024 16:59:07 - INFO - __main__ -   测试:117

12/24/2024 17:02:09 - INFO - __main__ -   Success rate: 91.30%

12/24/2024 17:02:09 - INFO - __main__ -   Successful items count: 42

12/24/2024 17:02:09 - INFO - __main__ -   Total count: 46

12/24/2024 17:02:09 - INFO - __main__ -   Index: 117

Number of variable_names extracted:  8
Generating population117...
	 0  --gap prob  0.006014943
	 1  --gap prob  0.006014943
	 2  --gap prob  0.006014943
	 3  --gap prob  0.012408435
	 4  --gap prob  0.012408435
	 5  --gap prob  0.012408435
	 6  --gap prob  0.012408435
	 7  --gap prob  0.030272841
	 8  --gap prob  0.030272841
	 9  --gap prob  0.030272841
	 10  --gap prob  0.030272841
	 11  --gap prob  0.015143216
	 12  --gap prob  0.015143216
	 13  --gap prob  0.015143216
	 14  --gap prob  0.015143216
	 15  --gap prob  0.030272841
	 16  --gap prob  0.030272841
	 17  --gap prob  0.030272841
	 18  --gap prob  0.030272841
	 19  --gap prob  0.012408435
Changing code structure...
Processing examples:  30%|██▉       | 118/400 [1:22:45<6:37:46, 84.63s/it]12/24/2024 17:02:09 - INFO - __main__ -   测试:118

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 17:15:59 - INFO - __main__ -   Success rate: 91.49%

12/24/2024 17:15:59 - INFO - __main__ -   Successful items count: 43

12/24/2024 17:15:59 - INFO - __main__ -   Total count: 47

12/24/2024 17:15:59 - INFO - __main__ -   Index: 118

Number of variable_names extracted:  63
Generating population118...
	 0  --gap prob  0.00084769726
	 1  --gap prob  0.00095391273
	 2  --gap prob  0.0009763241
	 3  --gap prob  0.0009763241
	 4  --gap prob  0.0009763241
	 5  --gap prob  0.00095391273
	 6  --gap prob  0.00095391273
	 7  --gap prob  0.00095391273
	 8  --gap prob  0.0010470748
	 9  --gap prob  0.0010470748
	 10  --gap prob  0.009683788
	 11  --gap prob  0.009683788
	 12  --gap prob  0.009683788
	 13  --gap prob  0.009683788
	 14  --gap prob  0.00418061
	 15  --gap prob  0.00418061
	 16  --gap prob  0.00418061
	 17  --gap prob  0.00418061
	 18  --gap prob  0.00874269
	 19  --gap prob  0.00874269
Changing code structure...
Processing examples:  30%|██▉       | 119/400 [1:36:35<23:34:23, 302.00s/it]12/24/2024 17:15:59 - INFO - __main__ -   测试:119

12/24/2024 17:15:59 - INFO - __main__ -   Attack failed!

12/24/2024 17:15:59 - INFO - __main__ -   测试:120

12/24/2024 17:16:01 - INFO - __main__ -   Success rate: 91.67%

12/24/2024 17:16:01 - INFO - __main__ -   Successful items count: 44

12/24/2024 17:16:01 - INFO - __main__ -   Total count: 48

12/24/2024 17:16:01 - INFO - __main__ -   Index: 120

The original code is misclassified.
Number of variable_names extracted:  12
Generating population120...
	 0  --gap prob  0.40940124
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  30%|███       | 121/400 [1:36:37<12:48:08, 165.19s/it]12/24/2024 17:16:01 - INFO - __main__ -   测试:121

12/24/2024 17:16:19 - INFO - __main__ -   Success rate: 91.84%

12/24/2024 17:16:19 - INFO - __main__ -   Successful items count: 45

12/24/2024 17:16:19 - INFO - __main__ -   Total count: 49

12/24/2024 17:16:19 - INFO - __main__ -   Index: 121

Number of variable_names extracted:  12
Generating population121...
	 0  --gap prob  0.3313334
	 1  --gap prob  0.40580362
	 2  --gap prob  0.40580362
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  30%|███       | 122/400 [1:36:55<9:58:06, 129.09s/it] 12/24/2024 17:16:19 - INFO - __main__ -   测试:122

12/24/2024 17:19:48 - INFO - __main__ -   Success rate: 92.00%

12/24/2024 17:19:48 - INFO - __main__ -   Successful items count: 46

12/24/2024 17:19:48 - INFO - __main__ -   Total count: 50

12/24/2024 17:19:48 - INFO - __main__ -   Index: 122

Number of variable_names extracted:  7
Generating population122...
	 0  --gap prob  -0.006824109703302383
	 1  --gap prob  -0.006824109703302383
	 2  --gap prob  -0.006824109703302383
	 3  --gap prob  0.003812626004219055
	 4  --gap prob  0.003812626004219055
	 5  --gap prob  -0.007166119292378426
	 6  --gap prob  -0.007166119292378426
	 7  --gap prob  -0.007166119292378426
	 8  --gap prob  -0.007166119292378426
	 9  --gap prob  -0.007166119292378426
	 10  --gap prob  -0.007166119292378426
	 11  --gap prob  -0.007166119292378426
	 12  --gap prob  -0.007166119292378426
	 13  --gap prob  -0.007166119292378426
	 14  --gap prob  -0.007166119292378426
	 15  --gap prob  -0.007166119292378426
	 16  --gap prob  -0.007166119292378426
	 17  --gap prob  -0.007166119292378426
	 18  --gap prob  -0.007166119292378426
	 19  --gap prob  -0.007166119292378426
Changing code structure...
Processing examples:  31%|███       | 123/400 [1:40:23<11:31:27, 149.78s/it]12/24/2024 17:19:48 - INFO - __main__ -   测试:123

12/24/2024 17:22:55 - INFO - __main__ -   Success rate: 90.20%

12/24/2024 17:22:55 - INFO - __main__ -   Successful items count: 46

12/24/2024 17:22:55 - INFO - __main__ -   Total count: 51

12/24/2024 17:22:55 - INFO - __main__ -   Index: 123

Number of variable_names extracted:  16
Generating population123...
	 0  --gap prob  -0.0002243518829345703
	 1  --gap prob  0.0032816873863339424
	 2  --gap prob  0.0032816873863339424
	 3  --gap prob  0.022502087987959385
	 4  --gap prob  0.022502087987959385
	 5  --gap prob  0.022502087987959385
	 6  --gap prob  0.005523369647562504
	 7  --gap prob  0.006480426527559757
	 8  --gap prob  0.006480426527559757
	 9  --gap prob  0.006480426527559757
	 10  --gap prob  0.006480426527559757
	 11  --gap prob  0.010340490378439426
	 12  --gap prob  0.010340490378439426
	 13  --gap prob  0.010340490378439426
	 14  --gap prob  0.010340490378439426
	 15  --gap prob  0.005523369647562504
	 16  --gap prob  0.005523369647562504
	 17  --gap prob  0.005523369647562504
	 18  --gap prob  0.005523369647562504
	 19  --gap prob  0.009607392363250256
Changing code structure...
Processing examples:  31%|███       | 124/400 [1:43:31<12:15:43, 159.94s/it]12/24/2024 17:22:55 - INFO - __main__ -   测试:124

12/24/2024 17:22:55 - INFO - __main__ -   Attack failed!

12/24/2024 17:22:55 - INFO - __main__ -   测试:125

12/24/2024 17:22:55 - INFO - __main__ -   Attack failed!

12/24/2024 17:22:55 - INFO - __main__ -   测试:126

12/24/2024 17:23:02 - INFO - __main__ -   Success rate: 90.38%

12/24/2024 17:23:02 - INFO - __main__ -   Successful items count: 47

12/24/2024 17:23:02 - INFO - __main__ -   Total count: 52

12/24/2024 17:23:02 - INFO - __main__ -   Index: 126

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  12
Generating population126...
	 0  --gap prob  0.24466991
	 1  --gap prob  0.24466991
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  32%|███▏      | 127/400 [1:43:38<5:42:55, 75.37s/it]  12/24/2024 17:23:02 - INFO - __main__ -   测试:127

12/24/2024 17:23:02 - INFO - __main__ -   Success rate: 90.57%

12/24/2024 17:23:02 - INFO - __main__ -   Successful items count: 48

12/24/2024 17:23:02 - INFO - __main__ -   Total count: 53

12/24/2024 17:23:02 - INFO - __main__ -   Index: 127

Number of variable_names extracted:  36
Generating population127...
init SUCCESS!
Processing examples:  32%|███▏      | 128/400 [1:43:38<4:32:21, 60.08s/it]12/24/2024 17:23:02 - INFO - __main__ -   测试:128

12/24/2024 17:23:02 - INFO - __main__ -   Success rate: 90.74%

12/24/2024 17:23:02 - INFO - __main__ -   Successful items count: 49

12/24/2024 17:23:02 - INFO - __main__ -   Total count: 54

12/24/2024 17:23:02 - INFO - __main__ -   Index: 128

12/24/2024 17:23:02 - INFO - __main__ -   测试:129

12/24/2024 17:23:02 - INFO - __main__ -   Attack failed!

12/24/2024 17:23:02 - INFO - __main__ -   测试:130

/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
12/24/2024 17:23:03 - INFO - __main__ -   Success rate: 90.91%

12/24/2024 17:23:03 - INFO - __main__ -   Successful items count: 50

12/24/2024 17:23:03 - INFO - __main__ -   Total count: 55

12/24/2024 17:23:03 - INFO - __main__ -   Index: 130

Number of variable_names extracted:  9
Generating population128...
init SUCCESS!
The original code is misclassified.
Number of variable_names extracted:  46
Generating population130...
init SUCCESS!
Processing examples:  33%|███▎      | 131/400 [1:43:39<2:24:01, 32.13s/it]12/24/2024 17:23:03 - INFO - __main__ -   测试:131

12/24/2024 17:25:49 - INFO - __main__ -   Success rate: 91.07%

12/24/2024 17:25:49 - INFO - __main__ -   Successful items count: 51

12/24/2024 17:25:49 - INFO - __main__ -   Total count: 56

12/24/2024 17:25:49 - INFO - __main__ -   Index: 131

Number of variable_names extracted:  31
Generating population131...
	 0  --gap prob  0.00044995546
	 1  --gap prob  0.000731349
	 2  --gap prob  0.0008658767
	 3  --gap prob  0.0012515783
	 4  --gap prob  0.0016442537
	 5  --gap prob  0.0016442537
	 6  --gap prob  0.0016442537
	 7  --gap prob  0.001750052
	 8  --gap prob  0.0018074512
	 9  --gap prob  0.002137661
	 10  --gap prob  0.002137661
	 11  --gap prob  0.0023489594
	 12  --gap prob  0.0023489594
	 13  --gap prob  0.0028981566
	 14  --gap prob  0.0028981566
	 15  --gap prob  0.0028981566
	 16  --gap prob  0.00308609
	 17  --gap prob  0.00308609
	 18  --gap prob  0.00308609
	 19  --gap prob  0.00308609
Changing code structure...
Processing examples:  33%|███▎      | 132/400 [1:46:25<4:12:40, 56.57s/it]12/24/2024 17:25:49 - INFO - __main__ -   测试:132

12/24/2024 17:29:40 - INFO - __main__ -   Success rate: 91.23%

12/24/2024 17:29:40 - INFO - __main__ -   Successful items count: 52

12/24/2024 17:29:40 - INFO - __main__ -   Total count: 57

12/24/2024 17:29:40 - INFO - __main__ -   Index: 132

Number of variable_names extracted:  22
Generating population132...
	 0  --gap prob  0.037242174
	 1  --gap prob  0.20009959
	 2  --gap prob  0.20009959
	 3  --gap prob  0.20009959
	 4  --gap prob  0.20009959
	 5  --gap prob  0.23441768
	 6  --gap prob  0.23441768
	 7  --gap prob  0.23441768
	 8  --gap prob  0.23441768
	 9  --gap prob  -0.033253253
	 10  --gap prob  -0.033253253
	 11  --gap prob  -0.033253253
	 12  --gap prob  -0.033253253
	 13  --gap prob  -0.017811239
	 14  --gap prob  -0.017811239
	 15  --gap prob  -0.017811239
	 16  --gap prob  -0.017811239
	 17  --gap prob  0.04950267
	 18  --gap prob  0.04950267
	 19  --gap prob  0.04950267
Changing code structure...
Processing examples:  33%|███▎      | 133/400 [1:50:16<6:51:13, 92.41s/it]12/24/2024 17:29:40 - INFO - __main__ -   测试:133

12/24/2024 17:29:40 - INFO - __main__ -   Attack failed!

12/24/2024 17:29:40 - INFO - __main__ -   测试:134

12/24/2024 17:29:40 - INFO - __main__ -   Attack failed!

12/24/2024 17:29:40 - INFO - __main__ -   测试:135

12/24/2024 17:29:40 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  34%|███▍      | 136/400 [1:50:16<3:36:01, 49.10s/it]12/24/2024 17:29:40 - INFO - __main__ -   测试:136

Number of variable_names extracted:  57
Generating population136...
	 0  --gap prob  0.20338702
Processing examples:  34%|███▍      | 136/400 [1:50:34<3:36:01, 49.10s/it]12/24/2024 17:30:29 - INFO - __main__ -   Success rate: 91.38%

12/24/2024 17:30:29 - INFO - __main__ -   Successful items count: 53

12/24/2024 17:30:29 - INFO - __main__ -   Total count: 58

12/24/2024 17:30:29 - INFO - __main__ -   Index: 136

	 1  --gap prob  0.20687073
	 2  --gap prob  0.20687073
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  34%|███▍      | 137/400 [1:51:05<3:35:25, 49.15s/it]12/24/2024 17:30:29 - INFO - __main__ -   测试:137

12/24/2024 17:30:29 - INFO - __main__ -   Attack failed!

12/24/2024 17:30:29 - INFO - __main__ -   测试:138

12/24/2024 17:32:59 - INFO - __main__ -   Success rate: 91.53%

12/24/2024 17:32:59 - INFO - __main__ -   Successful items count: 54

12/24/2024 17:32:59 - INFO - __main__ -   Total count: 59

12/24/2024 17:32:59 - INFO - __main__ -   Index: 138

The original code is misclassified.
Number of variable_names extracted:  29
Generating population138...
	 0  --gap prob  0.07404784858226776
	 1  --gap prob  0.07404784858226776
	 2  --gap prob  0.07404784858226776
	 3  --gap prob  0.12906315922737122
	 4  --gap prob  0.12906315922737122
	 5  --gap prob  0.4002043902873993
	 6  --gap prob  0.4002043902873993
	 7  --gap prob  0.4002043902873993
	 8  --gap prob  0.4002043902873993
	 9  --gap prob  0.37984389066696167
	 10  --gap prob  0.37984389066696167
	 11  --gap prob  0.37984389066696167
	 12  --gap prob  0.37984389066696167
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  35%|███▍      | 139/400 [1:53:35<4:11:47, 57.88s/it]12/24/2024 17:32:59 - INFO - __main__ -   测试:139

12/24/2024 17:32:59 - INFO - __main__ -   Attack failed!

12/24/2024 17:32:59 - INFO - __main__ -   测试:140

12/24/2024 17:33:01 - INFO - __main__ -   Success rate: 91.67%

12/24/2024 17:33:01 - INFO - __main__ -   Successful items count: 55

12/24/2024 17:33:01 - INFO - __main__ -   Total count: 60

12/24/2024 17:33:01 - INFO - __main__ -   Index: 140

The original code is misclassified.
Number of variable_names extracted:  27
Generating population140...
	 0  --gap prob  0.26161128
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  35%|███▌      | 141/400 [1:53:37<2:49:12, 39.20s/it]12/24/2024 17:33:01 - INFO - __main__ -   测试:141

Number of variable_names extracted:  16
Generating population141...
Processing examples:  35%|███▌      | 141/400 [1:53:37<3:28:43, 48.35s/it]
Traceback (most recent call last):
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/test.py", line 177, in <module>
    main()
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/test.py", line 151, in main
    is_success, final_code, min_gap_prob = attacker.attack(
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/pso.py", line 671, in attack
    current_var_name = tmp_code_tokens[dim]
IndexError: list index out of range
