Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at microsoft/codebert-base-mlm and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/../code/run.py:112: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/test.py:110: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).

 cached_features_file:  ../dataset/codebert_cached_test_subs_gan_0_400
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]02/28/2025 19:00:46 - INFO - __main__ -   测试:0

02/28/2025 19:00:47 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:   0%|          | 1/400 [00:00<01:40,  3.96it/s]02/28/2025 19:00:47 - INFO - __main__ -   测试:1

02/28/2025 19:00:56 - INFO - __main__ -   Success rate: 100.00%

02/28/2025 19:00:56 - INFO - __main__ -   Successful items count: 1

02/28/2025 19:00:56 - INFO - __main__ -   Total count: 1

02/28/2025 19:00:56 - INFO - __main__ -   Index: 1

Number of variable_names extracted:  7
Generating population1...
init SUCCESS!
Processing examples:   0%|          | 2/400 [00:09<35:34,  5.36s/it]02/28/2025 19:00:56 - INFO - __main__ -   测试:2

02/28/2025 19:00:56 - INFO - __main__ -   Attack failed!

02/28/2025 19:00:56 - INFO - __main__ -   测试:3

02/28/2025 19:00:56 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:   1%|          | 4/400 [00:09<13:27,  2.04s/it]02/28/2025 19:00:56 - INFO - __main__ -   测试:4

02/28/2025 19:01:04 - INFO - __main__ -   Success rate: 100.00%

02/28/2025 19:01:04 - INFO - __main__ -   Successful items count: 2

02/28/2025 19:01:04 - INFO - __main__ -   Total count: 2

02/28/2025 19:01:04 - INFO - __main__ -   Index: 4

Number of variable_names extracted:  10
Generating population4...
init SUCCESS!
Processing examples:   1%|▏         | 5/400 [00:17<26:08,  3.97s/it]02/28/2025 19:01:04 - INFO - __main__ -   测试:5

We strongly recommend passing in an `attention_mask` since your input_ids may be padded. See https://huggingface.co/docs/transformers/troubleshooting#incorrect-output-when-padding-tokens-arent-masked.
02/28/2025 19:01:27 - INFO - __main__ -   Success rate: 66.67%

02/28/2025 19:01:27 - INFO - __main__ -   Successful items count: 2

02/28/2025 19:01:27 - INFO - __main__ -   Total count: 3

02/28/2025 19:01:27 - INFO - __main__ -   Index: 5

Number of variable_names extracted:  1
Generating population5...
	 0  --most gap 0
	 1  --most gap 0.007004857994616032
	 2  --most gap 0.007004857994616032
	 3  --most gap 0.007004857994616032
	 4  --most gap 0.007004857994616032
两轮结果未更新,Changing code structure...
	 5  --most gap 0.007004857994616032
	 6  --most gap 0.007004857994616032
	 7  --most gap 0.007004857994616032
两轮结果未更新,Changing code structure...
	 8  --most gap 0.007004857994616032
	 9  --most gap 0.007004857994616032
	 10  --most gap 0.007004857994616032
两轮结果未更新,Changing code structure...
	 11  --most gap 0.007004857994616032
	 12  --most gap 0.007004857994616032
	 13  --most gap 0.007004857994616032
两轮结果未更新,Changing code structure...
	 14  --most gap 0.007004857994616032
	 15  --most gap 0.007004857994616032
	 16  --most gap 0.007004857994616032
两轮结果未更新,Changing code structure...
	 17  --most gap 0.007004857994616032
	 18  --most gap 0.007004857994616032
	 19  --most gap 0.007004857994616032
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:   2%|▏         | 6/400 [00:40<1:03:28,  9.67s/it]02/28/2025 19:01:27 - INFO - __main__ -   测试:6

02/28/2025 19:01:27 - INFO - __main__ -   Attack failed!

02/28/2025 19:01:27 - INFO - __main__ -   测试:7

02/28/2025 19:01:27 - INFO - __main__ -   Attack failed!

02/28/2025 19:01:27 - INFO - __main__ -   测试:8

02/28/2025 19:01:27 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:   2%|▏         | 9/400 [00:40<27:23,  4.20s/it]  02/28/2025 19:01:27 - INFO - __main__ -   测试:9

02/28/2025 19:01:27 - INFO - __main__ -   Success rate: 75.00%

02/28/2025 19:01:27 - INFO - __main__ -   Successful items count: 3

02/28/2025 19:01:27 - INFO - __main__ -   Total count: 4

02/28/2025 19:01:27 - INFO - __main__ -   Index: 9

02/28/2025 19:01:27 - INFO - __main__ -   测试:10

02/28/2025 19:01:28 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  5
Generating population9...
init SUCCESS!
The original code is misclassified.
Processing examples:   3%|▎         | 11/400 [00:41<18:32,  2.86s/it]02/28/2025 19:01:28 - INFO - __main__ -   测试:11

02/28/2025 19:01:29 - INFO - __main__ -   Success rate: 80.00%

02/28/2025 19:01:29 - INFO - __main__ -   Successful items count: 4

02/28/2025 19:01:29 - INFO - __main__ -   Total count: 5

02/28/2025 19:01:29 - INFO - __main__ -   Index: 11

Number of variable_names extracted:  8
Generating population11...
init SUCCESS!
Processing examples:   3%|▎         | 12/400 [00:42<16:35,  2.57s/it]02/28/2025 19:01:29 - INFO - __main__ -   测试:12

02/28/2025 19:01:39 - INFO - __main__ -   Success rate: 66.67%

02/28/2025 19:01:39 - INFO - __main__ -   Successful items count: 4

02/28/2025 19:01:39 - INFO - __main__ -   Total count: 6

02/28/2025 19:01:39 - INFO - __main__ -   Index: 12

Number of variable_names extracted:  2
Generating population12...
	 0  --most gap 0.00045382977
	 1  --most gap 0.00045382977
	 2  --most gap 0.00045382977
两轮结果未更新,Changing code structure...
	 3  --most gap 0.00045382977
	 4  --most gap 0.00045382977
	 5  --most gap 0.00045382977
两轮结果未更新,Changing code structure...
	 6  --most gap 0.00045382977
	 7  --most gap 0.00045382977
	 8  --most gap 0.00045382977
两轮结果未更新,Changing code structure...
	 9  --most gap 0.00045382977
	 10  --most gap 0.00045382977
	 11  --most gap 0.00045382977
两轮结果未更新,Changing code structure...
	 12  --most gap 0.00045382977
	 13  --most gap 0.00045382977
	 14  --most gap 0.00045382977
两轮结果未更新,Changing code structure...
	 15  --most gap 0.00045382977
	 16  --most gap 0.00045382977
	 17  --most gap 0.00045382977
两轮结果未更新,Changing code structure...
	 18  --most gap 0.00045382977
	 19  --most gap 0.00045382977
Changing code structure...
Processing examples:   3%|▎         | 13/400 [00:52<27:47,  4.31s/it]02/28/2025 19:01:39 - INFO - __main__ -   测试:13

02/28/2025 19:01:48 - INFO - __main__ -   Success rate: 57.14%

02/28/2025 19:01:48 - INFO - __main__ -   Successful items count: 4

02/28/2025 19:01:48 - INFO - __main__ -   Total count: 7

02/28/2025 19:01:48 - INFO - __main__ -   Index: 13

Number of variable_names extracted:  1
Generating population13...
	 0  --most gap 0.013785416260361671
	 1  --most gap 0.013785416260361671
	 2  --most gap 0.013785416260361671
两轮结果未更新,Changing code structure...
	 3  --most gap 0.013785416260361671
	 4  --most gap 0.013785416260361671
	 5  --most gap 0.013785416260361671
两轮结果未更新,Changing code structure...
	 6  --most gap 0.013785416260361671
	 7  --most gap 0.013785416260361671
	 8  --most gap 0.013785416260361671
两轮结果未更新,Changing code structure...
	 9  --most gap 0.013785416260361671
	 10  --most gap 0.013785416260361671
	 11  --most gap 0.013785416260361671
两轮结果未更新,Changing code structure...
	 12  --most gap 0.013785416260361671
	 13  --most gap 0.013785416260361671
	 14  --most gap 0.013785416260361671
两轮结果未更新,Changing code structure...
	 15  --most gap 0.013785416260361671
	 16  --most gap 0.013785416260361671
	 17  --most gap 0.013785416260361671
两轮结果未更新,Changing code structure...
	 18  --most gap 0.013785416260361671
	 19  --most gap 0.013785416260361671
Changing code structure...
Processing examples:   4%|▎         | 14/400 [01:01<35:07,  5.46s/it]02/28/2025 19:01:48 - INFO - __main__ -   测试:14

02/28/2025 19:02:10 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
02/28/2025 19:02:10 - INFO - __main__ -   Success rate: 50.00%

02/28/2025 19:02:10 - INFO - __main__ -   Successful items count: 4

02/28/2025 19:02:10 - INFO - __main__ -   Total count: 8

02/28/2025 19:02:10 - INFO - __main__ -   Index: 14

Number of variable_names extracted:  1
Generating population14...
	 0  --most gap 9.313225746154785e-09
	 1  --most gap 0.3868493642657995
	 2  --most gap 0.3868493642657995
	 3  --most gap 0.3868493642657995
	 4  --most gap 0.3868493642657995
两轮结果未更新,Changing code structure...
	 5  --most gap 0.3868493642657995
	 6  --most gap 0.3868493642657995
	 7  --most gap 0.3868493642657995
两轮结果未更新,Changing code structure...
	 8  --most gap 0.3868493642657995
	 9  --most gap 0.3868493642657995
	 10  --most gap 0.3868493642657995
两轮结果未更新,Changing code structure...
	 11  --most gap 0.3868493642657995
	 12  --most gap 0.3868493642657995
	 13  --most gap 0.3868493642657995
两轮结果未更新,Changing code structure...
	 14  --most gap 0.3868493642657995
	 15  --most gap 0.3868493642657995
	 16  --most gap 0.3868493642657995
两轮结果未更新,Changing code structure...
	 17  --most gap 0.3868493642657995
	 18  --most gap 0.3868493642657995
	 19  --most gap 0.3868493642657995
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:   4%|▍         | 15/400 [01:23<1:01:55,  9.65s/it]02/28/2025 19:02:10 - INFO - __main__ -   测试:15

02/28/2025 19:02:20 - INFO - __main__ -   Success rate: 44.44%

02/28/2025 19:02:20 - INFO - __main__ -   Successful items count: 4

02/28/2025 19:02:20 - INFO - __main__ -   Total count: 9

02/28/2025 19:02:20 - INFO - __main__ -   Index: 15

Number of variable_names extracted:  2
Generating population15...
	 0  --most gap 0.014187444001436234
	 1  --most gap 0.014187444001436234
	 2  --most gap 0.014187444001436234
两轮结果未更新,Changing code structure...
	 3  --most gap 0.014187444001436234
	 4  --most gap 0.014187444001436234
	 5  --most gap 0.014187444001436234
两轮结果未更新,Changing code structure...
	 6  --most gap 0.014187444001436234
	 7  --most gap 0.014187444001436234
	 8  --most gap 0.014187444001436234
两轮结果未更新,Changing code structure...
	 9  --most gap 0.014187444001436234
	 10  --most gap 0.014187444001436234
	 11  --most gap 0.014187444001436234
两轮结果未更新,Changing code structure...
	 12  --most gap 0.014187444001436234
	 13  --most gap 0.014187444001436234
	 14  --most gap 0.014187444001436234
两轮结果未更新,Changing code structure...
	 15  --most gap 0.014187444001436234
	 16  --most gap 0.014187444001436234
	 17  --most gap 0.014187444001436234
两轮结果未更新,Changing code structure...
	 18  --most gap 0.014187444001436234
	 19  --most gap 0.014187444001436234
Changing code structure...
Processing examples:   4%|▍         | 16/400 [01:33<1:02:34,  9.78s/it]02/28/2025 19:02:20 - INFO - __main__ -   测试:16

02/28/2025 19:02:29 - INFO - __main__ -   Success rate: 50.00%

02/28/2025 19:02:29 - INFO - __main__ -   Successful items count: 5

02/28/2025 19:02:29 - INFO - __main__ -   Total count: 10

02/28/2025 19:02:29 - INFO - __main__ -   Index: 16

Number of variable_names extracted:  9
Generating population16...
init SUCCESS!
Processing examples:   4%|▍         | 17/400 [01:42<1:00:39,  9.50s/it]02/28/2025 19:02:29 - INFO - __main__ -   测试:17

02/28/2025 19:02:29 - INFO - __main__ -   Attack failed!

02/28/2025 19:02:29 - INFO - __main__ -   测试:18

02/28/2025 19:02:38 - INFO - __main__ -   Success rate: 45.45%

02/28/2025 19:02:38 - INFO - __main__ -   Successful items count: 5

02/28/2025 19:02:38 - INFO - __main__ -   Total count: 11

02/28/2025 19:02:38 - INFO - __main__ -   Index: 18

The original code is misclassified.
Number of variable_names extracted:  1
Generating population18...
	 0  --most gap 0.0001567266881465912
	 1  --most gap 0.0001567266881465912
	 2  --most gap 0.0001567266881465912
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0001567266881465912
	 4  --most gap 0.0001567266881465912
	 5  --most gap 0.0001567266881465912
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0001567266881465912
	 7  --most gap 0.0001567266881465912
	 8  --most gap 0.0001567266881465912
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0001567266881465912
	 10  --most gap 0.0001567266881465912
	 11  --most gap 0.0001567266881465912
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0001567266881465912
	 13  --most gap 0.0001567266881465912
	 14  --most gap 0.0001567266881465912
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0001567266881465912
	 16  --most gap 0.0001567266881465912
	 17  --most gap 0.0001567266881465912
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0001567266881465912
	 19  --most gap 0.0001567266881465912
Changing code structure...
Processing examples:   5%|▍         | 19/400 [01:51<46:33,  7.33s/it]  02/28/2025 19:02:38 - INFO - __main__ -   测试:19

02/28/2025 19:06:44 - INFO - __main__ -   Success rate: 41.67%

02/28/2025 19:06:44 - INFO - __main__ -   Successful items count: 5

02/28/2025 19:06:44 - INFO - __main__ -   Total count: 12

02/28/2025 19:06:44 - INFO - __main__ -   Index: 19

Number of variable_names extracted:  13
Generating population19...
	 0  --most gap 0.0001861453
	 1  --most gap 0.00020492077
	 2  --most gap 0.0002091527
	 3  --most gap 0.0002091527
	 4  --most gap 0.0002091527
	 5  --most gap 0.0002091527
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0002091527
	 7  --most gap 0.0002860427
	 8  --most gap 0.00028896332
	 9  --most gap 0.00028896332
	 10  --most gap 0.00028896332
	 11  --most gap 0.00028896332
两轮结果未更新,Changing code structure...
	 12  --most gap 0.00028896332
	 13  --most gap 0.00031089783
	 14  --most gap 0.00031089783
	 15  --most gap 0.0027508736
	 16  --most gap 0.0027508736
	 17  --most gap 0.0027508736
	 18  --most gap 0.0027508736
两轮结果未更新,Changing code structure...
	 19  --most gap 0.0027508736
Changing code structure...
Processing examples:   5%|▌         | 20/400 [05:57<6:48:33, 64.51s/it]02/28/2025 19:06:44 - INFO - __main__ -   测试:20

02/28/2025 19:06:44 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:   5%|▌         | 21/400 [05:57<5:03:53, 48.11s/it]02/28/2025 19:06:44 - INFO - __main__ -   测试:21

02/28/2025 19:06:44 - INFO - __main__ -   Attack failed!

02/28/2025 19:06:44 - INFO - __main__ -   测试:22

02/28/2025 19:06:45 - INFO - __main__ -   Success rate: 46.15%

02/28/2025 19:06:45 - INFO - __main__ -   Successful items count: 6

02/28/2025 19:06:45 - INFO - __main__ -   Total count: 13

02/28/2025 19:06:45 - INFO - __main__ -   Index: 22

The original code is misclassified.
Number of variable_names extracted:  7
Generating population22...
init SUCCESS!
Processing examples:   6%|▌         | 23/400 [05:58<2:56:16, 28.05s/it]02/28/2025 19:06:45 - INFO - __main__ -   测试:23

02/28/2025 19:06:46 - INFO - __main__ -   Success rate: 50.00%

02/28/2025 19:06:46 - INFO - __main__ -   Successful items count: 7

02/28/2025 19:06:46 - INFO - __main__ -   Total count: 14

02/28/2025 19:06:46 - INFO - __main__ -   Index: 23

Number of variable_names extracted:  3
Generating population23...
init SUCCESS!
Processing examples:   6%|▌         | 24/400 [05:59<2:15:44, 21.66s/it]02/28/2025 19:06:46 - INFO - __main__ -   测试:24

02/28/2025 19:08:53 - INFO - __main__ -   Success rate: 53.33%

02/28/2025 19:08:53 - INFO - __main__ -   Successful items count: 8

02/28/2025 19:08:53 - INFO - __main__ -   Total count: 15

02/28/2025 19:08:53 - INFO - __main__ -   Index: 24

Number of variable_names extracted:  8
Generating population24...
	 0  --most gap 0.2950825
	 1  --most gap 0.2950825
	 2  --most gap 0.3738528
	 3  --most gap 0.3738528
	 4  --most gap 0.3738528
	 5  --most gap 0.3738528
两轮结果未更新,Changing code structure...
	 6  --most gap 0.3738528
	 7  --most gap 0.3738528
	 8  --most gap 0.3738528
两轮结果未更新,Changing code structure...
	 9  --most gap 0.3738528
	 10  --most gap 0.3816576
	 11  --most gap 0.3816576
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   6%|▋         | 25/400 [08:06<4:59:34, 47.93s/it]02/28/2025 19:08:53 - INFO - __main__ -   测试:25

02/28/2025 19:08:53 - INFO - __main__ -   Attack failed!

02/28/2025 19:08:53 - INFO - __main__ -   测试:26

02/28/2025 19:08:53 - INFO - __main__ -   Attack failed!

02/28/2025 19:08:53 - INFO - __main__ -   测试:27

02/28/2025 19:08:56 - INFO - __main__ -   Success rate: 56.25%

02/28/2025 19:08:56 - INFO - __main__ -   Successful items count: 9

02/28/2025 19:08:56 - INFO - __main__ -   Total count: 16

02/28/2025 19:08:56 - INFO - __main__ -   Index: 27

The original code is misclassified.
No variable_names in the code.
Number of variable_names extracted:  9
Generating population27...
	 0  --most gap 0.18824860453605652
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   7%|▋         | 28/400 [08:09<2:27:24, 23.78s/it]02/28/2025 19:08:56 - INFO - __main__ -   测试:28

02/28/2025 19:08:57 - INFO - __main__ -   Success rate: 58.82%

02/28/2025 19:08:57 - INFO - __main__ -   Successful items count: 10

02/28/2025 19:08:57 - INFO - __main__ -   Total count: 17

02/28/2025 19:08:57 - INFO - __main__ -   Index: 28

Number of variable_names extracted:  6
Generating population28...
init SUCCESS!
Processing examples:   7%|▋         | 29/400 [08:10<1:58:17, 19.13s/it]02/28/2025 19:08:57 - INFO - __main__ -   测试:29

02/28/2025 19:08:57 - INFO - __main__ -   Attack failed!

02/28/2025 19:08:57 - INFO - __main__ -   测试:30

02/28/2025 19:09:06 - INFO - __main__ -   Success rate: 55.56%

02/28/2025 19:09:06 - INFO - __main__ -   Successful items count: 10

02/28/2025 19:09:06 - INFO - __main__ -   Total count: 18

02/28/2025 19:09:06 - INFO - __main__ -   Index: 30

The original code is misclassified.
Number of variable_names extracted:  2
Generating population30...
	 0  --most gap 0.04571804963052273
	 1  --most gap 0.04571804963052273
	 2  --most gap 0.04571804963052273
两轮结果未更新,Changing code structure...
	 3  --most gap 0.04571804963052273
	 4  --most gap 0.04571804963052273
	 5  --most gap 0.04571804963052273
两轮结果未更新,Changing code structure...
	 6  --most gap 0.04571804963052273
	 7  --most gap 0.04571804963052273
	 8  --most gap 0.04571804963052273
两轮结果未更新,Changing code structure...
	 9  --most gap 0.04571804963052273
	 10  --most gap 0.04571804963052273
	 11  --most gap 0.04571804963052273
两轮结果未更新,Changing code structure...
	 12  --most gap 0.04571804963052273
	 13  --most gap 0.04571804963052273
	 14  --most gap 0.04571804963052273
两轮结果未更新,Changing code structure...
	 15  --most gap 0.04571804963052273
	 16  --most gap 0.04571804963052273
	 17  --most gap 0.04571804963052273
两轮结果未更新,Changing code structure...
	 18  --most gap 0.04571804963052273
	 19  --most gap 0.04571804963052273
Changing code structure...
Processing examples:   8%|▊         | 31/400 [08:19<1:25:10, 13.85s/it]02/28/2025 19:09:06 - INFO - __main__ -   测试:31

02/28/2025 19:09:35 - INFO - __main__ -   Success rate: 52.63%

02/28/2025 19:09:35 - INFO - __main__ -   Successful items count: 10

02/28/2025 19:09:35 - INFO - __main__ -   Total count: 19

02/28/2025 19:09:35 - INFO - __main__ -   Index: 31

Number of variable_names extracted:  2
Generating population31...
	 0  --most gap 0
	 1  --most gap 0.36098049581050873
	 2  --most gap 0.36098049581050873
	 3  --most gap 0.36098049581050873
	 4  --most gap 0.36098049581050873
两轮结果未更新,Changing code structure...
	 5  --most gap 0.36098049581050873
	 6  --most gap 0.36098049581050873
	 7  --most gap 0.36098049581050873
两轮结果未更新,Changing code structure...
	 8  --most gap 0.36098049581050873
	 9  --most gap 0.36098049581050873
	 10  --most gap 0.36098049581050873
两轮结果未更新,Changing code structure...
	 11  --most gap 0.36098049581050873
	 12  --most gap 0.36098049581050873
	 13  --most gap 0.36098049581050873
两轮结果未更新,Changing code structure...
	 14  --most gap 0.36098049581050873
	 15  --most gap 0.36098049581050873
	 16  --most gap 0.36098049581050873
两轮结果未更新,Changing code structure...
	 17  --most gap 0.36098049581050873
	 18  --most gap 0.36098049581050873
	 19  --most gap 0.36098049581050873
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:   8%|▊         | 32/400 [08:48<1:44:50, 17.09s/it]02/28/2025 19:09:35 - INFO - __main__ -   测试:32

02/28/2025 19:09:35 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:   8%|▊         | 33/400 [08:48<1:21:02, 13.25s/it]02/28/2025 19:09:35 - INFO - __main__ -   测试:33

02/28/2025 19:09:37 - INFO - __main__ -   Success rate: 55.00%

02/28/2025 19:09:37 - INFO - __main__ -   Successful items count: 11

02/28/2025 19:09:37 - INFO - __main__ -   Total count: 20

02/28/2025 19:09:37 - INFO - __main__ -   Index: 33

Number of variable_names extracted:  10
Generating population33...
	 0  --most gap 0.019395292
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   8%|▊         | 34/400 [08:50<1:03:02, 10.33s/it]02/28/2025 19:09:37 - INFO - __main__ -   测试:34

02/28/2025 19:09:40 - INFO - __main__ -   Success rate: 57.14%

02/28/2025 19:09:40 - INFO - __main__ -   Successful items count: 12

02/28/2025 19:09:40 - INFO - __main__ -   Total count: 21

02/28/2025 19:09:40 - INFO - __main__ -   Index: 34

Number of variable_names extracted:  6
Generating population34...
	 0  --most gap 0.12584496
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   9%|▉         | 35/400 [08:53<52:13,  8.58s/it]  02/28/2025 19:09:40 - INFO - __main__ -   测试:35

02/28/2025 19:09:41 - INFO - __main__ -   Success rate: 59.09%

02/28/2025 19:09:41 - INFO - __main__ -   Successful items count: 13

02/28/2025 19:09:41 - INFO - __main__ -   Total count: 22

02/28/2025 19:09:41 - INFO - __main__ -   Index: 35

Number of variable_names extracted:  3
Generating population35...
init SUCCESS!
Processing examples:   9%|▉         | 36/400 [08:54<38:34,  6.36s/it]02/28/2025 19:09:41 - INFO - __main__ -   测试:36

02/28/2025 19:09:41 - INFO - __main__ -   Attack failed!

02/28/2025 19:09:41 - INFO - __main__ -   测试:37

02/28/2025 19:11:15 - INFO - __main__ -   Success rate: 56.52%

02/28/2025 19:11:15 - INFO - __main__ -   Successful items count: 13

02/28/2025 19:11:15 - INFO - __main__ -   Total count: 23

02/28/2025 19:11:15 - INFO - __main__ -   Index: 37

The original code is misclassified.
Number of variable_names extracted:  3
Generating population37...
	 0  --most gap 0.03701541479676962
	 1  --most gap 0.28634902741760015
	 2  --most gap 0.28634902741760015
	 3  --most gap 0.28634902741760015
	 4  --most gap 0.28634902741760015
两轮结果未更新,Changing code structure...
	 5  --most gap 0.28634902741760015
	 6  --most gap 0.28634902741760015
	 7  --most gap 0.28634902741760015
两轮结果未更新,Changing code structure...
	 8  --most gap 0.28634902741760015
	 9  --most gap 0.28634902741760015
	 10  --most gap 0.28634902741760015
两轮结果未更新,Changing code structure...
	 11  --most gap 0.28634902741760015
	 12  --most gap 0.28634902741760015
	 13  --most gap 0.28634902741760015
两轮结果未更新,Changing code structure...
	 14  --most gap 0.28634902741760015
	 15  --most gap 0.28634902741760015
	 16  --most gap 0.28634902741760015
两轮结果未更新,Changing code structure...
	 17  --most gap 0.28634902741760015
	 18  --most gap 0.28634902741760015
	 19  --most gap 0.28634902741760015
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  10%|▉         | 38/400 [10:28<2:26:04, 24.21s/it]02/28/2025 19:11:15 - INFO - __main__ -   测试:38

02/28/2025 19:11:28 - INFO - __main__ -   Success rate: 54.17%

02/28/2025 19:11:28 - INFO - __main__ -   Successful items count: 13

02/28/2025 19:11:28 - INFO - __main__ -   Total count: 24

02/28/2025 19:11:28 - INFO - __main__ -   Index: 38

Number of variable_names extracted:  2
Generating population38...
	 0  --most gap 0.003298848867416382
	 1  --most gap 0.03991473838686943
	 2  --most gap 0.03991473838686943
	 3  --most gap 0.03991473838686943
	 4  --most gap 0.03991473838686943
两轮结果未更新,Changing code structure...
	 5  --most gap 0.03991473838686943
	 6  --most gap 0.03991473838686943
	 7  --most gap 0.03991473838686943
两轮结果未更新,Changing code structure...
	 8  --most gap 0.03991473838686943
	 9  --most gap 0.03991473838686943
	 10  --most gap 0.03991473838686943
两轮结果未更新,Changing code structure...
	 11  --most gap 0.03991473838686943
	 12  --most gap 0.03991473838686943
	 13  --most gap 0.03991473838686943
两轮结果未更新,Changing code structure...
	 14  --most gap 0.03991473838686943
	 15  --most gap 0.03991473838686943
	 16  --most gap 0.03991473838686943
两轮结果未更新,Changing code structure...
	 17  --most gap 0.03991473838686943
	 18  --most gap 0.03991473838686943
	 19  --most gap 0.03991473838686943
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  10%|▉         | 39/400 [10:41<2:08:35, 21.37s/it]02/28/2025 19:11:28 - INFO - __main__ -   测试:39

02/28/2025 19:14:12 - INFO - __main__ -   Success rate: 52.00%

02/28/2025 19:14:12 - INFO - __main__ -   Successful items count: 13

02/28/2025 19:14:12 - INFO - __main__ -   Total count: 25

02/28/2025 19:14:12 - INFO - __main__ -   Index: 39

Number of variable_names extracted:  9
Generating population39...
	 0  --most gap 0.08082864247262478
	 1  --most gap 0.11008190177381039
	 2  --most gap 0.11008190177381039
	 3  --most gap 0.15232800506055355
	 4  --most gap 0.15232800506055355
	 5  --most gap 0.22972250543534756
	 6  --most gap 0.22972250543534756
	 7  --most gap 0.22972250543534756
	 8  --most gap 0.3716431464999914
	 9  --most gap 0.3716431464999914
	 10  --most gap 0.3716431464999914
	 11  --most gap 0.3716431464999914
两轮结果未更新,Changing code structure...
	 12  --most gap 0.3716431464999914
	 13  --most gap 0.3716431464999914
	 14  --most gap 0.3716431464999914
两轮结果未更新,Changing code structure...
	 15  --most gap 0.3716431464999914
	 16  --most gap 0.3716431464999914
	 17  --most gap 0.3716431464999914
两轮结果未更新,Changing code structure...
	 18  --most gap 0.3716431464999914
	 19  --most gap 0.3716431464999914
Changing code structure...
Processing examples:  10%|█         | 40/400 [13:25<5:44:39, 57.44s/it]02/28/2025 19:14:12 - INFO - __main__ -   测试:40

02/28/2025 19:14:12 - INFO - __main__ -   Success rate: 53.85%

02/28/2025 19:14:12 - INFO - __main__ -   Successful items count: 14

02/28/2025 19:14:12 - INFO - __main__ -   Total count: 26

02/28/2025 19:14:12 - INFO - __main__ -   Index: 40

Number of variable_names extracted:  6
Generating population40...
init SUCCESS!
Processing examples:  10%|█         | 41/400 [13:25<4:13:38, 42.39s/it]02/28/2025 19:14:12 - INFO - __main__ -   测试:41

02/28/2025 19:14:57 - INFO - __main__ -   Success rate: 55.56%

02/28/2025 19:14:57 - INFO - __main__ -   Successful items count: 15

02/28/2025 19:14:57 - INFO - __main__ -   Total count: 27

02/28/2025 19:14:57 - INFO - __main__ -   Index: 41

Number of variable_names extracted:  4
Generating population41...
	 0  --most gap 0.09488785
	 1  --most gap 0.17086715
	 2  --most gap 0.17086715
	 3  --most gap 0.19442779
	 4  --most gap 0.19442779
	 5  --most gap 0.19442779
	 6  --most gap 0.22272664
	 7  --most gap 0.22272664
	 8  --most gap 0.22272664
	 9  --most gap 0.22272664
两轮结果未更新,Changing code structure...
	 10  --most gap 0.22272664
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  10%|█         | 42/400 [14:10<4:17:22, 43.14s/it]02/28/2025 19:14:57 - INFO - __main__ -   测试:42

02/28/2025 19:14:57 - INFO - __main__ -   Attack failed!

02/28/2025 19:14:57 - INFO - __main__ -   测试:43

02/28/2025 19:15:36 - INFO - __main__ -   Success rate: 57.14%

02/28/2025 19:15:36 - INFO - __main__ -   Successful items count: 16

02/28/2025 19:15:36 - INFO - __main__ -   Total count: 28

02/28/2025 19:15:36 - INFO - __main__ -   Index: 43

The original code is misclassified.
Number of variable_names extracted:  30
Generating population43...
init SUCCESS!
Processing examples:  11%|█         | 44/400 [14:49<3:13:07, 32.55s/it]02/28/2025 19:15:36 - INFO - __main__ -   测试:44

02/28/2025 19:16:32 - INFO - __main__ -   Success rate: 55.17%

02/28/2025 19:16:32 - INFO - __main__ -   Successful items count: 16

02/28/2025 19:16:32 - INFO - __main__ -   Total count: 29

02/28/2025 19:16:32 - INFO - __main__ -   Index: 44

Number of variable_names extracted:  3
Generating population44...
	 0  --most gap 0.383075887337327
	 1  --most gap 0.383075887337327
	 2  --most gap 0.383075887337327
两轮结果未更新,Changing code structure...
	 3  --most gap 0.383075887337327
	 4  --most gap 0.383075887337327
	 5  --most gap 0.383075887337327
两轮结果未更新,Changing code structure...
	 6  --most gap 0.383075887337327
	 7  --most gap 0.383075887337327
	 8  --most gap 0.383075887337327
两轮结果未更新,Changing code structure...
	 9  --most gap 0.383075887337327
	 10  --most gap 0.383075887337327
	 11  --most gap 0.383075887337327
两轮结果未更新,Changing code structure...
	 12  --most gap 0.383075887337327
	 13  --most gap 0.383075887337327
	 14  --most gap 0.383075887337327
两轮结果未更新,Changing code structure...
	 15  --most gap 0.383075887337327
	 16  --most gap 0.383075887337327
	 17  --most gap 0.383075887337327
两轮结果未更新,Changing code structure...
	 18  --most gap 0.383075887337327
	 19  --most gap 0.383075887337327
Changing code structure...
Processing examples:  11%|█▏        | 45/400 [15:45<3:46:29, 38.28s/it]02/28/2025 19:16:32 - INFO - __main__ -   测试:45

02/28/2025 19:20:29 - INFO - __main__ -   Success rate: 53.33%

02/28/2025 19:20:29 - INFO - __main__ -   Successful items count: 16

02/28/2025 19:20:29 - INFO - __main__ -   Total count: 30

02/28/2025 19:20:29 - INFO - __main__ -   Index: 45

Number of variable_names extracted:  19
Generating population45...
	 0  --most gap 0.035443008
	 1  --most gap 0.035443008
	 2  --most gap 0.035443008
	 3  --most gap 0.13485688
	 4  --most gap 0.13485688
	 5  --most gap 0.13485688
	 6  --most gap 0.13485688
两轮结果未更新,Changing code structure...
	 7  --most gap 0.13485688
	 8  --most gap 0.13485688
	 9  --most gap 0.13485688
两轮结果未更新,Changing code structure...
	 10  --most gap 0.13485688
	 11  --most gap 0.13485688
	 12  --most gap 0.13485688
两轮结果未更新,Changing code structure...
	 13  --most gap 0.13485688
	 14  --most gap 0.13485688
	 15  --most gap 0.13485688
两轮结果未更新,Changing code structure...
	 16  --most gap 0.13485688
	 17  --most gap 0.13485688
	 18  --most gap 0.13485688
两轮结果未更新,Changing code structure...
	 19  --most gap 0.13485688
Changing code structure...
Processing examples:  12%|█▏        | 46/400 [19:42<8:44:56, 88.97s/it]02/28/2025 19:20:29 - INFO - __main__ -   测试:46

02/28/2025 19:20:36 - INFO - __main__ -   Success rate: 54.84%

02/28/2025 19:20:36 - INFO - __main__ -   Successful items count: 17

02/28/2025 19:20:36 - INFO - __main__ -   Total count: 31

02/28/2025 19:20:36 - INFO - __main__ -   Index: 46

Number of variable_names extracted:  12
Generating population46...
init SUCCESS!
Processing examples:  12%|█▏        | 47/400 [19:49<6:33:28, 66.88s/it]02/28/2025 19:20:36 - INFO - __main__ -   测试:47

02/28/2025 19:20:50 - INFO - __main__ -   Success rate: 53.12%

02/28/2025 19:20:50 - INFO - __main__ -   Successful items count: 17

02/28/2025 19:20:50 - INFO - __main__ -   Total count: 32

02/28/2025 19:20:50 - INFO - __main__ -   Index: 47

Number of variable_names extracted:  2
Generating population47...
	 0  --most gap 0.0013018324971199036
	 1  --most gap 0.13983120303601027
	 2  --most gap 0.13983120303601027
	 3  --most gap 0.13983120303601027
	 4  --most gap 0.13983120303601027
两轮结果未更新,Changing code structure...
	 5  --most gap 0.13983120303601027
	 6  --most gap 0.13983120303601027
	 7  --most gap 0.13983120303601027
两轮结果未更新,Changing code structure...
	 8  --most gap 0.13983120303601027
	 9  --most gap 0.13983120303601027
	 10  --most gap 0.13983120303601027
两轮结果未更新,Changing code structure...
	 11  --most gap 0.13983120303601027
	 12  --most gap 0.13983120303601027
	 13  --most gap 0.13983120303601027
两轮结果未更新,Changing code structure...
	 14  --most gap 0.13983120303601027
	 15  --most gap 0.13983120303601027
	 16  --most gap 0.13983120303601027
两轮结果未更新,Changing code structure...
	 17  --most gap 0.13983120303601027
	 18  --most gap 0.13983120303601027
	 19  --most gap 0.13983120303601027
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  12%|█▏        | 48/400 [20:03<5:06:43, 52.28s/it]02/28/2025 19:20:50 - INFO - __main__ -   测试:48

02/28/2025 19:20:50 - INFO - __main__ -   Attack failed!

02/28/2025 19:20:50 - INFO - __main__ -   测试:49

02/28/2025 19:20:58 - INFO - __main__ -   Success rate: 54.55%

02/28/2025 19:20:58 - INFO - __main__ -   Successful items count: 18

02/28/2025 19:20:58 - INFO - __main__ -   Total count: 33

02/28/2025 19:20:58 - INFO - __main__ -   Index: 49

No variable_names in the code.
Number of variable_names extracted:  6
Generating population49...
	 0  --most gap 0.07194859
	 1  --most gap 0.10117334
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  12%|█▎        | 50/400 [20:11<3:01:11, 31.06s/it]02/28/2025 19:20:58 - INFO - __main__ -   测试:50

02/28/2025 19:22:34 - INFO - __main__ -   Success rate: 52.94%

02/28/2025 19:22:34 - INFO - __main__ -   Successful items count: 18

02/28/2025 19:22:34 - INFO - __main__ -   Total count: 34

02/28/2025 19:22:34 - INFO - __main__ -   Index: 50

Number of variable_names extracted:  4
Generating population50...
	 0  --most gap 0.03452320396900177
	 1  --most gap 0.09747793525457382
	 2  --most gap 0.09747793525457382
	 3  --most gap 0.09747793525457382
	 4  --most gap 0.1418631747364998
	 5  --most gap 0.1418631747364998
	 6  --most gap 0.1418631747364998
	 7  --most gap 0.1418631747364998
两轮结果未更新,Changing code structure...
	 8  --most gap 0.1418631747364998
	 9  --most gap 0.1418631747364998
	 10  --most gap 0.1418631747364998
两轮结果未更新,Changing code structure...
	 11  --most gap 0.1418631747364998
	 12  --most gap 0.15431001037359238
	 13  --most gap 0.15431001037359238
	 14  --most gap 0.15431001037359238
	 15  --most gap 0.15431001037359238
两轮结果未更新,Changing code structure...
	 16  --most gap 0.15431001037359238
	 17  --most gap 0.15431001037359238
	 18  --most gap 0.15431001037359238
两轮结果未更新,Changing code structure...
	 19  --most gap 0.15431001037359238
Changing code structure...
Processing examples:  13%|█▎        | 51/400 [21:47<4:31:53, 46.74s/it]02/28/2025 19:22:34 - INFO - __main__ -   测试:51

02/28/2025 19:22:34 - INFO - __main__ -   Attack failed!

02/28/2025 19:22:34 - INFO - __main__ -   测试:52

02/28/2025 19:22:39 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  13%|█▎        | 53/400 [21:52<2:46:31, 28.80s/it]02/28/2025 19:22:39 - INFO - __main__ -   测试:53

02/28/2025 19:22:40 - INFO - __main__ -   Attack failed!

02/28/2025 19:22:40 - INFO - __main__ -   测试:54

02/28/2025 19:22:41 - INFO - __main__ -   Success rate: 54.29%

02/28/2025 19:22:41 - INFO - __main__ -   Successful items count: 19

02/28/2025 19:22:41 - INFO - __main__ -   Total count: 35

02/28/2025 19:22:41 - INFO - __main__ -   Index: 54

The original code is misclassified.
Number of variable_names extracted:  10
Generating population54...
init SUCCESS!
Processing examples:  14%|█▍        | 55/400 [21:54<1:46:10, 18.47s/it]02/28/2025 19:22:41 - INFO - __main__ -   测试:55

02/28/2025 19:22:41 - INFO - __main__ -   Attack failed!

02/28/2025 19:22:41 - INFO - __main__ -   测试:56

02/28/2025 19:22:50 - INFO - __main__ -   Success rate: 55.56%

02/28/2025 19:22:50 - INFO - __main__ -   Successful items count: 20

02/28/2025 19:22:50 - INFO - __main__ -   Total count: 36

02/28/2025 19:22:50 - INFO - __main__ -   Index: 56

The original code is misclassified.
Number of variable_names extracted:  9
Generating population56...
init SUCCESS!
Processing examples:  14%|█▍        | 57/400 [22:03<1:18:24, 13.72s/it]02/28/2025 19:22:50 - INFO - __main__ -   测试:57

02/28/2025 19:22:53 - INFO - __main__ -   Success rate: 56.76%

02/28/2025 19:22:53 - INFO - __main__ -   Successful items count: 21

02/28/2025 19:22:53 - INFO - __main__ -   Total count: 37

02/28/2025 19:22:53 - INFO - __main__ -   Index: 57

Number of variable_names extracted:  10
Generating population57...
init SUCCESS!
Processing examples:  14%|█▍        | 58/400 [22:06<1:05:52, 11.56s/it]02/28/2025 19:22:53 - INFO - __main__ -   测试:58

02/28/2025 19:22:58 - INFO - __main__ -   Success rate: 57.89%

02/28/2025 19:22:58 - INFO - __main__ -   Successful items count: 22

02/28/2025 19:22:58 - INFO - __main__ -   Total count: 38

02/28/2025 19:22:58 - INFO - __main__ -   Index: 58

Number of variable_names extracted:  9
Generating population58...
	 0  --most gap 0.34342265
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  15%|█▍        | 59/400 [22:11<57:22, 10.09s/it]  02/28/2025 19:22:58 - INFO - __main__ -   测试:59

02/28/2025 19:22:58 - INFO - __main__ -   Attack failed!

02/28/2025 19:22:58 - INFO - __main__ -   测试:60

02/28/2025 19:22:58 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  15%|█▌        | 61/400 [22:11<35:08,  6.22s/it]02/28/2025 19:22:58 - INFO - __main__ -   测试:61

02/28/2025 19:23:28 - INFO - __main__ -   Success rate: 58.97%

02/28/2025 19:23:28 - INFO - __main__ -   Successful items count: 23

02/28/2025 19:23:28 - INFO - __main__ -   Total count: 39

02/28/2025 19:23:28 - INFO - __main__ -   Index: 61

Number of variable_names extracted:  5
Generating population61...
	 0  --most gap 0.22066635
	 1  --most gap 0.22066635
	 2  --most gap 0.22066635
	 3  --most gap 0.37769413
	 4  --most gap 0.37769413
	 5  --most gap 0.37769413
	 6  --most gap 0.41745877
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▌        | 62/400 [22:41<1:03:57, 11.35s/it]02/28/2025 19:23:28 - INFO - __main__ -   测试:62

02/28/2025 19:23:30 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 19:23:30 - INFO - __main__ -   Successful items count: 24

02/28/2025 19:23:30 - INFO - __main__ -   Total count: 40

02/28/2025 19:23:30 - INFO - __main__ -   Index: 62

Number of variable_names extracted:  14
Generating population62...
init SUCCESS!
Processing examples:  16%|█▌        | 63/400 [22:43<50:54,  9.07s/it]  02/28/2025 19:23:30 - INFO - __main__ -   测试:63

02/28/2025 19:23:30 - INFO - __main__ -   Attack failed!

02/28/2025 19:23:30 - INFO - __main__ -   测试:64

02/28/2025 19:23:40 - INFO - __main__ -   Success rate: 58.54%

02/28/2025 19:23:40 - INFO - __main__ -   Successful items count: 24

02/28/2025 19:23:40 - INFO - __main__ -   Total count: 41

02/28/2025 19:23:40 - INFO - __main__ -   Index: 64

The original code is misclassified.
Number of variable_names extracted:  1
Generating population64...
	 0  --most gap 0.0028151274
	 1  --most gap 0.0028151274
	 2  --most gap 0.0028151274
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0028151274
	 4  --most gap 0.0028151274
	 5  --most gap 0.0028151274
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0028151274
	 7  --most gap 0.0028151274
	 8  --most gap 0.0028151274
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0028151274
	 10  --most gap 0.0028151274
	 11  --most gap 0.0028151274
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0028151274
	 13  --most gap 0.0028151274
	 14  --most gap 0.0028151274
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0028151274
	 16  --most gap 0.0028151274
	 17  --most gap 0.0028151274
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0028151274
	 19  --most gap 0.0028151274
Changing code structure...
Processing examples:  16%|█▋        | 65/400 [22:53<41:48,  7.49s/it]02/28/2025 19:23:40 - INFO - __main__ -   测试:65

02/28/2025 19:24:15 - INFO - __main__ -   Success rate: 59.52%

02/28/2025 19:24:15 - INFO - __main__ -   Successful items count: 25

02/28/2025 19:24:15 - INFO - __main__ -   Total count: 42

02/28/2025 19:24:15 - INFO - __main__ -   Index: 65

Number of variable_names extracted:  7
Generating population65...
	 0  --most gap 0.10526562
	 1  --most gap 0.1266973
	 2  --most gap 0.23785996
	 3  --most gap 0.23785996
	 4  --most gap 0.29217368
	 5  --most gap 0.29217368
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▋        | 66/400 [23:28<1:16:30, 13.74s/it]02/28/2025 19:24:15 - INFO - __main__ -   测试:66

02/28/2025 19:24:15 - INFO - __main__ -   Attack failed!

02/28/2025 19:24:15 - INFO - __main__ -   测试:67

02/28/2025 19:24:15 - INFO - __main__ -   Attack failed!

02/28/2025 19:24:15 - INFO - __main__ -   测试:68

02/28/2025 19:24:15 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  17%|█▋        | 69/400 [23:28<38:50,  7.04s/it]  02/28/2025 19:24:15 - INFO - __main__ -   测试:69

Number of variable_names extracted:  5
Generating population69...
	 0  --most gap 0.0012221336
Processing examples:  17%|█▋        | 69/400 [23:40<38:50,  7.04s/it]02/28/2025 19:27:48 - INFO - __main__ -   Success rate: 58.14%

02/28/2025 19:27:48 - INFO - __main__ -   Successful items count: 25

02/28/2025 19:27:48 - INFO - __main__ -   Total count: 43

02/28/2025 19:27:48 - INFO - __main__ -   Index: 69

	 1  --most gap 0.0015876889
	 2  --most gap 0.0015876889
	 3  --most gap 0.0015876889
	 4  --most gap 0.0015876889
两轮结果未更新,Changing code structure...
	 5  --most gap 0.0015876889
	 6  --most gap 0.0015876889
	 7  --most gap 0.0016515255
	 8  --most gap 0.0016515255
	 9  --most gap 0.0016515255
	 10  --most gap 0.0016515255
两轮结果未更新,Changing code structure...
	 11  --most gap 0.0016515255
	 12  --most gap 0.0016515255
	 13  --most gap 0.0021562576
	 14  --most gap 0.0021562576
	 15  --most gap 0.0021562576
	 16  --most gap 0.0021562576
两轮结果未更新,Changing code structure...
	 17  --most gap 0.0023895502
	 18  --most gap 0.0023895502
	 19  --most gap 0.0023895502
Changing code structure...
Processing examples:  18%|█▊        | 70/400 [27:01<4:12:29, 45.91s/it]02/28/2025 19:27:48 - INFO - __main__ -   测试:70

02/28/2025 19:27:49 - INFO - __main__ -   Success rate: 59.09%

02/28/2025 19:27:49 - INFO - __main__ -   Successful items count: 26

02/28/2025 19:27:49 - INFO - __main__ -   Total count: 44

02/28/2025 19:27:49 - INFO - __main__ -   Index: 70

Number of variable_names extracted:  3
Generating population70...
init SUCCESS!
Processing examples:  18%|█▊        | 71/400 [27:02<3:18:33, 36.21s/it]02/28/2025 19:27:49 - INFO - __main__ -   测试:71

02/28/2025 19:27:49 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 19:27:49 - INFO - __main__ -   Successful items count: 27

02/28/2025 19:27:49 - INFO - __main__ -   Total count: 45

02/28/2025 19:27:49 - INFO - __main__ -   Index: 71

Number of variable_names extracted:  6
Generating population71...
init SUCCESS!
Processing examples:  18%|█▊        | 72/400 [27:02<2:32:20, 27.87s/it]02/28/2025 19:27:49 - INFO - __main__ -   测试:72

02/28/2025 19:30:31 - INFO - __main__ -   Success rate: 58.70%

02/28/2025 19:30:31 - INFO - __main__ -   Successful items count: 27

02/28/2025 19:30:31 - INFO - __main__ -   Total count: 46

02/28/2025 19:30:31 - INFO - __main__ -   Index: 72

Number of variable_names extracted:  7
Generating population72...
	 0  --most gap 0.04158932343125343
	 1  --most gap 0.07646192982792854
	 2  --most gap 0.08818350359797478
	 3  --most gap 0.08818350359797478
	 4  --most gap 0.08818350359797478
	 5  --most gap 0.08818350359797478
两轮结果未更新,Changing code structure...
	 6  --most gap 0.10139481350779533
	 7  --most gap 0.10139481350779533
	 8  --most gap 0.10139481350779533
	 9  --most gap 0.10139481350779533
两轮结果未更新,Changing code structure...
	 10  --most gap 0.10139481350779533
	 11  --most gap 0.10139481350779533
	 12  --most gap 0.10139481350779533
两轮结果未更新,Changing code structure...
	 13  --most gap 0.10139481350779533
	 14  --most gap 0.14487140998244286
	 15  --most gap 0.14487140998244286
	 16  --most gap 0.14487140998244286
	 17  --most gap 0.14487140998244286
两轮结果未更新,Changing code structure...
	 18  --most gap 0.14487140998244286
	 19  --most gap 0.14487140998244286
Changing code structure...
Processing examples:  18%|█▊        | 73/400 [29:44<5:34:16, 61.33s/it]02/28/2025 19:30:31 - INFO - __main__ -   测试:73

02/28/2025 19:30:31 - INFO - __main__ -   Attack failed!

02/28/2025 19:30:31 - INFO - __main__ -   测试:74

02/28/2025 19:30:31 - INFO - __main__ -   Attack failed!

02/28/2025 19:30:31 - INFO - __main__ -   测试:75

02/28/2025 19:30:31 - INFO - __main__ -   Success rate: 59.57%

02/28/2025 19:30:31 - INFO - __main__ -   Successful items count: 28

02/28/2025 19:30:31 - INFO - __main__ -   Total count: 47

02/28/2025 19:30:31 - INFO - __main__ -   Index: 75

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population75...
init SUCCESS!
Processing examples:  19%|█▉        | 76/400 [29:44<2:40:28, 29.72s/it]02/28/2025 19:30:31 - INFO - __main__ -   测试:76

02/28/2025 19:30:31 - INFO - __main__ -   Attack failed!

02/28/2025 19:30:31 - INFO - __main__ -   测试:77

02/28/2025 19:30:34 - INFO - __main__ -   Success rate: 60.42%

02/28/2025 19:30:34 - INFO - __main__ -   Successful items count: 29

02/28/2025 19:30:34 - INFO - __main__ -   Total count: 48

02/28/2025 19:30:34 - INFO - __main__ -   Index: 77

The original code is misclassified.
Number of variable_names extracted:  3
Generating population77...
init SUCCESS!
Processing examples:  20%|█▉        | 78/400 [29:47<1:48:58, 20.30s/it]02/28/2025 19:30:34 - INFO - __main__ -   测试:78

02/28/2025 19:30:57 - INFO - __main__ -   Success rate: 61.22%

02/28/2025 19:30:57 - INFO - __main__ -   Successful items count: 30

02/28/2025 19:30:57 - INFO - __main__ -   Total count: 49

02/28/2025 19:30:57 - INFO - __main__ -   Index: 78

Number of variable_names extracted:  5
Generating population78...
	 0  --most gap 0.29484156519174576
	 1  --most gap 0.29484156519174576
	 2  --most gap 0.29484156519174576
两轮结果未更新,Changing code structure...
	 3  --most gap 0.29484156519174576
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|█▉        | 79/400 [30:10<1:51:55, 20.92s/it]02/28/2025 19:30:57 - INFO - __main__ -   测试:79

02/28/2025 19:32:48 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 19:32:48 - INFO - __main__ -   Successful items count: 30

02/28/2025 19:32:48 - INFO - __main__ -   Total count: 50

02/28/2025 19:32:48 - INFO - __main__ -   Index: 79

Number of variable_names extracted:  4
Generating population79...
	 0  --most gap 0.01155827660113573
	 1  --most gap 0.023229925893247128
	 2  --most gap 0.023229925893247128
	 3  --most gap 0.023229925893247128
	 4  --most gap 0.023229925893247128
两轮结果未更新,Changing code structure...
	 5  --most gap 0.04069190751761198
	 6  --most gap 0.04069190751761198
	 7  --most gap 0.04069190751761198
	 8  --most gap 0.04069190751761198
两轮结果未更新,Changing code structure...
	 9  --most gap 0.09787305351346731
	 10  --most gap 0.09787305351346731
	 11  --most gap 0.09787305351346731
	 12  --most gap 0.09787305351346731
两轮结果未更新,Changing code structure...
	 13  --most gap 0.09787305351346731
	 14  --most gap 0.09787305351346731
	 15  --most gap 0.09787305351346731
两轮结果未更新,Changing code structure...
	 16  --most gap 0.11463078018277884
	 17  --most gap 0.11463078018277884
	 18  --most gap 0.11463078018277884
	 19  --most gap 0.11463078018277884
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  20%|██        | 80/400 [32:01<3:34:16, 40.18s/it]02/28/2025 19:32:48 - INFO - __main__ -   测试:80

02/28/2025 19:32:51 - INFO - __main__ -   Success rate: 60.78%

02/28/2025 19:32:51 - INFO - __main__ -   Successful items count: 31

02/28/2025 19:32:51 - INFO - __main__ -   Total count: 51

02/28/2025 19:32:51 - INFO - __main__ -   Index: 80

Number of variable_names extracted:  8
Generating population80...
	 0  --most gap 0.11636841297149658
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|██        | 81/400 [32:04<2:46:49, 31.38s/it]02/28/2025 19:32:51 - INFO - __main__ -   测试:81

02/28/2025 19:35:36 - INFO - __main__ -   Success rate: 59.62%

02/28/2025 19:35:36 - INFO - __main__ -   Successful items count: 31

02/28/2025 19:35:36 - INFO - __main__ -   Total count: 52

02/28/2025 19:35:36 - INFO - __main__ -   Index: 81

Number of variable_names extracted:  7
Generating population81...
	 0  --most gap 0.02069287933409214
	 1  --most gap 0.024517228826880455
	 2  --most gap 0.03710423596203327
	 3  --most gap 0.07086190022528172
	 4  --most gap 0.07086190022528172
	 5  --most gap 0.07086190022528172
	 6  --most gap 0.07086190022528172
两轮结果未更新,Changing code structure...
	 7  --most gap 0.07086190022528172
	 8  --most gap 0.0829735267907381
	 9  --most gap 0.16818552650511265
	 10  --most gap 0.16818552650511265
	 11  --most gap 0.16818552650511265
	 12  --most gap 0.16818552650511265
两轮结果未更新,Changing code structure...
	 13  --most gap 0.16818552650511265
	 14  --most gap 0.16818552650511265
	 15  --most gap 0.16818552650511265
两轮结果未更新,Changing code structure...
	 16  --most gap 0.16818552650511265
	 17  --most gap 0.16818552650511265
	 18  --most gap 0.16818552650511265
两轮结果未更新,Changing code structure...
	 19  --most gap 0.16818552650511265
Changing code structure...
Processing examples:  20%|██        | 82/400 [34:49<5:44:47, 65.05s/it]02/28/2025 19:35:36 - INFO - __main__ -   测试:82

02/28/2025 19:37:38 - INFO - __main__ -   Success rate: 58.49%

02/28/2025 19:37:38 - INFO - __main__ -   Successful items count: 31

02/28/2025 19:37:38 - INFO - __main__ -   Total count: 53

02/28/2025 19:37:38 - INFO - __main__ -   Index: 82

Number of variable_names extracted:  4
Generating population82...
	 0  --most gap 0.010105904191732407
	 1  --most gap 0.033877309411764145
	 2  --most gap 0.033877309411764145
	 3  --most gap 0.033877309411764145
	 4  --most gap 0.033877309411764145
两轮结果未更新,Changing code structure...
	 5  --most gap 0.033877309411764145
	 6  --most gap 0.033877309411764145
	 7  --most gap 0.033877309411764145
两轮结果未更新,Changing code structure...
	 8  --most gap 0.033877309411764145
	 9  --most gap 0.033877309411764145
	 10  --most gap 0.12559736892580986
	 11  --most gap 0.12559736892580986
	 12  --most gap 0.12559736892580986
	 13  --most gap 0.12559736892580986
两轮结果未更新,Changing code structure...
	 14  --most gap 0.12559736892580986
	 15  --most gap 0.12559736892580986
	 16  --most gap 0.12559736892580986
两轮结果未更新,Changing code structure...
	 17  --most gap 0.12559736892580986
	 18  --most gap 0.12559736892580986
	 19  --most gap 0.12559736892580986
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  21%|██        | 83/400 [36:51<7:01:47, 79.83s/it]02/28/2025 19:37:38 - INFO - __main__ -   测试:83

02/28/2025 19:37:38 - INFO - __main__ -   Attack failed!

02/28/2025 19:37:38 - INFO - __main__ -   测试:84

02/28/2025 19:37:38 - INFO - __main__ -   Attack failed!

02/28/2025 19:37:38 - INFO - __main__ -   测试:85

02/28/2025 19:37:38 - INFO - __main__ -   Success rate: 59.26%

02/28/2025 19:37:38 - INFO - __main__ -   Successful items count: 32

02/28/2025 19:37:38 - INFO - __main__ -   Total count: 54

02/28/2025 19:37:38 - INFO - __main__ -   Index: 85

The original code is misclassified.
No variable_names in the code.
Number of variable_names extracted:  6
Generating population85...
init SUCCESS!
Processing examples:  22%|██▏       | 86/400 [36:51<3:16:49, 37.61s/it]02/28/2025 19:37:38 - INFO - __main__ -   测试:86

02/28/2025 19:37:38 - INFO - __main__ -   Attack failed!

02/28/2025 19:37:38 - INFO - __main__ -   测试:87

02/28/2025 19:37:38 - INFO - __main__ -   Attack failed!

02/28/2025 19:37:38 - INFO - __main__ -   测试:88

02/28/2025 19:37:38 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 19:37:38 - INFO - __main__ -   Successful items count: 33

02/28/2025 19:37:38 - INFO - __main__ -   Total count: 55

02/28/2025 19:37:38 - INFO - __main__ -   Index: 88

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population88...
init SUCCESS!
Processing examples:  22%|██▏       | 89/400 [36:51<1:51:03, 21.43s/it]02/28/2025 19:37:38 - INFO - __main__ -   测试:89

02/28/2025 19:37:39 - INFO - __main__ -   Success rate: 60.71%

02/28/2025 19:37:39 - INFO - __main__ -   Successful items count: 34

02/28/2025 19:37:39 - INFO - __main__ -   Total count: 56

02/28/2025 19:37:39 - INFO - __main__ -   Index: 89

Number of variable_names extracted:  4
Generating population89...
init SUCCESS!
Processing examples:  22%|██▎       | 90/400 [36:52<1:32:11, 17.84s/it]02/28/2025 19:37:39 - INFO - __main__ -   测试:90

02/28/2025 19:37:39 - INFO - __main__ -   Attack failed!

02/28/2025 19:37:39 - INFO - __main__ -   测试:91

02/28/2025 19:43:03 - INFO - __main__ -   Success rate: 59.65%

02/28/2025 19:43:03 - INFO - __main__ -   Successful items count: 34

02/28/2025 19:43:03 - INFO - __main__ -   Total count: 57

02/28/2025 19:43:03 - INFO - __main__ -   Index: 91

The original code is misclassified.
Number of variable_names extracted:  18
Generating population91...
	 0  --most gap 1.0788441e-05
	 1  --most gap 0.00020730495
	 2  --most gap 0.00049316883
	 3  --most gap 0.00049316883
	 4  --most gap 0.0006042719
	 5  --most gap 0.00087428093
	 6  --most gap 0.0009499788
	 7  --most gap 0.0009499788
	 8  --most gap 0.0009499788
	 9  --most gap 0.0009499788
两轮结果未更新,Changing code structure...
	 10  --most gap 0.0009499788
	 11  --most gap 0.0009499788
	 12  --most gap 0.0009499788
两轮结果未更新,Changing code structure...
	 13  --most gap 0.0009499788
	 14  --most gap 0.0009499788
	 15  --most gap 0.0009571314
	 16  --most gap 0.0009571314
	 17  --most gap 0.0009571314
	 18  --most gap 0.0013425946
	 19  --most gap 0.0013425946
Changing code structure...
Processing examples:  23%|██▎       | 92/400 [42:16<5:34:05, 65.08s/it]02/28/2025 19:43:03 - INFO - __main__ -   测试:92

02/28/2025 19:43:26 - INFO - __main__ -   Success rate: 58.62%

02/28/2025 19:43:26 - INFO - __main__ -   Successful items count: 34

02/28/2025 19:43:26 - INFO - __main__ -   Total count: 58

02/28/2025 19:43:26 - INFO - __main__ -   Index: 92

Number of variable_names extracted:  1
Generating population92...
	 0  --most gap 0
	 1  --most gap 0.004981320351362228
	 2  --most gap 0.004981320351362228
	 3  --most gap 0.004981320351362228
	 4  --most gap 0.004981320351362228
两轮结果未更新,Changing code structure...
	 5  --most gap 0.004981320351362228
	 6  --most gap 0.004981320351362228
	 7  --most gap 0.004981320351362228
两轮结果未更新,Changing code structure...
	 8  --most gap 0.004981320351362228
	 9  --most gap 0.004981320351362228
	 10  --most gap 0.004981320351362228
两轮结果未更新,Changing code structure...
	 11  --most gap 0.004981320351362228
	 12  --most gap 0.004981320351362228
	 13  --most gap 0.004981320351362228
两轮结果未更新,Changing code structure...
	 14  --most gap 0.004981320351362228
	 15  --most gap 0.004981320351362228
	 16  --most gap 0.004981320351362228
两轮结果未更新,Changing code structure...
	 17  --most gap 0.004981320351362228
	 18  --most gap 0.004981320351362228
	 19  --most gap 0.004981320351362228
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  23%|██▎       | 93/400 [42:39<4:51:37, 57.00s/it]02/28/2025 19:43:26 - INFO - __main__ -   测试:93

02/28/2025 19:43:26 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
02/28/2025 19:43:26 - INFO - __main__ -   Attack failed!

02/28/2025 19:43:26 - INFO - __main__ -   测试:94

02/28/2025 19:43:26 - INFO - __main__ -   Attack failed!

02/28/2025 19:43:26 - INFO - __main__ -   测试:95

02/28/2025 19:43:26 - INFO - __main__ -   Attack failed!

02/28/2025 19:43:26 - INFO - __main__ -   测试:96

02/28/2025 19:43:26 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
No variable_names in the code.
The original code is misclassified.
Processing examples:  24%|██▍       | 97/400 [42:39<2:18:15, 27.38s/it]02/28/2025 19:43:26 - INFO - __main__ -   测试:97

02/28/2025 19:43:26 - INFO - __main__ -   Success rate: 59.32%

02/28/2025 19:43:26 - INFO - __main__ -   Successful items count: 35

02/28/2025 19:43:26 - INFO - __main__ -   Total count: 59

02/28/2025 19:43:26 - INFO - __main__ -   Index: 97

02/28/2025 19:43:26 - INFO - __main__ -   测试:98

02/28/2025 19:43:26 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  3
Generating population97...
init SUCCESS!
The original code is misclassified.
Processing examples:  25%|██▍       | 99/400 [42:39<1:40:24, 20.02s/it]02/28/2025 19:43:26 - INFO - __main__ -   测试:99

02/28/2025 19:43:31 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 19:43:31 - INFO - __main__ -   Successful items count: 36

02/28/2025 19:43:31 - INFO - __main__ -   Total count: 60

02/28/2025 19:43:31 - INFO - __main__ -   Index: 99

02/28/2025 19:43:31 - INFO - __main__ -   测试:100

02/28/2025 19:43:31 - INFO - __main__ -   Success rate: 60.66%

02/28/2025 19:43:31 - INFO - __main__ -   Successful items count: 37

02/28/2025 19:43:31 - INFO - __main__ -   Total count: 61

02/28/2025 19:43:31 - INFO - __main__ -   Index: 100

Number of variable_names extracted:  12
Generating population99...
	 0  --most gap 0.12427660822868347
select_best_replacement SUCCESS!
update SUCCESS!
Number of variable_names extracted:  4
Generating population100...
init SUCCESS!
Processing examples:  25%|██▌       | 101/400 [42:44<1:15:24, 15.13s/it]02/28/2025 19:43:31 - INFO - __main__ -   测试:101

02/28/2025 19:44:54 - INFO - __main__ -   Success rate: 59.68%

02/28/2025 19:44:54 - INFO - __main__ -   Successful items count: 37

02/28/2025 19:44:54 - INFO - __main__ -   Total count: 62

02/28/2025 19:44:54 - INFO - __main__ -   Index: 101

Number of variable_names extracted:  3
Generating population101...
	 0  --most gap 0.06330238282680511
	 1  --most gap 0.08787398785352707
	 2  --most gap 0.08787398785352707
	 3  --most gap 0.1461653709411621
	 4  --most gap 0.1461653709411621
	 5  --most gap 0.1461653709411621
	 6  --most gap 0.1461653709411621
两轮结果未更新,Changing code structure...
	 7  --most gap 0.1461653709411621
	 8  --most gap 0.1461653709411621
	 9  --most gap 0.1461653709411621
两轮结果未更新,Changing code structure...
	 10  --most gap 0.1461653709411621
	 11  --most gap 0.1461653709411621
	 12  --most gap 0.1461653709411621
两轮结果未更新,Changing code structure...
	 13  --most gap 0.1461653709411621
	 14  --most gap 0.1461653709411621
	 15  --most gap 0.1461653709411621
两轮结果未更新,Changing code structure...
	 16  --most gap 0.1461653709411621
	 17  --most gap 0.1461653709411621
	 18  --most gap 0.1461653709411621
两轮结果未更新,Changing code structure...
	 19  --most gap 0.1461653709411621
Changing code structure...
Processing examples:  26%|██▌       | 102/400 [44:07<2:10:50, 26.34s/it]02/28/2025 19:44:54 - INFO - __main__ -   测试:102

02/28/2025 19:45:03 - INFO - __main__ -   Success rate: 58.73%

02/28/2025 19:45:03 - INFO - __main__ -   Successful items count: 37

02/28/2025 19:45:03 - INFO - __main__ -   Total count: 63

02/28/2025 19:45:03 - INFO - __main__ -   Index: 102

Number of variable_names extracted:  3
Generating population102...
	 0  --most gap 0.11361122131347656
	 1  --most gap 0.11361122131347656
	 2  --most gap 0.11361122131347656
两轮结果未更新,Changing code structure...
	 3  --most gap 0.11361122131347656
	 4  --most gap 0.11361122131347656
	 5  --most gap 0.11361122131347656
两轮结果未更新,Changing code structure...
	 6  --most gap 0.11361122131347656
	 7  --most gap 0.11361122131347656
	 8  --most gap 0.11361122131347656
两轮结果未更新,Changing code structure...
	 9  --most gap 0.11361122131347656
	 10  --most gap 0.11361122131347656
	 11  --most gap 0.11361122131347656
两轮结果未更新,Changing code structure...
	 12  --most gap 0.11361122131347656
	 13  --most gap 0.11361122131347656
	 14  --most gap 0.11361122131347656
两轮结果未更新,Changing code structure...
	 15  --most gap 0.11361122131347656
	 16  --most gap 0.11361122131347656
	 17  --most gap 0.11361122131347656
两轮结果未更新,Changing code structure...
	 18  --most gap 0.11361122131347656
	 19  --most gap 0.11361122131347656
Changing code structure...
Processing examples:  26%|██▌       | 103/400 [44:16<1:54:28, 23.13s/it]02/28/2025 19:45:03 - INFO - __main__ -   测试:103

02/28/2025 19:45:03 - INFO - __main__ -   Attack failed!

02/28/2025 19:45:03 - INFO - __main__ -   测试:104

02/28/2025 19:48:45 - INFO - __main__ -   Success rate: 57.81%

02/28/2025 19:48:45 - INFO - __main__ -   Successful items count: 37

02/28/2025 19:48:45 - INFO - __main__ -   Total count: 64

02/28/2025 19:48:45 - INFO - __main__ -   Index: 104

The original code is misclassified.
Number of variable_names extracted:  7
Generating population104...
	 0  --most gap 0.0054642148315906525
	 1  --most gap 0.017390270717442036
	 2  --most gap 0.017390270717442036
	 3  --most gap 0.09507948067039251
	 4  --most gap 0.09507948067039251
	 5  --most gap 0.09507948067039251
	 6  --most gap 0.12311458494514227
	 7  --most gap 0.12311458494514227
	 8  --most gap 0.12311458494514227
	 9  --most gap 0.13036836590617895
	 10  --most gap 0.17808914091438055
	 11  --most gap 0.17808914091438055
	 12  --most gap 0.17808914091438055
	 13  --most gap 0.17808914091438055
两轮结果未更新,Changing code structure...
	 14  --most gap 0.17808914091438055
	 15  --most gap 0.17808914091438055
	 16  --most gap 0.17808914091438055
两轮结果未更新,Changing code structure...
	 17  --most gap 0.17808914091438055
	 18  --most gap 0.17808914091438055
	 19  --most gap 0.17808914091438055
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  26%|██▋       | 105/400 [47:58<4:26:40, 54.24s/it]02/28/2025 19:48:45 - INFO - __main__ -   测试:105

02/28/2025 19:51:20 - INFO - __main__ -   Success rate: 56.92%

02/28/2025 19:51:20 - INFO - __main__ -   Successful items count: 37

02/28/2025 19:51:20 - INFO - __main__ -   Total count: 65

02/28/2025 19:51:20 - INFO - __main__ -   Index: 105

Number of variable_names extracted:  5
Generating population105...
	 0  --most gap 0.0034735659137368202
	 1  --most gap 0.004259312525391579
	 2  --most gap 0.007038867101073265
	 3  --most gap 0.007038867101073265
	 4  --most gap 0.007038867101073265
	 5  --most gap 0.009338786825537682
	 6  --most gap 0.009338786825537682
	 7  --most gap 0.009338786825537682
	 8  --most gap 0.009338786825537682
两轮结果未更新,Changing code structure...
	 9  --most gap 0.009338786825537682
	 10  --most gap 0.009338786825537682
	 11  --most gap 0.009338786825537682
两轮结果未更新,Changing code structure...
	 12  --most gap 0.009338786825537682
	 13  --most gap 0.009338786825537682
	 14  --most gap 0.009338786825537682
两轮结果未更新,Changing code structure...
	 15  --most gap 0.009338786825537682
	 16  --most gap 0.009338786825537682
	 17  --most gap 0.009338786825537682
两轮结果未更新,Changing code structure...
	 18  --most gap 0.009338786825537682
	 19  --most gap 0.009338786825537682
Changing code structure...
Processing examples:  26%|██▋       | 106/400 [50:33<6:05:32, 74.60s/it]02/28/2025 19:51:20 - INFO - __main__ -   测试:106

02/28/2025 19:51:20 - INFO - __main__ -   Attack failed!

02/28/2025 19:51:20 - INFO - __main__ -   测试:107

02/28/2025 19:52:19 - INFO - __main__ -   Success rate: 57.58%

02/28/2025 19:52:19 - INFO - __main__ -   Successful items count: 38

02/28/2025 19:52:19 - INFO - __main__ -   Total count: 66

02/28/2025 19:52:19 - INFO - __main__ -   Index: 107

The original code is misclassified.
Number of variable_names extracted:  12
Generating population107...
init SUCCESS!
Processing examples:  27%|██▋       | 108/400 [51:32<4:42:46, 58.10s/it]02/28/2025 19:52:19 - INFO - __main__ -   测试:108

02/28/2025 19:52:19 - INFO - __main__ -   Attack failed!

02/28/2025 19:52:19 - INFO - __main__ -   测试:109

02/28/2025 19:52:20 - INFO - __main__ -   Success rate: 58.21%

02/28/2025 19:52:20 - INFO - __main__ -   Successful items count: 39

02/28/2025 19:52:20 - INFO - __main__ -   Total count: 67

02/28/2025 19:52:20 - INFO - __main__ -   Index: 109

The original code is misclassified.
Number of variable_names extracted:  7
Generating population109...
init SUCCESS!
Processing examples:  28%|██▊       | 110/400 [51:33<3:05:12, 38.32s/it]02/28/2025 19:52:20 - INFO - __main__ -   测试:110

02/28/2025 19:52:28 - INFO - __main__ -   Success rate: 58.82%

02/28/2025 19:52:28 - INFO - __main__ -   Successful items count: 40

02/28/2025 19:52:28 - INFO - __main__ -   Total count: 68

02/28/2025 19:52:28 - INFO - __main__ -   Index: 110

Number of variable_names extracted:  6
Generating population110...
init SUCCESS!
Processing examples:  28%|██▊       | 111/400 [51:41<2:35:40, 32.32s/it]02/28/2025 19:52:28 - INFO - __main__ -   测试:111

02/28/2025 19:52:39 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
02/28/2025 19:52:39 - INFO - __main__ -   Success rate: 57.97%

02/28/2025 19:52:39 - INFO - __main__ -   Successful items count: 40

02/28/2025 19:52:39 - INFO - __main__ -   Total count: 69

02/28/2025 19:52:39 - INFO - __main__ -   Index: 111

Number of variable_names extracted:  1
Generating population111...
	 0  --most gap 0.05595079064369202
	 1  --most gap 0.05595079064369202
	 2  --most gap 0.05595079064369202
	 3  --most gap 0.05595079064369202
两轮结果未更新,Changing code structure...
	 4  --most gap 0.05595079064369202
	 5  --most gap 0.05595079064369202
	 6  --most gap 0.05595079064369202
两轮结果未更新,Changing code structure...
	 7  --most gap 0.05595079064369202
	 8  --most gap 0.05595079064369202
	 9  --most gap 0.05595079064369202
两轮结果未更新,Changing code structure...
	 10  --most gap 0.05595079064369202
	 11  --most gap 0.05595079064369202
	 12  --most gap 0.05595079064369202
两轮结果未更新,Changing code structure...
	 13  --most gap 0.05595079064369202
	 14  --most gap 0.05595079064369202
	 15  --most gap 0.05595079064369202
两轮结果未更新,Changing code structure...
	 16  --most gap 0.05595079064369202
	 17  --most gap 0.05595079064369202
	 18  --most gap 0.05595079064369202
两轮结果未更新,Changing code structure...
	 19  --most gap 0.05595079064369202
Changing code structure...
Processing examples:  28%|██▊       | 112/400 [51:52<2:12:18, 27.56s/it]02/28/2025 19:52:39 - INFO - __main__ -   测试:112

02/28/2025 19:52:40 - INFO - __main__ -   Success rate: 58.57%

02/28/2025 19:52:40 - INFO - __main__ -   Successful items count: 41

02/28/2025 19:52:40 - INFO - __main__ -   Total count: 70

02/28/2025 19:52:40 - INFO - __main__ -   Index: 112

Number of variable_names extracted:  3
Generating population112...
	 0  --most gap 0.08900405466556549
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 113/400 [51:53<1:42:00, 21.33s/it]02/28/2025 19:52:40 - INFO - __main__ -   测试:113

02/28/2025 19:52:42 - INFO - __main__ -   Success rate: 59.15%

02/28/2025 19:52:42 - INFO - __main__ -   Successful items count: 42

02/28/2025 19:52:42 - INFO - __main__ -   Total count: 71

02/28/2025 19:52:42 - INFO - __main__ -   Index: 113

Number of variable_names extracted:  7
Generating population113...
	 0  --most gap 0.29667992144823074
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 114/400 [51:55<1:17:38, 16.29s/it]02/28/2025 19:52:42 - INFO - __main__ -   测试:114

02/28/2025 19:52:43 - INFO - __main__ -   Success rate: 59.72%

02/28/2025 19:52:43 - INFO - __main__ -   Successful items count: 43

02/28/2025 19:52:43 - INFO - __main__ -   Total count: 72

02/28/2025 19:52:43 - INFO - __main__ -   Index: 114

Number of variable_names extracted:  4
Generating population114...
init SUCCESS!
Processing examples:  29%|██▉       | 115/400 [51:56<58:47, 12.38s/it]  02/28/2025 19:52:43 - INFO - __main__ -   测试:115

02/28/2025 19:52:45 - INFO - __main__ -   Success rate: 60.27%

02/28/2025 19:52:45 - INFO - __main__ -   Successful items count: 44

02/28/2025 19:52:45 - INFO - __main__ -   Total count: 73

02/28/2025 19:52:45 - INFO - __main__ -   Index: 115

Number of variable_names extracted:  1
Generating population115...
	 0  --most gap 7.152557373046875e-07
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  29%|██▉       | 116/400 [51:58<44:12,  9.34s/it]02/28/2025 19:52:45 - INFO - __main__ -   测试:116

02/28/2025 19:52:45 - INFO - __main__ -   Success rate: 60.81%

02/28/2025 19:52:45 - INFO - __main__ -   Successful items count: 45

02/28/2025 19:52:45 - INFO - __main__ -   Total count: 74

02/28/2025 19:52:45 - INFO - __main__ -   Index: 116

Number of variable_names extracted:  3
Generating population116...
init SUCCESS!
Processing examples:  29%|██▉       | 117/400 [51:58<31:47,  6.74s/it]02/28/2025 19:52:45 - INFO - __main__ -   测试:117

02/28/2025 19:52:54 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 19:52:54 - INFO - __main__ -   Successful items count: 45

02/28/2025 19:52:54 - INFO - __main__ -   Total count: 75

02/28/2025 19:52:54 - INFO - __main__ -   Index: 117

Number of variable_names extracted:  1
Generating population117...
	 0  --most gap 0.006360233
	 1  --most gap 0.006360233
	 2  --most gap 0.006360233
两轮结果未更新,Changing code structure...
	 3  --most gap 0.006360233
	 4  --most gap 0.006360233
	 5  --most gap 0.006360233
两轮结果未更新,Changing code structure...
	 6  --most gap 0.006360233
	 7  --most gap 0.006360233
	 8  --most gap 0.006360233
两轮结果未更新,Changing code structure...
	 9  --most gap 0.006360233
	 10  --most gap 0.006360233
	 11  --most gap 0.006360233
两轮结果未更新,Changing code structure...
	 12  --most gap 0.006360233
	 13  --most gap 0.006360233
	 14  --most gap 0.006360233
两轮结果未更新,Changing code structure...
	 15  --most gap 0.006360233
	 16  --most gap 0.006360233
	 17  --most gap 0.006360233
两轮结果未更新,Changing code structure...
	 18  --most gap 0.006360233
	 19  --most gap 0.006360233
Changing code structure...
Processing examples:  30%|██▉       | 118/400 [52:07<35:04,  7.46s/it]02/28/2025 19:52:54 - INFO - __main__ -   测试:118

02/28/2025 19:59:07 - INFO - __main__ -   Success rate: 59.21%

02/28/2025 19:59:07 - INFO - __main__ -   Successful items count: 45

02/28/2025 19:59:07 - INFO - __main__ -   Total count: 76

02/28/2025 19:59:07 - INFO - __main__ -   Index: 118

Number of variable_names extracted:  5
Generating population118...
	 0  --most gap 0.0049132705
	 1  --most gap 0.01232028
	 2  --most gap 0.01232028
	 3  --most gap 0.012773514
	 4  --most gap 0.012773514
	 5  --most gap 0.012773514
	 6  --most gap 0.012773514
两轮结果未更新,Changing code structure...
	 7  --most gap 0.012773514
	 8  --most gap 0.012773514
	 9  --most gap 0.012773514
两轮结果未更新,Changing code structure...
	 10  --most gap 0.012773514
	 11  --most gap 0.012773514
	 12  --most gap 0.012773514
两轮结果未更新,Changing code structure...
	 13  --most gap 0.012773514
	 14  --most gap 0.012773514
	 15  --most gap 0.012773514
两轮结果未更新,Changing code structure...
	 16  --most gap 0.012773514
	 17  --most gap 0.012773514
	 18  --most gap 0.012773514
两轮结果未更新,Changing code structure...
	 19  --most gap 0.012773514
Changing code structure...
Processing examples:  30%|██▉       | 119/400 [58:20<8:52:57, 113.80s/it]02/28/2025 19:59:07 - INFO - __main__ -   测试:119

02/28/2025 19:59:07 - INFO - __main__ -   Attack failed!

02/28/2025 19:59:07 - INFO - __main__ -   测试:120

02/28/2025 19:59:34 - INFO - __main__ -   Success rate: 59.74%

02/28/2025 19:59:34 - INFO - __main__ -   Successful items count: 46

02/28/2025 19:59:34 - INFO - __main__ -   Total count: 77

02/28/2025 19:59:34 - INFO - __main__ -   Index: 120

The original code is misclassified.
Number of variable_names extracted:  4
Generating population120...
	 0  --most gap 0.26518685
	 1  --most gap 0.26518685
	 2  --most gap 0.26518685
	 3  --most gap 0.26518685
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  30%|███       | 121/400 [58:47<5:17:55, 68.37s/it] 02/28/2025 19:59:34 - INFO - __main__ -   测试:121

02/28/2025 20:01:07 - INFO - __main__ -   Success rate: 58.97%

02/28/2025 20:01:07 - INFO - __main__ -   Successful items count: 46

02/28/2025 20:01:07 - INFO - __main__ -   Total count: 78

02/28/2025 20:01:07 - INFO - __main__ -   Index: 121

Number of variable_names extracted:  3
Generating population121...
	 0  --most gap 0.033588827
	 1  --most gap 0.033588827
	 2  --most gap 0.033588827
两轮结果未更新,Changing code structure...
	 3  --most gap 0.033588827
	 4  --most gap 0.033588827
	 5  --most gap 0.033588827
两轮结果未更新,Changing code structure...
	 6  --most gap 0.033588827
	 7  --most gap 0.08334768
	 8  --most gap 0.29166424
	 9  --most gap 0.29166424
	 10  --most gap 0.29166424
	 11  --most gap 0.29166424
两轮结果未更新,Changing code structure...
	 12  --most gap 0.29166424
	 13  --most gap 0.29166424
	 14  --most gap 0.29166424
两轮结果未更新,Changing code structure...
	 15  --most gap 0.29166424
	 16  --most gap 0.29166424
	 17  --most gap 0.29166424
两轮结果未更新,Changing code structure...
	 18  --most gap 0.29166424
	 19  --most gap 0.29166424
Changing code structure...
Processing examples:  30%|███       | 122/400 [1:00:20<5:44:04, 74.26s/it]02/28/2025 20:01:07 - INFO - __main__ -   测试:122

02/28/2025 20:01:16 - INFO - __main__ -   Success rate: 58.23%

02/28/2025 20:01:16 - INFO - __main__ -   Successful items count: 46

02/28/2025 20:01:16 - INFO - __main__ -   Total count: 79

02/28/2025 20:01:16 - INFO - __main__ -   Index: 122

Number of variable_names extracted:  2
Generating population122...
	 0  --most gap 0.015665743499994278
	 1  --most gap 0.015665743499994278
	 2  --most gap 0.015665743499994278
两轮结果未更新,Changing code structure...
	 3  --most gap 0.015665743499994278
	 4  --most gap 0.015665743499994278
	 5  --most gap 0.015665743499994278
两轮结果未更新,Changing code structure...
	 6  --most gap 0.015665743499994278
	 7  --most gap 0.015665743499994278
	 8  --most gap 0.015665743499994278
两轮结果未更新,Changing code structure...
	 9  --most gap 0.015665743499994278
	 10  --most gap 0.015665743499994278
	 11  --most gap 0.015665743499994278
两轮结果未更新,Changing code structure...
	 12  --most gap 0.015665743499994278
	 13  --most gap 0.015665743499994278
	 14  --most gap 0.015665743499994278
两轮结果未更新,Changing code structure...
	 15  --most gap 0.015665743499994278
	 16  --most gap 0.015665743499994278
	 17  --most gap 0.015665743499994278
两轮结果未更新,Changing code structure...
	 18  --most gap 0.015665743499994278
	 19  --most gap 0.015665743499994278
Changing code structure...
Processing examples:  31%|███       | 123/400 [1:00:29<4:24:57, 57.39s/it]02/28/2025 20:01:16 - INFO - __main__ -   测试:123

02/28/2025 20:02:47 - INFO - __main__ -   Success rate: 57.50%

02/28/2025 20:02:47 - INFO - __main__ -   Successful items count: 46

02/28/2025 20:02:47 - INFO - __main__ -   Total count: 80

02/28/2025 20:02:47 - INFO - __main__ -   Index: 123

Number of variable_names extracted:  5
Generating population123...
	 0  --most gap 0.013758030720055103
	 1  --most gap 0.015218702144920826
	 2  --most gap 0.015218702144920826
	 3  --most gap 0.015218702144920826
	 4  --most gap 0.2278696382418275
	 5  --most gap 0.2278696382418275
	 6  --most gap 0.2278696382418275
	 7  --most gap 0.2278696382418275
两轮结果未更新,Changing code structure...
	 8  --most gap 0.2278696382418275
	 9  --most gap 0.2278696382418275
	 10  --most gap 0.2278696382418275
两轮结果未更新,Changing code structure...
	 11  --most gap 0.2278696382418275
	 12  --most gap 0.2278696382418275
	 13  --most gap 0.2278696382418275
两轮结果未更新,Changing code structure...
	 14  --most gap 0.2278696382418275
	 15  --most gap 0.2278696382418275
	 16  --most gap 0.2278696382418275
两轮结果未更新,Changing code structure...
	 17  --most gap 0.2278696382418275
	 18  --most gap 0.2278696382418275
	 19  --most gap 0.2278696382418275
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  31%|███       | 124/400 [1:02:00<5:06:27, 66.62s/it]02/28/2025 20:02:47 - INFO - __main__ -   测试:124

02/28/2025 20:02:47 - INFO - __main__ -   Attack failed!

02/28/2025 20:02:47 - INFO - __main__ -   测试:125

02/28/2025 20:02:48 - INFO - __main__ -   Attack failed!

02/28/2025 20:02:48 - INFO - __main__ -   测试:126

02/28/2025 20:02:56 - INFO - __main__ -   Success rate: 56.79%

02/28/2025 20:02:56 - INFO - __main__ -   Successful items count: 46

02/28/2025 20:02:56 - INFO - __main__ -   Total count: 81

02/28/2025 20:02:56 - INFO - __main__ -   Index: 126

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  2
Generating population126...
	 0  --most gap 0.22562617
	 1  --most gap 0.22562617
	 2  --most gap 0.22562617
两轮结果未更新,Changing code structure...
	 3  --most gap 0.22562617
	 4  --most gap 0.22562617
	 5  --most gap 0.22562617
两轮结果未更新,Changing code structure...
	 6  --most gap 0.22562617
	 7  --most gap 0.22562617
	 8  --most gap 0.22562617
两轮结果未更新,Changing code structure...
	 9  --most gap 0.22562617
	 10  --most gap 0.22562617
	 11  --most gap 0.22562617
两轮结果未更新,Changing code structure...
	 12  --most gap 0.22562617
	 13  --most gap 0.22562617
	 14  --most gap 0.22562617
两轮结果未更新,Changing code structure...
	 15  --most gap 0.22562617
	 16  --most gap 0.22562617
	 17  --most gap 0.22562617
两轮结果未更新,Changing code structure...
	 18  --most gap 0.22562617
	 19  --most gap 0.22562617
Changing code structure...
Processing examples:  32%|███▏      | 127/400 [1:02:09<2:27:06, 32.33s/it]02/28/2025 20:02:56 - INFO - __main__ -   测试:127

02/28/2025 20:02:57 - INFO - __main__ -   Success rate: 57.32%

02/28/2025 20:02:57 - INFO - __main__ -   Successful items count: 47

02/28/2025 20:02:57 - INFO - __main__ -   Total count: 82

02/28/2025 20:02:57 - INFO - __main__ -   Index: 127

Number of variable_names extracted:  10
Generating population127...
	 0  --most gap 0.07450974
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  32%|███▏      | 128/400 [1:02:10<1:57:39, 25.95s/it]02/28/2025 20:02:57 - INFO - __main__ -   测试:128

02/28/2025 20:02:57 - INFO - __main__ -   Success rate: 57.83%

02/28/2025 20:02:57 - INFO - __main__ -   Successful items count: 48

02/28/2025 20:02:57 - INFO - __main__ -   Total count: 83

02/28/2025 20:02:57 - INFO - __main__ -   Index: 128

02/28/2025 20:02:57 - INFO - __main__ -   测试:129

02/28/2025 20:02:57 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  3
Generating population128...
init SUCCESS!
The original code is misclassified.
Processing examples:  32%|███▎      | 130/400 [1:02:10<1:13:56, 16.43s/it]02/28/2025 20:02:57 - INFO - __main__ -   测试:130

02/28/2025 20:03:01 - INFO - __main__ -   Success rate: 58.33%

02/28/2025 20:03:01 - INFO - __main__ -   Successful items count: 49

02/28/2025 20:03:01 - INFO - __main__ -   Total count: 84

02/28/2025 20:03:01 - INFO - __main__ -   Index: 130

Number of variable_names extracted:  12
Generating population130...
init SUCCESS!
Processing examples:  33%|███▎      | 131/400 [1:02:14<1:01:59, 13.83s/it]02/28/2025 20:03:01 - INFO - __main__ -   测试:131

02/28/2025 20:05:38 - INFO - __main__ -   Success rate: 57.65%

02/28/2025 20:05:38 - INFO - __main__ -   Successful items count: 49

02/28/2025 20:05:38 - INFO - __main__ -   Total count: 85

02/28/2025 20:05:38 - INFO - __main__ -   Index: 131

Number of variable_names extracted:  12
Generating population131...
	 0  --most gap 0.00025105476
	 1  --most gap 0.00039941072
	 2  --most gap 0.0005286336
	 3  --most gap 0.00066804886
	 4  --most gap 0.00092059374
	 5  --most gap 0.00092059374
	 6  --most gap 0.00092059374
	 7  --most gap 0.00092059374
两轮结果未更新,Changing code structure...
	 8  --most gap 0.00092059374
	 9  --most gap 0.00092059374
	 10  --most gap 0.0009278059
	 11  --most gap 0.0009278059
	 12  --most gap 0.0009278059
	 13  --most gap 0.0024164915
	 14  --most gap 0.0024164915
	 15  --most gap 0.0024164915
	 16  --most gap 0.0024164915
两轮结果未更新,Changing code structure...
	 17  --most gap 0.0024164915
	 18  --most gap 0.0024164915
	 19  --most gap 0.0024164915
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  33%|███▎      | 132/400 [1:04:51<3:28:36, 46.70s/it]02/28/2025 20:05:38 - INFO - __main__ -   测试:132

02/28/2025 20:05:49 - INFO - __main__ -   Success rate: 56.98%

02/28/2025 20:05:49 - INFO - __main__ -   Successful items count: 49

02/28/2025 20:05:49 - INFO - __main__ -   Total count: 86

02/28/2025 20:05:49 - INFO - __main__ -   Index: 132

Number of variable_names extracted:  2
Generating population132...
	 0  --most gap 0.010218203
	 1  --most gap 0.13986623
	 2  --most gap 0.13986623
	 3  --most gap 0.13986623
	 4  --most gap 0.13986623
两轮结果未更新,Changing code structure...
	 5  --most gap 0.13986623
	 6  --most gap 0.13986623
	 7  --most gap 0.13986623
两轮结果未更新,Changing code structure...
	 8  --most gap 0.13986623
	 9  --most gap 0.13986623
	 10  --most gap 0.13986623
两轮结果未更新,Changing code structure...
	 11  --most gap 0.13986623
	 12  --most gap 0.13986623
	 13  --most gap 0.13986623
两轮结果未更新,Changing code structure...
	 14  --most gap 0.13986623
	 15  --most gap 0.13986623
	 16  --most gap 0.13986623
两轮结果未更新,Changing code structure...
	 17  --most gap 0.13986623
	 18  --most gap 0.13986623
	 19  --most gap 0.13986623
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  33%|███▎      | 133/400 [1:05:02<2:48:43, 37.92s/it]02/28/2025 20:05:49 - INFO - __main__ -   测试:133

02/28/2025 20:05:49 - INFO - __main__ -   Attack failed!

02/28/2025 20:05:49 - INFO - __main__ -   测试:134

02/28/2025 20:05:49 - INFO - __main__ -   Attack failed!

02/28/2025 20:05:49 - INFO - __main__ -   测试:135

02/28/2025 20:05:49 - INFO - __main__ -   Attack failed!

02/28/2025 20:05:49 - INFO - __main__ -   测试:136

02/28/2025 20:05:55 - INFO - __main__ -   Success rate: 57.47%

02/28/2025 20:05:55 - INFO - __main__ -   Successful items count: 50

02/28/2025 20:05:55 - INFO - __main__ -   Total count: 87

02/28/2025 20:05:55 - INFO - __main__ -   Index: 136

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  15
Generating population136...
init SUCCESS!
Processing examples:  34%|███▍      | 137/400 [1:05:08<1:13:05, 16.68s/it]02/28/2025 20:05:55 - INFO - __main__ -   测试:137

02/28/2025 20:05:55 - INFO - __main__ -   Attack failed!

02/28/2025 20:05:55 - INFO - __main__ -   测试:138

02/28/2025 20:05:56 - INFO - __main__ -   Success rate: 57.95%

02/28/2025 20:05:56 - INFO - __main__ -   Successful items count: 51

02/28/2025 20:05:56 - INFO - __main__ -   Total count: 88

02/28/2025 20:05:56 - INFO - __main__ -   Index: 138

The original code is misclassified.
Number of variable_names extracted:  4
Generating population138...
init SUCCESS!
Processing examples:  35%|███▍      | 139/400 [1:05:09<51:36, 11.86s/it]  02/28/2025 20:05:56 - INFO - __main__ -   测试:139

02/28/2025 20:05:56 - INFO - __main__ -   Attack failed!

02/28/2025 20:05:56 - INFO - __main__ -   测试:140

02/28/2025 20:05:57 - INFO - __main__ -   Success rate: 58.43%

02/28/2025 20:05:57 - INFO - __main__ -   Successful items count: 52

02/28/2025 20:05:57 - INFO - __main__ -   Total count: 89

02/28/2025 20:05:57 - INFO - __main__ -   Index: 140

The original code is misclassified.
Number of variable_names extracted:  9
Generating population140...
init SUCCESS!
Processing examples:  35%|███▌      | 141/400 [1:05:10<36:40,  8.50s/it]02/28/2025 20:05:57 - INFO - __main__ -   测试:141

02/28/2025 20:05:58 - INFO - __main__ -   Success rate: 58.89%

02/28/2025 20:05:58 - INFO - __main__ -   Successful items count: 53

02/28/2025 20:05:58 - INFO - __main__ -   Total count: 90

02/28/2025 20:05:58 - INFO - __main__ -   Index: 141

Number of variable_names extracted:  8
Generating population141...
	 0  --most gap 0.37056065
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  36%|███▌      | 142/400 [1:05:11<31:06,  7.23s/it]02/28/2025 20:05:58 - INFO - __main__ -   测试:142

02/28/2025 20:05:58 - INFO - __main__ -   Attack failed!

02/28/2025 20:05:58 - INFO - __main__ -   测试:143

02/28/2025 20:07:27 - INFO - __main__ -   Success rate: 58.24%

02/28/2025 20:07:27 - INFO - __main__ -   Successful items count: 53

02/28/2025 20:07:27 - INFO - __main__ -   Total count: 91

02/28/2025 20:07:27 - INFO - __main__ -   Index: 143

The original code is misclassified.
Number of variable_names extracted:  4
Generating population143...
	 0  --most gap 0.005291559733450413
	 1  --most gap 0.005291559733450413
	 2  --most gap 0.007465043105185032
	 3  --most gap 0.03263061586767435
	 4  --most gap 0.03263061586767435
	 5  --most gap 0.03263061586767435
	 6  --most gap 0.03263061586767435
两轮结果未更新,Changing code structure...
	 7  --most gap 0.03263061586767435
	 8  --most gap 0.03263061586767435
	 9  --most gap 0.03263061586767435
两轮结果未更新,Changing code structure...
	 10  --most gap 0.03263061586767435
	 11  --most gap 0.03263061586767435
	 12  --most gap 0.03263061586767435
两轮结果未更新,Changing code structure...
	 13  --most gap 0.03263061586767435
	 14  --most gap 0.03263061586767435
	 15  --most gap 0.03263061586767435
两轮结果未更新,Changing code structure...
	 16  --most gap 0.03263061586767435
	 17  --most gap 0.03263061586767435
	 18  --most gap 0.03263061586767435
两轮结果未更新,Changing code structure...
	 19  --most gap 0.03263061586767435
Changing code structure...
Processing examples:  36%|███▌      | 144/400 [1:06:40<1:23:22, 19.54s/it]02/28/2025 20:07:27 - INFO - __main__ -   测试:144

02/28/2025 20:07:27 - INFO - __main__ -   Attack failed!

02/28/2025 20:07:27 - INFO - __main__ -   测试:145

02/28/2025 20:07:27 - INFO - __main__ -   Attack failed!

02/28/2025 20:07:27 - INFO - __main__ -   测试:146

02/28/2025 20:07:28 - INFO - __main__ -   Success rate: 58.70%

02/28/2025 20:07:28 - INFO - __main__ -   Successful items count: 54

02/28/2025 20:07:28 - INFO - __main__ -   Total count: 92

02/28/2025 20:07:28 - INFO - __main__ -   Index: 146

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population146...
	 0  --most gap 2.041459083557129e-06
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  37%|███▋      | 147/400 [1:06:41<48:35, 11.52s/it]  02/28/2025 20:07:28 - INFO - __main__ -   测试:147

02/28/2025 20:07:28 - INFO - __main__ -   Success rate: 59.14%

02/28/2025 20:07:28 - INFO - __main__ -   Successful items count: 55

02/28/2025 20:07:28 - INFO - __main__ -   Total count: 93

02/28/2025 20:07:28 - INFO - __main__ -   Index: 147

Number of variable_names extracted:  1
Generating population147...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  37%|███▋      | 148/400 [1:06:41<40:53,  9.73s/it]02/28/2025 20:07:28 - INFO - __main__ -   测试:148

02/28/2025 20:07:48 - INFO - __main__ -   Success rate: 58.51%

02/28/2025 20:07:48 - INFO - __main__ -   Successful items count: 55

02/28/2025 20:07:48 - INFO - __main__ -   Total count: 94

02/28/2025 20:07:48 - INFO - __main__ -   Index: 148

Number of variable_names extracted:  1
Generating population148...
	 0  --most gap 0
	 1  --most gap 0.2557759955525398
	 2  --most gap 0.2557759955525398
	 3  --most gap 0.2557759955525398
	 4  --most gap 0.2557759955525398
两轮结果未更新,Changing code structure...
	 5  --most gap 0.2557759955525398
	 6  --most gap 0.2557759955525398
	 7  --most gap 0.2557759955525398
两轮结果未更新,Changing code structure...
	 8  --most gap 0.2557759955525398
	 9  --most gap 0.2557759955525398
	 10  --most gap 0.2557759955525398
两轮结果未更新,Changing code structure...
	 11  --most gap 0.2557759955525398
	 12  --most gap 0.2557759955525398
	 13  --most gap 0.2557759955525398
两轮结果未更新,Changing code structure...
	 14  --most gap 0.2557759955525398
	 15  --most gap 0.2557759955525398
	 16  --most gap 0.2557759955525398
两轮结果未更新,Changing code structure...
	 17  --most gap 0.2557759955525398
	 18  --most gap 0.2557759955525398
	 19  --most gap 0.2557759955525398
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  37%|███▋      | 149/400 [1:07:01<49:01, 11.72s/it]02/28/2025 20:07:48 - INFO - __main__ -   测试:149

02/28/2025 20:07:49 - INFO - __main__ -   Attack failed!

02/28/2025 20:07:49 - INFO - __main__ -   测试:150

02/28/2025 20:07:58 - INFO - __main__ -   Success rate: 57.89%

02/28/2025 20:07:58 - INFO - __main__ -   Successful items count: 55

02/28/2025 20:07:58 - INFO - __main__ -   Total count: 95

02/28/2025 20:07:58 - INFO - __main__ -   Index: 150

The original code is misclassified.
Number of variable_names extracted:  1
Generating population150...
	 0  --most gap 0.010667333379387856
	 1  --most gap 0.010667333379387856
	 2  --most gap 0.010667333379387856
两轮结果未更新,Changing code structure...
	 3  --most gap 0.010667333379387856
	 4  --most gap 0.010667333379387856
	 5  --most gap 0.010667333379387856
两轮结果未更新,Changing code structure...
	 6  --most gap 0.010667333379387856
	 7  --most gap 0.010667333379387856
	 8  --most gap 0.010667333379387856
两轮结果未更新,Changing code structure...
	 9  --most gap 0.010667333379387856
	 10  --most gap 0.010667333379387856
	 11  --most gap 0.010667333379387856
两轮结果未更新,Changing code structure...
	 12  --most gap 0.010667333379387856
	 13  --most gap 0.010667333379387856
	 14  --most gap 0.010667333379387856
两轮结果未更新,Changing code structure...
	 15  --most gap 0.010667333379387856
	 16  --most gap 0.010667333379387856
	 17  --most gap 0.010667333379387856
两轮结果未更新,Changing code structure...
	 18  --most gap 0.010667333379387856
	 19  --most gap 0.010667333379387856
Changing code structure...
Processing examples:  38%|███▊      | 151/400 [1:07:11<38:21,  9.24s/it]02/28/2025 20:07:58 - INFO - __main__ -   测试:151

02/28/2025 20:08:19 - INFO - __main__ -   Success rate: 58.33%

02/28/2025 20:08:19 - INFO - __main__ -   Successful items count: 56

02/28/2025 20:08:19 - INFO - __main__ -   Total count: 96

02/28/2025 20:08:19 - INFO - __main__ -   Index: 151

Number of variable_names extracted:  21
Generating population151...
init SUCCESS!
Processing examples:  38%|███▊      | 152/400 [1:07:32<48:04, 11.63s/it]02/28/2025 20:08:19 - INFO - __main__ -   测试:152

02/28/2025 20:08:19 - INFO - __main__ -   Attack failed!

02/28/2025 20:08:19 - INFO - __main__ -   测试:153

02/28/2025 20:08:19 - INFO - __main__ -   Attack failed!

02/28/2025 20:08:19 - INFO - __main__ -   测试:154

02/28/2025 20:10:11 - INFO - __main__ -   Success rate: 57.73%

02/28/2025 20:10:11 - INFO - __main__ -   Successful items count: 56

02/28/2025 20:10:11 - INFO - __main__ -   Total count: 97

02/28/2025 20:10:11 - INFO - __main__ -   Index: 154

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population154...
	 0  --most gap 0.03197891637682915
	 1  --most gap 0.13415702059864998
	 2  --most gap 0.13415702059864998
	 3  --most gap 0.13415702059864998
	 4  --most gap 0.13415702059864998
两轮结果未更新,Changing code structure...
	 5  --most gap 0.233837578445673
	 6  --most gap 0.233837578445673
	 7  --most gap 0.233837578445673
	 8  --most gap 0.233837578445673
两轮结果未更新,Changing code structure...
	 9  --most gap 0.233837578445673
	 10  --most gap 0.233837578445673
	 11  --most gap 0.3251461870968342
	 12  --most gap 0.3251461870968342
	 13  --most gap 0.3251461870968342
	 14  --most gap 0.3251461870968342
两轮结果未更新,Changing code structure...
	 15  --most gap 0.3251461870968342
	 16  --most gap 0.3251461870968342
	 17  --most gap 0.3251461870968342
两轮结果未更新,Changing code structure...
	 18  --most gap 0.3251461870968342
	 19  --most gap 0.3251461870968342
Changing code structure...
Processing examples:  39%|███▉      | 155/400 [1:09:24<1:36:25, 23.62s/it]02/28/2025 20:10:11 - INFO - __main__ -   测试:155

02/28/2025 20:12:29 - INFO - __main__ -   Success rate: 57.14%

02/28/2025 20:12:29 - INFO - __main__ -   Successful items count: 56

02/28/2025 20:12:29 - INFO - __main__ -   Total count: 98

02/28/2025 20:12:29 - INFO - __main__ -   Index: 155

Number of variable_names extracted:  6
Generating population155...
	 0  --most gap 0.029499046504497528
	 1  --most gap 0.08988695591688156
	 2  --most gap 0.12441989034414291
	 3  --most gap 0.16004932671785355
	 4  --most gap 0.3347726836800575
	 5  --most gap 0.3347726836800575
	 6  --most gap 0.3347726836800575
	 7  --most gap 0.3347726836800575
两轮结果未更新,Changing code structure...
	 8  --most gap 0.3347726836800575
	 9  --most gap 0.33817029744386673
	 10  --most gap 0.33817029744386673
	 11  --most gap 0.33817029744386673
	 12  --most gap 0.33817029744386673
两轮结果未更新,Changing code structure...
	 13  --most gap 0.33817029744386673
	 14  --most gap 0.33817029744386673
	 15  --most gap 0.33817029744386673
两轮结果未更新,Changing code structure...
	 16  --most gap 0.33817029744386673
	 17  --most gap 0.33817029744386673
	 18  --most gap 0.38212383538484573
	 19  --most gap 0.38212383538484573
Changing code structure...
Processing examples:  39%|███▉      | 156/400 [1:11:42<2:59:55, 44.25s/it]02/28/2025 20:12:29 - INFO - __main__ -   测试:156

02/28/2025 20:12:29 - INFO - __main__ -   Attack failed!

02/28/2025 20:12:29 - INFO - __main__ -   测试:157

02/28/2025 20:12:29 - INFO - __main__ -   Success rate: 57.58%

02/28/2025 20:12:29 - INFO - __main__ -   Successful items count: 57

02/28/2025 20:12:29 - INFO - __main__ -   Total count: 99

02/28/2025 20:12:29 - INFO - __main__ -   Index: 157

The original code is misclassified.
Number of variable_names extracted:  2
Generating population157...
init SUCCESS!
Processing examples:  40%|███▉      | 158/400 [1:11:42<1:57:46, 29.20s/it]02/28/2025 20:12:29 - INFO - __main__ -   测试:158

02/28/2025 20:12:29 - INFO - __main__ -   Attack failed!

02/28/2025 20:12:29 - INFO - __main__ -   测试:159

02/28/2025 20:12:30 - INFO - __main__ -   Success rate: 58.00%

02/28/2025 20:12:30 - INFO - __main__ -   Successful items count: 58

02/28/2025 20:12:30 - INFO - __main__ -   Total count: 100

02/28/2025 20:12:30 - INFO - __main__ -   Index: 159

The original code is misclassified.
Number of variable_names extracted:  3
Generating population159...
init SUCCESS!
Processing examples:  40%|████      | 160/400 [1:11:43<1:18:41, 19.67s/it]02/28/2025 20:12:30 - INFO - __main__ -   测试:160

02/28/2025 20:12:30 - INFO - __main__ -   Attack failed!

02/28/2025 20:12:30 - INFO - __main__ -   测试:161

02/28/2025 20:13:34 - INFO - __main__ -   Success rate: 57.43%

02/28/2025 20:13:34 - INFO - __main__ -   Successful items count: 58

02/28/2025 20:13:34 - INFO - __main__ -   Total count: 101

02/28/2025 20:13:34 - INFO - __main__ -   Index: 161

The original code is misclassified.
Number of variable_names extracted:  3
Generating population161...
	 0  --most gap 0.037132374942302704
	 1  --most gap 0.037132374942302704
	 2  --most gap 0.037132374942302704
两轮结果未更新,Changing code structure...
	 3  --most gap 0.037132374942302704
	 4  --most gap 0.037132374942302704
	 5  --most gap 0.037132374942302704
两轮结果未更新,Changing code structure...
	 6  --most gap 0.037132374942302704
	 7  --most gap 0.037132374942302704
	 8  --most gap 0.037132374942302704
两轮结果未更新,Changing code structure...
	 9  --most gap 0.20017006248235703
	 10  --most gap 0.20017006248235703
	 11  --most gap 0.20017006248235703
	 12  --most gap 0.20017006248235703
两轮结果未更新,Changing code structure...
	 13  --most gap 0.20017006248235703
	 14  --most gap 0.20017006248235703
	 15  --most gap 0.20017006248235703
两轮结果未更新,Changing code structure...
	 16  --most gap 0.20017006248235703
	 17  --most gap 0.20017006248235703
	 18  --most gap 0.20017006248235703
两轮结果未更新,Changing code structure...
	 19  --most gap 0.20017006248235703
Changing code structure...
Processing examples:  40%|████      | 162/400 [1:12:47<1:33:55, 23.68s/it]02/28/2025 20:13:34 - INFO - __main__ -   测试:162

02/28/2025 20:13:34 - INFO - __main__ -   Attack failed!

02/28/2025 20:13:34 - INFO - __main__ -   测试:163

02/28/2025 20:14:02 - INFO - __main__ -   Success rate: 57.84%

02/28/2025 20:14:02 - INFO - __main__ -   Successful items count: 59

02/28/2025 20:14:02 - INFO - __main__ -   Total count: 102

02/28/2025 20:14:02 - INFO - __main__ -   Index: 163

The original code is misclassified.
Number of variable_names extracted:  4
Generating population163...
	 0  --most gap 0
	 1  --most gap 0.09822947
	 2  --most gap 0.23449802
	 3  --most gap 0.23449802
	 4  --most gap 0.23449802
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  41%|████      | 164/400 [1:13:15<1:21:17, 20.67s/it]02/28/2025 20:14:02 - INFO - __main__ -   测试:164

02/28/2025 20:14:02 - INFO - __main__ -   Attack failed!

02/28/2025 20:14:02 - INFO - __main__ -   测试:165

02/28/2025 20:14:14 - INFO - __main__ -   Success rate: 58.25%

02/28/2025 20:14:14 - INFO - __main__ -   Successful items count: 60

02/28/2025 20:14:14 - INFO - __main__ -   Total count: 103

02/28/2025 20:14:14 - INFO - __main__ -   Index: 165

The original code is misclassified.
Number of variable_names extracted:  16
Generating population165...
	 0  --most gap 0.044409752
	 1  --most gap 0.10076064
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  42%|████▏     | 166/400 [1:13:27<1:02:37, 16.06s/it]02/28/2025 20:14:14 - INFO - __main__ -   测试:166

02/28/2025 20:14:14 - INFO - __main__ -   Success rate: 58.65%

02/28/2025 20:14:14 - INFO - __main__ -   Successful items count: 61

02/28/2025 20:14:14 - INFO - __main__ -   Total count: 104

02/28/2025 20:14:14 - INFO - __main__ -   Index: 166

02/28/2025 20:14:14 - INFO - __main__ -   测试:167

02/28/2025 20:14:14 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  2
Generating population166...
init SUCCESS!
The original code is misclassified.
Processing examples:  42%|████▏     | 168/400 [1:13:27<43:08, 11.16s/it]  02/28/2025 20:14:14 - INFO - __main__ -   测试:168

02/28/2025 20:14:14 - INFO - __main__ -   Attack failed!

02/28/2025 20:14:14 - INFO - __main__ -   测试:169

02/28/2025 20:14:21 - INFO - __main__ -   Success rate: 59.05%

02/28/2025 20:14:21 - INFO - __main__ -   Successful items count: 62

02/28/2025 20:14:21 - INFO - __main__ -   Total count: 105

02/28/2025 20:14:21 - INFO - __main__ -   Index: 169

The original code is misclassified.
Number of variable_names extracted:  9
Generating population169...
init SUCCESS!
Processing examples:  42%|████▎     | 170/400 [1:13:34<34:05,  8.89s/it]02/28/2025 20:14:21 - INFO - __main__ -   测试:170

02/28/2025 20:15:26 - INFO - __main__ -   Success rate: 58.49%

02/28/2025 20:15:26 - INFO - __main__ -   Successful items count: 62

02/28/2025 20:15:26 - INFO - __main__ -   Total count: 106

02/28/2025 20:15:26 - INFO - __main__ -   Index: 170

Number of variable_names extracted:  3
Generating population170...
	 0  --most gap 0.016136087477207184
	 1  --most gap 0.03892935439944267
	 2  --most gap 0.03892935439944267
	 3  --most gap 0.03892935439944267
	 4  --most gap 0.03892935439944267
两轮结果未更新,Changing code structure...
	 5  --most gap 0.03892935439944267
	 6  --most gap 0.03892935439944267
	 7  --most gap 0.03892935439944267
两轮结果未更新,Changing code structure...
	 8  --most gap 0.03892935439944267
	 9  --most gap 0.051714036613702774
	 10  --most gap 0.051714036613702774
	 11  --most gap 0.051714036613702774
	 12  --most gap 0.051714036613702774
两轮结果未更新,Changing code structure...
	 13  --most gap 0.051714036613702774
	 14  --most gap 0.051714036613702774
	 15  --most gap 0.051714036613702774
两轮结果未更新,Changing code structure...
	 16  --most gap 0.051714036613702774
	 17  --most gap 0.051714036613702774
	 18  --most gap 0.051714036613702774
两轮结果未更新,Changing code structure...
	 19  --most gap 0.051714036613702774
Changing code structure...
Processing examples:  43%|████▎     | 171/400 [1:14:39<1:12:20, 18.95s/it]02/28/2025 20:15:26 - INFO - __main__ -   测试:171

02/28/2025 20:17:43 - INFO - __main__ -   Success rate: 57.94%

02/28/2025 20:17:43 - INFO - __main__ -   Successful items count: 62

02/28/2025 20:17:43 - INFO - __main__ -   Total count: 107

02/28/2025 20:17:43 - INFO - __main__ -   Index: 171

Number of variable_names extracted:  8
Generating population171...
	 0  --most gap 0.01613184344023466
	 1  --most gap 0.01613184344023466
	 2  --most gap 0.025918603874742985
	 3  --most gap 0.025918603874742985
	 4  --most gap 0.025918603874742985
	 5  --most gap 0.05065802577883005
	 6  --most gap 0.05065802577883005
	 7  --most gap 0.05065802577883005
	 8  --most gap 0.05065802577883005
两轮结果未更新,Changing code structure...
	 9  --most gap 0.05065802577883005
	 10  --most gap 0.05065802577883005
	 11  --most gap 0.08696638513356447
	 12  --most gap 0.08696638513356447
	 13  --most gap 0.08696638513356447
	 14  --most gap 0.08696638513356447
两轮结果未更新,Changing code structure...
	 15  --most gap 0.19492282439023256
	 16  --most gap 0.19492282439023256
	 17  --most gap 0.19492282439023256
	 18  --most gap 0.19492282439023256
两轮结果未更新,Changing code structure...
	 19  --most gap 0.19492282439023256
Changing code structure...
Processing examples:  43%|████▎     | 172/400 [1:16:56<2:43:11, 42.95s/it]02/28/2025 20:17:43 - INFO - __main__ -   测试:172

02/28/2025 20:17:55 - INFO - __main__ -   Success rate: 57.41%

02/28/2025 20:17:55 - INFO - __main__ -   Successful items count: 62

02/28/2025 20:17:55 - INFO - __main__ -   Total count: 108

02/28/2025 20:17:55 - INFO - __main__ -   Index: 172

Number of variable_names extracted:  2
Generating population172...
	 0  --most gap 0.026911258697509766
	 1  --most gap 0.059624940156936646
	 2  --most gap 0.059624940156936646
	 3  --most gap 0.059624940156936646
	 4  --most gap 0.059624940156936646
两轮结果未更新,Changing code structure...
	 5  --most gap 0.059624940156936646
	 6  --most gap 0.059624940156936646
	 7  --most gap 0.059624940156936646
两轮结果未更新,Changing code structure...
	 8  --most gap 0.059624940156936646
	 9  --most gap 0.059624940156936646
	 10  --most gap 0.059624940156936646
两轮结果未更新,Changing code structure...
	 11  --most gap 0.059624940156936646
	 12  --most gap 0.059624940156936646
	 13  --most gap 0.059624940156936646
两轮结果未更新,Changing code structure...
	 14  --most gap 0.059624940156936646
	 15  --most gap 0.059624940156936646
	 16  --most gap 0.059624940156936646
两轮结果未更新,Changing code structure...
	 17  --most gap 0.059624940156936646
	 18  --most gap 0.059624940156936646
	 19  --most gap 0.059624940156936646
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  43%|████▎     | 173/400 [1:17:08<2:15:40, 35.86s/it]02/28/2025 20:17:55 - INFO - __main__ -   测试:173

02/28/2025 20:17:58 - INFO - __main__ -   Success rate: 57.80%

02/28/2025 20:17:58 - INFO - __main__ -   Successful items count: 63

02/28/2025 20:17:58 - INFO - __main__ -   Total count: 109

02/28/2025 20:17:58 - INFO - __main__ -   Index: 173

Number of variable_names extracted:  5
Generating population173...
init SUCCESS!
Processing examples:  44%|████▎     | 174/400 [1:17:11<1:44:55, 27.86s/it]02/28/2025 20:17:58 - INFO - __main__ -   测试:174

02/28/2025 20:17:58 - INFO - __main__ -   Attack failed!

02/28/2025 20:17:58 - INFO - __main__ -   测试:175

02/28/2025 20:18:07 - INFO - __main__ -   Success rate: 57.27%

02/28/2025 20:18:07 - INFO - __main__ -   Successful items count: 63

02/28/2025 20:18:07 - INFO - __main__ -   Total count: 110

02/28/2025 20:18:07 - INFO - __main__ -   Index: 175

The original code is misclassified.
Number of variable_names extracted:  2
Generating population175...
	 0  --most gap 0.010132822208106518
	 1  --most gap 0.010132822208106518
	 2  --most gap 0.010132822208106518
	 3  --most gap 0.010132822208106518
两轮结果未更新,Changing code structure...
	 4  --most gap 0.010132822208106518
	 5  --most gap 0.010132822208106518
	 6  --most gap 0.010132822208106518
两轮结果未更新,Changing code structure...
	 7  --most gap 0.010132822208106518
	 8  --most gap 0.010132822208106518
	 9  --most gap 0.010132822208106518
两轮结果未更新,Changing code structure...
	 10  --most gap 0.010132822208106518
	 11  --most gap 0.010132822208106518
	 12  --most gap 0.010132822208106518
两轮结果未更新,Changing code structure...
	 13  --most gap 0.010132822208106518
	 14  --most gap 0.010132822208106518
	 15  --most gap 0.010132822208106518
两轮结果未更新,Changing code structure...
	 16  --most gap 0.010132822208106518
	 17  --most gap 0.010132822208106518
	 18  --most gap 0.010132822208106518
两轮结果未更新,Changing code structure...
	 19  --most gap 0.010132822208106518
Changing code structure...
Processing examples:  44%|████▍     | 176/400 [1:17:20<1:08:09, 18.26s/it]02/28/2025 20:18:07 - INFO - __main__ -   测试:176

02/28/2025 20:18:22 - INFO - __main__ -   Success rate: 56.76%

02/28/2025 20:18:22 - INFO - __main__ -   Successful items count: 63

02/28/2025 20:18:22 - INFO - __main__ -   Total count: 111

02/28/2025 20:18:22 - INFO - __main__ -   Index: 176

Number of variable_names extracted:  1
Generating population176...
	 0  --most gap 1.341104507446289e-07
	 1  --most gap 0.2096555531024933
	 2  --most gap 0.2096555531024933
	 3  --most gap 0.2096555531024933
	 4  --most gap 0.2096555531024933
两轮结果未更新,Changing code structure...
	 5  --most gap 0.2096555531024933
	 6  --most gap 0.2096555531024933
	 7  --most gap 0.2096555531024933
两轮结果未更新,Changing code structure...
	 8  --most gap 0.2096555531024933
	 9  --most gap 0.2096555531024933
	 10  --most gap 0.2096555531024933
两轮结果未更新,Changing code structure...
	 11  --most gap 0.2096555531024933
	 12  --most gap 0.2096555531024933
	 13  --most gap 0.2096555531024933
两轮结果未更新,Changing code structure...
	 14  --most gap 0.2096555531024933
	 15  --most gap 0.2096555531024933
	 16  --most gap 0.2096555531024933
两轮结果未更新,Changing code structure...
	 17  --most gap 0.2096555531024933
	 18  --most gap 0.2096555531024933
	 19  --most gap 0.2096555531024933
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  44%|████▍     | 177/400 [1:17:35<1:05:17, 17.57s/it]02/28/2025 20:18:22 - INFO - __main__ -   测试:177

02/28/2025 20:18:22 - INFO - __main__ -   Attack failed!

02/28/2025 20:18:22 - INFO - __main__ -   测试:178

02/28/2025 20:21:36 - INFO - __main__ -   Success rate: 56.25%

02/28/2025 20:21:36 - INFO - __main__ -   Successful items count: 63

02/28/2025 20:21:36 - INFO - __main__ -   Total count: 112

02/28/2025 20:21:36 - INFO - __main__ -   Index: 178

The original code is misclassified.
Number of variable_names extracted:  17
Generating population178...
	 0  --most gap 0.051960528
	 1  --most gap 0.16756368
	 2  --most gap 0.16756368
	 3  --most gap 0.16756368
	 4  --most gap 0.17825973
	 5  --most gap 0.17825973
	 6  --most gap 0.2245354
	 7  --most gap 0.2245354
	 8  --most gap 0.2245354
	 9  --most gap 0.2245354
两轮结果未更新,Changing code structure...
	 10  --most gap 0.2245354
	 11  --most gap 0.2245354
	 12  --most gap 0.2245354
两轮结果未更新,Changing code structure...
	 13  --most gap 0.2245354
	 14  --most gap 0.2245354
	 15  --most gap 0.2245354
两轮结果未更新,Changing code structure...
	 16  --most gap 0.2245354
	 17  --most gap 0.2245354
	 18  --most gap 0.2245354
两轮结果未更新,Changing code structure...
	 19  --most gap 0.2245354
Changing code structure...
Processing examples:  45%|████▍     | 179/400 [1:20:49<2:59:44, 48.80s/it]02/28/2025 20:21:36 - INFO - __main__ -   测试:179

02/28/2025 20:21:38 - INFO - __main__ -   Success rate: 56.64%

02/28/2025 20:21:38 - INFO - __main__ -   Successful items count: 64

02/28/2025 20:21:38 - INFO - __main__ -   Total count: 113

02/28/2025 20:21:38 - INFO - __main__ -   Index: 179

Number of variable_names extracted:  10
Generating population179...
init SUCCESS!
Processing examples:  45%|████▌     | 180/400 [1:20:51<2:21:39, 38.63s/it]02/28/2025 20:21:38 - INFO - __main__ -   测试:180

02/28/2025 20:21:38 - INFO - __main__ -   Attack failed!

02/28/2025 20:21:38 - INFO - __main__ -   测试:181

02/28/2025 20:21:39 - INFO - __main__ -   Success rate: 57.02%

02/28/2025 20:21:39 - INFO - __main__ -   Successful items count: 65

02/28/2025 20:21:39 - INFO - __main__ -   Total count: 114

02/28/2025 20:21:39 - INFO - __main__ -   Index: 181

The original code is misclassified.
Number of variable_names extracted:  4
Generating population181...
init SUCCESS!
Processing examples:  46%|████▌     | 182/400 [1:20:52<1:26:31, 23.82s/it]02/28/2025 20:21:39 - INFO - __main__ -   测试:182

02/28/2025 20:21:39 - INFO - __main__ -   Attack failed!

02/28/2025 20:21:39 - INFO - __main__ -   测试:183

02/28/2025 20:21:39 - INFO - __main__ -   Success rate: 57.39%

02/28/2025 20:21:39 - INFO - __main__ -   Successful items count: 66

02/28/2025 20:21:39 - INFO - __main__ -   Total count: 115

02/28/2025 20:21:39 - INFO - __main__ -   Index: 183

The original code is misclassified.
Number of variable_names extracted:  5
Generating population183...
init SUCCESS!
Processing examples:  46%|████▌     | 184/400 [1:20:52<55:30, 15.42s/it]  02/28/2025 20:21:39 - INFO - __main__ -   测试:184

02/28/2025 20:21:39 - INFO - __main__ -   Attack failed!

02/28/2025 20:21:39 - INFO - __main__ -   测试:185

02/28/2025 20:21:39 - INFO - __main__ -   Attack failed!

02/28/2025 20:21:39 - INFO - __main__ -   测试:186

02/28/2025 20:21:39 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  47%|████▋     | 187/400 [1:20:52<31:08,  8.77s/it]02/28/2025 20:21:39 - INFO - __main__ -   测试:187

02/28/2025 20:21:39 - INFO - __main__ -   Attack failed!

02/28/2025 20:21:39 - INFO - __main__ -   测试:188

02/28/2025 20:21:41 - INFO - __main__ -   Success rate: 57.76%

02/28/2025 20:21:41 - INFO - __main__ -   Successful items count: 67

02/28/2025 20:21:41 - INFO - __main__ -   Total count: 116

02/28/2025 20:21:41 - INFO - __main__ -   Index: 188

The original code is misclassified.
Number of variable_names extracted:  5
Generating population188...
init SUCCESS!
Processing examples:  47%|████▋     | 189/400 [1:20:54<22:43,  6.46s/it]02/28/2025 20:21:41 - INFO - __main__ -   测试:189

02/28/2025 20:21:41 - INFO - __main__ -   Attack failed!

02/28/2025 20:21:41 - INFO - __main__ -   测试:190

02/28/2025 20:21:44 - INFO - __main__ -   Success rate: 58.12%

02/28/2025 20:21:44 - INFO - __main__ -   Successful items count: 68

02/28/2025 20:21:44 - INFO - __main__ -   Total count: 117

02/28/2025 20:21:44 - INFO - __main__ -   Index: 190

The original code is misclassified.
Number of variable_names extracted:  8
Generating population190...
	 0  --most gap 0.16957388818264008
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  48%|████▊     | 191/400 [1:20:57<17:27,  5.01s/it]02/28/2025 20:21:44 - INFO - __main__ -   测试:191

02/28/2025 20:21:44 - INFO - __main__ -   Attack failed!

02/28/2025 20:21:44 - INFO - __main__ -   测试:192

02/28/2025 20:21:44 - INFO - __main__ -   Attack failed!

02/28/2025 20:21:44 - INFO - __main__ -   测试:193

02/28/2025 20:24:10 - INFO - __main__ -   Success rate: 57.63%

02/28/2025 20:24:10 - INFO - __main__ -   Successful items count: 68

02/28/2025 20:24:10 - INFO - __main__ -   Total count: 118

02/28/2025 20:24:10 - INFO - __main__ -   Index: 193

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population193...
	 0  --most gap 0.0015086471103131771
	 1  --most gap 0.0015086471103131771
	 2  --most gap 0.0015086471103131771
	 3  --most gap 0.0015086471103131771
两轮结果未更新,Changing code structure...
	 4  --most gap 0.0017399084754288197
	 5  --most gap 0.0017399084754288197
	 6  --most gap 0.0017399084754288197
	 7  --most gap 0.0017399084754288197
两轮结果未更新,Changing code structure...
	 8  --most gap 0.0017399084754288197
	 9  --most gap 0.0017399084754288197
	 10  --most gap 0.006072529125958681
	 11  --most gap 0.006072529125958681
	 12  --most gap 0.006072529125958681
	 13  --most gap 0.006072529125958681
两轮结果未更新,Changing code structure...
	 14  --most gap 0.014745769556611776
	 15  --most gap 0.014745769556611776
	 16  --most gap 0.014745769556611776
	 17  --most gap 0.014745769556611776
两轮结果未更新,Changing code structure...
	 18  --most gap 0.014745769556611776
	 19  --most gap 0.014745769556611776
Changing code structure...
Processing examples:  48%|████▊     | 194/400 [1:23:23<1:15:04, 21.87s/it]02/28/2025 20:24:10 - INFO - __main__ -   测试:194

02/28/2025 20:24:32 - INFO - __main__ -   Success rate: 57.98%

02/28/2025 20:24:32 - INFO - __main__ -   Successful items count: 69

02/28/2025 20:24:32 - INFO - __main__ -   Total count: 119

02/28/2025 20:24:32 - INFO - __main__ -   Index: 194

Number of variable_names extracted:  9
Generating population194...
	 0  --most gap 0.18899671733379364
	 1  --most gap 0.18899671733379364
	 2  --most gap 0.33768267929553986
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  49%|████▉     | 195/400 [1:23:45<1:15:03, 21.97s/it]02/28/2025 20:24:32 - INFO - __main__ -   测试:195

02/28/2025 20:24:43 - INFO - __main__ -   Success rate: 58.33%

02/28/2025 20:24:43 - INFO - __main__ -   Successful items count: 70

02/28/2025 20:24:43 - INFO - __main__ -   Total count: 120

02/28/2025 20:24:43 - INFO - __main__ -   Index: 195

Number of variable_names extracted:  22
Generating population195...
init SUCCESS!
Processing examples:  49%|████▉     | 196/400 [1:23:56<1:08:02, 20.01s/it]02/28/2025 20:24:43 - INFO - __main__ -   测试:196

02/28/2025 20:24:44 - INFO - __main__ -   Attack failed!

02/28/2025 20:24:44 - INFO - __main__ -   测试:197

02/28/2025 20:24:46 - INFO - __main__ -   Success rate: 58.68%

02/28/2025 20:24:46 - INFO - __main__ -   Successful items count: 71

02/28/2025 20:24:46 - INFO - __main__ -   Total count: 121

02/28/2025 20:24:46 - INFO - __main__ -   Index: 197

The original code is misclassified.
Number of variable_names extracted:  8
Generating population197...
init SUCCESS!
Processing examples:  50%|████▉     | 198/400 [1:23:59<45:56, 13.65s/it]  02/28/2025 20:24:46 - INFO - __main__ -   测试:198

02/28/2025 20:24:46 - INFO - __main__ -   Attack failed!

02/28/2025 20:24:46 - INFO - __main__ -   测试:199

02/28/2025 20:24:46 - INFO - __main__ -   Attack failed!

02/28/2025 20:24:46 - INFO - __main__ -   测试:200

02/28/2025 20:24:47 - INFO - __main__ -   Success rate: 59.02%

02/28/2025 20:24:47 - INFO - __main__ -   Successful items count: 72

02/28/2025 20:24:47 - INFO - __main__ -   Total count: 122

02/28/2025 20:24:47 - INFO - __main__ -   Index: 200

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population200...
init SUCCESS!
Processing examples:  50%|█████     | 201/400 [1:24:00<26:17,  7.93s/it]02/28/2025 20:24:47 - INFO - __main__ -   测试:201

02/28/2025 20:24:47 - INFO - __main__ -   Attack failed!

02/28/2025 20:24:47 - INFO - __main__ -   测试:202

02/28/2025 20:24:47 - INFO - __main__ -   Attack failed!

02/28/2025 20:24:47 - INFO - __main__ -   测试:203

02/28/2025 20:24:56 - INFO - __main__ -   Success rate: 59.35%

02/28/2025 20:24:56 - INFO - __main__ -   Successful items count: 73

02/28/2025 20:24:56 - INFO - __main__ -   Total count: 123

02/28/2025 20:24:56 - INFO - __main__ -   Index: 203

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  18
Generating population203...
init SUCCESS!
Processing examples:  51%|█████     | 204/400 [1:24:09<19:55,  6.10s/it]02/28/2025 20:24:56 - INFO - __main__ -   测试:204

02/28/2025 20:25:14 - INFO - __main__ -   Success rate: 59.68%

02/28/2025 20:25:14 - INFO - __main__ -   Successful items count: 74

02/28/2025 20:25:14 - INFO - __main__ -   Total count: 124

02/28/2025 20:25:14 - INFO - __main__ -   Index: 204

Number of variable_names extracted:  4
Generating population204...
	 0  --most gap 0.15821325592696667
	 1  --most gap 0.15821327082812786
	 2  --most gap 0.33148242346942425
	 3  --most gap 0.33148242346942425
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  51%|█████▏    | 205/400 [1:24:27<25:40,  7.90s/it]02/28/2025 20:25:14 - INFO - __main__ -   测试:205

02/28/2025 20:25:14 - INFO - __main__ -   Attack failed!

02/28/2025 20:25:14 - INFO - __main__ -   测试:206

02/28/2025 20:25:28 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 20:25:28 - INFO - __main__ -   Successful items count: 75

02/28/2025 20:25:28 - INFO - __main__ -   Total count: 125

02/28/2025 20:25:28 - INFO - __main__ -   Index: 206

The original code is misclassified.
Number of variable_names extracted:  4
Generating population206...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 207/400 [1:24:41<24:34,  7.64s/it]02/28/2025 20:25:28 - INFO - __main__ -   测试:207

02/28/2025 20:25:37 - INFO - __main__ -   Success rate: 60.32%

02/28/2025 20:25:37 - INFO - __main__ -   Successful items count: 76

02/28/2025 20:25:37 - INFO - __main__ -   Total count: 126

02/28/2025 20:25:37 - INFO - __main__ -   Index: 207

Number of variable_names extracted:  6
Generating population207...
	 0  --most gap 0.3726932555437088
	 1  --most gap 0.3726932555437088
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 208/400 [1:24:50<25:14,  7.89s/it]02/28/2025 20:25:37 - INFO - __main__ -   测试:208

02/28/2025 20:25:37 - INFO - __main__ -   Attack failed!

02/28/2025 20:25:37 - INFO - __main__ -   测试:209

02/28/2025 20:25:47 - INFO - __main__ -   Success rate: 59.84%

02/28/2025 20:25:47 - INFO - __main__ -   Successful items count: 76

02/28/2025 20:25:47 - INFO - __main__ -   Total count: 127

02/28/2025 20:25:47 - INFO - __main__ -   Index: 209

The original code is misclassified.
Number of variable_names extracted:  1
Generating population209...
	 0  --most gap 0.0119645
	 1  --most gap 0.0119645
	 2  --most gap 0.0119645
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0119645
	 4  --most gap 0.0119645
	 5  --most gap 0.0119645
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0119645
	 7  --most gap 0.0119645
	 8  --most gap 0.0119645
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0119645
	 10  --most gap 0.0119645
	 11  --most gap 0.0119645
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0119645
	 13  --most gap 0.0119645
	 14  --most gap 0.0119645
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0119645
	 16  --most gap 0.0119645
	 17  --most gap 0.0119645
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0119645
	 19  --most gap 0.0119645
Changing code structure...
Processing examples:  52%|█████▎    | 210/400 [1:25:00<21:59,  6.94s/it]02/28/2025 20:25:47 - INFO - __main__ -   测试:210

02/28/2025 20:25:47 - INFO - __main__ -   Attack failed!

02/28/2025 20:25:47 - INFO - __main__ -   测试:211

02/28/2025 20:25:47 - INFO - __main__ -   Attack failed!

02/28/2025 20:25:47 - INFO - __main__ -   测试:212

02/28/2025 20:25:48 - INFO - __main__ -   Success rate: 60.16%

02/28/2025 20:25:48 - INFO - __main__ -   Successful items count: 77

02/28/2025 20:25:48 - INFO - __main__ -   Total count: 128

02/28/2025 20:25:48 - INFO - __main__ -   Index: 212

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  4
Generating population212...
init SUCCESS!
Processing examples:  53%|█████▎    | 213/400 [1:25:01<13:11,  4.23s/it]02/28/2025 20:25:48 - INFO - __main__ -   测试:213

02/28/2025 20:26:02 - INFO - __main__ -   Success rate: 60.47%

02/28/2025 20:26:02 - INFO - __main__ -   Successful items count: 78

02/28/2025 20:26:02 - INFO - __main__ -   Total count: 129

02/28/2025 20:26:02 - INFO - __main__ -   Index: 213

Number of variable_names extracted:  4
Generating population213...
	 0  --most gap 0.15398770570755005
	 1  --most gap 0.1997348666191101
	 2  --most gap 0.2980048358440399
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  54%|█████▎    | 214/400 [1:25:15<18:03,  5.83s/it]02/28/2025 20:26:02 - INFO - __main__ -   测试:214

02/28/2025 20:26:25 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 20:26:25 - INFO - __main__ -   Successful items count: 78

02/28/2025 20:26:25 - INFO - __main__ -   Total count: 130

02/28/2025 20:26:25 - INFO - __main__ -   Index: 214

Number of variable_names extracted:  1
Generating population214...
	 0  --most gap 4.991888999938965e-07
	 1  --most gap 0.009159430861473083
	 2  --most gap 0.009159430861473083
	 3  --most gap 0.009159430861473083
	 4  --most gap 0.009159430861473083
两轮结果未更新,Changing code structure...
	 5  --most gap 0.009159430861473083
	 6  --most gap 0.009159430861473083
	 7  --most gap 0.009159430861473083
两轮结果未更新,Changing code structure...
	 8  --most gap 0.009159430861473083
	 9  --most gap 0.009159430861473083
	 10  --most gap 0.009159430861473083
两轮结果未更新,Changing code structure...
	 11  --most gap 0.009159430861473083
	 12  --most gap 0.009159430861473083
	 13  --most gap 0.009159430861473083
两轮结果未更新,Changing code structure...
	 14  --most gap 0.009159430861473083
	 15  --most gap 0.009159430861473083
	 16  --most gap 0.009159430861473083
两轮结果未更新,Changing code structure...
	 17  --most gap 0.009159430861473083
	 18  --most gap 0.009159430861473083
	 19  --most gap 0.009159430861473083
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  54%|█████▍    | 215/400 [1:25:38<27:47,  9.01s/it]02/28/2025 20:26:25 - INFO - __main__ -   测试:215

02/28/2025 20:26:25 - INFO - __main__ -   Attack failed!

02/28/2025 20:26:25 - INFO - __main__ -   测试:216

02/28/2025 20:27:01 - INFO - __main__ -   Success rate: 60.31%

02/28/2025 20:27:01 - INFO - __main__ -   Successful items count: 79

02/28/2025 20:27:01 - INFO - __main__ -   Total count: 131

02/28/2025 20:27:01 - INFO - __main__ -   Index: 216

The original code is misclassified.
Number of variable_names extracted:  5
Generating population216...
	 0  --most gap 0.13551563
	 1  --most gap 0.24557185
	 2  --most gap 0.31074327
	 3  --most gap 0.31074327
	 4  --most gap 0.31074327
	 5  --most gap 0.31074327
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  54%|█████▍    | 217/400 [1:26:14<37:15, 12.21s/it]02/28/2025 20:27:01 - INFO - __main__ -   测试:217

02/28/2025 20:27:01 - INFO - __main__ -   Attack failed!

02/28/2025 20:27:01 - INFO - __main__ -   测试:218

02/28/2025 20:27:01 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  55%|█████▍    | 219/400 [1:26:14<24:35,  8.15s/it]02/28/2025 20:27:01 - INFO - __main__ -   测试:219

02/28/2025 20:27:01 - INFO - __main__ -   Attack failed!

02/28/2025 20:27:01 - INFO - __main__ -   测试:220

02/28/2025 20:27:01 - INFO - __main__ -   Success rate: 60.61%

02/28/2025 20:27:01 - INFO - __main__ -   Successful items count: 80

02/28/2025 20:27:01 - INFO - __main__ -   Total count: 132

02/28/2025 20:27:01 - INFO - __main__ -   Index: 220

The original code is misclassified.
Number of variable_names extracted:  8
Generating population220...
init SUCCESS!
Processing examples:  55%|█████▌    | 221/400 [1:26:14<16:31,  5.54s/it]02/28/2025 20:27:01 - INFO - __main__ -   测试:221

02/28/2025 20:27:01 - INFO - __main__ -   Attack failed!

02/28/2025 20:27:01 - INFO - __main__ -   测试:222

02/28/2025 20:30:18 - INFO - __main__ -   Success rate: 60.15%

02/28/2025 20:30:18 - INFO - __main__ -   Successful items count: 80

02/28/2025 20:30:18 - INFO - __main__ -   Total count: 133

02/28/2025 20:30:18 - INFO - __main__ -   Index: 222

The original code is misclassified.
Number of variable_names extracted:  6
Generating population222...
	 0  --most gap 0.00091540813
	 1  --most gap 0.0009961724
	 2  --most gap 0.0022793412
	 3  --most gap 0.0022793412
	 4  --most gap 0.0022793412
	 5  --most gap 0.0022793412
两轮结果未更新,Changing code structure...
	 6  --most gap 0.003207922
	 7  --most gap 0.003207922
	 8  --most gap 0.003207922
	 9  --most gap 0.003207922
两轮结果未更新,Changing code structure...
	 10  --most gap 0.003207922
	 11  --most gap 0.003207922
	 12  --most gap 0.007913232
	 13  --most gap 0.007913232
	 14  --most gap 0.007913232
	 15  --most gap 0.007913232
两轮结果未更新,Changing code structure...
	 16  --most gap 0.010297298
	 17  --most gap 0.010297298
	 18  --most gap 0.010297298
	 19  --most gap 0.010297298
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  56%|█████▌    | 223/400 [1:29:31<1:43:02, 34.93s/it]02/28/2025 20:30:18 - INFO - __main__ -   测试:223

02/28/2025 20:33:01 - INFO - __main__ -   Success rate: 60.45%

02/28/2025 20:33:01 - INFO - __main__ -   Successful items count: 81

02/28/2025 20:33:01 - INFO - __main__ -   Total count: 134

02/28/2025 20:33:01 - INFO - __main__ -   Index: 223

Number of variable_names extracted:  30
Generating population223...
init SUCCESS!
Processing examples:  56%|█████▌    | 224/400 [1:32:14<2:51:50, 58.58s/it]02/28/2025 20:33:01 - INFO - __main__ -   测试:224

02/28/2025 20:33:04 - INFO - __main__ -   Success rate: 60.74%

02/28/2025 20:33:04 - INFO - __main__ -   Successful items count: 82

02/28/2025 20:33:04 - INFO - __main__ -   Total count: 135

02/28/2025 20:33:04 - INFO - __main__ -   Index: 224

Number of variable_names extracted:  10
Generating population224...
init SUCCESS!
Processing examples:  56%|█████▋    | 225/400 [1:32:17<2:16:45, 46.89s/it]02/28/2025 20:33:04 - INFO - __main__ -   测试:225

02/28/2025 20:33:04 - INFO - __main__ -   Attack failed!

02/28/2025 20:33:04 - INFO - __main__ -   测试:226

02/28/2025 20:33:04 - INFO - __main__ -   Attack failed!

02/28/2025 20:33:04 - INFO - __main__ -   测试:227

02/28/2025 20:33:04 - INFO - __main__ -   Attack failed!

02/28/2025 20:33:04 - INFO - __main__ -   测试:228

02/28/2025 20:34:05 - INFO - __main__ -   Success rate: 60.29%

02/28/2025 20:34:05 - INFO - __main__ -   Successful items count: 82

02/28/2025 20:34:05 - INFO - __main__ -   Total count: 136

02/28/2025 20:34:05 - INFO - __main__ -   Index: 228

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population228...
	 0  --most gap 0.0005346057005226612
	 1  --most gap 0.0005346080288290977
	 2  --most gap 0.0005346080288290977
	 3  --most gap 0.0008669709786772728
	 4  --most gap 0.0008669709786772728
	 5  --most gap 0.0008669709786772728
	 6  --most gap 0.0008669709786772728
两轮结果未更新,Changing code structure...
	 7  --most gap 0.0008669709786772728
	 8  --most gap 0.0008669709786772728
	 9  --most gap 0.0008669709786772728
两轮结果未更新,Changing code structure...
	 10  --most gap 0.0008669709786772728
	 11  --most gap 0.0008669709786772728
	 12  --most gap 0.0008669709786772728
两轮结果未更新,Changing code structure...
	 13  --most gap 0.0008669709786772728
	 14  --most gap 0.0008669709786772728
	 15  --most gap 0.0008669709786772728
两轮结果未更新,Changing code structure...
	 16  --most gap 0.002555476501584053
	 17  --most gap 0.002555476501584053
	 18  --most gap 0.002555476501584053
	 19  --most gap 0.002555476501584053
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  57%|█████▋    | 229/400 [1:33:18<1:24:42, 29.72s/it]02/28/2025 20:34:05 - INFO - __main__ -   测试:229

02/28/2025 20:34:05 - INFO - __main__ -   Attack failed!

02/28/2025 20:34:05 - INFO - __main__ -   测试:230

02/28/2025 20:34:14 - INFO - __main__ -   Success rate: 59.85%

02/28/2025 20:34:14 - INFO - __main__ -   Successful items count: 82

02/28/2025 20:34:14 - INFO - __main__ -   Total count: 137

02/28/2025 20:34:14 - INFO - __main__ -   Index: 230

The original code is misclassified.
Number of variable_names extracted:  2
Generating population230...
	 0  --most gap 0.02782927267253399
	 1  --most gap 0.02782927267253399
	 2  --most gap 0.02782927267253399
	 3  --most gap 0.02782927267253399
两轮结果未更新,Changing code structure...
	 4  --most gap 0.02782927267253399
	 5  --most gap 0.02782927267253399
	 6  --most gap 0.02782927267253399
两轮结果未更新,Changing code structure...
	 7  --most gap 0.02782927267253399
	 8  --most gap 0.02782927267253399
	 9  --most gap 0.02782927267253399
两轮结果未更新,Changing code structure...
	 10  --most gap 0.02782927267253399
	 11  --most gap 0.02782927267253399
	 12  --most gap 0.02782927267253399
两轮结果未更新,Changing code structure...
	 13  --most gap 0.02782927267253399
	 14  --most gap 0.02782927267253399
	 15  --most gap 0.02782927267253399
两轮结果未更新,Changing code structure...
	 16  --most gap 0.02782927267253399
	 17  --most gap 0.02782927267253399
	 18  --most gap 0.02782927267253399
两轮结果未更新,Changing code structure...
	 19  --most gap 0.02782927267253399
Changing code structure...
Processing examples:  58%|█████▊    | 231/400 [1:33:27<1:03:53, 22.68s/it]02/28/2025 20:34:14 - INFO - __main__ -   测试:231

02/28/2025 20:34:14 - INFO - __main__ -   Attack failed!

02/28/2025 20:34:14 - INFO - __main__ -   测试:232

02/28/2025 20:34:19 - INFO - __main__ -   Success rate: 60.14%

02/28/2025 20:34:19 - INFO - __main__ -   Successful items count: 83

02/28/2025 20:34:19 - INFO - __main__ -   Total count: 138

02/28/2025 20:34:19 - INFO - __main__ -   Index: 232

The original code is misclassified.
Number of variable_names extracted:  13
Generating population232...
	 0  --most gap 0.11831730604171753
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  58%|█████▊    | 233/400 [1:33:32<46:57, 16.87s/it]  02/28/2025 20:34:19 - INFO - __main__ -   测试:233

02/28/2025 20:34:19 - INFO - __main__ -   Attack failed!

02/28/2025 20:34:19 - INFO - __main__ -   测试:234

02/28/2025 20:34:19 - INFO - __main__ -   Attack failed!

02/28/2025 20:34:19 - INFO - __main__ -   测试:235

02/28/2025 20:34:32 - INFO - __main__ -   Success rate: 59.71%

02/28/2025 20:34:32 - INFO - __main__ -   Successful items count: 83

02/28/2025 20:34:32 - INFO - __main__ -   Total count: 139

02/28/2025 20:34:32 - INFO - __main__ -   Index: 235

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  1
Generating population235...
	 0  --most gap 1.564621925354004e-07
	 1  --most gap 0.17886748909950256
	 2  --most gap 0.17886748909950256
	 3  --most gap 0.17886748909950256
	 4  --most gap 0.17886748909950256
两轮结果未更新,Changing code structure...
	 5  --most gap 0.17886748909950256
	 6  --most gap 0.17886748909950256
	 7  --most gap 0.17886748909950256
两轮结果未更新,Changing code structure...
	 8  --most gap 0.17886748909950256
	 9  --most gap 0.17886748909950256
	 10  --most gap 0.17886748909950256
两轮结果未更新,Changing code structure...
	 11  --most gap 0.17886748909950256
	 12  --most gap 0.17886748909950256
	 13  --most gap 0.17886748909950256
两轮结果未更新,Changing code structure...
	 14  --most gap 0.17886748909950256
	 15  --most gap 0.17886748909950256
	 16  --most gap 0.17886748909950256
两轮结果未更新,Changing code structure...
	 17  --most gap 0.17886748909950256
	 18  --most gap 0.17886748909950256
	 19  --most gap 0.17886748909950256
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  59%|█████▉    | 236/400 [1:33:45<33:19, 12.19s/it]02/28/2025 20:34:32 - INFO - __main__ -   测试:236

02/28/2025 20:34:32 - INFO - __main__ -   Attack failed!

02/28/2025 20:34:32 - INFO - __main__ -   测试:237

02/28/2025 20:34:33 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 20:34:33 - INFO - __main__ -   Successful items count: 84

02/28/2025 20:34:33 - INFO - __main__ -   Total count: 140

02/28/2025 20:34:33 - INFO - __main__ -   Index: 237

The original code is misclassified.
Number of variable_names extracted:  4
Generating population237...
	 0  --most gap 0.2851780913770199
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  60%|█████▉    | 238/400 [1:33:46<24:35,  9.11s/it]02/28/2025 20:34:33 - INFO - __main__ -   测试:238

02/28/2025 20:34:38 - INFO - __main__ -   Success rate: 60.28%

02/28/2025 20:34:38 - INFO - __main__ -   Successful items count: 85

02/28/2025 20:34:38 - INFO - __main__ -   Total count: 141

02/28/2025 20:34:38 - INFO - __main__ -   Index: 238

Number of variable_names extracted:  10
Generating population238...
init SUCCESS!
Processing examples:  60%|█████▉    | 239/400 [1:33:51<22:25,  8.35s/it]02/28/2025 20:34:38 - INFO - __main__ -   测试:239

02/28/2025 20:36:07 - INFO - __main__ -   Success rate: 59.86%

02/28/2025 20:36:07 - INFO - __main__ -   Successful items count: 85

02/28/2025 20:36:07 - INFO - __main__ -   Total count: 142

02/28/2025 20:36:07 - INFO - __main__ -   Index: 239

Number of variable_names extracted:  4
Generating population239...
	 0  --most gap 0.003189561888575554
	 1  --most gap 0.003189561888575554
	 2  --most gap 0.003189561888575554
	 3  --most gap 0.003189561888575554
两轮结果未更新,Changing code structure...
	 4  --most gap 0.003189561888575554
	 5  --most gap 0.00550643727183342
	 6  --most gap 0.00550643727183342
	 7  --most gap 0.00550643727183342
	 8  --most gap 0.00550643727183342
两轮结果未更新,Changing code structure...
	 9  --most gap 0.00550643727183342
	 10  --most gap 0.00550643727183342
	 11  --most gap 0.00550643727183342
两轮结果未更新,Changing code structure...
	 12  --most gap 0.00550643727183342
	 13  --most gap 0.00550643727183342
	 14  --most gap 0.007226756773889065
	 15  --most gap 0.007226756773889065
	 16  --most gap 0.007226756773889065
	 17  --most gap 0.007226756773889065
两轮结果未更新,Changing code structure...
	 18  --most gap 0.007226756773889065
	 19  --most gap 0.007226756773889065
Changing code structure...
Processing examples:  60%|██████    | 240/400 [1:35:20<1:02:02, 23.26s/it]02/28/2025 20:36:07 - INFO - __main__ -   测试:240

02/28/2025 20:36:07 - INFO - __main__ -   Attack failed!

02/28/2025 20:36:07 - INFO - __main__ -   测试:241

02/28/2025 20:36:08 - INFO - __main__ -   Success rate: 60.14%

02/28/2025 20:36:08 - INFO - __main__ -   Successful items count: 86

02/28/2025 20:36:08 - INFO - __main__ -   Total count: 143

02/28/2025 20:36:08 - INFO - __main__ -   Index: 241

The original code is misclassified.
Number of variable_names extracted:  6
Generating population241...
	 0  --most gap 0.13022801280021667
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  60%|██████    | 242/400 [1:35:21<40:35, 15.42s/it]  02/28/2025 20:36:08 - INFO - __main__ -   测试:242

02/28/2025 20:36:08 - INFO - __main__ -   Attack failed!

02/28/2025 20:36:08 - INFO - __main__ -   测试:243

02/28/2025 20:36:17 - INFO - __main__ -   Success rate: 59.72%

02/28/2025 20:36:17 - INFO - __main__ -   Successful items count: 86

02/28/2025 20:36:17 - INFO - __main__ -   Total count: 144

02/28/2025 20:36:17 - INFO - __main__ -   Index: 243

The original code is misclassified.
Number of variable_names extracted:  2
Generating population243...
	 0  --most gap 0.00045371056
	 1  --most gap 0.00045371056
	 2  --most gap 0.00045371056
两轮结果未更新,Changing code structure...
	 3  --most gap 0.00045371056
	 4  --most gap 0.00045371056
	 5  --most gap 0.00045371056
两轮结果未更新,Changing code structure...
	 6  --most gap 0.00045371056
	 7  --most gap 0.00045371056
	 8  --most gap 0.00045371056
两轮结果未更新,Changing code structure...
	 9  --most gap 0.00045371056
	 10  --most gap 0.00045371056
	 11  --most gap 0.00045371056
两轮结果未更新,Changing code structure...
	 12  --most gap 0.00045371056
	 13  --most gap 0.00045371056
	 14  --most gap 0.00045371056
两轮结果未更新,Changing code structure...
	 15  --most gap 0.00045371056
	 16  --most gap 0.00045371056
	 17  --most gap 0.00045371056
两轮结果未更新,Changing code structure...
	 18  --most gap 0.00045371056
	 19  --most gap 0.00045371056
Changing code structure...
Processing examples:  61%|██████    | 244/400 [1:35:30<30:42, 11.81s/it]02/28/2025 20:36:17 - INFO - __main__ -   测试:244

02/28/2025 20:36:24 - INFO - __main__ -   Success rate: 59.31%

02/28/2025 20:36:24 - INFO - __main__ -   Successful items count: 86

02/28/2025 20:36:24 - INFO - __main__ -   Total count: 145

02/28/2025 20:36:24 - INFO - __main__ -   Index: 244

Number of variable_names extracted:  2
Generating population244...
	 0  --most gap 0.030893743
	 1  --most gap 0.030893743
	 2  --most gap 0.030893743
	 3  --most gap 0.030893743
两轮结果未更新,Changing code structure...
	 4  --most gap 0.030893743
	 5  --most gap 0.030893743
	 6  --most gap 0.030893743
两轮结果未更新,Changing code structure...
	 7  --most gap 0.030893743
	 8  --most gap 0.030893743
	 9  --most gap 0.030893743
两轮结果未更新,Changing code structure...
	 10  --most gap 0.030893743
	 11  --most gap 0.030893743
	 12  --most gap 0.030893743
两轮结果未更新,Changing code structure...
	 13  --most gap 0.030893743
	 14  --most gap 0.030893743
	 15  --most gap 0.030893743
两轮结果未更新,Changing code structure...
	 16  --most gap 0.030893743
	 17  --most gap 0.030893743
	 18  --most gap 0.030893743
两轮结果未更新,Changing code structure...
	 19  --most gap 0.030893743
Changing code structure...
Processing examples:  61%|██████▏   | 245/400 [1:35:38<28:27, 11.02s/it]02/28/2025 20:36:24 - INFO - __main__ -   测试:245

02/28/2025 20:37:24 - INFO - __main__ -   Success rate: 58.90%

02/28/2025 20:37:24 - INFO - __main__ -   Successful items count: 86

02/28/2025 20:37:24 - INFO - __main__ -   Total count: 146

02/28/2025 20:37:24 - INFO - __main__ -   Index: 245

Number of variable_names extracted:  3
Generating population245...
	 0  --most gap 0.02407166361808777
	 1  --most gap 0.02407166361808777
	 2  --most gap 0.02407166361808777
	 3  --most gap 0.02748015895485878
	 4  --most gap 0.16809341311454773
	 5  --most gap 0.16809341311454773
	 6  --most gap 0.16809341311454773
	 7  --most gap 0.16809341311454773
两轮结果未更新,Changing code structure...
	 8  --most gap 0.16809341311454773
	 9  --most gap 0.16809341311454773
	 10  --most gap 0.16809341311454773
两轮结果未更新,Changing code structure...
	 11  --most gap 0.16809341311454773
	 12  --most gap 0.16809341311454773
	 13  --most gap 0.16809341311454773
两轮结果未更新,Changing code structure...
	 14  --most gap 0.16809341311454773
	 15  --most gap 0.16809341311454773
	 16  --most gap 0.16809341311454773
两轮结果未更新,Changing code structure...
	 17  --most gap 0.16809341311454773
	 18  --most gap 0.16809341311454773
	 19  --most gap 0.16809341311454773
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  62%|██████▏   | 246/400 [1:36:37<55:04, 21.46s/it]02/28/2025 20:37:24 - INFO - __main__ -   测试:246

02/28/2025 20:37:25 - INFO - __main__ -   Success rate: 59.18%

02/28/2025 20:37:25 - INFO - __main__ -   Successful items count: 87

02/28/2025 20:37:25 - INFO - __main__ -   Total count: 147

02/28/2025 20:37:25 - INFO - __main__ -   Index: 246

Number of variable_names extracted:  5
Generating population246...
	 0  --most gap 0.42532584071159363
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  62%|██████▏   | 247/400 [1:36:38<42:25, 16.64s/it]02/28/2025 20:37:25 - INFO - __main__ -   测试:247

02/28/2025 20:37:25 - INFO - __main__ -   Attack failed!

02/28/2025 20:37:25 - INFO - __main__ -   测试:248

02/28/2025 20:38:23 - INFO - __main__ -   Success rate: 59.46%

02/28/2025 20:38:23 - INFO - __main__ -   Successful items count: 88

02/28/2025 20:38:23 - INFO - __main__ -   Total count: 148

02/28/2025 20:38:23 - INFO - __main__ -   Index: 248

The original code is misclassified.
Number of variable_names extracted:  8
Generating population248...
	 0  --most gap 0.06730157
	 1  --most gap 0.06730157
	 2  --most gap 0.11057663
	 3  --most gap 0.11057663
	 4  --most gap 0.11057663
	 5  --most gap 0.1157487
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  62%|██████▏   | 249/400 [1:37:36<54:33, 21.68s/it]02/28/2025 20:38:23 - INFO - __main__ -   测试:249

02/28/2025 20:38:24 - INFO - __main__ -   Attack failed!

02/28/2025 20:38:24 - INFO - __main__ -   测试:250

02/28/2025 20:38:24 - INFO - __main__ -   Success rate: 59.73%

02/28/2025 20:38:24 - INFO - __main__ -   Successful items count: 89

02/28/2025 20:38:24 - INFO - __main__ -   Total count: 149

02/28/2025 20:38:24 - INFO - __main__ -   Index: 250

The original code is misclassified.
Number of variable_names extracted:  4
Generating population250...
init SUCCESS!
Processing examples:  63%|██████▎   | 251/400 [1:37:37<34:20, 13.83s/it]02/28/2025 20:38:24 - INFO - __main__ -   测试:251

02/28/2025 20:38:24 - INFO - __main__ -   Attack failed!

02/28/2025 20:38:24 - INFO - __main__ -   测试:252

02/28/2025 20:41:41 - INFO - __main__ -   Success rate: 59.33%

02/28/2025 20:41:41 - INFO - __main__ -   Successful items count: 89

02/28/2025 20:41:41 - INFO - __main__ -   Total count: 150

02/28/2025 20:41:41 - INFO - __main__ -   Index: 252

The original code is misclassified.
Number of variable_names extracted:  7
Generating population252...
	 0  --most gap 0.11007935
	 1  --most gap 0.11007935
	 2  --most gap 0.11007935
两轮结果未更新,Changing code structure...
	 3  --most gap 0.11007935
	 4  --most gap 0.11007935
	 5  --most gap 0.11007935
两轮结果未更新,Changing code structure...
	 6  --most gap 0.11007935
	 7  --most gap 0.18932426
	 8  --most gap 0.22421223
	 9  --most gap 0.26280886
	 10  --most gap 0.26280886
	 11  --most gap 0.26280886
	 12  --most gap 0.26280886
两轮结果未更新,Changing code structure...
	 13  --most gap 0.26280886
	 14  --most gap 0.26280886
	 15  --most gap 0.26280886
两轮结果未更新,Changing code structure...
	 16  --most gap 0.26280886
	 17  --most gap 0.26280886
	 18  --most gap 0.26280886
两轮结果未更新,Changing code structure...
	 19  --most gap 0.26280886
Changing code structure...
Processing examples:  63%|██████▎   | 253/400 [1:40:54<1:45:00, 42.86s/it]02/28/2025 20:41:41 - INFO - __main__ -   测试:253

02/28/2025 20:41:41 - INFO - __main__ -   Success rate: 59.60%

02/28/2025 20:41:41 - INFO - __main__ -   Successful items count: 90

02/28/2025 20:41:41 - INFO - __main__ -   Total count: 151

02/28/2025 20:41:41 - INFO - __main__ -   Index: 253

Number of variable_names extracted:  5
Generating population253...
init SUCCESS!
Processing examples:  64%|██████▎   | 254/400 [1:40:54<1:23:51, 34.46s/it]02/28/2025 20:41:41 - INFO - __main__ -   测试:254

02/28/2025 20:41:47 - INFO - __main__ -   Success rate: 59.87%

02/28/2025 20:41:47 - INFO - __main__ -   Successful items count: 91

02/28/2025 20:41:47 - INFO - __main__ -   Total count: 152

02/28/2025 20:41:47 - INFO - __main__ -   Index: 254

Number of variable_names extracted:  15
Generating population254...
	 0  --most gap 0.18765187
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  64%|██████▍   | 255/400 [1:41:00<1:08:23, 28.30s/it]02/28/2025 20:41:47 - INFO - __main__ -   测试:255

02/28/2025 20:41:57 - INFO - __main__ -   Success rate: 60.13%

02/28/2025 20:41:57 - INFO - __main__ -   Successful items count: 92

02/28/2025 20:41:57 - INFO - __main__ -   Total count: 153

02/28/2025 20:41:57 - INFO - __main__ -   Index: 255

Number of variable_names extracted:  5
Generating population255...
init SUCCESS!
Processing examples:  64%|██████▍   | 256/400 [1:41:10<57:05, 23.79s/it]  02/28/2025 20:41:57 - INFO - __main__ -   测试:256

02/28/2025 20:41:57 - INFO - __main__ -   Attack failed!

02/28/2025 20:41:57 - INFO - __main__ -   测试:257

02/28/2025 20:42:05 - INFO - __main__ -   Success rate: 59.74%

02/28/2025 20:42:05 - INFO - __main__ -   Successful items count: 92

02/28/2025 20:42:05 - INFO - __main__ -   Total count: 154

02/28/2025 20:42:05 - INFO - __main__ -   Index: 257

The original code is misclassified.
Number of variable_names extracted:  1
Generating population257...
	 0  --most gap 0.0037970533594489098
	 1  --most gap 0.0037970533594489098
	 2  --most gap 0.0037970533594489098
	 3  --most gap 0.0037970533594489098
两轮结果未更新,Changing code structure...
	 4  --most gap 0.0037970533594489098
	 5  --most gap 0.0037970533594489098
	 6  --most gap 0.0037970533594489098
两轮结果未更新,Changing code structure...
	 7  --most gap 0.0037970533594489098
	 8  --most gap 0.0037970533594489098
	 9  --most gap 0.0037970533594489098
两轮结果未更新,Changing code structure...
	 10  --most gap 0.0037970533594489098
	 11  --most gap 0.0037970533594489098
	 12  --most gap 0.0037970533594489098
两轮结果未更新,Changing code structure...
	 13  --most gap 0.0037970533594489098
	 14  --most gap 0.0037970533594489098
	 15  --most gap 0.0037970533594489098
两轮结果未更新,Changing code structure...
	 16  --most gap 0.0037970533594489098
	 17  --most gap 0.0037970533594489098
	 18  --most gap 0.0037970533594489098
两轮结果未更新,Changing code structure...
	 19  --most gap 0.0037970533594489098
Changing code structure...
Processing examples:  64%|██████▍   | 258/400 [1:41:18<37:09, 15.70s/it]02/28/2025 20:42:05 - INFO - __main__ -   测试:258

02/28/2025 20:44:04 - INFO - __main__ -   Success rate: 59.35%

02/28/2025 20:44:04 - INFO - __main__ -   Successful items count: 92

02/28/2025 20:44:04 - INFO - __main__ -   Total count: 155

02/28/2025 20:44:04 - INFO - __main__ -   Index: 258

Number of variable_names extracted:  5
Generating population258...
	 0  --most gap 0.0061959391459822655
	 1  --most gap 0.0061959391459822655
	 2  --most gap 0.03299609199166298
	 3  --most gap 0.03299609199166298
	 4  --most gap 0.06479755789041519
	 5  --most gap 0.06479755789041519
	 6  --most gap 0.06479755789041519
	 7  --most gap 0.06479755789041519
两轮结果未更新,Changing code structure...
	 8  --most gap 0.06479755789041519
	 9  --most gap 0.06479755789041519
	 10  --most gap 0.06479755789041519
两轮结果未更新,Changing code structure...
	 11  --most gap 0.06479755789041519
	 12  --most gap 0.06479755789041519
	 13  --most gap 0.06479755789041519
两轮结果未更新,Changing code structure...
	 14  --most gap 0.06479755789041519
	 15  --most gap 0.06479755789041519
	 16  --most gap 0.06479755789041519
两轮结果未更新,Changing code structure...
	 17  --most gap 0.06479755789041519
	 18  --most gap 0.06479755789041519
	 19  --most gap 0.06479755789041519
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  65%|██████▍   | 259/400 [1:43:17<1:31:36, 38.98s/it]02/28/2025 20:44:04 - INFO - __main__ -   测试:259

02/28/2025 20:45:13 - INFO - __main__ -   Success rate: 58.97%

02/28/2025 20:45:13 - INFO - __main__ -   Successful items count: 92

02/28/2025 20:45:13 - INFO - __main__ -   Total count: 156

02/28/2025 20:45:13 - INFO - __main__ -   Index: 259

Number of variable_names extracted:  3
Generating population259...
	 0  --most gap 0.002795129083096981
	 1  --most gap 0.002795129083096981
	 2  --most gap 0.002795129083096981
	 3  --most gap 0.002795129083096981
两轮结果未更新,Changing code structure...
	 4  --most gap 0.002795129083096981
	 5  --most gap 0.002795129083096981
	 6  --most gap 0.002795129083096981
两轮结果未更新,Changing code structure...
	 7  --most gap 0.002795129083096981
	 8  --most gap 0.002795129083096981
	 9  --most gap 0.002795129083096981
两轮结果未更新,Changing code structure...
	 10  --most gap 0.002795129083096981
	 11  --most gap 0.002795129083096981
	 12  --most gap 0.002795129083096981
两轮结果未更新,Changing code structure...
	 13  --most gap 0.002795129083096981
	 14  --most gap 0.002795129083096981
	 15  --most gap 0.002795129083096981
两轮结果未更新,Changing code structure...
	 16  --most gap 0.002795129083096981
	 17  --most gap 0.002795129083096981
	 18  --most gap 0.002795129083096981
两轮结果未更新,Changing code structure...
	 19  --most gap 0.004135190509259701
Changing code structure...
Processing examples:  65%|██████▌   | 260/400 [1:44:26<1:48:07, 46.34s/it]02/28/2025 20:45:13 - INFO - __main__ -   测试:260

02/28/2025 20:45:52 - INFO - __main__ -   Success rate: 59.24%

02/28/2025 20:45:52 - INFO - __main__ -   Successful items count: 93

02/28/2025 20:45:52 - INFO - __main__ -   Total count: 157

02/28/2025 20:45:52 - INFO - __main__ -   Index: 260

Number of variable_names extracted:  9
Generating population260...
init SUCCESS!
Processing examples:  65%|██████▌   | 261/400 [1:45:05<1:42:45, 44.36s/it]02/28/2025 20:45:52 - INFO - __main__ -   测试:261

02/28/2025 20:45:52 - INFO - __main__ -   Attack failed!

02/28/2025 20:45:52 - INFO - __main__ -   测试:262

02/28/2025 20:46:00 - INFO - __main__ -   Success rate: 58.86%

02/28/2025 20:46:00 - INFO - __main__ -   Successful items count: 93

02/28/2025 20:46:00 - INFO - __main__ -   Total count: 158

02/28/2025 20:46:00 - INFO - __main__ -   Index: 262

The original code is misclassified.
Number of variable_names extracted:  2
Generating population262...
	 0  --most gap 0.103042245
	 1  --most gap 0.103042245
	 2  --most gap 0.103042245
	 3  --most gap 0.103042245
两轮结果未更新,Changing code structure...
	 4  --most gap 0.103042245
	 5  --most gap 0.103042245
	 6  --most gap 0.103042245
两轮结果未更新,Changing code structure...
	 7  --most gap 0.103042245
	 8  --most gap 0.103042245
	 9  --most gap 0.103042245
两轮结果未更新,Changing code structure...
	 10  --most gap 0.103042245
	 11  --most gap 0.103042245
	 12  --most gap 0.103042245
两轮结果未更新,Changing code structure...
	 13  --most gap 0.103042245
	 14  --most gap 0.103042245
	 15  --most gap 0.103042245
两轮结果未更新,Changing code structure...
	 16  --most gap 0.103042245
	 17  --most gap 0.103042245
	 18  --most gap 0.103042245
两轮结果未更新,Changing code structure...
	 19  --most gap 0.103042245
Changing code structure...
Processing examples:  66%|██████▌   | 263/400 [1:45:13<1:02:11, 27.24s/it]02/28/2025 20:46:00 - INFO - __main__ -   测试:263

02/28/2025 20:46:03 - INFO - __main__ -   Success rate: 59.12%

02/28/2025 20:46:03 - INFO - __main__ -   Successful items count: 94

02/28/2025 20:46:03 - INFO - __main__ -   Total count: 159

02/28/2025 20:46:03 - INFO - __main__ -   Index: 263

Number of variable_names extracted:  7
Generating population263...
	 0  --most gap 0.012160599
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  66%|██████▌   | 264/400 [1:45:16<49:15, 21.73s/it]  02/28/2025 20:46:03 - INFO - __main__ -   测试:264

02/28/2025 20:48:22 - INFO - __main__ -   Success rate: 59.38%

02/28/2025 20:48:22 - INFO - __main__ -   Successful items count: 95

02/28/2025 20:48:22 - INFO - __main__ -   Total count: 160

02/28/2025 20:48:22 - INFO - __main__ -   Index: 264

Number of variable_names extracted:  10
Generating population264...
	 0  --most gap 0.04346168
	 1  --most gap 0.04346168
	 2  --most gap 0.09967232
	 3  --most gap 0.09967232
	 4  --most gap 0.13180894
	 5  --most gap 0.13180894
	 6  --most gap 0.18646646
	 7  --most gap 0.18646646
	 8  --most gap 0.18646646
	 9  --most gap 0.18646646
两轮结果未更新,Changing code structure...
	 10  --most gap 0.18646646
	 11  --most gap 0.18646646
	 12  --most gap 0.18646646
两轮结果未更新,Changing code structure...
	 13  --most gap 0.18646646
	 14  --most gap 0.18646646
	 15  --most gap 0.18646646
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  66%|██████▋   | 265/400 [1:47:35<1:54:32, 50.91s/it]02/28/2025 20:48:22 - INFO - __main__ -   测试:265

02/28/2025 20:48:22 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
02/28/2025 20:48:22 - INFO - __main__ -   Attack failed!

02/28/2025 20:48:22 - INFO - __main__ -   测试:266

02/28/2025 20:48:23 - INFO - __main__ -   Success rate: 59.63%

02/28/2025 20:48:23 - INFO - __main__ -   Successful items count: 96

02/28/2025 20:48:23 - INFO - __main__ -   Total count: 161

02/28/2025 20:48:23 - INFO - __main__ -   Index: 266

No variable_names in the code.
Number of variable_names extracted:  3
Generating population266...
	 0  --most gap 0.20152164995670319
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  67%|██████▋   | 267/400 [1:47:36<1:06:16, 29.90s/it]02/28/2025 20:48:23 - INFO - __main__ -   测试:267

02/28/2025 20:48:23 - INFO - __main__ -   Success rate: 59.88%

02/28/2025 20:48:23 - INFO - __main__ -   Successful items count: 97

02/28/2025 20:48:23 - INFO - __main__ -   Total count: 162

02/28/2025 20:48:23 - INFO - __main__ -   Index: 267

Number of variable_names extracted:  3
Generating population267...
init SUCCESS!
Processing examples:  67%|██████▋   | 268/400 [1:47:36<50:47, 23.09s/it]  02/28/2025 20:48:23 - INFO - __main__ -   测试:268

02/28/2025 20:48:54 - INFO - __main__ -   Success rate: 60.12%

02/28/2025 20:48:54 - INFO - __main__ -   Successful items count: 98

02/28/2025 20:48:54 - INFO - __main__ -   Total count: 163

02/28/2025 20:48:54 - INFO - __main__ -   Index: 268

Number of variable_names extracted:  8
Generating population268...
	 0  --most gap 0.2449890747666359
	 1  --most gap 0.26697293668985367
	 2  --most gap 0.35161129385232925
	 3  --most gap 0.35161129385232925
	 4  --most gap 0.35161129385232925
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  67%|██████▋   | 269/400 [1:48:07<54:23, 24.91s/it]02/28/2025 20:48:54 - INFO - __main__ -   测试:269

02/28/2025 20:50:23 - INFO - __main__ -   Success rate: 59.76%

02/28/2025 20:50:23 - INFO - __main__ -   Successful items count: 98

02/28/2025 20:50:23 - INFO - __main__ -   Total count: 164

02/28/2025 20:50:23 - INFO - __main__ -   Index: 269

Number of variable_names extracted:  4
Generating population269...
	 0  --most gap 0.005084519274532795
	 1  --most gap 0.005084519274532795
	 2  --most gap 0.006669864058494568
	 3  --most gap 0.006669864058494568
	 4  --most gap 0.00704590231180191
	 5  --most gap 0.00704590231180191
	 6  --most gap 0.00704590231180191
	 7  --most gap 0.00704590231180191
两轮结果未更新,Changing code structure...
	 8  --most gap 0.01860311720520258
	 9  --most gap 0.01860311720520258
	 10  --most gap 0.01860311720520258
	 11  --most gap 0.01860311720520258
两轮结果未更新,Changing code structure...
	 12  --most gap 0.01860311720520258
	 13  --most gap 0.01860311720520258
	 14  --most gap 0.01860311720520258
两轮结果未更新,Changing code structure...
	 15  --most gap 0.01860311720520258
	 16  --most gap 0.01860311720520258
	 17  --most gap 0.01860311720520258
两轮结果未更新,Changing code structure...
	 18  --most gap 0.01860311720520258
	 19  --most gap 0.01860311720520258
Changing code structure...
Processing examples:  68%|██████▊   | 270/400 [1:49:36<1:30:31, 41.78s/it]02/28/2025 20:50:23 - INFO - __main__ -   测试:270

02/28/2025 20:50:58 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 20:50:58 - INFO - __main__ -   Successful items count: 99

02/28/2025 20:50:58 - INFO - __main__ -   Total count: 165

02/28/2025 20:50:58 - INFO - __main__ -   Index: 270

Number of variable_names extracted:  4
Generating population270...
	 0  --most gap 0.2013348825275898
	 1  --most gap 0.2013348825275898
	 2  --most gap 0.2013348825275898
	 3  --most gap 0.29567207768559456
	 4  --most gap 0.38137923553586006
	 5  --most gap 0.38137923553586006
	 6  --most gap 0.38137923553586006
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  68%|██████▊   | 271/400 [1:50:11<1:25:30, 39.77s/it]02/28/2025 20:50:58 - INFO - __main__ -   测试:271

02/28/2025 20:50:58 - INFO - __main__ -   Success rate: 60.24%

02/28/2025 20:50:58 - INFO - __main__ -   Successful items count: 100

02/28/2025 20:50:58 - INFO - __main__ -   Total count: 166

02/28/2025 20:50:58 - INFO - __main__ -   Index: 271

Number of variable_names extracted:  4
Generating population271...
init SUCCESS!
Processing examples:  68%|██████▊   | 272/400 [1:50:11<1:01:15, 28.72s/it]02/28/2025 20:50:58 - INFO - __main__ -   测试:272

02/28/2025 20:50:58 - INFO - __main__ -   Attack failed!

02/28/2025 20:50:58 - INFO - __main__ -   测试:273

02/28/2025 20:50:58 - INFO - __main__ -   Attack failed!

02/28/2025 20:50:58 - INFO - __main__ -   测试:274

02/28/2025 20:50:58 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  69%|██████▉   | 275/400 [1:50:11<27:16, 13.09s/it]  02/28/2025 20:50:58 - INFO - __main__ -   测试:275

02/28/2025 20:50:58 - INFO - __main__ -   Attack failed!

02/28/2025 20:50:58 - INFO - __main__ -   测试:276

02/28/2025 20:50:58 - INFO - __main__ -   Attack failed!

02/28/2025 20:50:58 - INFO - __main__ -   测试:277

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population277...
	 0  --most gap 0.16052834689617157
	 1  --most gap 0.20058606564998627
	 2  --most gap 0.20058606564998627
Processing examples:  69%|██████▉   | 275/400 [1:50:25<27:16, 13.09s/it]02/28/2025 20:52:45 - INFO - __main__ -   Success rate: 59.88%

02/28/2025 20:52:45 - INFO - __main__ -   Successful items count: 100

02/28/2025 20:52:45 - INFO - __main__ -   Total count: 167

02/28/2025 20:52:45 - INFO - __main__ -   Index: 277

	 3  --most gap 0.20058606564998627
	 4  --most gap 0.20058606564998627
两轮结果未更新,Changing code structure...
	 5  --most gap 0.20058606564998627
	 6  --most gap 0.20058606564998627
	 7  --most gap 0.20058606564998627
两轮结果未更新,Changing code structure...
	 8  --most gap 0.20058606564998627
	 9  --most gap 0.20058606564998627
	 10  --most gap 0.20058606564998627
两轮结果未更新,Changing code structure...
	 11  --most gap 0.20058606564998627
	 12  --most gap 0.20058606564998627
	 13  --most gap 0.20058606564998627
两轮结果未更新,Changing code structure...
	 14  --most gap 0.20058606564998627
	 15  --most gap 0.20058606564998627
	 16  --most gap 0.20058606564998627
两轮结果未更新,Changing code structure...
	 17  --most gap 0.20058606564998627
	 18  --most gap 0.20058606564998627
	 19  --most gap 0.20058606564998627
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  70%|██████▉   | 278/400 [1:51:58<46:46, 23.00s/it]02/28/2025 20:52:45 - INFO - __main__ -   测试:278

02/28/2025 20:52:45 - INFO - __main__ -   Attack failed!

02/28/2025 20:52:45 - INFO - __main__ -   测试:279

02/28/2025 20:52:45 - INFO - __main__ -   Attack failed!

02/28/2025 20:52:45 - INFO - __main__ -   测试:280

02/28/2025 20:52:45 - INFO - __main__ -   Success rate: 60.12%

02/28/2025 20:52:45 - INFO - __main__ -   Successful items count: 101

02/28/2025 20:52:45 - INFO - __main__ -   Total count: 168

02/28/2025 20:52:45 - INFO - __main__ -   Index: 280

02/28/2025 20:52:45 - INFO - __main__ -   测试:281

02/28/2025 20:52:45 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  2
Generating population280...
init SUCCESS!
No variable_names in the code.
Processing examples:  70%|███████   | 282/400 [1:51:58<24:41, 12.56s/it]02/28/2025 20:52:45 - INFO - __main__ -   测试:282

02/28/2025 20:52:49 - INFO - __main__ -   Success rate: 60.36%

02/28/2025 20:52:49 - INFO - __main__ -   Successful items count: 102

02/28/2025 20:52:49 - INFO - __main__ -   Total count: 169

02/28/2025 20:52:49 - INFO - __main__ -   Index: 282

02/28/2025 20:52:49 - INFO - __main__ -   测试:283

Number of variable_names extracted:  5
Generating population282...
init SUCCESS!
Number of variable_names extracted:  3
Generating population283...
	 0  --most gap 0.0006178622134029865
	 1  --most gap 0.0006178622134029865
	 2  --most gap 0.0006178622134029865
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0006178622134029865
	 4  --most gap 0.0006178622134029865
Processing examples:  70%|███████   | 282/400 [1:52:15<24:41, 12.56s/it]02/28/2025 20:53:48 - INFO - __main__ -   Success rate: 60.00%

02/28/2025 20:53:48 - INFO - __main__ -   Successful items count: 102

02/28/2025 20:53:48 - INFO - __main__ -   Total count: 170

02/28/2025 20:53:48 - INFO - __main__ -   Index: 283

	 5  --most gap 0.0006178622134029865
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0008649327792227268
	 7  --most gap 0.0012133019044995308
	 8  --most gap 0.0012133019044995308
	 9  --most gap 0.0012133019044995308
	 10  --most gap 0.0012133019044995308
两轮结果未更新,Changing code structure...
	 11  --most gap 0.0012133019044995308
	 12  --most gap 0.0012133019044995308
	 13  --most gap 0.0012133019044995308
两轮结果未更新,Changing code structure...
	 14  --most gap 0.0012133019044995308
	 15  --most gap 0.0012133019044995308
	 16  --most gap 0.0012133019044995308
两轮结果未更新,Changing code structure...
	 17  --most gap 0.0012133019044995308
	 18  --most gap 0.0012133019044995308
	 19  --most gap 0.0012133019044995308
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  71%|███████   | 284/400 [1:53:01<33:17, 17.22s/it]02/28/2025 20:53:48 - INFO - __main__ -   测试:284

02/28/2025 20:53:48 - INFO - __main__ -   Attack failed!

02/28/2025 20:53:48 - INFO - __main__ -   测试:285

02/28/2025 20:53:48 - INFO - __main__ -   Attack failed!

02/28/2025 20:53:48 - INFO - __main__ -   测试:286

02/28/2025 20:53:48 - INFO - __main__ -   Attack failed!

02/28/2025 20:53:48 - INFO - __main__ -   测试:287

02/28/2025 20:53:48 - INFO - __main__ -   Attack failed!

02/28/2025 20:53:48 - INFO - __main__ -   测试:288

02/28/2025 20:53:50 - INFO - __main__ -   Success rate: 60.23%

02/28/2025 20:53:50 - INFO - __main__ -   Successful items count: 103

02/28/2025 20:53:50 - INFO - __main__ -   Total count: 171

02/28/2025 20:53:50 - INFO - __main__ -   Index: 288

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  12
Generating population288...
	 0  --most gap 0.06404337286949158
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  72%|███████▏  | 289/400 [1:53:03<17:18,  9.36s/it]02/28/2025 20:53:50 - INFO - __main__ -   测试:289

02/28/2025 20:53:50 - INFO - __main__ -   Attack failed!

02/28/2025 20:53:50 - INFO - __main__ -   测试:290

The original code is misclassified.
Number of variable_names extracted:  1
Generating population290...
	 0  --most gap 0.036473024636507034
	 1  --most gap 0.036473024636507034
	 2  --most gap 0.036473024636507034
两轮结果未更新,Changing code structure...
Processing examples:  72%|███████▏  | 289/400 [1:53:15<17:18,  9.36s/it]02/28/2025 20:54:19 - INFO - __main__ -   Success rate: 59.88%

02/28/2025 20:54:19 - INFO - __main__ -   Successful items count: 103

02/28/2025 20:54:19 - INFO - __main__ -   Total count: 172

02/28/2025 20:54:19 - INFO - __main__ -   Index: 290

	 3  --most gap 0.036473024636507034
	 4  --most gap 0.036473024636507034
	 5  --most gap 0.036473024636507034
两轮结果未更新,Changing code structure...
	 6  --most gap 0.036473024636507034
	 7  --most gap 0.036473024636507034
	 8  --most gap 0.036473024636507034
两轮结果未更新,Changing code structure...
	 9  --most gap 0.036473024636507034
	 10  --most gap 0.036473024636507034
	 11  --most gap 0.036473024636507034
两轮结果未更新,Changing code structure...
	 12  --most gap 0.036473024636507034
	 13  --most gap 0.036473024636507034
	 14  --most gap 0.036473024636507034
两轮结果未更新,Changing code structure...
	 15  --most gap 0.036473024636507034
	 16  --most gap 0.036473024636507034
	 17  --most gap 0.036473024636507034
两轮结果未更新,Changing code structure...
	 18  --most gap 0.036473024636507034
	 19  --most gap 0.036473024636507034
Changing code structure...
Processing examples:  73%|███████▎  | 291/400 [1:53:32<18:51, 10.38s/it]02/28/2025 20:54:19 - INFO - __main__ -   测试:291

02/28/2025 20:54:19 - INFO - __main__ -   Attack failed!

02/28/2025 20:54:19 - INFO - __main__ -   测试:292

02/28/2025 20:54:19 - INFO - __main__ -   Attack failed!

02/28/2025 20:54:19 - INFO - __main__ -   测试:293

02/28/2025 20:54:19 - INFO - __main__ -   Attack failed!

02/28/2025 20:54:19 - INFO - __main__ -   测试:294

02/28/2025 20:54:22 - INFO - __main__ -   Success rate: 60.12%

02/28/2025 20:54:22 - INFO - __main__ -   Successful items count: 104

02/28/2025 20:54:22 - INFO - __main__ -   Total count: 173

02/28/2025 20:54:22 - INFO - __main__ -   Index: 294

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population294...
	 0  --most gap 0.0428977
	 1  --most gap 0.4065457
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  74%|███████▍  | 295/400 [1:53:35<11:51,  6.77s/it]02/28/2025 20:54:22 - INFO - __main__ -   测试:295

02/28/2025 20:54:22 - INFO - __main__ -   Attack failed!

02/28/2025 20:54:22 - INFO - __main__ -   测试:296

02/28/2025 20:54:24 - INFO - __main__ -   Success rate: 60.34%

02/28/2025 20:54:24 - INFO - __main__ -   Successful items count: 105

02/28/2025 20:54:24 - INFO - __main__ -   Total count: 174

02/28/2025 20:54:24 - INFO - __main__ -   Index: 296

The original code is misclassified.
Number of variable_names extracted:  5
Generating population296...
init SUCCESS!
Processing examples:  74%|███████▍  | 297/400 [1:53:37<09:29,  5.53s/it]02/28/2025 20:54:24 - INFO - __main__ -   测试:297

02/28/2025 20:54:24 - INFO - __main__ -   Success rate: 60.57%

02/28/2025 20:54:24 - INFO - __main__ -   Successful items count: 106

02/28/2025 20:54:24 - INFO - __main__ -   Total count: 175

02/28/2025 20:54:24 - INFO - __main__ -   Index: 297

Number of variable_names extracted:  4
Generating population297...
init SUCCESS!
Processing examples:  74%|███████▍  | 298/400 [1:53:37<08:15,  4.86s/it]02/28/2025 20:54:24 - INFO - __main__ -   测试:298

02/28/2025 20:54:24 - INFO - __main__ -   Attack failed!

02/28/2025 20:54:24 - INFO - __main__ -   测试:299

02/28/2025 20:54:30 - INFO - __main__ -   Success rate: 60.80%

02/28/2025 20:54:30 - INFO - __main__ -   Successful items count: 107

02/28/2025 20:54:30 - INFO - __main__ -   Total count: 176

02/28/2025 20:54:30 - INFO - __main__ -   Index: 299

The original code is misclassified.
Number of variable_names extracted:  12
Generating population299...
init SUCCESS!
Processing examples:  75%|███████▌  | 300/400 [1:53:43<07:14,  4.35s/it]02/28/2025 20:54:30 - INFO - __main__ -   测试:300

02/28/2025 20:54:30 - INFO - __main__ -   Success rate: 61.02%

02/28/2025 20:54:30 - INFO - __main__ -   Successful items count: 108

02/28/2025 20:54:30 - INFO - __main__ -   Total count: 177

02/28/2025 20:54:30 - INFO - __main__ -   Index: 300

Number of variable_names extracted:  5
Generating population300...
init SUCCESS!
Processing examples:  75%|███████▌  | 301/400 [1:53:43<06:04,  3.68s/it]02/28/2025 20:54:30 - INFO - __main__ -   测试:301

02/28/2025 20:54:30 - INFO - __main__ -   Attack failed!

02/28/2025 20:54:30 - INFO - __main__ -   测试:302

02/28/2025 20:56:03 - INFO - __main__ -   Success rate: 60.67%

02/28/2025 20:56:03 - INFO - __main__ -   Successful items count: 108

02/28/2025 20:56:03 - INFO - __main__ -   Total count: 178

02/28/2025 20:56:03 - INFO - __main__ -   Index: 302

The original code is misclassified.
Number of variable_names extracted:  4
Generating population302...
	 0  --most gap 0.008044064044952393
	 1  --most gap 0.012384211644530296
	 2  --most gap 0.017179902642965317
	 3  --most gap 0.017179902642965317
	 4  --most gap 0.017179902642965317
	 5  --most gap 0.017179902642965317
两轮结果未更新,Changing code structure...
	 6  --most gap 0.017179902642965317
	 7  --most gap 0.017179902642965317
	 8  --most gap 0.017179902642965317
两轮结果未更新,Changing code structure...
	 9  --most gap 0.02422654815018177
	 10  --most gap 0.02422654815018177
	 11  --most gap 0.02422654815018177
	 12  --most gap 0.02422654815018177
两轮结果未更新,Changing code structure...
	 13  --most gap 0.02422654815018177
	 14  --most gap 0.02422654815018177
	 15  --most gap 0.025303130969405174
	 16  --most gap 0.025303130969405174
	 17  --most gap 0.025303130969405174
	 18  --most gap 0.025303130969405174
两轮结果未更新,Changing code structure...
	 19  --most gap 0.025303130969405174
Changing code structure...
Processing examples:  76%|███████▌  | 303/400 [1:55:16<27:48, 17.20s/it]02/28/2025 20:56:03 - INFO - __main__ -   测试:303

02/28/2025 20:56:03 - INFO - __main__ -   Attack failed!

02/28/2025 20:56:03 - INFO - __main__ -   测试:304

02/28/2025 20:56:16 - INFO - __main__ -   Success rate: 60.89%

02/28/2025 20:56:16 - INFO - __main__ -   Successful items count: 109

02/28/2025 20:56:16 - INFO - __main__ -   Total count: 179

02/28/2025 20:56:16 - INFO - __main__ -   Index: 304

The original code is misclassified.
Number of variable_names extracted:  4
Generating population304...
	 0  --most gap 0.06974661
	 1  --most gap 0.06974661
	 2  --most gap 0.06974661
两轮结果未更新,Changing code structure...
	 3  --most gap 0.18914098
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  76%|███████▋  | 305/400 [1:55:29<22:06, 13.96s/it]02/28/2025 20:56:16 - INFO - __main__ -   测试:305

02/28/2025 20:56:17 - INFO - __main__ -   Success rate: 61.11%

02/28/2025 20:56:17 - INFO - __main__ -   Successful items count: 110

02/28/2025 20:56:17 - INFO - __main__ -   Total count: 180

02/28/2025 20:56:17 - INFO - __main__ -   Index: 305

Number of variable_names extracted:  3
Generating population305...
init SUCCESS!
Processing examples:  76%|███████▋  | 306/400 [1:55:30<18:04, 11.53s/it]02/28/2025 20:56:17 - INFO - __main__ -   测试:306

02/28/2025 20:56:17 - INFO - __main__ -   Attack failed!

02/28/2025 20:56:17 - INFO - __main__ -   测试:307

02/28/2025 20:56:17 - INFO - __main__ -   Attack failed!

02/28/2025 20:56:17 - INFO - __main__ -   测试:308

02/28/2025 20:56:18 - INFO - __main__ -   Success rate: 61.33%

02/28/2025 20:56:18 - INFO - __main__ -   Successful items count: 111

02/28/2025 20:56:18 - INFO - __main__ -   Total count: 181

02/28/2025 20:56:18 - INFO - __main__ -   Index: 308

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population308...
	 0  --most gap 0.19034706056118011
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  77%|███████▋  | 309/400 [1:55:31<10:00,  6.60s/it]02/28/2025 20:56:18 - INFO - __main__ -   测试:309

02/28/2025 20:56:19 - INFO - __main__ -   Success rate: 61.54%

02/28/2025 20:56:19 - INFO - __main__ -   Successful items count: 112

02/28/2025 20:56:19 - INFO - __main__ -   Total count: 182

02/28/2025 20:56:19 - INFO - __main__ -   Index: 309

Number of variable_names extracted:  10
Generating population309...
	 0  --most gap 0.2307312786579132
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  78%|███████▊  | 310/400 [1:55:32<08:31,  5.68s/it]02/28/2025 20:56:19 - INFO - __main__ -   测试:310

02/28/2025 20:56:26 - INFO - __main__ -   Success rate: 61.20%

02/28/2025 20:56:26 - INFO - __main__ -   Successful items count: 112

02/28/2025 20:56:26 - INFO - __main__ -   Total count: 183

02/28/2025 20:56:26 - INFO - __main__ -   Index: 310

Number of variable_names extracted:  1
Generating population310...
	 0  --most gap 0.022082984
	 1  --most gap 0.022082984
	 2  --most gap 0.022082984
两轮结果未更新,Changing code structure...
	 3  --most gap 0.022082984
	 4  --most gap 0.022082984
	 5  --most gap 0.022082984
两轮结果未更新,Changing code structure...
	 6  --most gap 0.022082984
	 7  --most gap 0.022082984
	 8  --most gap 0.022082984
两轮结果未更新,Changing code structure...
	 9  --most gap 0.022082984
	 10  --most gap 0.022082984
	 11  --most gap 0.022082984
两轮结果未更新,Changing code structure...
	 12  --most gap 0.022082984
	 13  --most gap 0.022082984
	 14  --most gap 0.022082984
两轮结果未更新,Changing code structure...
	 15  --most gap 0.022082984
	 16  --most gap 0.022082984
	 17  --most gap 0.022082984
两轮结果未更新,Changing code structure...
	 18  --most gap 0.022082984
	 19  --most gap 0.022082984
Changing code structure...
Processing examples:  78%|███████▊  | 311/400 [1:55:39<08:52,  5.98s/it]02/28/2025 20:56:26 - INFO - __main__ -   测试:311

02/28/2025 20:59:12 - INFO - __main__ -   Success rate: 60.87%

02/28/2025 20:59:12 - INFO - __main__ -   Successful items count: 112

02/28/2025 20:59:12 - INFO - __main__ -   Total count: 184

02/28/2025 20:59:12 - INFO - __main__ -   Index: 311

Number of variable_names extracted:  8
Generating population311...
	 0  --most gap 0
	 1  --most gap 2.1278858e-05
	 2  --most gap 2.1278858e-05
	 3  --most gap 5.465746e-05
	 4  --most gap 5.465746e-05
	 5  --most gap 0.00033903122
	 6  --most gap 0.00079101324
	 7  --most gap 0.00079101324
	 8  --most gap 0.00079101324
	 9  --most gap 0.00079101324
两轮结果未更新,Changing code structure...
	 10  --most gap 0.00079101324
	 11  --most gap 0.00079101324
	 12  --most gap 0.00079101324
两轮结果未更新,Changing code structure...
	 13  --most gap 0.00079101324
	 14  --most gap 0.00079101324
	 15  --most gap 0.00079101324
两轮结果未更新,Changing code structure...
	 16  --most gap 0.00079101324
	 17  --most gap 0.00079101324
	 18  --most gap 0.00079101324
两轮结果未更新,Changing code structure...
	 19  --most gap 0.00079101324
Changing code structure...
Processing examples:  78%|███████▊  | 312/400 [1:58:25<1:00:29, 41.25s/it]02/28/2025 20:59:12 - INFO - __main__ -   测试:312

02/28/2025 20:59:13 - INFO - __main__ -   Success rate: 61.08%

02/28/2025 20:59:13 - INFO - __main__ -   Successful items count: 113

02/28/2025 20:59:13 - INFO - __main__ -   Total count: 185

02/28/2025 20:59:13 - INFO - __main__ -   Index: 312

Number of variable_names extracted:  5
Generating population312...
	 0  --most gap 0.15724087
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  78%|███████▊  | 313/400 [1:58:26<45:50, 31.61s/it]  02/28/2025 20:59:13 - INFO - __main__ -   测试:313

02/28/2025 20:59:13 - INFO - __main__ -   Attack failed!

02/28/2025 20:59:13 - INFO - __main__ -   测试:314

02/28/2025 20:59:15 - INFO - __main__ -   Success rate: 61.29%

02/28/2025 20:59:15 - INFO - __main__ -   Successful items count: 114

02/28/2025 20:59:15 - INFO - __main__ -   Total count: 186

02/28/2025 20:59:15 - INFO - __main__ -   Index: 314

The original code is misclassified.
Number of variable_names extracted:  9
Generating population314...
	 0  --most gap 0.13432461
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  79%|███████▉  | 315/400 [1:58:28<27:11, 19.19s/it]02/28/2025 20:59:15 - INFO - __main__ -   测试:315

02/28/2025 20:59:15 - INFO - __main__ -   Attack failed!

02/28/2025 20:59:15 - INFO - __main__ -   测试:316

02/28/2025 20:59:16 - INFO - __main__ -   Success rate: 61.50%

02/28/2025 20:59:16 - INFO - __main__ -   Successful items count: 115

02/28/2025 20:59:16 - INFO - __main__ -   Total count: 187

02/28/2025 20:59:16 - INFO - __main__ -   Index: 316

The original code is misclassified.
Number of variable_names extracted:  3
Generating population316...
	 0  --most gap 0.082975686
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  79%|███████▉  | 317/400 [1:58:29<17:00, 12.30s/it]02/28/2025 20:59:16 - INFO - __main__ -   测试:317

02/28/2025 20:59:16 - INFO - __main__ -   Attack failed!

02/28/2025 20:59:16 - INFO - __main__ -   测试:318

02/28/2025 21:01:25 - INFO - __main__ -   Success rate: 61.17%

02/28/2025 21:01:25 - INFO - __main__ -   Successful items count: 115

02/28/2025 21:01:25 - INFO - __main__ -   Total count: 188

02/28/2025 21:01:25 - INFO - __main__ -   Index: 318

The original code is misclassified.
Number of variable_names extracted:  6
Generating population318...
	 0  --most gap 0.003186870366334915
	 1  --most gap 0.003186870366334915
	 2  --most gap 0.003186870366334915
两轮结果未更新,Changing code structure...
	 3  --most gap 0.005373882129788399
	 4  --most gap 0.005373882129788399
	 5  --most gap 0.005373882129788399
	 6  --most gap 0.005373882129788399
两轮结果未更新,Changing code structure...
	 7  --most gap 0.005373882129788399
	 8  --most gap 0.005373882129788399
	 9  --most gap 0.02277219668030739
	 10  --most gap 0.02277219668030739
	 11  --most gap 0.03938043490052223
	 12  --most gap 0.03938043490052223
	 13  --most gap 0.03938043490052223
	 14  --most gap 0.03938043490052223
两轮结果未更新,Changing code structure...
	 15  --most gap 0.03938043490052223
	 16  --most gap 0.03938043490052223
	 17  --most gap 0.03938043490052223
两轮结果未更新,Changing code structure...
	 18  --most gap 0.03938043490052223
	 19  --most gap 0.03938043490052223
Changing code structure...
Processing examples:  80%|███████▉  | 319/400 [2:00:38<40:49, 30.24s/it]02/28/2025 21:01:25 - INFO - __main__ -   测试:319

02/28/2025 21:01:44 - INFO - __main__ -   Success rate: 61.38%

02/28/2025 21:01:44 - INFO - __main__ -   Successful items count: 116

02/28/2025 21:01:44 - INFO - __main__ -   Total count: 189

02/28/2025 21:01:44 - INFO - __main__ -   Index: 319

Number of variable_names extracted:  34
Generating population319...
init SUCCESS!
Processing examples:  80%|████████  | 320/400 [2:00:57<37:18, 27.98s/it]02/28/2025 21:01:44 - INFO - __main__ -   测试:320

02/28/2025 21:01:44 - INFO - __main__ -   Attack failed!

02/28/2025 21:01:44 - INFO - __main__ -   测试:321

02/28/2025 21:01:45 - INFO - __main__ -   Success rate: 61.58%

02/28/2025 21:01:45 - INFO - __main__ -   Successful items count: 117

02/28/2025 21:01:45 - INFO - __main__ -   Total count: 190

02/28/2025 21:01:45 - INFO - __main__ -   Index: 321

The original code is misclassified.
Number of variable_names extracted:  8
Generating population321...
init SUCCESS!
Processing examples:  80%|████████  | 322/400 [2:00:58<23:35, 18.15s/it]02/28/2025 21:01:45 - INFO - __main__ -   测试:322

02/28/2025 21:01:45 - INFO - __main__ -   Attack failed!

02/28/2025 21:01:45 - INFO - __main__ -   测试:323

02/28/2025 21:01:45 - INFO - __main__ -   Attack failed!

02/28/2025 21:01:45 - INFO - __main__ -   测试:324

02/28/2025 21:01:50 - INFO - __main__ -   Success rate: 61.78%

02/28/2025 21:01:50 - INFO - __main__ -   Successful items count: 118

02/28/2025 21:01:50 - INFO - __main__ -   Total count: 191

02/28/2025 21:01:50 - INFO - __main__ -   Index: 324

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  15
Generating population324...
	 0  --most gap 0.20919079
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  81%|████████▏ | 325/400 [2:01:03<13:36, 10.89s/it]02/28/2025 21:01:50 - INFO - __main__ -   测试:325

02/28/2025 21:01:50 - INFO - __main__ -   Attack failed!

02/28/2025 21:01:50 - INFO - __main__ -   测试:326

02/28/2025 21:01:50 - INFO - __main__ -   Attack failed!

02/28/2025 21:01:50 - INFO - __main__ -   测试:327

02/28/2025 21:01:50 - INFO - __main__ -   Attack failed!

02/28/2025 21:01:50 - INFO - __main__ -   测试:328

02/28/2025 21:04:46 - INFO - __main__ -   Success rate: 61.98%

02/28/2025 21:04:46 - INFO - __main__ -   Successful items count: 119

02/28/2025 21:04:46 - INFO - __main__ -   Total count: 192

02/28/2025 21:04:46 - INFO - __main__ -   Index: 328

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  32
Generating population328...
	 0  --most gap 0.05365798342972994
	 1  --most gap 0.15765258762985468
	 2  --most gap 0.27716311905533075
	 3  --most gap 0.27716311905533075
	 4  --most gap 0.27716311905533075
	 5  --most gap 0.27716311905533075
两轮结果未更新,Changing code structure...
	 6  --most gap 0.27716311905533075
	 7  --most gap 0.3514294633641839
	 8  --most gap 0.3514294633641839
	 9  --most gap 0.3514294633641839
	 10  --most gap 0.40018946025520563
	 11  --most gap 0.40018946025520563
	 12  --most gap 0.40018946025520563
	 13  --most gap 0.43969488237053156
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  82%|████████▏ | 329/400 [2:03:59<30:43, 25.96s/it]02/28/2025 21:04:46 - INFO - __main__ -   测试:329

02/28/2025 21:04:46 - INFO - __main__ -   Success rate: 62.18%

02/28/2025 21:04:46 - INFO - __main__ -   Successful items count: 120

02/28/2025 21:04:46 - INFO - __main__ -   Total count: 193

02/28/2025 21:04:46 - INFO - __main__ -   Index: 329

Number of variable_names extracted:  7
Generating population329...
init SUCCESS!
Processing examples:  82%|████████▎ | 330/400 [2:03:59<26:06, 22.38s/it]02/28/2025 21:04:46 - INFO - __main__ -   测试:330

02/28/2025 21:04:47 - INFO - __main__ -   Success rate: 62.37%

02/28/2025 21:04:47 - INFO - __main__ -   Successful items count: 121

02/28/2025 21:04:47 - INFO - __main__ -   Total count: 194

02/28/2025 21:04:47 - INFO - __main__ -   Index: 330

Number of variable_names extracted:  8
Generating population330...
init SUCCESS!
Processing examples:  83%|████████▎ | 331/400 [2:04:00<21:32, 18.74s/it]02/28/2025 21:04:47 - INFO - __main__ -   测试:331

02/28/2025 21:07:52 - INFO - __main__ -   Success rate: 62.56%

02/28/2025 21:07:52 - INFO - __main__ -   Successful items count: 122

02/28/2025 21:07:52 - INFO - __main__ -   Total count: 195

02/28/2025 21:07:52 - INFO - __main__ -   Index: 331

Number of variable_names extracted:  35
Generating population331...
	 0  --most gap 0.008647231385111809
	 1  --most gap 0.012417467311024666
	 2  --most gap 0.024391846731305122
	 3  --most gap 0.024391846731305122
	 4  --most gap 0.029466988518834114
	 5  --most gap 0.08146087639033794
	 6  --most gap 0.10868616960942745
	 7  --most gap 0.11627299897372723
	 8  --most gap 0.1732447799295187
	 9  --most gap 0.1732447799295187
	 10  --most gap 0.19699152372777462
	 11  --most gap 0.19699152372777462
	 12  --most gap 0.1985300239175558
	 13  --most gap 0.4834400173276663
	 14  --most gap 0.4834400173276663
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  83%|████████▎ | 332/400 [2:07:05<57:23, 50.64s/it]02/28/2025 21:07:52 - INFO - __main__ -   测试:332

02/28/2025 21:08:03 - INFO - __main__ -   Success rate: 62.76%

02/28/2025 21:08:03 - INFO - __main__ -   Successful items count: 123

02/28/2025 21:08:03 - INFO - __main__ -   Total count: 196

02/28/2025 21:08:03 - INFO - __main__ -   Index: 332

Number of variable_names extracted:  16
Generating population332...
init SUCCESS!
Processing examples:  83%|████████▎ | 333/400 [2:07:16<46:57, 42.05s/it]02/28/2025 21:08:03 - INFO - __main__ -   测试:333

02/28/2025 21:08:05 - INFO - __main__ -   Success rate: 62.94%

02/28/2025 21:08:05 - INFO - __main__ -   Successful items count: 124

02/28/2025 21:08:05 - INFO - __main__ -   Total count: 197

02/28/2025 21:08:05 - INFO - __main__ -   Index: 333

Number of variable_names extracted:  9
Generating population333...
init SUCCESS!
Processing examples:  84%|████████▎ | 334/400 [2:07:18<35:52, 32.62s/it]02/28/2025 21:08:05 - INFO - __main__ -   测试:334

02/28/2025 21:08:14 - INFO - __main__ -   Success rate: 62.63%

02/28/2025 21:08:14 - INFO - __main__ -   Successful items count: 124

02/28/2025 21:08:14 - INFO - __main__ -   Total count: 198

02/28/2025 21:08:14 - INFO - __main__ -   Index: 334

Number of variable_names extracted:  1
Generating population334...
	 0  --most gap 0.0016872287
	 1  --most gap 0.0016872287
	 2  --most gap 0.0016872287
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0016872287
	 4  --most gap 0.0016872287
	 5  --most gap 0.0016872287
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0016872287
	 7  --most gap 0.0016872287
	 8  --most gap 0.0016872287
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0016872287
	 10  --most gap 0.0016872287
	 11  --most gap 0.0016872287
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0016872287
	 13  --most gap 0.0016872287
	 14  --most gap 0.0016872287
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0016872287
	 16  --most gap 0.0016872287
	 17  --most gap 0.0016872287
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0016872287
	 19  --most gap 0.0016872287
Changing code structure...
Processing examples:  84%|████████▍ | 335/400 [2:07:27<29:05, 26.85s/it]02/28/2025 21:08:14 - INFO - __main__ -   测试:335

02/28/2025 21:08:14 - INFO - __main__ -   Attack failed!

02/28/2025 21:08:14 - INFO - __main__ -   测试:336

02/28/2025 21:08:14 - INFO - __main__ -   Attack failed!

02/28/2025 21:08:14 - INFO - __main__ -   测试:337

02/28/2025 21:08:18 - INFO - __main__ -   Success rate: 62.81%

02/28/2025 21:08:18 - INFO - __main__ -   Successful items count: 125

02/28/2025 21:08:18 - INFO - __main__ -   Total count: 199

02/28/2025 21:08:18 - INFO - __main__ -   Index: 337

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population337...
init SUCCESS!
Processing examples:  84%|████████▍ | 338/400 [2:07:31<13:56, 13.49s/it]02/28/2025 21:08:18 - INFO - __main__ -   测试:338

02/28/2025 21:08:25 - INFO - __main__ -   Success rate: 62.50%

02/28/2025 21:08:25 - INFO - __main__ -   Successful items count: 125

02/28/2025 21:08:25 - INFO - __main__ -   Total count: 200

02/28/2025 21:08:25 - INFO - __main__ -   Index: 338

Number of variable_names extracted:  2
Generating population338...
	 0  --most gap 0.03406683821231127
	 1  --most gap 0.03406683821231127
	 2  --most gap 0.03406683821231127
	 3  --most gap 0.03406683821231127
两轮结果未更新,Changing code structure...
	 4  --most gap 0.03406683821231127
	 5  --most gap 0.03406683821231127
	 6  --most gap 0.03406683821231127
两轮结果未更新,Changing code structure...
	 7  --most gap 0.03406683821231127
	 8  --most gap 0.03406683821231127
	 9  --most gap 0.03406683821231127
两轮结果未更新,Changing code structure...
	 10  --most gap 0.03406683821231127
	 11  --most gap 0.03406683821231127
	 12  --most gap 0.03406683821231127
两轮结果未更新,Changing code structure...
	 13  --most gap 0.03406683821231127
	 14  --most gap 0.03406683821231127
	 15  --most gap 0.03406683821231127
两轮结果未更新,Changing code structure...
	 16  --most gap 0.03406683821231127
	 17  --most gap 0.03406683821231127
	 18  --most gap 0.03406683821231127
两轮结果未更新,Changing code structure...
	 19  --most gap 0.03406683821231127
Changing code structure...
Processing examples:  85%|████████▍ | 339/400 [2:07:38<12:34, 12.37s/it]02/28/2025 21:08:25 - INFO - __main__ -   测试:339

02/28/2025 21:09:05 - INFO - __main__ -   Success rate: 62.69%

02/28/2025 21:09:05 - INFO - __main__ -   Successful items count: 126

02/28/2025 21:09:05 - INFO - __main__ -   Total count: 201

02/28/2025 21:09:05 - INFO - __main__ -   Index: 339

Number of variable_names extracted:  22
Generating population339...
	 0  --most gap 0.10202141106128693
	 1  --most gap 0.2306676059961319
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  85%|████████▌ | 340/400 [2:08:18<18:24, 18.40s/it]02/28/2025 21:09:05 - INFO - __main__ -   测试:340

02/28/2025 21:12:10 - INFO - __main__ -   Success rate: 62.38%

02/28/2025 21:12:10 - INFO - __main__ -   Successful items count: 126

02/28/2025 21:12:10 - INFO - __main__ -   Total count: 202

02/28/2025 21:12:10 - INFO - __main__ -   Index: 340

Number of variable_names extracted:  8
Generating population340...
	 0  --most gap 0.008681598119437695
	 1  --most gap 0.025920222513377666
	 2  --most gap 0.025920222513377666
	 3  --most gap 0.06351866479963064
	 4  --most gap 0.06351866479963064
	 5  --most gap 0.06351866479963064
	 6  --most gap 0.06351866479963064
两轮结果未更新,Changing code structure...
	 7  --most gap 0.06351866479963064
	 8  --most gap 0.06351866479963064
	 9  --most gap 0.06351866479963064
两轮结果未更新,Changing code structure...
	 10  --most gap 0.06351866479963064
	 11  --most gap 0.06351866479963064
	 12  --most gap 0.06351866479963064
两轮结果未更新,Changing code structure...
	 13  --most gap 0.06351866479963064
	 14  --most gap 0.06351866479963064
	 15  --most gap 0.06351866479963064
两轮结果未更新,Changing code structure...
	 16  --most gap 0.06351866479963064
	 17  --most gap 0.06351866479963064
	 18  --most gap 0.06351866479963064
两轮结果未更新,Changing code structure...
	 19  --most gap 0.06351866479963064
Changing code structure...
Processing examples:  85%|████████▌ | 341/400 [2:11:23<57:23, 58.37s/it]02/28/2025 21:12:10 - INFO - __main__ -   测试:341

02/28/2025 21:12:29 - INFO - __main__ -   Success rate: 62.56%

02/28/2025 21:12:29 - INFO - __main__ -   Successful items count: 127

02/28/2025 21:12:29 - INFO - __main__ -   Total count: 203

02/28/2025 21:12:29 - INFO - __main__ -   Index: 341

Number of variable_names extracted:  8
Generating population341...
	 0  --most gap 0.24794143
	 1  --most gap 0.4709872
	 2  --most gap 0.4709872
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  86%|████████▌ | 342/400 [2:11:42<46:41, 48.31s/it]02/28/2025 21:12:29 - INFO - __main__ -   测试:342

02/28/2025 21:12:30 - INFO - __main__ -   Success rate: 62.75%

02/28/2025 21:12:30 - INFO - __main__ -   Successful items count: 128

02/28/2025 21:12:30 - INFO - __main__ -   Total count: 204

02/28/2025 21:12:30 - INFO - __main__ -   Index: 342

Number of variable_names extracted:  6
Generating population342...
init SUCCESS!
Processing examples:  86%|████████▌ | 343/400 [2:11:43<33:43, 35.51s/it]02/28/2025 21:12:30 - INFO - __main__ -   测试:343

02/28/2025 21:12:43 - INFO - __main__ -   Success rate: 62.93%

02/28/2025 21:12:43 - INFO - __main__ -   Successful items count: 129

02/28/2025 21:12:43 - INFO - __main__ -   Total count: 205

02/28/2025 21:12:43 - INFO - __main__ -   Index: 343

Number of variable_names extracted:  5
Generating population343...
	 0  --most gap 0.033662558
	 1  --most gap 0.06422055
	 2  --most gap 0.31496274
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  86%|████████▌ | 344/400 [2:11:56<27:25, 29.38s/it]02/28/2025 21:12:43 - INFO - __main__ -   测试:344

02/28/2025 21:13:00 - INFO - __main__ -   Success rate: 63.11%

02/28/2025 21:13:00 - INFO - __main__ -   Successful items count: 130

02/28/2025 21:13:00 - INFO - __main__ -   Total count: 206

02/28/2025 21:13:00 - INFO - __main__ -   Index: 344

Number of variable_names extracted:  23
Generating population344...
init SUCCESS!
Processing examples:  86%|████████▋ | 345/400 [2:12:13<23:38, 25.78s/it]02/28/2025 21:13:00 - INFO - __main__ -   测试:345

02/28/2025 21:13:00 - INFO - __main__ -   Attack failed!

02/28/2025 21:13:00 - INFO - __main__ -   测试:346

02/28/2025 21:14:06 - INFO - __main__ -   Success rate: 63.29%

02/28/2025 21:14:06 - INFO - __main__ -   Successful items count: 131

02/28/2025 21:14:06 - INFO - __main__ -   Total count: 207

02/28/2025 21:14:06 - INFO - __main__ -   Index: 346

The original code is misclassified.
Number of variable_names extracted:  4
Generating population346...
	 0  --most gap 0.043959916
	 1  --most gap 0.41980207
	 2  --most gap 0.41980207
	 3  --most gap 0.41980207
	 4  --most gap 0.41980207
两轮结果未更新,Changing code structure...
	 5  --most gap 0.41980207
	 6  --most gap 0.41980207
	 7  --most gap 0.41980207
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  87%|████████▋ | 347/400 [2:13:19<25:40, 29.06s/it]02/28/2025 21:14:06 - INFO - __main__ -   测试:347

02/28/2025 21:14:06 - INFO - __main__ -   Success rate: 63.46%

02/28/2025 21:14:06 - INFO - __main__ -   Successful items count: 132

02/28/2025 21:14:06 - INFO - __main__ -   Total count: 208

02/28/2025 21:14:06 - INFO - __main__ -   Index: 347

Number of variable_names extracted:  4
Generating population347...
init SUCCESS!
Processing examples:  87%|████████▋ | 348/400 [2:13:19<19:09, 22.10s/it]02/28/2025 21:14:06 - INFO - __main__ -   测试:348

02/28/2025 21:14:06 - INFO - __main__ -   Attack failed!

02/28/2025 21:14:06 - INFO - __main__ -   测试:349

02/28/2025 21:14:06 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  88%|████████▊ | 350/400 [2:13:19<10:54, 13.09s/it]02/28/2025 21:14:06 - INFO - __main__ -   测试:350

02/28/2025 21:14:07 - INFO - __main__ -   Success rate: 63.64%

02/28/2025 21:14:07 - INFO - __main__ -   Successful items count: 133

02/28/2025 21:14:07 - INFO - __main__ -   Total count: 209

02/28/2025 21:14:07 - INFO - __main__ -   Index: 350

Number of variable_names extracted:  5
Generating population350...
init SUCCESS!
Processing examples:  88%|████████▊ | 351/400 [2:13:20<08:25, 10.31s/it]02/28/2025 21:14:07 - INFO - __main__ -   测试:351

02/28/2025 21:14:08 - INFO - __main__ -   Success rate: 63.81%

02/28/2025 21:14:08 - INFO - __main__ -   Successful items count: 134

02/28/2025 21:14:08 - INFO - __main__ -   Total count: 210

02/28/2025 21:14:08 - INFO - __main__ -   Index: 351

Number of variable_names extracted:  13
Generating population351...
init SUCCESS!
Processing examples:  88%|████████▊ | 352/400 [2:13:21<06:25,  8.04s/it]02/28/2025 21:14:08 - INFO - __main__ -   测试:352

02/28/2025 21:14:10 - INFO - __main__ -   Success rate: 63.98%

02/28/2025 21:14:10 - INFO - __main__ -   Successful items count: 135

02/28/2025 21:14:10 - INFO - __main__ -   Total count: 211

02/28/2025 21:14:10 - INFO - __main__ -   Index: 352

Number of variable_names extracted:  7
Generating population352...
init SUCCESS!
Processing examples:  88%|████████▊ | 353/400 [2:13:23<05:05,  6.49s/it]02/28/2025 21:14:10 - INFO - __main__ -   测试:353

02/28/2025 21:14:11 - INFO - __main__ -   Success rate: 64.15%

02/28/2025 21:14:11 - INFO - __main__ -   Successful items count: 136

02/28/2025 21:14:11 - INFO - __main__ -   Total count: 212

02/28/2025 21:14:11 - INFO - __main__ -   Index: 353

Number of variable_names extracted:  3
Generating population353...
init SUCCESS!
Processing examples:  88%|████████▊ | 354/400 [2:13:24<03:48,  4.96s/it]02/28/2025 21:14:11 - INFO - __main__ -   测试:354

02/28/2025 21:14:32 - INFO - __main__ -   Success rate: 64.32%

02/28/2025 21:14:32 - INFO - __main__ -   Successful items count: 137

02/28/2025 21:14:32 - INFO - __main__ -   Total count: 213

02/28/2025 21:14:32 - INFO - __main__ -   Index: 354

Number of variable_names extracted:  5
Generating population354...
	 0  --most gap 0.16125089
	 1  --most gap 0.22967225
	 2  --most gap 0.22967225
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  89%|████████▉ | 355/400 [2:13:45<07:10,  9.56s/it]02/28/2025 21:14:32 - INFO - __main__ -   测试:355

02/28/2025 21:14:33 - INFO - __main__ -   Attack failed!

02/28/2025 21:14:33 - INFO - __main__ -   测试:356

02/28/2025 21:14:39 - INFO - __main__ -   Success rate: 64.49%

02/28/2025 21:14:39 - INFO - __main__ -   Successful items count: 138

02/28/2025 21:14:39 - INFO - __main__ -   Total count: 214

02/28/2025 21:14:39 - INFO - __main__ -   Index: 356

The original code is misclassified.
Number of variable_names extracted:  8
Generating population356...
	 0  --most gap 0.09902328
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  89%|████████▉ | 357/400 [2:13:52<04:50,  6.76s/it]02/28/2025 21:14:39 - INFO - __main__ -   测试:357

02/28/2025 21:14:39 - INFO - __main__ -   Attack failed!

02/28/2025 21:14:39 - INFO - __main__ -   测试:358

02/28/2025 21:17:51 - INFO - __main__ -   Success rate: 64.19%

02/28/2025 21:17:51 - INFO - __main__ -   Successful items count: 138

02/28/2025 21:17:51 - INFO - __main__ -   Total count: 215

02/28/2025 21:17:51 - INFO - __main__ -   Index: 358

The original code is misclassified.
Number of variable_names extracted:  5
Generating population358...
	 0  --most gap 0.10095453
	 1  --most gap 0.1435743
	 2  --most gap 0.15932202
	 3  --most gap 0.18706149
	 4  --most gap 0.18706149
	 5  --most gap 0.18706149
	 6  --most gap 0.18706149
两轮结果未更新,Changing code structure...
	 7  --most gap 0.18706149
	 8  --most gap 0.18706149
	 9  --most gap 0.18706149
两轮结果未更新,Changing code structure...
	 10  --most gap 0.18706149
	 11  --most gap 0.18706149
	 12  --most gap 0.18706149
两轮结果未更新,Changing code structure...
	 13  --most gap 0.18706149
	 14  --most gap 0.18706149
	 15  --most gap 0.18706149
两轮结果未更新,Changing code structure...
	 16  --most gap 0.18706149
	 17  --most gap 0.18706149
	 18  --most gap 0.18706149
两轮结果未更新,Changing code structure...
	 19  --most gap 0.18706149
Changing code structure...
Processing examples:  90%|████████▉ | 359/400 [2:17:04<28:16, 41.37s/it]02/28/2025 21:17:51 - INFO - __main__ -   测试:359

02/28/2025 21:17:51 - INFO - __main__ -   Attack failed!

02/28/2025 21:17:51 - INFO - __main__ -   测试:360

02/28/2025 21:19:13 - INFO - __main__ -   Success rate: 64.35%

02/28/2025 21:19:13 - INFO - __main__ -   Successful items count: 139

02/28/2025 21:19:13 - INFO - __main__ -   Total count: 216

02/28/2025 21:19:13 - INFO - __main__ -   Index: 360

The original code is misclassified.
Number of variable_names extracted:  4
Generating population360...
	 0  --most gap 0.002414524555206299
	 1  --most gap 0.039927929639816284
	 2  --most gap 0.039927929639816284
	 3  --most gap 0.039927929639816284
	 4  --most gap 0.039927929639816284
两轮结果未更新,Changing code structure...
	 5  --most gap 0.06752020120620728
	 6  --most gap 0.06752020120620728
	 7  --most gap 0.07975751161575317
	 8  --most gap 0.08413952589035034
	 9  --most gap 0.08413952589035034
	 10  --most gap 0.08413952589035034
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  90%|█████████ | 361/400 [2:18:26<26:47, 41.22s/it]02/28/2025 21:19:13 - INFO - __main__ -   测试:361

02/28/2025 21:21:29 - INFO - __main__ -   Success rate: 64.06%

02/28/2025 21:21:29 - INFO - __main__ -   Successful items count: 139

02/28/2025 21:21:29 - INFO - __main__ -   Total count: 217

02/28/2025 21:21:29 - INFO - __main__ -   Index: 361

Number of variable_names extracted:  4
Generating population361...
	 0  --most gap 0.03188926726579666
	 1  --most gap 0.07382749766111374
	 2  --most gap 0.07382749766111374
	 3  --most gap 0.3301301375031471
	 4  --most gap 0.3328370228409767
	 5  --most gap 0.3328370228409767
	 6  --most gap 0.3328370228409767
	 7  --most gap 0.3328370228409767
两轮结果未更新,Changing code structure...
	 8  --most gap 0.3328370228409767
	 9  --most gap 0.3328370228409767
	 10  --most gap 0.42585254460573196
	 11  --most gap 0.42585254460573196
	 12  --most gap 0.42585254460573196
	 13  --most gap 0.42585254460573196
两轮结果未更新,Changing code structure...
	 14  --most gap 0.42585254460573196
	 15  --most gap 0.42585254460573196
	 16  --most gap 0.42585254460573196
两轮结果未更新,Changing code structure...
	 17  --most gap 0.42585254460573196
	 18  --most gap 0.42585254460573196
	 19  --most gap 0.42585254460573196
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  90%|█████████ | 362/400 [2:20:42<38:18, 60.49s/it]02/28/2025 21:21:29 - INFO - __main__ -   测试:362

02/28/2025 21:21:40 - INFO - __main__ -   Success rate: 63.76%

02/28/2025 21:21:40 - INFO - __main__ -   Successful items count: 139

02/28/2025 21:21:40 - INFO - __main__ -   Total count: 218

02/28/2025 21:21:40 - INFO - __main__ -   Index: 362

Number of variable_names extracted:  2
Generating population362...
	 0  --most gap 0.1676657870411873
	 1  --most gap 0.1676657870411873
	 2  --most gap 0.1676657870411873
	 3  --most gap 0.1676657870411873
两轮结果未更新,Changing code structure...
	 4  --most gap 0.1676657870411873
	 5  --most gap 0.1676657870411873
	 6  --most gap 0.1676657870411873
两轮结果未更新,Changing code structure...
	 7  --most gap 0.1676657870411873
	 8  --most gap 0.1676657870411873
	 9  --most gap 0.1676657870411873
两轮结果未更新,Changing code structure...
	 10  --most gap 0.1676657870411873
	 11  --most gap 0.1676657870411873
	 12  --most gap 0.1676657870411873
两轮结果未更新,Changing code structure...
	 13  --most gap 0.1676657870411873
	 14  --most gap 0.1676657870411873
	 15  --most gap 0.1676657870411873
两轮结果未更新,Changing code structure...
	 16  --most gap 0.1676657870411873
	 17  --most gap 0.1676657870411873
	 18  --most gap 0.1676657870411873
两轮结果未更新,Changing code structure...
	 19  --most gap 0.1676657870411873
Changing code structure...
Processing examples:  91%|█████████ | 363/400 [2:20:53<30:22, 49.25s/it]02/28/2025 21:21:40 - INFO - __main__ -   测试:363

02/28/2025 21:22:19 - INFO - __main__ -   Success rate: 63.93%

02/28/2025 21:22:19 - INFO - __main__ -   Successful items count: 140

02/28/2025 21:22:19 - INFO - __main__ -   Total count: 219

02/28/2025 21:22:19 - INFO - __main__ -   Index: 363

Number of variable_names extracted:  5
Generating population363...
	 0  --most gap 0.22330348193645477
	 1  --most gap 0.22330348193645477
	 2  --most gap 0.22330348193645477
	 3  --most gap 0.22330348193645477
两轮结果未更新,Changing code structure...
	 4  --most gap 0.22587649524211884
	 5  --most gap 0.22587649524211884
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  91%|█████████ | 364/400 [2:21:32<28:04, 46.78s/it]02/28/2025 21:22:19 - INFO - __main__ -   测试:364

02/28/2025 21:22:29 - INFO - __main__ -   Success rate: 63.64%

02/28/2025 21:22:29 - INFO - __main__ -   Successful items count: 140

02/28/2025 21:22:29 - INFO - __main__ -   Total count: 220

02/28/2025 21:22:29 - INFO - __main__ -   Index: 364

Number of variable_names extracted:  2
Generating population364...
	 0  --most gap 0.009170189499855042
	 1  --most gap 0.009170189499855042
	 2  --most gap 0.009170189499855042
	 3  --most gap 0.009170189499855042
两轮结果未更新,Changing code structure...
	 4  --most gap 0.009170189499855042
	 5  --most gap 0.009170189499855042
	 6  --most gap 0.009170189499855042
两轮结果未更新,Changing code structure...
	 7  --most gap 0.009170189499855042
	 8  --most gap 0.009170189499855042
	 9  --most gap 0.009170189499855042
两轮结果未更新,Changing code structure...
	 10  --most gap 0.009170189499855042
	 11  --most gap 0.009170189499855042
	 12  --most gap 0.009170189499855042
两轮结果未更新,Changing code structure...
	 13  --most gap 0.009170189499855042
	 14  --most gap 0.009170189499855042
	 15  --most gap 0.009170189499855042
两轮结果未更新,Changing code structure...
	 16  --most gap 0.009170189499855042
	 17  --most gap 0.009170189499855042
	 18  --most gap 0.009170189499855042
两轮结果未更新,Changing code structure...
	 19  --most gap 0.009170189499855042
Changing code structure...
Processing examples:  91%|█████████▏| 365/400 [2:21:42<21:49, 37.41s/it]02/28/2025 21:22:29 - INFO - __main__ -   测试:365

02/28/2025 21:24:40 - INFO - __main__ -   Success rate: 63.80%

02/28/2025 21:24:40 - INFO - __main__ -   Successful items count: 141

02/28/2025 21:24:40 - INFO - __main__ -   Total count: 221

02/28/2025 21:24:40 - INFO - __main__ -   Index: 365

Number of variable_names extracted:  5
Generating population365...
	 0  --most gap 0.2568853050470352
	 1  --most gap 0.3695230633020401
	 2  --most gap 0.3695230633020401
	 3  --most gap 0.3695230633020401
	 4  --most gap 0.3695230633020401
两轮结果未更新,Changing code structure...
	 5  --most gap 0.3695230633020401
	 6  --most gap 0.3695230633020401
	 7  --most gap 0.3695230633020401
两轮结果未更新,Changing code structure...
	 8  --most gap 0.3695230633020401
	 9  --most gap 0.3695230633020401
	 10  --most gap 0.3695230633020401
两轮结果未更新,Changing code structure...
	 11  --most gap 0.3695230633020401
	 12  --most gap 0.3695230633020401
	 13  --most gap 0.3695230633020401
两轮结果未更新,Changing code structure...
	 14  --most gap 0.3695230633020401
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 366/400 [2:23:53<35:25, 62.51s/it]02/28/2025 21:24:40 - INFO - __main__ -   测试:366

02/28/2025 21:24:56 - INFO - __main__ -   Success rate: 63.96%

02/28/2025 21:24:56 - INFO - __main__ -   Successful items count: 142

02/28/2025 21:24:56 - INFO - __main__ -   Total count: 222

02/28/2025 21:24:56 - INFO - __main__ -   Index: 366

Number of variable_names extracted:  4
Generating population366...
	 0  --most gap 0.0688074454665184
	 1  --most gap 0.0688074454665184
	 2  --most gap 0.0688074454665184
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 367/400 [2:24:09<27:17, 49.61s/it]02/28/2025 21:24:56 - INFO - __main__ -   测试:367

02/28/2025 21:24:57 - INFO - __main__ -   Success rate: 64.13%

02/28/2025 21:24:57 - INFO - __main__ -   Successful items count: 143

02/28/2025 21:24:57 - INFO - __main__ -   Total count: 223

02/28/2025 21:24:57 - INFO - __main__ -   Index: 367

Number of variable_names extracted:  1
Generating population367...
	 0  --most gap 2.7939677238464355e-07
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 368/400 [2:24:10<19:06, 35.81s/it]02/28/2025 21:24:57 - INFO - __main__ -   测试:368

02/28/2025 21:25:00 - INFO - __main__ -   Success rate: 64.29%

02/28/2025 21:25:00 - INFO - __main__ -   Successful items count: 144

02/28/2025 21:25:00 - INFO - __main__ -   Total count: 224

02/28/2025 21:25:00 - INFO - __main__ -   Index: 368

Number of variable_names extracted:  8
Generating population368...
	 0  --most gap 0.21910729072988033
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 369/400 [2:24:13<13:34, 26.29s/it]02/28/2025 21:25:00 - INFO - __main__ -   测试:369

02/28/2025 21:25:26 - INFO - __main__ -   Success rate: 64.44%

02/28/2025 21:25:26 - INFO - __main__ -   Successful items count: 145

02/28/2025 21:25:26 - INFO - __main__ -   Total count: 225

02/28/2025 21:25:26 - INFO - __main__ -   Index: 369

Number of variable_names extracted:  7
Generating population369...
	 0  --most gap 0.11799201183021069
	 1  --most gap 0.1235236655920744
	 2  --most gap 0.21315443329513073
	 3  --most gap 0.4102815818041563
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▎| 370/400 [2:24:39<13:10, 26.36s/it]02/28/2025 21:25:26 - INFO - __main__ -   测试:370

02/28/2025 21:25:28 - INFO - __main__ -   Success rate: 64.60%

02/28/2025 21:25:28 - INFO - __main__ -   Successful items count: 146

02/28/2025 21:25:28 - INFO - __main__ -   Total count: 226

02/28/2025 21:25:28 - INFO - __main__ -   Index: 370

Number of variable_names extracted:  9
Generating population370...
init SUCCESS!
Processing examples:  93%|█████████▎| 371/400 [2:24:41<09:11, 19.02s/it]02/28/2025 21:25:28 - INFO - __main__ -   测试:371

02/28/2025 21:28:09 - INFO - __main__ -   Success rate: 64.32%

02/28/2025 21:28:09 - INFO - __main__ -   Successful items count: 146

02/28/2025 21:28:09 - INFO - __main__ -   Total count: 227

02/28/2025 21:28:09 - INFO - __main__ -   Index: 371

Number of variable_names extracted:  6
Generating population371...
	 0  --most gap 0.1762285977602005
	 1  --most gap 0.20182563364505768
	 2  --most gap 0.20182563364505768
	 3  --most gap 0.20182563364505768
	 4  --most gap 0.2248542457818985
	 5  --most gap 0.2248542457818985
	 6  --most gap 0.27714280784130096
	 7  --most gap 0.27714280784130096
	 8  --most gap 0.27714280784130096
	 9  --most gap 0.27714280784130096
两轮结果未更新,Changing code structure...
	 10  --most gap 0.27714280784130096
	 11  --most gap 0.27714280784130096
	 12  --most gap 0.27714280784130096
两轮结果未更新,Changing code structure...
	 13  --most gap 0.27714280784130096
	 14  --most gap 0.27714280784130096
	 15  --most gap 0.27714280784130096
两轮结果未更新,Changing code structure...
	 16  --most gap 0.27714280784130096
	 17  --most gap 0.27714280784130096
	 18  --most gap 0.27714280784130096
两轮结果未更新,Changing code structure...
	 19  --most gap 0.27714280784130096
Changing code structure...
Processing examples:  93%|█████████▎| 372/400 [2:27:22<28:34, 61.22s/it]02/28/2025 21:28:09 - INFO - __main__ -   测试:372

02/28/2025 21:29:39 - INFO - __main__ -   Success rate: 64.04%

02/28/2025 21:29:39 - INFO - __main__ -   Successful items count: 146

02/28/2025 21:29:39 - INFO - __main__ -   Total count: 228

02/28/2025 21:29:39 - INFO - __main__ -   Index: 372

Number of variable_names extracted:  3
Generating population372...
	 0  --most gap 0.02283153310418129
	 1  --most gap 0.02283153310418129
	 2  --most gap 0.02283153310418129
	 3  --most gap 0.02283153310418129
两轮结果未更新,Changing code structure...
	 4  --most gap 0.02283153310418129
	 5  --most gap 0.02283153310418129
	 6  --most gap 0.02283153310418129
两轮结果未更新,Changing code structure...
	 7  --most gap 0.02283153310418129
	 8  --most gap 0.02283153310418129
	 9  --most gap 0.02283153310418129
两轮结果未更新,Changing code structure...
	 10  --most gap 0.02283153310418129
	 11  --most gap 0.02283153310418129
	 12  --most gap 0.02283153310418129
两轮结果未更新,Changing code structure...
	 13  --most gap 0.02283153310418129
	 14  --most gap 0.02283153310418129
	 15  --most gap 0.02283153310418129
两轮结果未更新,Changing code structure...
	 16  --most gap 0.02283153310418129
	 17  --most gap 0.02283153310418129
	 18  --most gap 0.02283153310418129
两轮结果未更新,Changing code structure...
	 19  --most gap 0.02283153310418129
Changing code structure...
Processing examples:  93%|█████████▎| 373/400 [2:28:52<31:23, 69.77s/it]02/28/2025 21:29:39 - INFO - __main__ -   测试:373

02/28/2025 21:29:52 - INFO - __main__ -   Success rate: 63.76%

02/28/2025 21:29:52 - INFO - __main__ -   Successful items count: 146

02/28/2025 21:29:52 - INFO - __main__ -   Total count: 229

02/28/2025 21:29:52 - INFO - __main__ -   Index: 373

Number of variable_names extracted:  2
Generating population373...
	 0  --most gap 0.005644321441650391
	 1  --most gap 0.005644321441650391
	 2  --most gap 0.005644321441650391
两轮结果未更新,Changing code structure...
	 3  --most gap 0.005644321441650391
	 4  --most gap 0.005644321441650391
	 5  --most gap 0.005644321441650391
两轮结果未更新,Changing code structure...
	 6  --most gap 0.005644321441650391
	 7  --most gap 0.005644321441650391
	 8  --most gap 0.005644321441650391
两轮结果未更新,Changing code structure...
	 9  --most gap 0.005644321441650391
	 10  --most gap 0.005644321441650391
	 11  --most gap 0.005644321441650391
两轮结果未更新,Changing code structure...
	 12  --most gap 0.005644321441650391
	 13  --most gap 0.005644321441650391
	 14  --most gap 0.005644321441650391
两轮结果未更新,Changing code structure...
	 15  --most gap 0.005644321441650391
	 16  --most gap 0.005644321441650391
	 17  --most gap 0.005644321441650391
两轮结果未更新,Changing code structure...
	 18  --most gap 0.005644321441650391
	 19  --most gap 0.005644321441650391
Changing code structure...
Processing examples:  94%|█████████▎| 374/400 [2:29:05<22:51, 52.74s/it]02/28/2025 21:29:52 - INFO - __main__ -   测试:374

02/28/2025 21:29:52 - INFO - __main__ -   Success rate: 63.91%

02/28/2025 21:29:52 - INFO - __main__ -   Successful items count: 147

02/28/2025 21:29:52 - INFO - __main__ -   Total count: 230

02/28/2025 21:29:52 - INFO - __main__ -   Index: 374

Number of variable_names extracted:  5
Generating population374...
init SUCCESS!
Processing examples:  94%|█████████▍| 375/400 [2:29:05<15:26, 37.04s/it]02/28/2025 21:29:52 - INFO - __main__ -   测试:375

02/28/2025 21:29:52 - INFO - __main__ -   Attack failed!

02/28/2025 21:29:52 - INFO - __main__ -   测试:376

02/28/2025 21:31:36 - INFO - __main__ -   Success rate: 64.07%

02/28/2025 21:31:36 - INFO - __main__ -   Successful items count: 148

02/28/2025 21:31:36 - INFO - __main__ -   Total count: 231

02/28/2025 21:31:36 - INFO - __main__ -   Index: 376

The original code is misclassified.
Number of variable_names extracted:  9
Generating population376...
	 0  --most gap 0.26740563
	 1  --most gap 0.32844865
	 2  --most gap 0.40368527
	 3  --most gap 0.40368527
	 4  --most gap 0.42855334
	 5  --most gap 0.42855334
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  94%|█████████▍| 377/400 [2:30:49<16:47, 43.81s/it]02/28/2025 21:31:36 - INFO - __main__ -   测试:377

02/28/2025 21:33:05 - INFO - __main__ -   Success rate: 63.79%

02/28/2025 21:33:05 - INFO - __main__ -   Successful items count: 148

02/28/2025 21:33:05 - INFO - __main__ -   Total count: 232

02/28/2025 21:33:05 - INFO - __main__ -   Index: 377

Number of variable_names extracted:  3
Generating population377...
	 0  --most gap 0.019470677245408297
	 1  --most gap 0.019470677245408297
	 2  --most gap 0.019470677245408297
	 3  --most gap 0.019470677245408297
两轮结果未更新,Changing code structure...
	 4  --most gap 0.019470677245408297
	 5  --most gap 0.019470677245408297
	 6  --most gap 0.019470677245408297
两轮结果未更新,Changing code structure...
	 7  --most gap 0.019470677245408297
	 8  --most gap 0.019470677245408297
	 9  --most gap 0.019470677245408297
两轮结果未更新,Changing code structure...
	 10  --most gap 0.0218388088978827
	 11  --most gap 0.0218388088978827
	 12  --most gap 0.0218388088978827
	 13  --most gap 0.13780861953273416
	 14  --most gap 0.13780861953273416
	 15  --most gap 0.13780861953273416
	 16  --most gap 0.13780861953273416
两轮结果未更新,Changing code structure...
	 17  --most gap 0.13780861953273416
	 18  --most gap 0.13780861953273416
	 19  --most gap 0.13780861953273416
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  94%|█████████▍| 378/400 [2:32:18<20:10, 55.03s/it]02/28/2025 21:33:05 - INFO - __main__ -   测试:378

02/28/2025 21:33:05 - INFO - __main__ -   Success rate: 63.95%

02/28/2025 21:33:05 - INFO - __main__ -   Successful items count: 149

02/28/2025 21:33:05 - INFO - __main__ -   Total count: 233

02/28/2025 21:33:05 - INFO - __main__ -   Index: 378

Number of variable_names extracted:  6
Generating population378...
init SUCCESS!
Processing examples:  95%|█████████▍| 379/400 [2:32:18<14:15, 40.73s/it]02/28/2025 21:33:05 - INFO - __main__ -   测试:379

02/28/2025 21:33:13 - INFO - __main__ -   Success rate: 63.68%

02/28/2025 21:33:13 - INFO - __main__ -   Successful items count: 149

02/28/2025 21:33:13 - INFO - __main__ -   Total count: 234

02/28/2025 21:33:13 - INFO - __main__ -   Index: 379

Number of variable_names extracted:  2
Generating population379...
	 0  --most gap 0.0708056315779686
	 1  --most gap 0.0708056315779686
	 2  --most gap 0.0708056315779686
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0708056315779686
	 4  --most gap 0.0708056315779686
	 5  --most gap 0.0708056315779686
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0708056315779686
	 7  --most gap 0.0708056315779686
	 8  --most gap 0.0708056315779686
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0708056315779686
	 10  --most gap 0.0708056315779686
	 11  --most gap 0.0708056315779686
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0708056315779686
	 13  --most gap 0.0708056315779686
	 14  --most gap 0.0708056315779686
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0708056315779686
	 16  --most gap 0.0708056315779686
	 17  --most gap 0.0708056315779686
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0708056315779686
	 19  --most gap 0.0708056315779686
Changing code structure...
Processing examples:  95%|█████████▌| 380/400 [2:32:26<10:36, 31.83s/it]02/28/2025 21:33:13 - INFO - __main__ -   测试:380

02/28/2025 21:33:15 - INFO - __main__ -   Success rate: 63.83%

02/28/2025 21:33:15 - INFO - __main__ -   Successful items count: 150

02/28/2025 21:33:15 - INFO - __main__ -   Total count: 235

02/28/2025 21:33:15 - INFO - __main__ -   Index: 380

Number of variable_names extracted:  8
Generating population380...
	 0  --most gap 0.3876718394458294
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  95%|█████████▌| 381/400 [2:32:28<07:27, 23.57s/it]02/28/2025 21:33:15 - INFO - __main__ -   测试:381

02/28/2025 21:33:35 - INFO - __main__ -   Success rate: 63.56%

02/28/2025 21:33:35 - INFO - __main__ -   Successful items count: 150

02/28/2025 21:33:35 - INFO - __main__ -   Total count: 236

02/28/2025 21:33:35 - INFO - __main__ -   Index: 381

Number of variable_names extracted:  2
Generating population381...
	 0  --most gap 0.023541823029518127
	 1  --most gap 0.023541823029518127
	 2  --most gap 0.023541823029518127
两轮结果未更新,Changing code structure...
	 3  --most gap 0.023541823029518127
	 4  --most gap 0.023541823029518127
	 5  --most gap 0.023541823029518127
两轮结果未更新,Changing code structure...
	 6  --most gap 0.023541823029518127
	 7  --most gap 0.023541823029518127
	 8  --most gap 0.023541823029518127
两轮结果未更新,Changing code structure...
	 9  --most gap 0.023541823029518127
	 10  --most gap 0.023541823029518127
	 11  --most gap 0.023541823029518127
两轮结果未更新,Changing code structure...
	 12  --most gap 0.023541823029518127
	 13  --most gap 0.023541823029518127
	 14  --most gap 0.023541823029518127
两轮结果未更新,Changing code structure...
	 15  --most gap 0.023541823029518127
	 16  --most gap 0.023541823029518127
	 17  --most gap 0.023541823029518127
两轮结果未更新,Changing code structure...
	 18  --most gap 0.023541823029518127
	 19  --most gap 0.023541823029518127
Changing code structure...
Processing examples:  96%|█████████▌| 382/400 [2:32:48<06:45, 22.51s/it]02/28/2025 21:33:35 - INFO - __main__ -   测试:382

02/28/2025 21:33:35 - INFO - __main__ -   Attack failed!

02/28/2025 21:33:35 - INFO - __main__ -   测试:383

02/28/2025 21:33:35 - INFO - __main__ -   Attack failed!

02/28/2025 21:33:35 - INFO - __main__ -   测试:384

02/28/2025 21:33:35 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  96%|█████████▋| 385/400 [2:32:48<02:32, 10.14s/it]02/28/2025 21:33:35 - INFO - __main__ -   测试:385

02/28/2025 21:33:35 - INFO - __main__ -   Attack failed!

02/28/2025 21:33:35 - INFO - __main__ -   测试:386

02/28/2025 21:33:35 - INFO - __main__ -   Attack failed!

02/28/2025 21:33:35 - INFO - __main__ -   测试:387

02/28/2025 21:33:35 - INFO - __main__ -   Attack failed!

02/28/2025 21:33:35 - INFO - __main__ -   测试:388

02/28/2025 21:33:35 - INFO - __main__ -   Attack failed!

02/28/2025 21:33:35 - INFO - __main__ -   测试:389

02/28/2025 21:33:35 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  98%|█████████▊| 390/400 [2:32:48<00:44,  4.40s/it]02/28/2025 21:33:35 - INFO - __main__ -   测试:390

Number of variable_names extracted:  9
Generating population390...
	 0  --most gap 0.115561426
	 1  --most gap 0.2489785
Processing examples:  98%|█████████▊| 390/400 [2:33:06<00:44,  4.40s/it]02/28/2025 21:35:41 - INFO - __main__ -   Success rate: 63.71%

02/28/2025 21:35:41 - INFO - __main__ -   Successful items count: 151

02/28/2025 21:35:41 - INFO - __main__ -   Total count: 237

02/28/2025 21:35:41 - INFO - __main__ -   Index: 390

	 2  --most gap 0.30603826
	 3  --most gap 0.30603826
	 4  --most gap 0.3628378
	 5  --most gap 0.3628378
	 6  --most gap 0.3628378
	 7  --most gap 0.3628378
两轮结果未更新,Changing code structure...
	 8  --most gap 0.3628378
	 9  --most gap 0.3628378
	 10  --most gap 0.3628378
两轮结果未更新,Changing code structure...
	 11  --most gap 0.3628378
	 12  --most gap 0.3628378
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  98%|█████████▊| 391/400 [2:34:54<03:11, 21.33s/it]02/28/2025 21:35:41 - INFO - __main__ -   测试:391

02/28/2025 21:35:41 - INFO - __main__ -   Attack failed!

02/28/2025 21:35:41 - INFO - __main__ -   测试:392

02/28/2025 21:38:33 - INFO - __main__ -   Success rate: 63.45%

02/28/2025 21:38:33 - INFO - __main__ -   Successful items count: 151

02/28/2025 21:38:33 - INFO - __main__ -   Total count: 238

02/28/2025 21:38:33 - INFO - __main__ -   Index: 392

The original code is misclassified.
Number of variable_names extracted:  6
Generating population392...
	 0  --most gap 0.0049223401583731174
	 1  --most gap 0.006075956393033266
	 2  --most gap 0.010712299030274153
	 3  --most gap 0.04278594208881259
	 4  --most gap 0.04278594208881259
	 5  --most gap 0.04278594208881259
	 6  --most gap 0.04278594208881259
两轮结果未更新,Changing code structure...
	 7  --most gap 0.04278594208881259
	 8  --most gap 0.04278594208881259
	 9  --most gap 0.21836537448689342
	 10  --most gap 0.21836537448689342
	 11  --most gap 0.21836537448689342
	 12  --most gap 0.21836537448689342
两轮结果未更新,Changing code structure...
	 13  --most gap 0.21836537448689342
	 14  --most gap 0.21836537448689342
	 15  --most gap 0.21836537448689342
两轮结果未更新,Changing code structure...
	 16  --most gap 0.21836537448689342
	 17  --most gap 0.21836537448689342
	 18  --most gap 0.3684196802787483
	 19  --most gap 0.3684196802787483
Changing code structure...
Processing examples:  98%|█████████▊| 393/400 [2:37:46<04:37, 39.69s/it]02/28/2025 21:38:33 - INFO - __main__ -   测试:393

02/28/2025 21:40:51 - INFO - __main__ -   Success rate: 63.60%

02/28/2025 21:40:51 - INFO - __main__ -   Successful items count: 152

02/28/2025 21:40:51 - INFO - __main__ -   Total count: 239

02/28/2025 21:40:51 - INFO - __main__ -   Index: 393

Number of variable_names extracted:  19
Generating population393...
	 0  --most gap 0.006501794
	 1  --most gap 0.006501794
	 2  --most gap 0.07382625
	 3  --most gap 0.12438661
	 4  --most gap 0.12438661
	 5  --most gap 0.12438661
	 6  --most gap 0.132523
	 7  --most gap 0.132523
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  98%|█████████▊| 394/400 [2:40:04<05:38, 56.38s/it]02/28/2025 21:40:51 - INFO - __main__ -   测试:394

02/28/2025 21:40:57 - INFO - __main__ -   Success rate: 63.75%

02/28/2025 21:40:57 - INFO - __main__ -   Successful items count: 153

02/28/2025 21:40:57 - INFO - __main__ -   Total count: 240

02/28/2025 21:40:57 - INFO - __main__ -   Index: 394

Number of variable_names extracted:  20
Generating population394...
init SUCCESS!
Processing examples:  99%|█████████▉| 395/400 [2:40:10<03:52, 46.55s/it]02/28/2025 21:40:57 - INFO - __main__ -   测试:395

Number of variable_names extracted:  31
Generating population395...
init SUCCESS!
Processing examples:  99%|█████████▉| 395/400 [2:40:26<03:52, 46.55s/it]02/28/2025 21:42:04 - INFO - __main__ -   Success rate: 63.90%

02/28/2025 21:42:04 - INFO - __main__ -   Successful items count: 154

02/28/2025 21:42:04 - INFO - __main__ -   Total count: 241

02/28/2025 21:42:04 - INFO - __main__ -   Index: 395

Processing examples:  99%|█████████▉| 396/400 [2:41:17<03:24, 51.07s/it]02/28/2025 21:42:04 - INFO - __main__ -   测试:396

02/28/2025 21:45:21 - INFO - __main__ -   Success rate: 64.05%

02/28/2025 21:45:21 - INFO - __main__ -   Successful items count: 155

02/28/2025 21:45:21 - INFO - __main__ -   Total count: 242

02/28/2025 21:45:21 - INFO - __main__ -   Index: 396

Number of variable_names extracted:  9
Generating population396...
	 0  --most gap 0.1423896
	 1  --most gap 0.1423896
	 2  --most gap 0.1423896
	 3  --most gap 0.1423896
两轮结果未更新,Changing code structure...
	 4  --most gap 0.1423896
	 5  --most gap 0.15073061
	 6  --most gap 0.20047832
	 7  --most gap 0.20047832
	 8  --most gap 0.20047832
	 9  --most gap 0.20047832
两轮结果未更新,Changing code structure...
	 10  --most gap 0.20047832
	 11  --most gap 0.20047832
	 12  --most gap 0.20047832
两轮结果未更新,Changing code structure...
	 13  --most gap 0.20047832
	 14  --most gap 0.2787608
	 15  --most gap 0.2787608
	 16  --most gap 0.2787608
	 17  --most gap 0.2787608
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  99%|█████████▉| 397/400 [2:44:34<04:16, 85.58s/it]02/28/2025 21:45:21 - INFO - __main__ -   测试:397

02/28/2025 21:46:21 - INFO - __main__ -   Success rate: 64.20%

02/28/2025 21:46:21 - INFO - __main__ -   Successful items count: 156

02/28/2025 21:46:21 - INFO - __main__ -   Total count: 243

02/28/2025 21:46:21 - INFO - __main__ -   Index: 397

Number of variable_names extracted:  7
Generating population397...
	 0  --most gap 0.3546424
	 1  --most gap 0.3546424
	 2  --most gap 0.3546424
	 3  --most gap 0.3546424
两轮结果未更新,Changing code structure...
	 4  --most gap 0.3546424
	 5  --most gap 0.3546424
	 6  --most gap 0.3546424
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples: 100%|█████████▉| 398/400 [2:45:34<02:38, 79.15s/it]02/28/2025 21:46:21 - INFO - __main__ -   测试:398

02/28/2025 21:46:21 - INFO - __main__ -   Attack failed!

02/28/2025 21:46:21 - INFO - __main__ -   测试:399

02/28/2025 21:46:21 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples: 100%|██████████| 400/400 [2:45:34<00:00, 24.84s/it]
Average diversity max:  404.72
Average diversity min:  157.84
ALL examples'average drop:  0.41
ALL examples'average query_times:  108.14
ALL examples time cost:  165.58 min
Average CodeBLEU score max: 2.2149
Average CodeBLEU score min: 0.8638
