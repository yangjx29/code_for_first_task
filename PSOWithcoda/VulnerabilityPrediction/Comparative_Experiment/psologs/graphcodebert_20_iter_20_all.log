Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/../code/run.py:138: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/test.py:110: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))

 cached_features_file:  ../dataset/graphcodebert_cached_test_subs_gan_0_400
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]03/05/2025 14:52:20 - INFO - __main__ -   测试:0

03/05/2025 14:52:22 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:   0%|          | 1/400 [00:02<15:58,  2.40s/it]03/05/2025 14:52:22 - INFO - __main__ -   测试:1

03/05/2025 14:52:22 - INFO - __main__ -   Attack failed!

03/05/2025 14:52:22 - INFO - __main__ -   测试:2

03/05/2025 14:52:22 - INFO - __main__ -   Attack failed!

03/05/2025 14:52:22 - INFO - __main__ -   测试:3

03/05/2025 14:52:23 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:   1%|          | 4/400 [00:02<03:26,  1.91it/s]03/05/2025 14:52:23 - INFO - __main__ -   测试:4

03/05/2025 14:52:23 - INFO - __main__ -   Attack failed!

03/05/2025 14:52:23 - INFO - __main__ -   测试:5

We strongly recommend passing in an `attention_mask` since your input_ids may be padded. See https://huggingface.co/docs/transformers/troubleshooting#incorrect-output-when-padding-tokens-arent-masked.
03/05/2025 14:52:46 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:52:46 - INFO - __main__ -   Successful items count: 1

03/05/2025 14:52:46 - INFO - __main__ -   Total count: 1

03/05/2025 14:52:46 - INFO - __main__ -   Index: 5

The original code is misclassified.
Number of variable_names extracted:  1
Generating population5...
	 0  --most gap 2.384185791015625e-07
	 1  --most gap 0.17526519298553467
	 2  --most gap 0.17526519298553467
	 3  --most gap 0.17526519298553467
	 4  --most gap 0.17526519298553467
两轮结果未更新,Changing code structure...
	 5  --most gap 0.17526519298553467
	 6  --most gap 0.17526519298553467
	 7  --most gap 0.17526519298553467
两轮结果未更新,Changing code structure...
	 8  --most gap 0.17526519298553467
	 9  --most gap 0.17526519298553467
	 10  --most gap 0.17526519298553467
两轮结果未更新,Changing code structure...
	 11  --most gap 0.17526519298553467
	 12  --most gap 0.17526519298553467
	 13  --most gap 0.17526519298553467
两轮结果未更新,Changing code structure...
	 14  --most gap 0.17526519298553467
	 15  --most gap 0.17526519298553467
	 16  --most gap 0.17526519298553467
两轮结果未更新,Changing code structure...
	 17  --most gap 0.17526519298553467
	 18  --most gap 0.17526519298553467
	 19  --most gap 0.17526519298553467
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   2%|▏         | 6/400 [00:26<35:32,  5.41s/it]03/05/2025 14:52:46 - INFO - __main__ -   测试:6

03/05/2025 14:52:46 - INFO - __main__ -   Attack failed!

03/05/2025 14:52:46 - INFO - __main__ -   测试:7

03/05/2025 14:52:46 - INFO - __main__ -   Attack failed!

03/05/2025 14:52:46 - INFO - __main__ -   测试:8

03/05/2025 14:52:53 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:52:53 - INFO - __main__ -   Successful items count: 2

03/05/2025 14:52:53 - INFO - __main__ -   Total count: 2

03/05/2025 14:52:53 - INFO - __main__ -   Index: 8

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  9
Generating population8...
	 0  --most gap 0.02900823950767517
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   2%|▏         | 9/400 [00:32<25:09,  3.86s/it]03/05/2025 14:52:53 - INFO - __main__ -   测试:9

03/05/2025 14:52:53 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:52:53 - INFO - __main__ -   Successful items count: 3

03/05/2025 14:52:53 - INFO - __main__ -   Total count: 3

03/05/2025 14:52:53 - INFO - __main__ -   Index: 9

Number of variable_names extracted:  5
Generating population9...
init SUCCESS!
Processing examples:   2%|▎         | 10/400 [00:33<20:51,  3.21s/it]03/05/2025 14:52:53 - INFO - __main__ -   测试:10

03/05/2025 14:52:53 - INFO - __main__ -   Attack failed!

03/05/2025 14:52:53 - INFO - __main__ -   测试:11

03/05/2025 14:52:53 - INFO - __main__ -   Attack failed!

03/05/2025 14:52:53 - INFO - __main__ -   测试:12

03/05/2025 14:53:04 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:53:04 - INFO - __main__ -   Successful items count: 4

03/05/2025 14:53:04 - INFO - __main__ -   Total count: 4

03/05/2025 14:53:04 - INFO - __main__ -   Index: 12

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  2
Generating population12...
	 0  --most gap 0.007594466
	 1  --most gap 0.007594466
	 2  --most gap 0.007594466
	 3  --most gap 0.007594466
两轮结果未更新,Changing code structure...
	 4  --most gap 0.007594466
	 5  --most gap 0.007594466
	 6  --most gap 0.007594466
两轮结果未更新,Changing code structure...
	 7  --most gap 0.007594466
	 8  --most gap 0.007594466
	 9  --most gap 0.007594466
两轮结果未更新,Changing code structure...
	 10  --most gap 0.007594466
	 11  --most gap 0.007594466
	 12  --most gap 0.007594466
两轮结果未更新,Changing code structure...
	 13  --most gap 0.007594466
	 14  --most gap 0.007594466
	 15  --most gap 0.007594466
两轮结果未更新,Changing code structure...
	 16  --most gap 0.007594466
	 17  --most gap 0.007594466
	 18  --most gap 0.007594466
两轮结果未更新,Changing code structure...
	 19  --most gap 0.007594466
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   3%|▎         | 13/400 [00:44<22:13,  3.45s/it]03/05/2025 14:53:04 - INFO - __main__ -   测试:13

03/05/2025 14:53:32 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:53:32 - INFO - __main__ -   Successful items count: 5

03/05/2025 14:53:32 - INFO - __main__ -   Total count: 5

03/05/2025 14:53:32 - INFO - __main__ -   Index: 13

Number of variable_names extracted:  1
Generating population13...
	 0  --most gap 0
	 1  --most gap 0.10551808960735798
	 2  --most gap 0.10551808960735798
	 3  --most gap 0.10551808960735798
	 4  --most gap 0.10551808960735798
两轮结果未更新,Changing code structure...
	 5  --most gap 0.10551808960735798
	 6  --most gap 0.10551808960735798
	 7  --most gap 0.10551808960735798
两轮结果未更新,Changing code structure...
	 8  --most gap 0.10551808960735798
	 9  --most gap 0.10551808960735798
	 10  --most gap 0.10551808960735798
两轮结果未更新,Changing code structure...
	 11  --most gap 0.10551808960735798
	 12  --most gap 0.10551808960735798
	 13  --most gap 0.10551808960735798
两轮结果未更新,Changing code structure...
	 14  --most gap 0.10551808960735798
	 15  --most gap 0.10551808960735798
	 16  --most gap 0.10551808960735798
两轮结果未更新,Changing code structure...
	 17  --most gap 0.10551808960735798
	 18  --most gap 0.10551808960735798
	 19  --most gap 0.10551808960735798
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   4%|▎         | 14/400 [01:11<48:56,  7.61s/it]03/05/2025 14:53:32 - INFO - __main__ -   测试:14

03/05/2025 14:53:43 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
03/05/2025 14:53:43 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:53:43 - INFO - __main__ -   Successful items count: 6

03/05/2025 14:53:43 - INFO - __main__ -   Total count: 6

03/05/2025 14:53:43 - INFO - __main__ -   Index: 14

Number of variable_names extracted:  1
Generating population14...
	 0  --most gap 0.09452828764915466
	 1  --most gap 0.09452828764915466
	 2  --most gap 0.09452828764915466
	 3  --most gap 0.09452828764915466
两轮结果未更新,Changing code structure...
	 4  --most gap 0.09452828764915466
	 5  --most gap 0.09452828764915466
	 6  --most gap 0.09452828764915466
两轮结果未更新,Changing code structure...
	 7  --most gap 0.09452828764915466
	 8  --most gap 0.09452828764915466
	 9  --most gap 0.09452828764915466
两轮结果未更新,Changing code structure...
	 10  --most gap 0.09452828764915466
	 11  --most gap 0.09452828764915466
	 12  --most gap 0.09452828764915466
两轮结果未更新,Changing code structure...
	 13  --most gap 0.09452828764915466
	 14  --most gap 0.09452828764915466
	 15  --most gap 0.09452828764915466
两轮结果未更新,Changing code structure...
	 16  --most gap 0.09452828764915466
	 17  --most gap 0.09452828764915466
	 18  --most gap 0.09452828764915466
两轮结果未更新,Changing code structure...
	 19  --most gap 0.09452828764915466
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   4%|▍         | 15/400 [01:22<53:28,  8.33s/it]03/05/2025 14:53:43 - INFO - __main__ -   测试:15

03/05/2025 14:54:00 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:54:00 - INFO - __main__ -   Successful items count: 7

03/05/2025 14:54:00 - INFO - __main__ -   Total count: 7

03/05/2025 14:54:00 - INFO - __main__ -   Index: 15

Number of variable_names extracted:  2
Generating population15...
	 0  --most gap 0.08221837878227234
	 1  --most gap 0.1347399353981018
	 2  --most gap 0.1347399353981018
	 3  --most gap 0.1347399353981018
	 4  --most gap 0.1347399353981018
两轮结果未更新,Changing code structure...
	 5  --most gap 0.1347399353981018
	 6  --most gap 0.1347399353981018
	 7  --most gap 0.1347399353981018
两轮结果未更新,Changing code structure...
	 8  --most gap 0.1347399353981018
	 9  --most gap 0.1347399353981018
	 10  --most gap 0.1347399353981018
两轮结果未更新,Changing code structure...
	 11  --most gap 0.1347399353981018
	 12  --most gap 0.1347399353981018
	 13  --most gap 0.1347399353981018
两轮结果未更新,Changing code structure...
	 14  --most gap 0.1347399353981018
	 15  --most gap 0.1347399353981018
	 16  --most gap 0.1347399353981018
两轮结果未更新,Changing code structure...
	 17  --most gap 0.1347399353981018
	 18  --most gap 0.1347399353981018
	 19  --most gap 0.1347399353981018
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   4%|▍         | 16/400 [01:39<1:05:47, 10.28s/it]03/05/2025 14:54:00 - INFO - __main__ -   测试:16

03/05/2025 14:54:00 - INFO - __main__ -   Attack failed!

03/05/2025 14:54:00 - INFO - __main__ -   测试:17

03/05/2025 14:54:00 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:   4%|▍         | 18/400 [01:40<40:11,  6.31s/it]  03/05/2025 14:54:00 - INFO - __main__ -   测试:18

03/05/2025 14:54:28 - INFO - __main__ -   Success rate: 87.50%

03/05/2025 14:54:28 - INFO - __main__ -   Successful items count: 7

03/05/2025 14:54:28 - INFO - __main__ -   Total count: 8

03/05/2025 14:54:28 - INFO - __main__ -   Index: 18

Number of variable_names extracted:  1
Generating population18...
	 0  --most gap 0.00597972609102726
	 1  --most gap 0.00597972609102726
	 2  --most gap 0.00597972609102726
	 3  --most gap 0.00597972609102726
两轮结果未更新,Changing code structure...
	 4  --most gap 0.00597972609102726
	 5  --most gap 0.00597972609102726
	 6  --most gap 0.00597972609102726
两轮结果未更新,Changing code structure...
	 7  --most gap 0.00597972609102726
	 8  --most gap 0.00597972609102726
	 9  --most gap 0.00597972609102726
两轮结果未更新,Changing code structure...
	 10  --most gap 0.00597972609102726
	 11  --most gap 0.00597972609102726
	 12  --most gap 0.00597972609102726
两轮结果未更新,Changing code structure...
	 13  --most gap 0.00597972609102726
	 14  --most gap 0.00597972609102726
	 15  --most gap 0.00597972609102726
两轮结果未更新,Changing code structure...
	 16  --most gap 0.00597972609102726
	 17  --most gap 0.00597972609102726
	 18  --most gap 0.00597972609102726
两轮结果未更新,Changing code structure...
	 19  --most gap 0.00597972609102726
Changing code structure...
Processing examples:   5%|▍         | 19/400 [02:07<1:09:16, 10.91s/it]03/05/2025 14:54:28 - INFO - __main__ -   测试:19

03/05/2025 14:54:30 - INFO - __main__ -   Success rate: 88.89%

03/05/2025 14:54:30 - INFO - __main__ -   Successful items count: 8

03/05/2025 14:54:30 - INFO - __main__ -   Total count: 9

03/05/2025 14:54:30 - INFO - __main__ -   Index: 19

Number of variable_names extracted:  13
Generating population19...
init SUCCESS!
Processing examples:   5%|▌         | 20/400 [02:09<55:50,  8.82s/it]  03/05/2025 14:54:30 - INFO - __main__ -   测试:20

03/05/2025 14:55:47 - INFO - __main__ -   Success rate: 90.00%

03/05/2025 14:55:47 - INFO - __main__ -   Successful items count: 9

03/05/2025 14:55:47 - INFO - __main__ -   Total count: 10

03/05/2025 14:55:47 - INFO - __main__ -   Index: 20

Number of variable_names extracted:  12
Generating population20...
	 0  --most gap 0.1038993
	 1  --most gap 0.13268721
	 2  --most gap 0.13268721
	 3  --most gap 0.13734424
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   5%|▌         | 21/400 [03:26<2:44:59, 26.12s/it]03/05/2025 14:55:47 - INFO - __main__ -   测试:21

03/05/2025 14:55:47 - INFO - __main__ -   Attack failed!

03/05/2025 14:55:47 - INFO - __main__ -   测试:22

03/05/2025 14:55:48 - INFO - __main__ -   Success rate: 90.91%

03/05/2025 14:55:48 - INFO - __main__ -   Successful items count: 10

03/05/2025 14:55:48 - INFO - __main__ -   Total count: 11

03/05/2025 14:55:48 - INFO - __main__ -   Index: 22

The original code is misclassified.
Number of variable_names extracted:  7
Generating population22...
init SUCCESS!
Processing examples:   6%|▌         | 23/400 [03:28<1:37:03, 15.45s/it]03/05/2025 14:55:48 - INFO - __main__ -   测试:23

03/05/2025 14:55:49 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 14:55:49 - INFO - __main__ -   Successful items count: 11

03/05/2025 14:55:49 - INFO - __main__ -   Total count: 12

03/05/2025 14:55:49 - INFO - __main__ -   Index: 23

Number of variable_names extracted:  3
Generating population23...
init SUCCESS!
Processing examples:   6%|▌         | 24/400 [03:28<1:15:34, 12.06s/it]03/05/2025 14:55:49 - INFO - __main__ -   测试:24

03/05/2025 14:55:49 - INFO - __main__ -   Success rate: 92.31%

03/05/2025 14:55:49 - INFO - __main__ -   Successful items count: 12

03/05/2025 14:55:49 - INFO - __main__ -   Total count: 13

03/05/2025 14:55:49 - INFO - __main__ -   Index: 24

Number of variable_names extracted:  8
Generating population24...
init SUCCESS!
Processing examples:   6%|▋         | 25/400 [03:29<57:23,  9.18s/it]  03/05/2025 14:55:49 - INFO - __main__ -   测试:25

03/05/2025 14:55:50 - INFO - __main__ -   Success rate: 92.86%

03/05/2025 14:55:50 - INFO - __main__ -   Successful items count: 13

03/05/2025 14:55:50 - INFO - __main__ -   Total count: 14

03/05/2025 14:55:50 - INFO - __main__ -   Index: 25

Number of variable_names extracted:  5
Generating population25...
init SUCCESS!
Processing examples:   6%|▋         | 26/400 [03:30<43:15,  6.94s/it]03/05/2025 14:55:50 - INFO - __main__ -   测试:26

03/05/2025 14:55:50 - INFO - __main__ -   Attack failed!

03/05/2025 14:55:50 - INFO - __main__ -   测试:27

03/05/2025 14:55:50 - INFO - __main__ -   Attack failed!

03/05/2025 14:55:50 - INFO - __main__ -   测试:28

03/05/2025 14:55:50 - INFO - __main__ -   Success rate: 93.33%

03/05/2025 14:55:50 - INFO - __main__ -   Successful items count: 14

03/05/2025 14:55:50 - INFO - __main__ -   Total count: 15

03/05/2025 14:55:50 - INFO - __main__ -   Index: 28

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  6
Generating population28...
init SUCCESS!
Processing examples:   7%|▋         | 29/400 [03:30<20:29,  3.31s/it]03/05/2025 14:55:50 - INFO - __main__ -   测试:29

03/05/2025 14:55:51 - INFO - __main__ -   Success rate: 93.75%

03/05/2025 14:55:51 - INFO - __main__ -   Successful items count: 15

03/05/2025 14:55:51 - INFO - __main__ -   Total count: 16

03/05/2025 14:55:51 - INFO - __main__ -   Index: 29

Number of variable_names extracted:  4
Generating population29...
init SUCCESS!
Processing examples:   8%|▊         | 30/400 [03:30<17:02,  2.76s/it]03/05/2025 14:55:51 - INFO - __main__ -   测试:30

03/05/2025 14:56:22 - INFO - __main__ -   Success rate: 88.24%

03/05/2025 14:56:22 - INFO - __main__ -   Successful items count: 15

03/05/2025 14:56:22 - INFO - __main__ -   Total count: 17

03/05/2025 14:56:22 - INFO - __main__ -   Index: 30

Number of variable_names extracted:  2
Generating population30...
	 0  --most gap 0.0035832971334457397
	 1  --most gap 0.0035832971334457397
	 2  --most gap 0.0035832971334457397
	 3  --most gap 0.0035832971334457397
两轮结果未更新,Changing code structure...
	 4  --most gap 0.0035832971334457397
	 5  --most gap 0.0035832971334457397
	 6  --most gap 0.0035832971334457397
两轮结果未更新,Changing code structure...
	 7  --most gap 0.0035832971334457397
	 8  --most gap 0.0035832971334457397
	 9  --most gap 0.0035832971334457397
两轮结果未更新,Changing code structure...
	 10  --most gap 0.0035832971334457397
	 11  --most gap 0.0035832971334457397
	 12  --most gap 0.0035832971334457397
两轮结果未更新,Changing code structure...
	 13  --most gap 0.0035832971334457397
	 14  --most gap 0.0035832971334457397
	 15  --most gap 0.0035832971334457397
两轮结果未更新,Changing code structure...
	 16  --most gap 0.0035832971334457397
	 17  --most gap 0.0035832971334457397
	 18  --most gap 0.0035832971334457397
两轮结果未更新,Changing code structure...
	 19  --most gap 0.0035832971334457397
Changing code structure...
Processing examples:   8%|▊         | 31/400 [04:02<56:20,  9.16s/it]03/05/2025 14:56:22 - INFO - __main__ -   测试:31

03/05/2025 14:56:23 - INFO - __main__ -   Success rate: 88.89%

03/05/2025 14:56:23 - INFO - __main__ -   Successful items count: 16

03/05/2025 14:56:23 - INFO - __main__ -   Total count: 18

03/05/2025 14:56:23 - INFO - __main__ -   Index: 31

Number of variable_names extracted:  2
Generating population31...
init SUCCESS!
Processing examples:   8%|▊         | 32/400 [04:02<43:19,  7.06s/it]03/05/2025 14:56:23 - INFO - __main__ -   测试:32

03/05/2025 14:56:40 - INFO - __main__ -   Success rate: 89.47%

03/05/2025 14:56:40 - INFO - __main__ -   Successful items count: 17

03/05/2025 14:56:40 - INFO - __main__ -   Total count: 19

03/05/2025 14:56:40 - INFO - __main__ -   Index: 32

Number of variable_names extracted:  17
Generating population32...
init SUCCESS!
Processing examples:   8%|▊         | 33/400 [04:19<58:52,  9.63s/it]03/05/2025 14:56:40 - INFO - __main__ -   测试:33

03/05/2025 14:56:40 - INFO - __main__ -   Attack failed!

03/05/2025 14:56:40 - INFO - __main__ -   测试:34

03/05/2025 14:56:40 - INFO - __main__ -   Attack failed!

03/05/2025 14:56:40 - INFO - __main__ -   测试:35

03/05/2025 14:56:40 - INFO - __main__ -   Success rate: 90.00%

03/05/2025 14:56:40 - INFO - __main__ -   Successful items count: 18

03/05/2025 14:56:40 - INFO - __main__ -   Total count: 20

03/05/2025 14:56:40 - INFO - __main__ -   Index: 35

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population35...
init SUCCESS!
Processing examples:   9%|▉         | 36/400 [04:20<28:04,  4.63s/it]03/05/2025 14:56:40 - INFO - __main__ -   测试:36

03/05/2025 14:56:40 - INFO - __main__ -   Attack failed!

03/05/2025 14:56:40 - INFO - __main__ -   测试:37

03/05/2025 14:58:31 - INFO - __main__ -   Success rate: 90.48%

03/05/2025 14:58:31 - INFO - __main__ -   Successful items count: 19

03/05/2025 14:58:31 - INFO - __main__ -   Total count: 21

03/05/2025 14:58:31 - INFO - __main__ -   Index: 37

The original code is misclassified.
Number of variable_names extracted:  3
Generating population37...
	 0  --most gap 0.05618860572576523
	 1  --most gap 0.14305632561445236
	 2  --most gap 0.2995150461792946
	 3  --most gap 0.2995150461792946
	 4  --most gap 0.2995150461792946
	 5  --most gap 0.2995150461792946
两轮结果未更新,Changing code structure...
	 6  --most gap 0.3165660873055458
	 7  --most gap 0.3165660873055458
	 8  --most gap 0.3165660873055458
	 9  --most gap 0.3165660873055458
两轮结果未更新,Changing code structure...
	 10  --most gap 0.3165660873055458
	 11  --most gap 0.3165660873055458
	 12  --most gap 0.3165660873055458
两轮结果未更新,Changing code structure...
	 13  --most gap 0.3165660873055458
	 14  --most gap 0.3165660873055458
	 15  --most gap 0.3165660873055458
两轮结果未更新,Changing code structure...
	 16  --most gap 0.3165660873055458
	 17  --most gap 0.3165660873055458
	 18  --most gap 0.3165660873055458
两轮结果未更新,Changing code structure...
	 19  --most gap 0.3165660873055458
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  10%|▉         | 38/400 [06:11<2:10:10, 21.58s/it]03/05/2025 14:58:31 - INFO - __main__ -   测试:38

03/05/2025 14:58:32 - INFO - __main__ -   Success rate: 90.91%

03/05/2025 14:58:32 - INFO - __main__ -   Successful items count: 20

03/05/2025 14:58:32 - INFO - __main__ -   Total count: 22

03/05/2025 14:58:32 - INFO - __main__ -   Index: 38

Number of variable_names extracted:  2
Generating population38...
	 0  --most gap 0.009676814079284668
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  10%|▉         | 39/400 [06:12<1:45:58, 17.61s/it]03/05/2025 14:58:32 - INFO - __main__ -   测试:39

03/05/2025 15:01:38 - INFO - __main__ -   Success rate: 91.30%

03/05/2025 15:01:38 - INFO - __main__ -   Successful items count: 21

03/05/2025 15:01:38 - INFO - __main__ -   Total count: 23

03/05/2025 15:01:38 - INFO - __main__ -   Index: 39

Number of variable_names extracted:  9
Generating population39...
	 0  --most gap 0.09799852967262268
	 1  --most gap 0.13244500756263733
	 2  --most gap 0.17512774467468262
	 3  --most gap 0.20578551292419434
	 4  --most gap 0.20578551292419434
	 5  --most gap 0.20578551292419434
	 6  --most gap 0.20578551292419434
两轮结果未更新,Changing code structure...
	 7  --most gap 0.20769375562667847
	 8  --most gap 0.20769375562667847
	 9  --most gap 0.20978349447250366
	 10  --most gap 0.22765207290649414
	 11  --most gap 0.22765207290649414
	 12  --most gap 0.22765207290649414
	 13  --most gap 0.22765207290649414
两轮结果未更新,Changing code structure...
	 14  --most gap 0.22765207290649414
	 15  --most gap 0.22765207290649414
	 16  --most gap 0.22765207290649414
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  10%|█         | 40/400 [09:17<5:22:52, 53.81s/it]03/05/2025 15:01:38 - INFO - __main__ -   测试:40

03/05/2025 15:01:38 - INFO - __main__ -   Attack failed!

03/05/2025 15:01:38 - INFO - __main__ -   测试:41

03/05/2025 15:01:38 - INFO - __main__ -   Attack failed!

03/05/2025 15:01:38 - INFO - __main__ -   测试:42

03/05/2025 15:01:38 - INFO - __main__ -   Attack failed!

03/05/2025 15:01:38 - INFO - __main__ -   测试:43

03/05/2025 15:07:56 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 15:07:56 - INFO - __main__ -   Successful items count: 22

03/05/2025 15:07:56 - INFO - __main__ -   Total count: 24

03/05/2025 15:07:56 - INFO - __main__ -   Index: 43

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  30
Generating population43...
	 0  --most gap 0.01960855722427368
	 1  --most gap 0.04886358976364136
	 2  --most gap 0.04886358976364136
	 3  --most gap 0.04886358976364136
	 4  --most gap 0.056525617837905884
	 5  --most gap 0.058506131172180176
	 6  --most gap 0.060929059982299805
	 7  --most gap 0.06545597314834595
	 8  --most gap 0.06545597314834595
	 9  --most gap 0.0706142783164978
	 10  --most gap 0.07111260294914246
	 11  --most gap 0.08626866340637207
	 12  --most gap 0.08626866340637207
	 13  --most gap 0.08626866340637207
	 14  --most gap 0.11189731955528259
	 15  --most gap 0.11189731955528259
	 16  --most gap 0.11189731955528259
	 17  --most gap 0.11189731955528259
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  11%|█         | 44/400 [15:35<7:32:23, 76.25s/it]03/05/2025 15:07:56 - INFO - __main__ -   测试:44

03/05/2025 15:09:30 - INFO - __main__ -   Success rate: 92.00%

03/05/2025 15:09:30 - INFO - __main__ -   Successful items count: 23

03/05/2025 15:09:30 - INFO - __main__ -   Total count: 25

03/05/2025 15:09:30 - INFO - __main__ -   Index: 44

Number of variable_names extracted:  3
Generating population44...
	 0  --most gap 0.07499955594539642
	 1  --most gap 0.07499955594539642
	 2  --most gap 0.07499955594539642
两轮结果未更新,Changing code structure...
	 3  --most gap 0.07499955594539642
	 4  --most gap 0.07499955594539642
	 5  --most gap 0.07499955594539642
两轮结果未更新,Changing code structure...
	 6  --most gap 0.11271114647388458
	 7  --most gap 0.11271114647388458
	 8  --most gap 0.11271114647388458
	 9  --most gap 0.11271114647388458
两轮结果未更新,Changing code structure...
	 10  --most gap 0.11271114647388458
	 11  --most gap 0.11271114647388458
	 12  --most gap 0.11271114647388458
两轮结果未更新,Changing code structure...
	 13  --most gap 0.11271114647388458
	 14  --most gap 0.11271114647388458
	 15  --most gap 0.11271114647388458
两轮结果未更新,Changing code structure...
	 16  --most gap 0.11271114647388458
	 17  --most gap 0.11271114647388458
	 18  --most gap 0.11271114647388458
两轮结果未更新,Changing code structure...
	 19  --most gap 0.11271114647388458
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  11%|█▏        | 45/400 [17:10<7:48:54, 79.25s/it]03/05/2025 15:09:30 - INFO - __main__ -   测试:45

03/05/2025 15:09:41 - INFO - __main__ -   Success rate: 92.31%

03/05/2025 15:09:41 - INFO - __main__ -   Successful items count: 24

03/05/2025 15:09:41 - INFO - __main__ -   Total count: 26

03/05/2025 15:09:41 - INFO - __main__ -   Index: 45

Number of variable_names extracted:  19
Generating population45...
	 0  --most gap 0.09217292
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  12%|█▏        | 46/400 [17:20<6:30:13, 66.14s/it]03/05/2025 15:09:41 - INFO - __main__ -   测试:46

03/05/2025 15:09:41 - INFO - __main__ -   Attack failed!

03/05/2025 15:09:41 - INFO - __main__ -   测试:47

03/05/2025 15:09:53 - INFO - __main__ -   Success rate: 92.59%

03/05/2025 15:09:53 - INFO - __main__ -   Successful items count: 25

03/05/2025 15:09:53 - INFO - __main__ -   Total count: 27

03/05/2025 15:09:53 - INFO - __main__ -   Index: 47

The original code is misclassified.
Number of variable_names extracted:  2
Generating population47...
	 0  --most gap 0.03375375270843506
	 1  --most gap 0.03375375270843506
	 2  --most gap 0.03375375270843506
两轮结果未更新,Changing code structure...
	 3  --most gap 0.03375375270843506
	 4  --most gap 0.03375375270843506
	 5  --most gap 0.03375375270843506
两轮结果未更新,Changing code structure...
	 6  --most gap 0.03375375270843506
	 7  --most gap 0.03375375270843506
	 8  --most gap 0.03375375270843506
两轮结果未更新,Changing code structure...
	 9  --most gap 0.03375375270843506
	 10  --most gap 0.03375375270843506
	 11  --most gap 0.03375375270843506
两轮结果未更新,Changing code structure...
	 12  --most gap 0.03375375270843506
	 13  --most gap 0.03375375270843506
	 14  --most gap 0.03375375270843506
两轮结果未更新,Changing code structure...
	 15  --most gap 0.03375375270843506
	 16  --most gap 0.03375375270843506
	 17  --most gap 0.03375375270843506
两轮结果未更新,Changing code structure...
	 18  --most gap 0.03375375270843506
	 19  --most gap 0.03375375270843506
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  12%|█▏        | 48/400 [17:32<4:23:36, 44.93s/it]03/05/2025 15:09:53 - INFO - __main__ -   测试:48

03/05/2025 15:09:53 - INFO - __main__ -   Attack failed!

03/05/2025 15:09:53 - INFO - __main__ -   测试:49

03/05/2025 15:09:55 - INFO - __main__ -   Success rate: 92.86%

03/05/2025 15:09:55 - INFO - __main__ -   Successful items count: 26

03/05/2025 15:09:55 - INFO - __main__ -   Total count: 28

03/05/2025 15:09:55 - INFO - __main__ -   Index: 49

No variable_names in the code.
Number of variable_names extracted:  6
Generating population49...
init SUCCESS!
Processing examples:  12%|█▎        | 50/400 [17:35<2:57:02, 30.35s/it]03/05/2025 15:09:55 - INFO - __main__ -   测试:50

03/05/2025 15:12:40 - INFO - __main__ -   Success rate: 93.10%

03/05/2025 15:12:40 - INFO - __main__ -   Successful items count: 27

03/05/2025 15:12:40 - INFO - __main__ -   Total count: 29

03/05/2025 15:12:40 - INFO - __main__ -   Index: 50

Number of variable_names extracted:  4
Generating population50...
	 0  --most gap 0.08822399377822876
	 1  --most gap 0.08822399377822876
	 2  --most gap 0.08822399377822876
	 3  --most gap 0.10959655046463013
	 4  --most gap 0.10959655046463013
	 5  --most gap 0.10959655046463013
	 6  --most gap 0.10959655046463013
两轮结果未更新,Changing code structure...
	 7  --most gap 0.10959655046463013
	 8  --most gap 0.10959655046463013
	 9  --most gap 0.10959655046463013
两轮结果未更新,Changing code structure...
	 10  --most gap 0.13586869835853577
	 11  --most gap 0.13586869835853577
	 12  --most gap 0.13586869835853577
	 13  --most gap 0.13586869835853577
两轮结果未更新,Changing code structure...
	 14  --most gap 0.13586869835853577
	 15  --most gap 0.13586869835853577
	 16  --most gap 0.13586869835853577
两轮结果未更新,Changing code structure...
	 17  --most gap 0.13586869835853577
	 18  --most gap 0.13586869835853577
	 19  --most gap 0.13586869835853577
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  13%|█▎        | 51/400 [20:19<5:27:01, 56.22s/it]03/05/2025 15:12:40 - INFO - __main__ -   测试:51

03/05/2025 15:12:50 - INFO - __main__ -   Success rate: 93.33%

03/05/2025 15:12:50 - INFO - __main__ -   Successful items count: 28

03/05/2025 15:12:50 - INFO - __main__ -   Total count: 30

03/05/2025 15:12:50 - INFO - __main__ -   Index: 51

Number of variable_names extracted:  6
Generating population51...
init SUCCESS!
Processing examples:  13%|█▎        | 52/400 [20:30<4:29:08, 46.40s/it]03/05/2025 15:12:50 - INFO - __main__ -   测试:52

03/05/2025 15:12:55 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  13%|█▎        | 53/400 [20:35<3:31:51, 36.63s/it]03/05/2025 15:12:55 - INFO - __main__ -   测试:53

03/05/2025 15:13:01 - INFO - __main__ -   Success rate: 93.55%

03/05/2025 15:13:01 - INFO - __main__ -   Successful items count: 29

03/05/2025 15:13:01 - INFO - __main__ -   Total count: 31

03/05/2025 15:13:01 - INFO - __main__ -   Index: 53

Number of variable_names extracted:  9
Generating population53...
init SUCCESS!
Processing examples:  14%|█▎        | 54/400 [20:40<2:45:51, 28.76s/it]03/05/2025 15:13:01 - INFO - __main__ -   测试:54

03/05/2025 15:13:01 - INFO - __main__ -   Attack failed!

03/05/2025 15:13:01 - INFO - __main__ -   测试:55

03/05/2025 15:13:01 - INFO - __main__ -   Attack failed!

03/05/2025 15:13:01 - INFO - __main__ -   测试:56

03/05/2025 15:13:09 - INFO - __main__ -   Success rate: 93.75%

03/05/2025 15:13:09 - INFO - __main__ -   Successful items count: 30

03/05/2025 15:13:09 - INFO - __main__ -   Total count: 32

03/05/2025 15:13:09 - INFO - __main__ -   Index: 56

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  9
Generating population56...
init SUCCESS!
Processing examples:  14%|█▍        | 57/400 [20:48<1:26:38, 15.16s/it]03/05/2025 15:13:09 - INFO - __main__ -   测试:57

03/05/2025 15:13:12 - INFO - __main__ -   Success rate: 93.94%

03/05/2025 15:13:12 - INFO - __main__ -   Successful items count: 31

03/05/2025 15:13:12 - INFO - __main__ -   Total count: 33

03/05/2025 15:13:12 - INFO - __main__ -   Index: 57

Number of variable_names extracted:  10
Generating population57...
init SUCCESS!
Processing examples:  14%|█▍        | 58/400 [20:51<1:12:38, 12.74s/it]03/05/2025 15:13:12 - INFO - __main__ -   测试:58

03/05/2025 15:13:13 - INFO - __main__ -   Success rate: 94.12%

03/05/2025 15:13:13 - INFO - __main__ -   Successful items count: 32

03/05/2025 15:13:13 - INFO - __main__ -   Total count: 34

03/05/2025 15:13:13 - INFO - __main__ -   Index: 58

Number of variable_names extracted:  9
Generating population58...
init SUCCESS!
Processing examples:  15%|█▍        | 59/400 [20:52<57:57, 10.20s/it]  03/05/2025 15:13:13 - INFO - __main__ -   测试:59

03/05/2025 15:20:24 - INFO - __main__ -   Success rate: 94.29%

03/05/2025 15:20:24 - INFO - __main__ -   Successful items count: 33

03/05/2025 15:20:24 - INFO - __main__ -   Total count: 35

03/05/2025 15:20:24 - INFO - __main__ -   Index: 59

Number of variable_names extracted:  10
Generating population59...
	 0  --most gap 0.004598349332809448
	 1  --most gap 0.02181413769721985
	 2  --most gap 0.02181413769721985
	 3  --most gap 0.028955578804016113
	 4  --most gap 0.028955578804016113
	 5  --most gap 0.028955578804016113
	 6  --most gap 0.028955578804016113
两轮结果未更新,Changing code structure...
	 7  --most gap 0.028955578804016113
	 8  --most gap 0.028955578804016113
	 9  --most gap 0.028955578804016113
两轮结果未更新,Changing code structure...
	 10  --most gap 0.028955578804016113
	 11  --most gap 0.028955578804016113
	 12  --most gap 0.028955578804016113
两轮结果未更新,Changing code structure...
	 13  --most gap 0.028955578804016113
	 14  --most gap 0.028955578804016113
	 15  --most gap 0.028955578804016113
两轮结果未更新,Changing code structure...
	 16  --most gap 0.028955578804016113
	 17  --most gap 0.028955578804016113
	 18  --most gap 0.028955578804016113
两轮结果未更新,Changing code structure...
	 19  --most gap 0.028955578804016113
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  15%|█▌        | 60/400 [28:04<10:30:05, 111.19s/it]03/05/2025 15:20:24 - INFO - __main__ -   测试:60

03/05/2025 15:20:24 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  15%|█▌        | 61/400 [28:04<7:48:17, 82.88s/it]  03/05/2025 15:20:24 - INFO - __main__ -   测试:61

03/05/2025 15:20:25 - INFO - __main__ -   Success rate: 94.44%

03/05/2025 15:20:25 - INFO - __main__ -   Successful items count: 34

03/05/2025 15:20:25 - INFO - __main__ -   Total count: 36

03/05/2025 15:20:25 - INFO - __main__ -   Index: 61

Number of variable_names extracted:  5
Generating population61...
init SUCCESS!
Processing examples:  16%|█▌        | 62/400 [28:04<5:42:48, 60.85s/it]03/05/2025 15:20:25 - INFO - __main__ -   测试:62

03/05/2025 15:20:56 - INFO - __main__ -   Success rate: 94.59%

03/05/2025 15:20:56 - INFO - __main__ -   Successful items count: 35

03/05/2025 15:20:56 - INFO - __main__ -   Total count: 37

03/05/2025 15:20:56 - INFO - __main__ -   Index: 62

Number of variable_names extracted:  14
Generating population62...
	 0  --most gap 0.023124009370803833
	 1  --most gap 0.062078773975372314
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▌        | 63/400 [28:36<4:56:02, 52.71s/it]03/05/2025 15:20:56 - INFO - __main__ -   测试:63

03/05/2025 15:20:56 - INFO - __main__ -   Attack failed!

03/05/2025 15:20:56 - INFO - __main__ -   测试:64

03/05/2025 15:21:18 - INFO - __main__ -   Success rate: 94.74%

03/05/2025 15:21:18 - INFO - __main__ -   Successful items count: 36

03/05/2025 15:21:18 - INFO - __main__ -   Total count: 38

03/05/2025 15:21:18 - INFO - __main__ -   Index: 64

The original code is misclassified.
Number of variable_names extracted:  1
Generating population64...
	 0  --most gap 0.060477555
	 1  --most gap 0.060477555
	 2  --most gap 0.060477555
两轮结果未更新,Changing code structure...
	 3  --most gap 0.060477555
	 4  --most gap 0.060477555
	 5  --most gap 0.060477555
两轮结果未更新,Changing code structure...
	 6  --most gap 0.060477555
	 7  --most gap 0.060477555
	 8  --most gap 0.060477555
两轮结果未更新,Changing code structure...
	 9  --most gap 0.060477555
	 10  --most gap 0.060477555
	 11  --most gap 0.060477555
两轮结果未更新,Changing code structure...
	 12  --most gap 0.060477555
	 13  --most gap 0.060477555
	 14  --most gap 0.060477555
两轮结果未更新,Changing code structure...
	 15  --most gap 0.060477555
	 16  --most gap 0.060477555
	 17  --most gap 0.060477555
两轮结果未更新,Changing code structure...
	 18  --most gap 0.060477555
	 19  --most gap 0.060477555
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  16%|█▋        | 65/400 [28:57<3:10:48, 34.17s/it]03/05/2025 15:21:18 - INFO - __main__ -   测试:65

03/05/2025 15:21:19 - INFO - __main__ -   Success rate: 94.87%

03/05/2025 15:21:19 - INFO - __main__ -   Successful items count: 37

03/05/2025 15:21:19 - INFO - __main__ -   Total count: 39

03/05/2025 15:21:19 - INFO - __main__ -   Index: 65

Number of variable_names extracted:  7
Generating population65...
	 0  --most gap 0.012895644
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▋        | 66/400 [28:59<2:26:49, 26.38s/it]03/05/2025 15:21:19 - INFO - __main__ -   测试:66

03/05/2025 15:21:28 - INFO - __main__ -   Success rate: 95.00%

03/05/2025 15:21:28 - INFO - __main__ -   Successful items count: 38

03/05/2025 15:21:28 - INFO - __main__ -   Total count: 40

03/05/2025 15:21:28 - INFO - __main__ -   Index: 66

Number of variable_names extracted:  10
Generating population66...
init SUCCESS!
Processing examples:  17%|█▋        | 67/400 [29:07<2:01:24, 21.88s/it]03/05/2025 15:21:28 - INFO - __main__ -   测试:67

03/05/2025 15:21:28 - INFO - __main__ -   Success rate: 95.12%

03/05/2025 15:21:28 - INFO - __main__ -   Successful items count: 39

03/05/2025 15:21:28 - INFO - __main__ -   Total count: 41

03/05/2025 15:21:28 - INFO - __main__ -   Index: 67

Number of variable_names extracted:  3
Generating population67...
init SUCCESS!
Processing examples:  17%|█▋        | 68/400 [29:08<1:28:59, 16.08s/it]03/05/2025 15:21:28 - INFO - __main__ -   测试:68

03/05/2025 15:21:28 - INFO - __main__ -   Attack failed!

03/05/2025 15:21:28 - INFO - __main__ -   测试:69

03/05/2025 15:27:25 - INFO - __main__ -   Success rate: 95.24%

03/05/2025 15:27:25 - INFO - __main__ -   Successful items count: 40

03/05/2025 15:27:25 - INFO - __main__ -   Total count: 42

03/05/2025 15:27:25 - INFO - __main__ -   Index: 69

The original code is misclassified.
Number of variable_names extracted:  5
Generating population69...
	 0  --most gap 0.0028797984
	 1  --most gap 0.0047772527
	 2  --most gap 0.006055355
	 3  --most gap 0.01215452
	 4  --most gap 0.01215452
	 5  --most gap 0.01215452
	 6  --most gap 0.01215452
两轮结果未更新,Changing code structure...
	 7  --most gap 0.018153846
	 8  --most gap 0.018153846
	 9  --most gap 0.018153846
	 10  --most gap 0.018153846
两轮结果未更新,Changing code structure...
	 11  --most gap 0.018153846
	 12  --most gap 0.018153846
	 13  --most gap 0.018153846
两轮结果未更新,Changing code structure...
	 14  --most gap 0.018153846
	 15  --most gap 0.018153846
	 16  --most gap 0.018153846
两轮结果未更新,Changing code structure...
	 17  --most gap 0.018153846
	 18  --most gap 0.018153846
	 19  --most gap 0.018153846
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  18%|█▊        | 70/400 [35:05<7:55:17, 86.42s/it]03/05/2025 15:27:25 - INFO - __main__ -   测试:70

03/05/2025 15:27:25 - INFO - __main__ -   Attack failed!

03/05/2025 15:27:25 - INFO - __main__ -   测试:71

03/05/2025 15:27:25 - INFO - __main__ -   Attack failed!

03/05/2025 15:27:25 - INFO - __main__ -   测试:72

03/05/2025 15:30:59 - INFO - __main__ -   Success rate: 95.35%

03/05/2025 15:30:59 - INFO - __main__ -   Successful items count: 41

03/05/2025 15:30:59 - INFO - __main__ -   Total count: 43

03/05/2025 15:30:59 - INFO - __main__ -   Index: 72

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  7
Generating population72...
	 0  --most gap 0.14191843569278717
	 1  --most gap 0.1445612758398056
	 2  --most gap 0.15744231641292572
	 3  --most gap 0.1995478719472885
	 4  --most gap 0.1995478719472885
	 5  --most gap 0.1995478719472885
	 6  --most gap 0.1995478719472885
两轮结果未更新,Changing code structure...
	 7  --most gap 0.2994321137666702
	 8  --most gap 0.2994321137666702
	 9  --most gap 0.2994321137666702
	 10  --most gap 0.2994321137666702
两轮结果未更新,Changing code structure...
	 11  --most gap 0.2994321137666702
	 12  --most gap 0.2994321137666702
	 13  --most gap 0.2994321137666702
两轮结果未更新,Changing code structure...
	 14  --most gap 0.2994321137666702
	 15  --most gap 0.2994321137666702
	 16  --most gap 0.2994321137666702
两轮结果未更新,Changing code structure...
	 17  --most gap 0.2994321137666702
	 18  --most gap 0.2994321137666702
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  18%|█▊        | 73/400 [38:39<7:11:21, 79.15s/it]03/05/2025 15:30:59 - INFO - __main__ -   测试:73

03/05/2025 15:31:47 - INFO - __main__ -   Success rate: 95.45%

03/05/2025 15:31:47 - INFO - __main__ -   Successful items count: 42

03/05/2025 15:31:47 - INFO - __main__ -   Total count: 44

03/05/2025 15:31:47 - INFO - __main__ -   Index: 73

Number of variable_names extracted:  3
Generating population73...
	 0  --most gap 0.02960231900215149
	 1  --most gap 0.02960231900215149
	 2  --most gap 0.02960231900215149
两轮结果未更新,Changing code structure...
	 3  --most gap 0.02960231900215149
	 4  --most gap 0.02960231900215149
	 5  --most gap 0.02960231900215149
两轮结果未更新,Changing code structure...
	 6  --most gap 0.02960231900215149
	 7  --most gap 0.02960231900215149
	 8  --most gap 0.02960231900215149
两轮结果未更新,Changing code structure...
	 9  --most gap 0.02960231900215149
	 10  --most gap 0.03870081901550293
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  18%|█▊        | 74/400 [39:27<6:38:21, 73.32s/it]03/05/2025 15:31:47 - INFO - __main__ -   测试:74

03/05/2025 15:31:47 - INFO - __main__ -   Attack failed!

03/05/2025 15:31:47 - INFO - __main__ -   测试:75

03/05/2025 15:31:48 - INFO - __main__ -   Success rate: 95.56%

03/05/2025 15:31:48 - INFO - __main__ -   Successful items count: 43

03/05/2025 15:31:48 - INFO - __main__ -   Total count: 45

03/05/2025 15:31:48 - INFO - __main__ -   Index: 75

The original code is misclassified.
Number of variable_names extracted:  5
Generating population75...
	 0  --most gap 0.15501863
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  19%|█▉        | 76/400 [39:28<4:19:22, 48.03s/it]03/05/2025 15:31:48 - INFO - __main__ -   测试:76

03/05/2025 15:31:48 - INFO - __main__ -   Attack failed!

03/05/2025 15:31:48 - INFO - __main__ -   测试:77

03/05/2025 15:31:48 - INFO - __main__ -   Attack failed!

03/05/2025 15:31:48 - INFO - __main__ -   测试:78

03/05/2025 15:32:13 - INFO - __main__ -   Success rate: 95.65%

03/05/2025 15:32:13 - INFO - __main__ -   Successful items count: 44

03/05/2025 15:32:13 - INFO - __main__ -   Total count: 46

03/05/2025 15:32:13 - INFO - __main__ -   Index: 78

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population78...
	 0  --most gap 0.046469852328300476
	 1  --most gap 0.21831612288951874
	 2  --most gap 0.21831612288951874
	 3  --most gap 0.21831612288951874
	 4  --most gap 0.22292454540729523
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|█▉        | 79/400 [39:53<2:46:13, 31.07s/it]03/05/2025 15:32:13 - INFO - __main__ -   测试:79

03/05/2025 15:32:27 - INFO - __main__ -   Success rate: 95.74%

03/05/2025 15:32:27 - INFO - __main__ -   Successful items count: 45

03/05/2025 15:32:27 - INFO - __main__ -   Total count: 47

03/05/2025 15:32:27 - INFO - __main__ -   Index: 79

Number of variable_names extracted:  4
Generating population79...
	 0  --most gap 0.051793426275253296
	 1  --most gap 0.051793426275253296
	 2  --most gap 0.051793426275253296
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|██        | 80/400 [40:07<2:30:23, 28.20s/it]03/05/2025 15:32:27 - INFO - __main__ -   测试:80

03/05/2025 15:32:45 - INFO - __main__ -   Success rate: 95.83%

03/05/2025 15:32:45 - INFO - __main__ -   Successful items count: 46

03/05/2025 15:32:45 - INFO - __main__ -   Total count: 48

03/05/2025 15:32:45 - INFO - __main__ -   Index: 80

Number of variable_names extracted:  8
Generating population80...
	 0  --most gap 0.018359750509262085
	 1  --most gap 0.03443989157676697
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|██        | 81/400 [40:25<2:19:28, 26.23s/it]03/05/2025 15:32:45 - INFO - __main__ -   测试:81

03/05/2025 15:32:53 - INFO - __main__ -   Success rate: 95.92%

03/05/2025 15:32:53 - INFO - __main__ -   Successful items count: 47

03/05/2025 15:32:53 - INFO - __main__ -   Total count: 49

03/05/2025 15:32:53 - INFO - __main__ -   Index: 81

Number of variable_names extracted:  7
Generating population81...
	 0  --most gap 0.0214921236038208
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|██        | 82/400 [40:33<1:58:05, 22.28s/it]03/05/2025 15:32:53 - INFO - __main__ -   测试:82

03/05/2025 15:35:13 - INFO - __main__ -   Success rate: 96.00%

03/05/2025 15:35:13 - INFO - __main__ -   Successful items count: 48

03/05/2025 15:35:13 - INFO - __main__ -   Total count: 50

03/05/2025 15:35:13 - INFO - __main__ -   Index: 82

Number of variable_names extracted:  4
Generating population82...
	 0  --most gap 0.01603943109512329
	 1  --most gap 0.01603981852531433
	 2  --most gap 0.07383018732070923
	 3  --most gap 0.07383018732070923
	 4  --most gap 0.07383018732070923
	 5  --most gap 0.09639647603034973
	 6  --most gap 0.09639647603034973
	 7  --most gap 0.09639647603034973
	 8  --most gap 0.11431455612182617
	 9  --most gap 0.11431455612182617
	 10  --most gap 0.11431455612182617
	 11  --most gap 0.11431455612182617
两轮结果未更新,Changing code structure...
	 12  --most gap 0.11431455612182617
	 13  --most gap 0.11431455612182617
	 14  --most gap 0.11431455612182617
两轮结果未更新,Changing code structure...
	 15  --most gap 0.11431455612182617
	 16  --most gap 0.11431455612182617
	 17  --most gap 0.11431455612182617
两轮结果未更新,Changing code structure...
	 18  --most gap 0.11431455612182617
	 19  --most gap 0.11431455612182617
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  21%|██        | 83/400 [42:52<4:24:25, 50.05s/it]03/05/2025 15:35:13 - INFO - __main__ -   测试:83

03/05/2025 15:35:15 - INFO - __main__ -   Success rate: 96.08%

03/05/2025 15:35:15 - INFO - __main__ -   Successful items count: 49

03/05/2025 15:35:15 - INFO - __main__ -   Total count: 51

03/05/2025 15:35:15 - INFO - __main__ -   Index: 83

Number of variable_names extracted:  5
Generating population83...
init SUCCESS!
Processing examples:  21%|██        | 84/400 [42:55<3:19:59, 37.97s/it]03/05/2025 15:35:15 - INFO - __main__ -   测试:84

03/05/2025 15:35:15 - INFO - __main__ -   Attack failed!

03/05/2025 15:35:15 - INFO - __main__ -   测试:85

03/05/2025 15:35:16 - INFO - __main__ -   Success rate: 96.15%

03/05/2025 15:35:16 - INFO - __main__ -   Successful items count: 50

03/05/2025 15:35:16 - INFO - __main__ -   Total count: 52

03/05/2025 15:35:16 - INFO - __main__ -   Index: 85

The original code is misclassified.
Number of variable_names extracted:  6
Generating population85...
init SUCCESS!
Processing examples:  22%|██▏       | 86/400 [42:55<1:56:04, 22.18s/it]03/05/2025 15:35:16 - INFO - __main__ -   测试:86

03/05/2025 15:35:16 - INFO - __main__ -   Attack failed!

03/05/2025 15:35:16 - INFO - __main__ -   测试:87

03/05/2025 15:35:16 - INFO - __main__ -   Success rate: 96.23%

03/05/2025 15:35:16 - INFO - __main__ -   Successful items count: 51

03/05/2025 15:35:16 - INFO - __main__ -   Total count: 53

03/05/2025 15:35:16 - INFO - __main__ -   Index: 87

The original code is misclassified.
Number of variable_names extracted:  5
Generating population87...
evaluate SUCCESS!
Processing examples:  22%|██▏       | 88/400 [42:56<1:12:41, 13.98s/it]03/05/2025 15:35:16 - INFO - __main__ -   测试:88

03/05/2025 15:35:16 - INFO - __main__ -   Attack failed!

03/05/2025 15:35:16 - INFO - __main__ -   测试:89

03/05/2025 15:35:16 - INFO - __main__ -   Attack failed!

03/05/2025 15:35:16 - INFO - __main__ -   测试:90

03/05/2025 15:35:16 - INFO - __main__ -   Attack failed!

03/05/2025 15:35:16 - INFO - __main__ -   测试:91

03/05/2025 15:45:11 - INFO - __main__ -   Success rate: 96.30%

03/05/2025 15:45:11 - INFO - __main__ -   Successful items count: 52

03/05/2025 15:45:11 - INFO - __main__ -   Total count: 54

03/05/2025 15:45:11 - INFO - __main__ -   Index: 91

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  18
Generating population91...
	 0  --most gap 0.02442497
	 1  --most gap 0.02442497
	 2  --most gap 0.02442497
两轮结果未更新,Changing code structure...
	 3  --most gap 0.47286594
	 4  --most gap 0.47286594
	 5  --most gap 0.47286594
	 6  --most gap 0.47286594
两轮结果未更新,Changing code structure...
	 7  --most gap 0.47286594
	 8  --most gap 0.47286594
	 9  --most gap 0.47286594
两轮结果未更新,Changing code structure...
	 10  --most gap 0.47286594
	 11  --most gap 0.47286594
	 12  --most gap 0.47286594
两轮结果未更新,Changing code structure...
	 13  --most gap 0.47286594
	 14  --most gap 0.47286594
	 15  --most gap 0.47286594
两轮结果未更新,Changing code structure...
	 16  --most gap 0.47286594
	 17  --most gap 0.47286594
	 18  --most gap 0.47286594
两轮结果未更新,Changing code structure...
	 19  --most gap 0.47286594
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  23%|██▎       | 92/400 [52:51<7:09:19, 83.64s/it]03/05/2025 15:45:11 - INFO - __main__ -   测试:92

03/05/2025 15:45:26 - INFO - __main__ -   Success rate: 96.36%

03/05/2025 15:45:26 - INFO - __main__ -   Successful items count: 53

03/05/2025 15:45:26 - INFO - __main__ -   Total count: 55

03/05/2025 15:45:26 - INFO - __main__ -   Index: 92

Number of variable_names extracted:  1
Generating population92...
	 0  --most gap 0.010383857414126396
	 1  --most gap 0.010383857414126396
	 2  --most gap 0.010383857414126396
两轮结果未更新,Changing code structure...
	 3  --most gap 0.010383857414126396
	 4  --most gap 0.010383857414126396
	 5  --most gap 0.010383857414126396
两轮结果未更新,Changing code structure...
	 6  --most gap 0.010383857414126396
	 7  --most gap 0.010383857414126396
	 8  --most gap 0.010383857414126396
两轮结果未更新,Changing code structure...
	 9  --most gap 0.010383857414126396
	 10  --most gap 0.010383857414126396
	 11  --most gap 0.010383857414126396
两轮结果未更新,Changing code structure...
	 12  --most gap 0.010383857414126396
	 13  --most gap 0.010383857414126396
	 14  --most gap 0.010383857414126396
两轮结果未更新,Changing code structure...
	 15  --most gap 0.010383857414126396
	 16  --most gap 0.010383857414126396
	 17  --most gap 0.010383857414126396
两轮结果未更新,Changing code structure...
	 18  --most gap 0.010383857414126396
	 19  --most gap 0.010383857414126396
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  23%|██▎       | 93/400 [53:05<6:12:57, 72.89s/it]03/05/2025 15:45:26 - INFO - __main__ -   测试:93

03/05/2025 15:45:26 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
03/05/2025 15:45:26 - INFO - __main__ -   Attack failed!

03/05/2025 15:45:26 - INFO - __main__ -   测试:94

03/05/2025 15:45:26 - INFO - __main__ -   Attack failed!

03/05/2025 15:45:26 - INFO - __main__ -   测试:95

03/05/2025 15:45:26 - INFO - __main__ -   Attack failed!

03/05/2025 15:45:26 - INFO - __main__ -   测试:96

03/05/2025 15:45:26 - INFO - __main__ -   Attack failed!

03/05/2025 15:45:26 - INFO - __main__ -   测试:97

03/05/2025 15:45:26 - INFO - __main__ -   Attack failed!

03/05/2025 15:45:26 - INFO - __main__ -   测试:98

03/05/2025 15:45:26 - INFO - __main__ -   Attack failed!

03/05/2025 15:45:26 - INFO - __main__ -   测试:99

03/05/2025 15:45:28 - INFO - __main__ -   Success rate: 96.43%

03/05/2025 15:45:28 - INFO - __main__ -   Successful items count: 54

03/05/2025 15:45:28 - INFO - __main__ -   Total count: 56

03/05/2025 15:45:28 - INFO - __main__ -   Index: 99

The original code is misclassified.
The original code is misclassified.
No variable_names in the code.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  12
Generating population99...
	 0  --most gap 0.04329022765159607
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  25%|██▌       | 100/400 [53:08<2:23:27, 28.69s/it]03/05/2025 15:45:28 - INFO - __main__ -   测试:100

03/05/2025 15:45:28 - INFO - __main__ -   Success rate: 96.49%

03/05/2025 15:45:28 - INFO - __main__ -   Successful items count: 55

03/05/2025 15:45:28 - INFO - __main__ -   Total count: 57

03/05/2025 15:45:28 - INFO - __main__ -   Index: 100

Number of variable_names extracted:  4
Generating population100...
init SUCCESS!
Processing examples:  25%|██▌       | 101/400 [53:08<2:07:15, 25.54s/it]03/05/2025 15:45:28 - INFO - __main__ -   测试:101

03/05/2025 15:46:44 - INFO - __main__ -   Success rate: 96.55%

03/05/2025 15:46:44 - INFO - __main__ -   Successful items count: 56

03/05/2025 15:46:44 - INFO - __main__ -   Total count: 58

03/05/2025 15:46:44 - INFO - __main__ -   Index: 101

Number of variable_names extracted:  3
Generating population101...
	 0  --most gap 0.040739912539720535
	 1  --most gap 0.040739912539720535
	 2  --most gap 0.040739912539720535
	 3  --most gap 0.07032879814505577
	 4  --most gap 0.0897129587829113
	 5  --most gap 0.0897129587829113
	 6  --most gap 0.0897129587829113
	 7  --most gap 0.0897129587829113
两轮结果未更新,Changing code structure...
	 8  --most gap 0.0897129587829113
	 9  --most gap 0.0897129587829113
	 10  --most gap 0.0897129587829113
两轮结果未更新,Changing code structure...
	 11  --most gap 0.0897129587829113
	 12  --most gap 0.0897129587829113
	 13  --most gap 0.12459182366728783
	 14  --most gap 0.12459182366728783
	 15  --most gap 0.12459182366728783
	 16  --most gap 0.12459182366728783
两轮结果未更新,Changing code structure...
	 17  --most gap 0.12459182366728783
	 18  --most gap 0.12459182366728783
	 19  --most gap 0.12459182366728783
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  26%|██▌       | 102/400 [54:24<2:40:54, 32.40s/it]03/05/2025 15:46:44 - INFO - __main__ -   测试:102

03/05/2025 15:46:44 - INFO - __main__ -   Attack failed!

03/05/2025 15:46:44 - INFO - __main__ -   测试:103

03/05/2025 15:46:44 - INFO - __main__ -   Attack failed!

03/05/2025 15:46:44 - INFO - __main__ -   测试:104

03/05/2025 15:46:45 - INFO - __main__ -   Success rate: 96.61%

03/05/2025 15:46:45 - INFO - __main__ -   Successful items count: 57

03/05/2025 15:46:45 - INFO - __main__ -   Total count: 59

03/05/2025 15:46:45 - INFO - __main__ -   Index: 104

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  7
Generating population104...
init SUCCESS!
Processing examples:  26%|██▋       | 105/400 [54:24<1:40:43, 20.49s/it]03/05/2025 15:46:45 - INFO - __main__ -   测试:105

03/05/2025 15:49:04 - INFO - __main__ -   Success rate: 96.67%

03/05/2025 15:49:04 - INFO - __main__ -   Successful items count: 58

03/05/2025 15:49:04 - INFO - __main__ -   Total count: 60

03/05/2025 15:49:04 - INFO - __main__ -   Index: 105

Number of variable_names extracted:  5
Generating population105...
	 0  --most gap 0.05046650767326355
	 1  --most gap 0.1581595242023468
	 2  --most gap 0.1581595242023468
	 3  --most gap 0.21137398481369019
	 4  --most gap 0.2304230034351349
	 5  --most gap 0.2304230034351349
	 6  --most gap 0.2304230034351349
	 7  --most gap 0.2304230034351349
两轮结果未更新,Changing code structure...
	 8  --most gap 0.2304230034351349
	 9  --most gap 0.2304230034351349
	 10  --most gap 0.2304230034351349
两轮结果未更新,Changing code structure...
	 11  --most gap 0.2304230034351349
	 12  --most gap 0.2304230034351349
	 13  --most gap 0.2304230034351349
两轮结果未更新,Changing code structure...
	 14  --most gap 0.2304230034351349
	 15  --most gap 0.2304230034351349
	 16  --most gap 0.2304230034351349
两轮结果未更新,Changing code structure...
	 17  --most gap 0.2304230034351349
	 18  --most gap 0.2304230034351349
	 19  --most gap 0.2304230034351349
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  26%|██▋       | 106/400 [56:44<3:07:47, 38.33s/it]03/05/2025 15:49:04 - INFO - __main__ -   测试:106

03/05/2025 15:49:04 - INFO - __main__ -   Attack failed!

03/05/2025 15:49:04 - INFO - __main__ -   测试:107

03/05/2025 15:52:57 - INFO - __main__ -   Success rate: 96.72%

03/05/2025 15:52:57 - INFO - __main__ -   Successful items count: 59

03/05/2025 15:52:57 - INFO - __main__ -   Total count: 61

03/05/2025 15:52:57 - INFO - __main__ -   Index: 107

The original code is misclassified.
Number of variable_names extracted:  12
Generating population107...
	 0  --most gap 0.07634848
	 1  --most gap 0.07634848
	 2  --most gap 0.08011818
	 3  --most gap 0.08047545
	 4  --most gap 0.08047545
	 5  --most gap 0.08047545
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  27%|██▋       | 108/400 [1:00:37<5:00:18, 61.71s/it]03/05/2025 15:52:57 - INFO - __main__ -   测试:108

03/05/2025 15:52:57 - INFO - __main__ -   Attack failed!

03/05/2025 15:52:57 - INFO - __main__ -   测试:109

03/05/2025 15:52:58 - INFO - __main__ -   Success rate: 96.77%

03/05/2025 15:52:58 - INFO - __main__ -   Successful items count: 60

03/05/2025 15:52:58 - INFO - __main__ -   Total count: 62

03/05/2025 15:52:58 - INFO - __main__ -   Index: 109

The original code is misclassified.
Number of variable_names extracted:  7
Generating population109...
init SUCCESS!
Processing examples:  28%|██▊       | 110/400 [1:00:38<3:29:37, 43.37s/it]03/05/2025 15:52:58 - INFO - __main__ -   测试:110

03/05/2025 15:57:03 - INFO - __main__ -   Success rate: 96.83%

03/05/2025 15:57:03 - INFO - __main__ -   Successful items count: 61

03/05/2025 15:57:03 - INFO - __main__ -   Total count: 63

03/05/2025 15:57:03 - INFO - __main__ -   Index: 110

Number of variable_names extracted:  6
Generating population110...
	 0  --most gap 0.03131457790732384
	 1  --most gap 0.0801016055047512
	 2  --most gap 0.0801016055047512
	 3  --most gap 0.09330615028738976
	 4  --most gap 0.09330615028738976
	 5  --most gap 0.09330615028738976
	 6  --most gap 0.09330615028738976
两轮结果未更新,Changing code structure...
	 7  --most gap 0.1836296133697033
	 8  --most gap 0.1836296133697033
	 9  --most gap 0.1836296133697033
	 10  --most gap 0.1836296133697033
两轮结果未更新,Changing code structure...
	 11  --most gap 0.1836296133697033
	 12  --most gap 0.1836296133697033
	 13  --most gap 0.20713075622916222
	 14  --most gap 0.20713075622916222
	 15  --most gap 0.20713075622916222
	 16  --most gap 0.20713075622916222
两轮结果未更新,Changing code structure...
	 17  --most gap 0.20713075622916222
	 18  --most gap 0.22132980450987816
	 19  --most gap 0.22132980450987816
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  28%|██▊       | 111/400 [1:04:42<6:19:27, 78.78s/it]03/05/2025 15:57:03 - INFO - __main__ -   测试:111

03/05/2025 15:57:03 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
03/05/2025 15:57:03 - INFO - __main__ -   Attack failed!

03/05/2025 15:57:03 - INFO - __main__ -   测试:112

03/05/2025 15:57:03 - INFO - __main__ -   Attack failed!

03/05/2025 15:57:03 - INFO - __main__ -   测试:113

03/05/2025 15:57:33 - INFO - __main__ -   Success rate: 96.88%

03/05/2025 15:57:33 - INFO - __main__ -   Successful items count: 62

03/05/2025 15:57:33 - INFO - __main__ -   Total count: 64

03/05/2025 15:57:33 - INFO - __main__ -   Index: 113

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  7
Generating population113...
	 0  --most gap 0.004430145025253296
	 1  --most gap 0.08283466100692749
	 2  --most gap 0.09283742308616638
	 3  --most gap 0.09283742308616638
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 114/400 [1:05:13<3:54:50, 49.27s/it]03/05/2025 15:57:33 - INFO - __main__ -   测试:114

03/05/2025 15:57:33 - INFO - __main__ -   Attack failed!

03/05/2025 15:57:33 - INFO - __main__ -   测试:115

03/05/2025 15:57:59 - INFO - __main__ -   Success rate: 96.92%

03/05/2025 15:57:59 - INFO - __main__ -   Successful items count: 63

03/05/2025 15:57:59 - INFO - __main__ -   Total count: 65

03/05/2025 15:57:59 - INFO - __main__ -   Index: 115

The original code is misclassified.
Number of variable_names extracted:  1
Generating population115...
	 0  --most gap 1.4156103134155273e-07
	 1  --most gap 0.16111917793750763
	 2  --most gap 0.16111917793750763
	 3  --most gap 0.16111917793750763
	 4  --most gap 0.16111917793750763
两轮结果未更新,Changing code structure...
	 5  --most gap 0.16111917793750763
	 6  --most gap 0.16111917793750763
	 7  --most gap 0.16111917793750763
两轮结果未更新,Changing code structure...
	 8  --most gap 0.16111917793750763
	 9  --most gap 0.16111917793750763
	 10  --most gap 0.16111917793750763
两轮结果未更新,Changing code structure...
	 11  --most gap 0.16111917793750763
	 12  --most gap 0.16111917793750763
	 13  --most gap 0.16111917793750763
两轮结果未更新,Changing code structure...
	 14  --most gap 0.16111917793750763
	 15  --most gap 0.16111917793750763
	 16  --most gap 0.16111917793750763
两轮结果未更新,Changing code structure...
	 17  --most gap 0.16111917793750763
	 18  --most gap 0.16111917793750763
	 19  --most gap 0.16111917793750763
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  29%|██▉       | 116/400 [1:05:39<3:03:24, 38.75s/it]03/05/2025 15:57:59 - INFO - __main__ -   测试:116

03/05/2025 15:59:19 - INFO - __main__ -   Success rate: 96.97%

03/05/2025 15:59:19 - INFO - __main__ -   Successful items count: 64

03/05/2025 15:59:19 - INFO - __main__ -   Total count: 66

03/05/2025 15:59:19 - INFO - __main__ -   Index: 116

Number of variable_names extracted:  3
Generating population116...
	 0  --most gap 0.082436204
	 1  --most gap 0.082436204
	 2  --most gap 0.082436204
两轮结果未更新,Changing code structure...
	 3  --most gap 0.082436204
	 4  --most gap 0.082436204
	 5  --most gap 0.082436204
两轮结果未更新,Changing code structure...
	 6  --most gap 0.082436204
	 7  --most gap 0.082436204
	 8  --most gap 0.082436204
两轮结果未更新,Changing code structure...
	 9  --most gap 0.082436204
	 10  --most gap 0.082436204
	 11  --most gap 0.082436204
两轮结果未更新,Changing code structure...
	 12  --most gap 0.082436204
	 13  --most gap 0.082436204
	 14  --most gap 0.082436204
两轮结果未更新,Changing code structure...
	 15  --most gap 0.082436204
	 16  --most gap 0.082436204
	 17  --most gap 0.082436204
两轮结果未更新,Changing code structure...
	 18  --most gap 0.082436204
	 19  --most gap 0.082436204
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  29%|██▉       | 117/400 [1:06:59<3:36:14, 45.85s/it]03/05/2025 15:59:19 - INFO - __main__ -   测试:117

03/05/2025 15:59:33 - INFO - __main__ -   Success rate: 97.01%

03/05/2025 15:59:33 - INFO - __main__ -   Successful items count: 65

03/05/2025 15:59:33 - INFO - __main__ -   Total count: 67

03/05/2025 15:59:33 - INFO - __main__ -   Index: 117

Number of variable_names extracted:  1
Generating population117...
	 0  --most gap 0.019564211
	 1  --most gap 0.019564211
	 2  --most gap 0.019564211
两轮结果未更新,Changing code structure...
	 3  --most gap 0.019564211
	 4  --most gap 0.019564211
	 5  --most gap 0.019564211
两轮结果未更新,Changing code structure...
	 6  --most gap 0.019564211
	 7  --most gap 0.019564211
	 8  --most gap 0.019564211
两轮结果未更新,Changing code structure...
	 9  --most gap 0.019564211
	 10  --most gap 0.019564211
	 11  --most gap 0.019564211
两轮结果未更新,Changing code structure...
	 12  --most gap 0.019564211
	 13  --most gap 0.019564211
	 14  --most gap 0.019564211
两轮结果未更新,Changing code structure...
	 15  --most gap 0.019564211
	 16  --most gap 0.019564211
	 17  --most gap 0.019564211
两轮结果未更新,Changing code structure...
	 18  --most gap 0.019564211
	 19  --most gap 0.019564211
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  30%|██▉       | 118/400 [1:07:13<3:05:45, 39.52s/it]03/05/2025 15:59:33 - INFO - __main__ -   测试:118

03/05/2025 16:05:59 - INFO - __main__ -   Success rate: 95.59%

03/05/2025 16:05:59 - INFO - __main__ -   Successful items count: 65

03/05/2025 16:05:59 - INFO - __main__ -   Total count: 68

03/05/2025 16:05:59 - INFO - __main__ -   Index: 118

Number of variable_names extracted:  5
Generating population118...
	 0  --most gap 0
	 1  --most gap 0
	 2  --most gap 0
两轮结果未更新,Changing code structure...
	 3  --most gap 0
	 4  --most gap 0
	 5  --most gap 0
两轮结果未更新,Changing code structure...
	 6  --most gap 0
	 7  --most gap 0
	 8  --most gap 0
两轮结果未更新,Changing code structure...
	 9  --most gap 0
	 10  --most gap 0
	 11  --most gap 0
两轮结果未更新,Changing code structure...
	 12  --most gap 0
	 13  --most gap 0
	 14  --most gap 0
两轮结果未更新,Changing code structure...
	 15  --most gap 0
	 16  --most gap 0
	 17  --most gap 0
两轮结果未更新,Changing code structure...
	 18  --most gap 0
	 19  --most gap 0
Changing code structure...
Processing examples:  30%|██▉       | 119/400 [1:13:38<9:01:16, 115.58s/it]03/05/2025 16:05:59 - INFO - __main__ -   测试:119

03/05/2025 16:05:59 - INFO - __main__ -   Attack failed!

03/05/2025 16:05:59 - INFO - __main__ -   测试:120

03/05/2025 16:06:00 - INFO - __main__ -   Success rate: 95.65%

03/05/2025 16:06:00 - INFO - __main__ -   Successful items count: 66

03/05/2025 16:06:00 - INFO - __main__ -   Total count: 69

03/05/2025 16:06:00 - INFO - __main__ -   Index: 120

The original code is misclassified.
Number of variable_names extracted:  4
Generating population120...
init SUCCESS!
Processing examples:  30%|███       | 121/400 [1:13:39<5:30:51, 71.15s/it] 03/05/2025 16:06:00 - INFO - __main__ -   测试:121

03/05/2025 16:07:58 - INFO - __main__ -   Success rate: 94.29%

03/05/2025 16:07:58 - INFO - __main__ -   Successful items count: 66

03/05/2025 16:07:58 - INFO - __main__ -   Total count: 70

03/05/2025 16:07:58 - INFO - __main__ -   Index: 121

Number of variable_names extracted:  3
Generating population121...
	 0  --most gap 0.109898746
	 1  --most gap 0.109898746
	 2  --most gap 0.109898746
两轮结果未更新,Changing code structure...
	 3  --most gap 0.109898746
	 4  --most gap 0.109898746
	 5  --most gap 0.109898746
两轮结果未更新,Changing code structure...
	 6  --most gap 0.109898746
	 7  --most gap 0.1381222
	 8  --most gap 0.1381222
	 9  --most gap 0.1381222
	 10  --most gap 0.1381222
两轮结果未更新,Changing code structure...
	 11  --most gap 0.1381222
	 12  --most gap 0.1381222
	 13  --most gap 0.1381222
两轮结果未更新,Changing code structure...
	 14  --most gap 0.1381222
	 15  --most gap 0.1381222
	 16  --most gap 0.22101218
	 17  --most gap 0.36978364
	 18  --most gap 0.36978364
	 19  --most gap 0.36978364
Changing code structure...
Processing examples:  30%|███       | 122/400 [1:15:38<6:17:04, 81.38s/it]03/05/2025 16:07:58 - INFO - __main__ -   测试:122

03/05/2025 16:08:33 - INFO - __main__ -   Success rate: 94.37%

03/05/2025 16:08:33 - INFO - __main__ -   Successful items count: 67

03/05/2025 16:08:33 - INFO - __main__ -   Total count: 71

03/05/2025 16:08:33 - INFO - __main__ -   Index: 122

Number of variable_names extracted:  2
Generating population122...
	 0  --most gap 0
	 1  --most gap 0.03800654411315918
	 2  --most gap 0.03800654411315918
	 3  --most gap 0.03800654411315918
	 4  --most gap 0.03800654411315918
两轮结果未更新,Changing code structure...
	 5  --most gap 0.03800654411315918
	 6  --most gap 0.03800654411315918
	 7  --most gap 0.03800654411315918
两轮结果未更新,Changing code structure...
	 8  --most gap 0.03800654411315918
	 9  --most gap 0.03800654411315918
	 10  --most gap 0.03800654411315918
两轮结果未更新,Changing code structure...
	 11  --most gap 0.03800654411315918
	 12  --most gap 0.03800654411315918
	 13  --most gap 0.03800654411315918
两轮结果未更新,Changing code structure...
	 14  --most gap 0.03800654411315918
	 15  --most gap 0.03800654411315918
	 16  --most gap 0.03800654411315918
两轮结果未更新,Changing code structure...
	 17  --most gap 0.03800654411315918
	 18  --most gap 0.03800654411315918
	 19  --most gap 0.03800654411315918
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  31%|███       | 123/400 [1:16:12<5:25:08, 70.43s/it]03/05/2025 16:08:33 - INFO - __main__ -   测试:123

03/05/2025 16:08:36 - INFO - __main__ -   Success rate: 94.44%

03/05/2025 16:08:36 - INFO - __main__ -   Successful items count: 68

03/05/2025 16:08:36 - INFO - __main__ -   Total count: 72

03/05/2025 16:08:36 - INFO - __main__ -   Index: 123

Number of variable_names extracted:  5
Generating population123...
	 0  --most gap 0.05043390393257141
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  31%|███       | 124/400 [1:16:15<4:05:23, 53.35s/it]03/05/2025 16:08:36 - INFO - __main__ -   测试:124

03/05/2025 16:08:36 - INFO - __main__ -   Success rate: 94.52%

03/05/2025 16:08:36 - INFO - __main__ -   Successful items count: 69

03/05/2025 16:08:36 - INFO - __main__ -   Total count: 73

03/05/2025 16:08:36 - INFO - __main__ -   Index: 124

Number of variable_names extracted:  5
Generating population124...
init SUCCESS!
Processing examples:  31%|███▏      | 125/400 [1:16:16<3:00:15, 39.33s/it]03/05/2025 16:08:36 - INFO - __main__ -   测试:125

03/05/2025 16:08:36 - INFO - __main__ -   Attack failed!

03/05/2025 16:08:36 - INFO - __main__ -   测试:126

03/05/2025 16:08:36 - INFO - __main__ -   Success rate: 94.59%

03/05/2025 16:08:36 - INFO - __main__ -   Successful items count: 70

03/05/2025 16:08:36 - INFO - __main__ -   Total count: 74

03/05/2025 16:08:36 - INFO - __main__ -   Index: 126

The original code is misclassified.
Number of variable_names extracted:  2
Generating population126...
init SUCCESS!
Processing examples:  32%|███▏      | 127/400 [1:16:16<1:42:05, 22.44s/it]03/05/2025 16:08:36 - INFO - __main__ -   测试:127

03/05/2025 16:08:36 - INFO - __main__ -   Attack failed!

03/05/2025 16:08:36 - INFO - __main__ -   测试:128

03/05/2025 16:08:36 - INFO - __main__ -   Attack failed!

03/05/2025 16:08:36 - INFO - __main__ -   测试:129

03/05/2025 16:08:41 - INFO - __main__ -   Success rate: 94.67%

03/05/2025 16:08:41 - INFO - __main__ -   Successful items count: 71

03/05/2025 16:08:41 - INFO - __main__ -   Total count: 75

03/05/2025 16:08:41 - INFO - __main__ -   Index: 129

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population129...
	 0  --most gap 0.14723049104213715
	 1  --most gap 0.33430270850658417
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  32%|███▎      | 130/400 [1:16:21<56:00, 12.44s/it]  03/05/2025 16:08:41 - INFO - __main__ -   测试:130

03/05/2025 16:08:45 - INFO - __main__ -   Success rate: 94.74%

03/05/2025 16:08:45 - INFO - __main__ -   Successful items count: 72

03/05/2025 16:08:45 - INFO - __main__ -   Total count: 76

03/05/2025 16:08:45 - INFO - __main__ -   Index: 130

Number of variable_names extracted:  12
Generating population130...
init SUCCESS!
Processing examples:  33%|███▎      | 131/400 [1:16:25<49:07, 10.96s/it]03/05/2025 16:08:45 - INFO - __main__ -   测试:131

03/05/2025 16:12:54 - INFO - __main__ -   Success rate: 94.81%

03/05/2025 16:12:54 - INFO - __main__ -   Successful items count: 73

03/05/2025 16:12:54 - INFO - __main__ -   Total count: 77

03/05/2025 16:12:54 - INFO - __main__ -   Index: 131

Number of variable_names extracted:  12
Generating population131...
	 0  --most gap 0
	 1  --most gap 0.0048515797
	 2  --most gap 0.0071276426
	 3  --most gap 0.008065939
	 4  --most gap 0.009817421
	 5  --most gap 0.010440826
	 6  --most gap 0.013809383
	 7  --most gap 0.017450392
	 8  --most gap 0.07870811
	 9  --most gap 0.07870811
	 10  --most gap 0.12202519
	 11  --most gap 0.2082358
	 12  --most gap 0.2928632
	 13  --most gap 0.2928632
	 14  --most gap 0.2928632
	 15  --most gap 0.2928632
两轮结果未更新,Changing code structure...
	 16  --most gap 0.2928632
	 17  --most gap 0.2928632
	 18  --most gap 0.2928632
两轮结果未更新,Changing code structure...
	 19  --most gap 0.2928632
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  33%|███▎      | 132/400 [1:20:34<4:32:10, 60.93s/it]03/05/2025 16:12:55 - INFO - __main__ -   测试:132

03/05/2025 16:12:55 - INFO - __main__ -   Attack failed!

03/05/2025 16:12:55 - INFO - __main__ -   测试:133

03/05/2025 16:12:55 - INFO - __main__ -   Attack failed!

03/05/2025 16:12:55 - INFO - __main__ -   测试:134

03/05/2025 16:12:55 - INFO - __main__ -   Attack failed!

03/05/2025 16:12:55 - INFO - __main__ -   测试:135

03/05/2025 16:12:55 - INFO - __main__ -   Attack failed!

03/05/2025 16:12:55 - INFO - __main__ -   测试:136

03/05/2025 16:13:07 - INFO - __main__ -   Success rate: 94.87%

03/05/2025 16:13:07 - INFO - __main__ -   Successful items count: 74

03/05/2025 16:13:07 - INFO - __main__ -   Total count: 78

03/05/2025 16:13:07 - INFO - __main__ -   Index: 136

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  15
Generating population136...
	 0  --most gap 0.07653469
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  34%|███▍      | 137/400 [1:20:47<1:53:28, 25.89s/it]03/05/2025 16:13:07 - INFO - __main__ -   测试:137

03/05/2025 16:13:07 - INFO - __main__ -   Attack failed!

03/05/2025 16:13:07 - INFO - __main__ -   测试:138

03/05/2025 16:15:51 - INFO - __main__ -   Success rate: 94.94%

03/05/2025 16:15:51 - INFO - __main__ -   Successful items count: 75

03/05/2025 16:15:51 - INFO - __main__ -   Total count: 79

03/05/2025 16:15:51 - INFO - __main__ -   Index: 138

The original code is misclassified.
Number of variable_names extracted:  4
Generating population138...
	 0  --most gap 0.09802338480949402
	 1  --most gap 0.09802338480949402
	 2  --most gap 0.09802338480949402
两轮结果未更新,Changing code structure...
	 3  --most gap 0.09802338480949402
	 4  --most gap 0.09802338480949402
	 5  --most gap 0.1422695815563202
	 6  --most gap 0.1422695815563202
	 7  --most gap 0.1422695815563202
	 8  --most gap 0.1422695815563202
两轮结果未更新,Changing code structure...
	 9  --most gap 0.1422695815563202
	 10  --most gap 0.1422695815563202
	 11  --most gap 0.1422695815563202
两轮结果未更新,Changing code structure...
	 12  --most gap 0.1422695815563202
	 13  --most gap 0.1422695815563202
	 14  --most gap 0.1422695815563202
两轮结果未更新,Changing code structure...
	 15  --most gap 0.1422695815563202
	 16  --most gap 0.1422695815563202
	 17  --most gap 0.1422695815563202
两轮结果未更新,Changing code structure...
	 18  --most gap 0.1422695815563202
	 19  --most gap 0.1422695815563202
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  35%|███▍      | 139/400 [1:23:31<2:55:05, 40.25s/it]03/05/2025 16:15:51 - INFO - __main__ -   测试:139

03/05/2025 16:23:04 - INFO - __main__ -   Success rate: 95.00%

03/05/2025 16:23:04 - INFO - __main__ -   Successful items count: 76

03/05/2025 16:23:04 - INFO - __main__ -   Total count: 80

03/05/2025 16:23:04 - INFO - __main__ -   Index: 139

Number of variable_names extracted:  6
Generating population139...
	 0  --most gap 0
	 1  --most gap 0
	 2  --most gap 0
两轮结果未更新,Changing code structure...
	 3  --most gap 0
	 4  --most gap 0
	 5  --most gap 0
两轮结果未更新,Changing code structure...
	 6  --most gap 0
	 7  --most gap 0
	 8  --most gap 0
两轮结果未更新,Changing code structure...
	 9  --most gap 0
	 10  --most gap 0
	 11  --most gap 0
两轮结果未更新,Changing code structure...
	 12  --most gap 0
	 13  --most gap 0
	 14  --most gap 0
两轮结果未更新,Changing code structure...
	 15  --most gap 0
	 16  --most gap 0
	 17  --most gap 0
两轮结果未更新,Changing code structure...
	 18  --most gap 0
	 19  --most gap 0
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  35%|███▌      | 140/400 [1:30:44<7:16:49, 100.80s/it]03/05/2025 16:23:04 - INFO - __main__ -   测试:140

03/05/2025 16:23:04 - INFO - __main__ -   Attack failed!

03/05/2025 16:23:04 - INFO - __main__ -   测试:141

03/05/2025 16:23:10 - INFO - __main__ -   Success rate: 95.06%

03/05/2025 16:23:10 - INFO - __main__ -   Successful items count: 77

03/05/2025 16:23:10 - INFO - __main__ -   Total count: 81

03/05/2025 16:23:10 - INFO - __main__ -   Index: 141

The original code is misclassified.
Number of variable_names extracted:  8
Generating population141...
init SUCCESS!
Processing examples:  36%|███▌      | 142/400 [1:30:49<5:04:36, 70.84s/it] 03/05/2025 16:23:10 - INFO - __main__ -   测试:142

03/05/2025 16:23:10 - INFO - __main__ -   Attack failed!

03/05/2025 16:23:10 - INFO - __main__ -   测试:143

03/05/2025 16:23:11 - INFO - __main__ -   Success rate: 95.12%

03/05/2025 16:23:11 - INFO - __main__ -   Successful items count: 78

03/05/2025 16:23:11 - INFO - __main__ -   Total count: 82

03/05/2025 16:23:11 - INFO - __main__ -   Index: 143

The original code is misclassified.
Number of variable_names extracted:  4
Generating population143...
	 0  --most gap 0.06041407585144043
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  36%|███▌      | 144/400 [1:30:51<3:31:04, 49.47s/it]03/05/2025 16:23:11 - INFO - __main__ -   测试:144

03/05/2025 16:23:11 - INFO - __main__ -   Attack failed!

03/05/2025 16:23:11 - INFO - __main__ -   测试:145

03/05/2025 16:23:14 - INFO - __main__ -   Success rate: 95.18%

03/05/2025 16:23:14 - INFO - __main__ -   Successful items count: 79

03/05/2025 16:23:14 - INFO - __main__ -   Total count: 83

03/05/2025 16:23:14 - INFO - __main__ -   Index: 145

The original code is misclassified.
Number of variable_names extracted:  5
Generating population145...
init SUCCESS!
Processing examples:  36%|███▋      | 146/400 [1:30:54<2:27:55, 34.94s/it]03/05/2025 16:23:14 - INFO - __main__ -   测试:146

03/05/2025 16:24:51 - INFO - __main__ -   Success rate: 95.24%

03/05/2025 16:24:51 - INFO - __main__ -   Successful items count: 80

03/05/2025 16:24:51 - INFO - __main__ -   Total count: 84

03/05/2025 16:24:51 - INFO - __main__ -   Index: 146

Number of variable_names extracted:  3
Generating population146...
	 0  --most gap 0.07877808064222336
	 1  --most gap 0.14184071868658066
	 2  --most gap 0.14184071868658066
	 3  --most gap 0.14184071868658066
	 4  --most gap 0.14184071868658066
两轮结果未更新,Changing code structure...
	 5  --most gap 0.14184071868658066
	 6  --most gap 0.22920376807451248
	 7  --most gap 0.22920376807451248
	 8  --most gap 0.33512473851442337
	 9  --most gap 0.33512473851442337
	 10  --most gap 0.33512473851442337
	 11  --most gap 0.33512473851442337
两轮结果未更新,Changing code structure...
	 12  --most gap 0.33512473851442337
	 13  --most gap 0.33512473851442337
	 14  --most gap 0.33512473851442337
两轮结果未更新,Changing code structure...
	 15  --most gap 0.33512473851442337
	 16  --most gap 0.33512473851442337
	 17  --most gap 0.33512473851442337
两轮结果未更新,Changing code structure...
	 18  --most gap 0.33512473851442337
	 19  --most gap 0.33512473851442337
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  37%|███▋      | 147/400 [1:32:30<3:13:34, 45.91s/it]03/05/2025 16:24:51 - INFO - __main__ -   测试:147

03/05/2025 16:24:51 - INFO - __main__ -   Attack failed!

03/05/2025 16:24:51 - INFO - __main__ -   测试:148

03/05/2025 16:25:23 - INFO - __main__ -   Success rate: 95.29%

03/05/2025 16:25:23 - INFO - __main__ -   Successful items count: 81

03/05/2025 16:25:23 - INFO - __main__ -   Total count: 85

03/05/2025 16:25:23 - INFO - __main__ -   Index: 148

The original code is misclassified.
Number of variable_names extracted:  1
Generating population148...
	 0  --most gap 0.0019694864749908447
	 1  --most gap 0.046137645840644836
	 2  --most gap 0.046137645840644836
	 3  --most gap 0.046137645840644836
	 4  --most gap 0.046137645840644836
两轮结果未更新,Changing code structure...
	 5  --most gap 0.046137645840644836
	 6  --most gap 0.046137645840644836
	 7  --most gap 0.046137645840644836
两轮结果未更新,Changing code structure...
	 8  --most gap 0.046137645840644836
	 9  --most gap 0.046137645840644836
	 10  --most gap 0.046137645840644836
两轮结果未更新,Changing code structure...
	 11  --most gap 0.046137645840644836
	 12  --most gap 0.046137645840644836
	 13  --most gap 0.046137645840644836
两轮结果未更新,Changing code structure...
	 14  --most gap 0.046137645840644836
	 15  --most gap 0.046137645840644836
	 16  --most gap 0.046137645840644836
两轮结果未更新,Changing code structure...
	 17  --most gap 0.046137645840644836
	 18  --most gap 0.046137645840644836
	 19  --most gap 0.046137645840644836
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  37%|███▋      | 149/400 [1:33:03<2:30:18, 35.93s/it]03/05/2025 16:25:23 - INFO - __main__ -   测试:149

03/05/2025 16:25:23 - INFO - __main__ -   Attack failed!

03/05/2025 16:25:23 - INFO - __main__ -   测试:150

03/05/2025 16:25:54 - INFO - __main__ -   Success rate: 95.35%

03/05/2025 16:25:54 - INFO - __main__ -   Successful items count: 82

03/05/2025 16:25:54 - INFO - __main__ -   Total count: 86

03/05/2025 16:25:54 - INFO - __main__ -   Index: 150

The original code is misclassified.
Number of variable_names extracted:  1
Generating population150...
	 0  --most gap 4.470348358154297e-08
	 1  --most gap 0.05794399976730347
	 2  --most gap 0.05794399976730347
	 3  --most gap 0.05794399976730347
	 4  --most gap 0.05794399976730347
两轮结果未更新,Changing code structure...
	 5  --most gap 0.05794399976730347
	 6  --most gap 0.05794399976730347
	 7  --most gap 0.05794399976730347
两轮结果未更新,Changing code structure...
	 8  --most gap 0.05794399976730347
	 9  --most gap 0.05794399976730347
	 10  --most gap 0.05794399976730347
两轮结果未更新,Changing code structure...
	 11  --most gap 0.05794399976730347
	 12  --most gap 0.05794399976730347
	 13  --most gap 0.05794399976730347
两轮结果未更新,Changing code structure...
	 14  --most gap 0.05794399976730347
	 15  --most gap 0.05794399976730347
	 16  --most gap 0.05794399976730347
两轮结果未更新,Changing code structure...
	 17  --most gap 0.05794399976730347
	 18  --most gap 0.05794399976730347
	 19  --most gap 0.05794399976730347
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  38%|███▊      | 151/400 [1:33:34<2:01:37, 29.31s/it]03/05/2025 16:25:54 - INFO - __main__ -   测试:151

03/05/2025 16:25:55 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  38%|███▊      | 152/400 [1:33:34<1:38:31, 23.84s/it]03/05/2025 16:25:55 - INFO - __main__ -   测试:152

03/05/2025 16:25:56 - INFO - __main__ -   Success rate: 95.40%

03/05/2025 16:25:56 - INFO - __main__ -   Successful items count: 83

03/05/2025 16:25:56 - INFO - __main__ -   Total count: 87

03/05/2025 16:25:56 - INFO - __main__ -   Index: 152

Number of variable_names extracted:  6
Generating population152...
init SUCCESS!
Processing examples:  38%|███▊      | 153/400 [1:33:36<1:18:47, 19.14s/it]03/05/2025 16:25:56 - INFO - __main__ -   测试:153

03/05/2025 16:25:56 - INFO - __main__ -   Attack failed!

03/05/2025 16:25:56 - INFO - __main__ -   测试:154

03/05/2025 16:29:44 - INFO - __main__ -   Success rate: 94.32%

03/05/2025 16:29:44 - INFO - __main__ -   Successful items count: 83

03/05/2025 16:29:44 - INFO - __main__ -   Total count: 88

03/05/2025 16:29:44 - INFO - __main__ -   Index: 154

The original code is misclassified.
Number of variable_names extracted:  5
Generating population154...
	 0  --most gap 0.130080234259367
	 1  --most gap 0.2191024087369442
	 2  --most gap 0.2191024087369442
	 3  --most gap 0.2191024087369442
	 4  --most gap 0.2191024087369442
两轮结果未更新,Changing code structure...
	 5  --most gap 0.2191024087369442
	 6  --most gap 0.2191024087369442
	 7  --most gap 0.2191024087369442
两轮结果未更新,Changing code structure...
	 8  --most gap 0.2191024087369442
	 9  --most gap 0.2191024087369442
	 10  --most gap 0.2191024087369442
两轮结果未更新,Changing code structure...
	 11  --most gap 0.2879602871835232
	 12  --most gap 0.2879602871835232
	 13  --most gap 0.2879602871835232
	 14  --most gap 0.2879602871835232
两轮结果未更新,Changing code structure...
	 15  --most gap 0.2879602871835232
	 16  --most gap 0.2879602871835232
	 17  --most gap 0.2879602871835232
两轮结果未更新,Changing code structure...
	 18  --most gap 0.2879602871835232
	 19  --most gap 0.2879602871835232
Changing code structure...
Processing examples:  39%|███▉      | 155/400 [1:37:24<3:44:23, 54.95s/it]03/05/2025 16:29:44 - INFO - __main__ -   测试:155

03/05/2025 16:29:46 - INFO - __main__ -   Success rate: 94.38%

03/05/2025 16:29:46 - INFO - __main__ -   Successful items count: 84

03/05/2025 16:29:46 - INFO - __main__ -   Total count: 89

03/05/2025 16:29:46 - INFO - __main__ -   Index: 155

Number of variable_names extracted:  6
Generating population155...
init SUCCESS!
Processing examples:  39%|███▉      | 156/400 [1:37:25<2:57:09, 43.56s/it]03/05/2025 16:29:46 - INFO - __main__ -   测试:156

03/05/2025 16:30:04 - INFO - __main__ -   Success rate: 94.44%

03/05/2025 16:30:04 - INFO - __main__ -   Successful items count: 85

03/05/2025 16:30:04 - INFO - __main__ -   Total count: 90

03/05/2025 16:30:04 - INFO - __main__ -   Index: 156

Number of variable_names extracted:  2
Generating population156...
	 0  --most gap 0.04198342561721802
	 1  --most gap 0.04198342561721802
	 2  --most gap 0.04198342561721802
两轮结果未更新,Changing code structure...
	 3  --most gap 0.04198342561721802
	 4  --most gap 0.04198342561721802
	 5  --most gap 0.04198342561721802
两轮结果未更新,Changing code structure...
	 6  --most gap 0.04198342561721802
	 7  --most gap 0.04198342561721802
	 8  --most gap 0.04198342561721802
两轮结果未更新,Changing code structure...
	 9  --most gap 0.04198342561721802
	 10  --most gap 0.04198342561721802
	 11  --most gap 0.04198342561721802
两轮结果未更新,Changing code structure...
	 12  --most gap 0.04198342561721802
	 13  --most gap 0.04198342561721802
	 14  --most gap 0.04198342561721802
两轮结果未更新,Changing code structure...
	 15  --most gap 0.04198342561721802
	 16  --most gap 0.04198342561721802
	 17  --most gap 0.04198342561721802
两轮结果未更新,Changing code structure...
	 18  --most gap 0.04198342561721802
	 19  --most gap 0.04198342561721802
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  39%|███▉      | 157/400 [1:37:44<2:32:37, 37.69s/it]03/05/2025 16:30:04 - INFO - __main__ -   测试:157

03/05/2025 16:30:04 - INFO - __main__ -   Attack failed!

03/05/2025 16:30:04 - INFO - __main__ -   测试:158

03/05/2025 16:30:04 - INFO - __main__ -   Attack failed!

03/05/2025 16:30:04 - INFO - __main__ -   测试:159

03/05/2025 16:30:04 - INFO - __main__ -   Success rate: 94.51%

03/05/2025 16:30:04 - INFO - __main__ -   Successful items count: 86

03/05/2025 16:30:04 - INFO - __main__ -   Total count: 91

03/05/2025 16:30:04 - INFO - __main__ -   Index: 159

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population159...
init SUCCESS!
Processing examples:  40%|████      | 160/400 [1:37:44<1:15:36, 18.90s/it]03/05/2025 16:30:04 - INFO - __main__ -   测试:160

03/05/2025 16:30:04 - INFO - __main__ -   Attack failed!

03/05/2025 16:30:04 - INFO - __main__ -   测试:161

03/05/2025 16:31:40 - INFO - __main__ -   Success rate: 94.57%

03/05/2025 16:31:40 - INFO - __main__ -   Successful items count: 87

03/05/2025 16:31:40 - INFO - __main__ -   Total count: 92

03/05/2025 16:31:40 - INFO - __main__ -   Index: 161

The original code is misclassified.
Number of variable_names extracted:  3
Generating population161...
	 0  --most gap 0.07145858556032181
	 1  --most gap 0.12022770196199417
	 2  --most gap 0.12022770196199417
	 3  --most gap 0.12022770196199417
	 4  --most gap 0.12022770196199417
两轮结果未更新,Changing code structure...
	 5  --most gap 0.12022770196199417
	 6  --most gap 0.12022770196199417
	 7  --most gap 0.19368822127580643
	 8  --most gap 0.19368822127580643
	 9  --most gap 0.19368822127580643
	 10  --most gap 0.19368822127580643
两轮结果未更新,Changing code structure...
	 11  --most gap 0.19368822127580643
	 12  --most gap 0.19368822127580643
	 13  --most gap 0.19368822127580643
两轮结果未更新,Changing code structure...
	 14  --most gap 0.19368822127580643
	 15  --most gap 0.19368822127580643
	 16  --most gap 0.19368822127580643
两轮结果未更新,Changing code structure...
	 17  --most gap 0.19368822127580643
	 18  --most gap 0.19368822127580643
	 19  --most gap 0.19368822127580643
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  40%|████      | 162/400 [1:39:19<1:51:52, 28.20s/it]03/05/2025 16:31:40 - INFO - __main__ -   测试:162

03/05/2025 16:31:40 - INFO - __main__ -   Attack failed!

03/05/2025 16:31:40 - INFO - __main__ -   测试:163

03/05/2025 16:32:39 - INFO - __main__ -   Success rate: 94.62%

03/05/2025 16:32:39 - INFO - __main__ -   Successful items count: 88

03/05/2025 16:32:39 - INFO - __main__ -   Total count: 93

03/05/2025 16:32:39 - INFO - __main__ -   Index: 163

The original code is misclassified.
Number of variable_names extracted:  4
Generating population163...
	 0  --most gap 0.073277295
	 1  --most gap 0.1239928
	 2  --most gap 0.1239928
	 3  --most gap 0.1239928
	 4  --most gap 0.1239928
两轮结果未更新,Changing code structure...
	 5  --most gap 0.1239928
	 6  --most gap 0.1239928
	 7  --most gap 0.18087363
	 8  --most gap 0.18087363
	 9  --most gap 0.18087363
	 10  --most gap 0.18087363
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  41%|████      | 164/400 [1:40:18<1:52:35, 28.63s/it]03/05/2025 16:32:39 - INFO - __main__ -   测试:164

03/05/2025 16:32:39 - INFO - __main__ -   Attack failed!

03/05/2025 16:32:39 - INFO - __main__ -   测试:165

03/05/2025 16:32:41 - INFO - __main__ -   Success rate: 94.68%

03/05/2025 16:32:41 - INFO - __main__ -   Successful items count: 89

03/05/2025 16:32:41 - INFO - __main__ -   Total count: 94

03/05/2025 16:32:41 - INFO - __main__ -   Index: 165

The original code is misclassified.
Number of variable_names extracted:  16
Generating population165...
init SUCCESS!
Processing examples:  42%|████▏     | 166/400 [1:40:20<1:18:11, 20.05s/it]03/05/2025 16:32:41 - INFO - __main__ -   测试:166

03/05/2025 16:32:41 - INFO - __main__ -   Success rate: 94.74%

03/05/2025 16:32:41 - INFO - __main__ -   Successful items count: 90

03/05/2025 16:32:41 - INFO - __main__ -   Total count: 95

03/05/2025 16:32:41 - INFO - __main__ -   Index: 166

Number of variable_names extracted:  2
Generating population166...
init SUCCESS!
Processing examples:  42%|████▏     | 167/400 [1:40:21<1:03:50, 16.44s/it]03/05/2025 16:32:41 - INFO - __main__ -   测试:167

03/05/2025 16:32:46 - INFO - __main__ -   Success rate: 94.79%

03/05/2025 16:32:46 - INFO - __main__ -   Successful items count: 91

03/05/2025 16:32:46 - INFO - __main__ -   Total count: 96

03/05/2025 16:32:46 - INFO - __main__ -   Index: 167

Number of variable_names extracted:  5
Generating population167...
init SUCCESS!
Processing examples:  42%|████▏     | 168/400 [1:40:26<54:29, 14.09s/it]  03/05/2025 16:32:46 - INFO - __main__ -   测试:168

03/05/2025 16:32:51 - INFO - __main__ -   Success rate: 94.85%

03/05/2025 16:32:51 - INFO - __main__ -   Successful items count: 92

03/05/2025 16:32:51 - INFO - __main__ -   Total count: 97

03/05/2025 16:32:51 - INFO - __main__ -   Index: 168

Number of variable_names extracted:  6
Generating population168...
init SUCCESS!
Processing examples:  42%|████▏     | 169/400 [1:40:30<46:12, 12.00s/it]03/05/2025 16:32:51 - INFO - __main__ -   测试:169

03/05/2025 16:32:51 - INFO - __main__ -   Attack failed!

03/05/2025 16:32:51 - INFO - __main__ -   测试:170

03/05/2025 16:34:51 - INFO - __main__ -   Success rate: 93.88%

03/05/2025 16:34:51 - INFO - __main__ -   Successful items count: 92

03/05/2025 16:34:51 - INFO - __main__ -   Total count: 98

03/05/2025 16:34:51 - INFO - __main__ -   Index: 170

The original code is misclassified.
Number of variable_names extracted:  3
Generating population170...
	 0  --most gap 0.021321408450603485
	 1  --most gap 0.06894052028656006
	 2  --most gap 0.06894052028656006
	 3  --most gap 0.06894052028656006
	 4  --most gap 0.06894052028656006
两轮结果未更新,Changing code structure...
	 5  --most gap 0.06894052028656006
	 6  --most gap 0.12050232291221619
	 7  --most gap 0.12050232291221619
	 8  --most gap 0.12050232291221619
	 9  --most gap 0.12050232291221619
两轮结果未更新,Changing code structure...
	 10  --most gap 0.1280381828546524
	 11  --most gap 0.1280381828546524
	 12  --most gap 0.1280381828546524
	 13  --most gap 0.1280381828546524
两轮结果未更新,Changing code structure...
	 14  --most gap 0.1280381828546524
	 15  --most gap 0.1280381828546524
	 16  --most gap 0.1280381828546524
两轮结果未更新,Changing code structure...
	 17  --most gap 0.1280381828546524
	 18  --most gap 0.1280381828546524
	 19  --most gap 0.1280381828546524
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  43%|████▎     | 171/400 [1:42:31<1:58:03, 30.93s/it]03/05/2025 16:34:51 - INFO - __main__ -   测试:171

03/05/2025 16:38:35 - INFO - __main__ -   Success rate: 93.94%

03/05/2025 16:38:35 - INFO - __main__ -   Successful items count: 93

03/05/2025 16:38:35 - INFO - __main__ -   Total count: 99

03/05/2025 16:38:35 - INFO - __main__ -   Index: 171

Number of variable_names extracted:  8
Generating population171...
	 0  --most gap 0.10774411261081696
	 1  --most gap 0.11540307104587555
	 2  --most gap 0.16980525851249695
	 3  --most gap 0.20676672458648682
	 4  --most gap 0.24795472621917725
	 5  --most gap 0.24795472621917725
	 6  --most gap 0.24795472621917725
	 7  --most gap 0.2904083728790283
	 8  --most gap 0.2904083728790283
	 9  --most gap 0.2904083728790283
	 10  --most gap 0.2904083728790283
两轮结果未更新,Changing code structure...
	 11  --most gap 0.2904083728790283
	 12  --most gap 0.2904083728790283
	 13  --most gap 0.2904083728790283
两轮结果未更新,Changing code structure...
	 14  --most gap 0.2904083728790283
	 15  --most gap 0.2904083728790283
	 16  --most gap 0.2904083728790283
两轮结果未更新,Changing code structure...
	 17  --most gap 0.2904083728790283
	 18  --most gap 0.2904083728790283
	 19  --most gap 0.2904083728790283
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  43%|████▎     | 172/400 [1:46:15<4:38:40, 73.34s/it]03/05/2025 16:38:35 - INFO - __main__ -   测试:172

03/05/2025 16:38:37 - INFO - __main__ -   Success rate: 94.00%

03/05/2025 16:38:37 - INFO - __main__ -   Successful items count: 94

03/05/2025 16:38:37 - INFO - __main__ -   Total count: 100

03/05/2025 16:38:37 - INFO - __main__ -   Index: 172

Number of variable_names extracted:  2
Generating population172...
init SUCCESS!
Processing examples:  43%|████▎     | 173/400 [1:46:17<3:33:03, 56.32s/it]03/05/2025 16:38:37 - INFO - __main__ -   测试:173

03/05/2025 16:38:41 - INFO - __main__ -   Success rate: 94.06%

03/05/2025 16:38:41 - INFO - __main__ -   Successful items count: 95

03/05/2025 16:38:41 - INFO - __main__ -   Total count: 101

03/05/2025 16:38:41 - INFO - __main__ -   Index: 173

Number of variable_names extracted:  5
Generating population173...
init SUCCESS!
Processing examples:  44%|████▎     | 174/400 [1:46:20<2:41:32, 42.89s/it]03/05/2025 16:38:41 - INFO - __main__ -   测试:174

03/05/2025 16:38:42 - INFO - __main__ -   Success rate: 94.12%

03/05/2025 16:38:42 - INFO - __main__ -   Successful items count: 96

03/05/2025 16:38:42 - INFO - __main__ -   Total count: 102

03/05/2025 16:38:42 - INFO - __main__ -   Index: 174

Number of variable_names extracted:  1
Generating population174...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  44%|████▍     | 175/400 [1:46:21<1:58:59, 31.73s/it]03/05/2025 16:38:42 - INFO - __main__ -   测试:175

03/05/2025 16:38:52 - INFO - __main__ -   Success rate: 94.17%

03/05/2025 16:38:52 - INFO - __main__ -   Successful items count: 97

03/05/2025 16:38:52 - INFO - __main__ -   Total count: 103

03/05/2025 16:38:52 - INFO - __main__ -   Index: 175

Number of variable_names extracted:  2
Generating population175...
	 0  --most gap 0.3018394187092781
	 1  --most gap 0.3018394187092781
	 2  --most gap 0.3018394187092781
两轮结果未更新,Changing code structure...
	 3  --most gap 0.3018394187092781
	 4  --most gap 0.3018394187092781
	 5  --most gap 0.3018394187092781
两轮结果未更新,Changing code structure...
	 6  --most gap 0.3018394187092781
	 7  --most gap 0.3018394187092781
	 8  --most gap 0.3018394187092781
两轮结果未更新,Changing code structure...
	 9  --most gap 0.3018394187092781
	 10  --most gap 0.3018394187092781
	 11  --most gap 0.3018394187092781
两轮结果未更新,Changing code structure...
	 12  --most gap 0.3018394187092781
	 13  --most gap 0.3018394187092781
	 14  --most gap 0.3018394187092781
两轮结果未更新,Changing code structure...
	 15  --most gap 0.3018394187092781
	 16  --most gap 0.3018394187092781
	 17  --most gap 0.3018394187092781
两轮结果未更新,Changing code structure...
	 18  --most gap 0.3018394187092781
	 19  --most gap 0.3018394187092781
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  44%|████▍     | 176/400 [1:46:32<1:36:24, 25.82s/it]03/05/2025 16:38:52 - INFO - __main__ -   测试:176

03/05/2025 16:39:15 - INFO - __main__ -   Success rate: 94.23%

03/05/2025 16:39:15 - INFO - __main__ -   Successful items count: 98

03/05/2025 16:39:15 - INFO - __main__ -   Total count: 104

03/05/2025 16:39:15 - INFO - __main__ -   Index: 176

Number of variable_names extracted:  1
Generating population176...
	 0  --most gap 1.4901161193847656e-07
	 1  --most gap 0.12211298942565918
	 2  --most gap 0.12211298942565918
	 3  --most gap 0.12211298942565918
	 4  --most gap 0.12211298942565918
两轮结果未更新,Changing code structure...
	 5  --most gap 0.12211298942565918
	 6  --most gap 0.12211298942565918
	 7  --most gap 0.12211298942565918
两轮结果未更新,Changing code structure...
	 8  --most gap 0.12211298942565918
	 9  --most gap 0.12211298942565918
	 10  --most gap 0.12211298942565918
两轮结果未更新,Changing code structure...
	 11  --most gap 0.12211298942565918
	 12  --most gap 0.12211298942565918
	 13  --most gap 0.12211298942565918
两轮结果未更新,Changing code structure...
	 14  --most gap 0.12211298942565918
	 15  --most gap 0.12211298942565918
	 16  --most gap 0.12211298942565918
两轮结果未更新,Changing code structure...
	 17  --most gap 0.12211298942565918
	 18  --most gap 0.12211298942565918
	 19  --most gap 0.12211298942565918
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  44%|████▍     | 177/400 [1:46:54<1:32:38, 24.93s/it]03/05/2025 16:39:15 - INFO - __main__ -   测试:177

03/05/2025 16:39:15 - INFO - __main__ -   Attack failed!

03/05/2025 16:39:15 - INFO - __main__ -   测试:178

03/05/2025 16:39:15 - INFO - __main__ -   Attack failed!

03/05/2025 16:39:15 - INFO - __main__ -   测试:179

03/05/2025 16:39:18 - INFO - __main__ -   Success rate: 94.29%

03/05/2025 16:39:18 - INFO - __main__ -   Successful items count: 99

03/05/2025 16:39:18 - INFO - __main__ -   Total count: 105

03/05/2025 16:39:18 - INFO - __main__ -   Index: 179

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  10
Generating population179...
init SUCCESS!
Processing examples:  45%|████▌     | 180/400 [1:46:57<43:21, 11.82s/it]  03/05/2025 16:39:18 - INFO - __main__ -   测试:180

03/05/2025 16:39:18 - INFO - __main__ -   Attack failed!

03/05/2025 16:39:18 - INFO - __main__ -   测试:181

03/05/2025 16:39:27 - INFO - __main__ -   Success rate: 94.34%

03/05/2025 16:39:27 - INFO - __main__ -   Successful items count: 100

03/05/2025 16:39:27 - INFO - __main__ -   Total count: 106

03/05/2025 16:39:27 - INFO - __main__ -   Index: 181

The original code is misclassified.
Number of variable_names extracted:  4
Generating population181...
	 0  --most gap 0.0967164933681488
	 1  --most gap 0.0967164933681488
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  46%|████▌     | 182/400 [1:47:07<34:03,  9.37s/it]03/05/2025 16:39:27 - INFO - __main__ -   测试:182

03/05/2025 16:39:27 - INFO - __main__ -   Attack failed!

03/05/2025 16:39:27 - INFO - __main__ -   测试:183

03/05/2025 16:39:27 - INFO - __main__ -   Success rate: 94.39%

03/05/2025 16:39:27 - INFO - __main__ -   Successful items count: 101

03/05/2025 16:39:27 - INFO - __main__ -   Total count: 107

03/05/2025 16:39:27 - INFO - __main__ -   Index: 183

The original code is misclassified.
Number of variable_names extracted:  5
Generating population183...
init SUCCESS!
Processing examples:  46%|████▌     | 184/400 [1:47:07<22:44,  6.32s/it]03/05/2025 16:39:27 - INFO - __main__ -   测试:184

03/05/2025 16:40:07 - INFO - __main__ -   Success rate: 94.44%

03/05/2025 16:40:07 - INFO - __main__ -   Successful items count: 102

03/05/2025 16:40:07 - INFO - __main__ -   Total count: 108

03/05/2025 16:40:07 - INFO - __main__ -   Index: 184

Number of variable_names extracted:  3
Generating population184...
	 0  --most gap 0.024647117
	 1  --most gap 0.024647117
	 2  --most gap 0.024647117
两轮结果未更新,Changing code structure...
	 3  --most gap 0.024647117
	 4  --most gap 0.024647117
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  46%|████▋     | 185/400 [1:47:47<45:38, 12.74s/it]03/05/2025 16:40:07 - INFO - __main__ -   测试:185

03/05/2025 16:40:07 - INFO - __main__ -   Attack failed!

03/05/2025 16:40:07 - INFO - __main__ -   测试:186

03/05/2025 16:40:08 - INFO - __main__ -   Success rate: 94.50%

03/05/2025 16:40:08 - INFO - __main__ -   Successful items count: 103

03/05/2025 16:40:08 - INFO - __main__ -   Total count: 109

03/05/2025 16:40:08 - INFO - __main__ -   Index: 186

The original code is misclassified.
Number of variable_names extracted:  7
Generating population186...
init SUCCESS!
Processing examples:  47%|████▋     | 187/400 [1:47:47<29:33,  8.32s/it]03/05/2025 16:40:08 - INFO - __main__ -   测试:187

03/05/2025 16:40:08 - INFO - __main__ -   Attack failed!

03/05/2025 16:40:08 - INFO - __main__ -   测试:188

03/05/2025 16:40:40 - INFO - __main__ -   Success rate: 94.55%

03/05/2025 16:40:40 - INFO - __main__ -   Successful items count: 104

03/05/2025 16:40:40 - INFO - __main__ -   Total count: 110

03/05/2025 16:40:40 - INFO - __main__ -   Index: 188

The original code is misclassified.
Number of variable_names extracted:  5
Generating population188...
	 0  --most gap 0.02791649103164673
	 1  --most gap 0.07652038335800171
	 2  --most gap 0.07652038335800171
	 3  --most gap 0.07652038335800171
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  47%|████▋     | 189/400 [1:48:20<38:30, 10.95s/it]03/05/2025 16:40:40 - INFO - __main__ -   测试:189

03/05/2025 16:40:40 - INFO - __main__ -   Attack failed!

03/05/2025 16:40:40 - INFO - __main__ -   测试:190

03/05/2025 16:43:19 - INFO - __main__ -   Success rate: 94.59%

03/05/2025 16:43:19 - INFO - __main__ -   Successful items count: 105

03/05/2025 16:43:19 - INFO - __main__ -   Total count: 111

03/05/2025 16:43:19 - INFO - __main__ -   Index: 190

The original code is misclassified.
Number of variable_names extracted:  8
Generating population190...
init SUCCESS!
Processing examples:  48%|████▊     | 191/400 [1:50:59<1:55:30, 33.16s/it]03/05/2025 16:43:19 - INFO - __main__ -   测试:191

03/05/2025 16:43:19 - INFO - __main__ -   Attack failed!

03/05/2025 16:43:19 - INFO - __main__ -   测试:192

03/05/2025 16:43:19 - INFO - __main__ -   Attack failed!

03/05/2025 16:43:19 - INFO - __main__ -   测试:193

03/05/2025 16:47:22 - INFO - __main__ -   Success rate: 93.75%

03/05/2025 16:47:22 - INFO - __main__ -   Successful items count: 105

03/05/2025 16:47:22 - INFO - __main__ -   Total count: 112

03/05/2025 16:47:22 - INFO - __main__ -   Index: 193

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population193...
	 0  --most gap 0.0099037392064929
	 1  --most gap 0.0099037392064929
	 2  --most gap 0.0099037392064929
	 3  --most gap 0.029197108931839466
	 4  --most gap 0.030159232206642628
	 5  --most gap 0.05912065599113703
	 6  --most gap 0.0787117937579751
	 7  --most gap 0.0787117937579751
	 8  --most gap 0.0787117937579751
	 9  --most gap 0.0787117937579751
两轮结果未更新,Changing code structure...
	 10  --most gap 0.0787117937579751
	 11  --most gap 0.0787117937579751
	 12  --most gap 0.0787117937579751
两轮结果未更新,Changing code structure...
	 13  --most gap 0.0787117937579751
	 14  --most gap 0.0787117937579751
	 15  --most gap 0.12293236050754786
	 16  --most gap 0.12293236050754786
	 17  --most gap 0.12293236050754786
	 18  --most gap 0.12293236050754786
两轮结果未更新,Changing code structure...
	 19  --most gap 0.12293236050754786
Changing code structure...
Processing examples:  48%|████▊     | 194/400 [1:55:02<3:01:05, 52.75s/it]03/05/2025 16:47:22 - INFO - __main__ -   测试:194

03/05/2025 16:47:22 - INFO - __main__ -   Attack failed!

03/05/2025 16:47:22 - INFO - __main__ -   测试:195

03/05/2025 16:47:30 - INFO - __main__ -   Success rate: 93.81%

03/05/2025 16:47:30 - INFO - __main__ -   Successful items count: 106

03/05/2025 16:47:30 - INFO - __main__ -   Total count: 113

03/05/2025 16:47:30 - INFO - __main__ -   Index: 195

The original code is misclassified.
Number of variable_names extracted:  22
Generating population195...
	 0  --most gap 0.029003143310546875
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  49%|████▉     | 196/400 [1:55:09<2:12:33, 38.99s/it]03/05/2025 16:47:30 - INFO - __main__ -   测试:196

03/05/2025 16:47:30 - INFO - __main__ -   Attack failed!

03/05/2025 16:47:30 - INFO - __main__ -   测试:197

03/05/2025 16:47:32 - INFO - __main__ -   Success rate: 93.86%

03/05/2025 16:47:32 - INFO - __main__ -   Successful items count: 107

03/05/2025 16:47:32 - INFO - __main__ -   Total count: 114

03/05/2025 16:47:32 - INFO - __main__ -   Index: 197

The original code is misclassified.
Number of variable_names extracted:  8
Generating population197...
init SUCCESS!
Processing examples:  50%|████▉     | 198/400 [1:55:11<1:34:38, 28.11s/it]03/05/2025 16:47:32 - INFO - __main__ -   测试:198

03/05/2025 16:47:32 - INFO - __main__ -   Attack failed!

03/05/2025 16:47:32 - INFO - __main__ -   测试:199

03/05/2025 16:47:33 - INFO - __main__ -   Success rate: 93.91%

03/05/2025 16:47:33 - INFO - __main__ -   Successful items count: 108

03/05/2025 16:47:33 - INFO - __main__ -   Total count: 115

03/05/2025 16:47:33 - INFO - __main__ -   Index: 199

The original code is misclassified.
Number of variable_names extracted:  1
Generating population199...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  50%|█████     | 200/400 [1:55:12<1:06:57, 20.09s/it]03/05/2025 16:47:33 - INFO - __main__ -   测试:200

03/05/2025 16:47:33 - INFO - __main__ -   Success rate: 93.97%

03/05/2025 16:47:33 - INFO - __main__ -   Successful items count: 109

03/05/2025 16:47:33 - INFO - __main__ -   Total count: 116

03/05/2025 16:47:33 - INFO - __main__ -   Index: 200

Number of variable_names extracted:  3
Generating population200...
init SUCCESS!
Processing examples:  50%|█████     | 201/400 [1:55:12<55:21, 16.69s/it]  03/05/2025 16:47:33 - INFO - __main__ -   测试:201

03/05/2025 16:47:33 - INFO - __main__ -   Attack failed!

03/05/2025 16:47:33 - INFO - __main__ -   测试:202

03/05/2025 16:47:33 - INFO - __main__ -   Attack failed!

03/05/2025 16:47:33 - INFO - __main__ -   测试:203

03/05/2025 16:47:44 - INFO - __main__ -   Success rate: 94.02%

03/05/2025 16:47:44 - INFO - __main__ -   Successful items count: 110

03/05/2025 16:47:44 - INFO - __main__ -   Total count: 117

03/05/2025 16:47:44 - INFO - __main__ -   Index: 203

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  18
Generating population203...
init SUCCESS!
Processing examples:  51%|█████     | 204/400 [1:55:23<36:30, 11.18s/it]03/05/2025 16:47:44 - INFO - __main__ -   测试:204

03/05/2025 16:48:29 - INFO - __main__ -   Success rate: 94.07%

03/05/2025 16:48:29 - INFO - __main__ -   Successful items count: 111

03/05/2025 16:48:29 - INFO - __main__ -   Total count: 118

03/05/2025 16:48:29 - INFO - __main__ -   Index: 204

Number of variable_names extracted:  4
Generating population204...
	 0  --most gap 0.04880473017692566
	 1  --most gap 0.04880473017692566
	 2  --most gap 0.04880473017692566
两轮结果未更新,Changing code structure...
	 3  --most gap 0.04880473017692566
	 4  --most gap 0.0835244357585907
	 5  --most gap 0.0835244357585907
	 6  --most gap 0.0835244357585907
	 7  --most gap 0.0835244357585907
两轮结果未更新,Changing code structure...
	 8  --most gap 0.0835244357585907
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  51%|█████▏    | 205/400 [1:56:08<54:44, 16.84s/it]03/05/2025 16:48:29 - INFO - __main__ -   测试:205

03/05/2025 16:48:31 - INFO - __main__ -   Success rate: 94.12%

03/05/2025 16:48:31 - INFO - __main__ -   Successful items count: 112

03/05/2025 16:48:31 - INFO - __main__ -   Total count: 119

03/05/2025 16:48:31 - INFO - __main__ -   Index: 205

Number of variable_names extracted:  12
Generating population205...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 206/400 [1:56:11<45:26, 14.05s/it]03/05/2025 16:48:31 - INFO - __main__ -   测试:206

03/05/2025 16:48:46 - INFO - __main__ -   Success rate: 94.17%

03/05/2025 16:48:46 - INFO - __main__ -   Successful items count: 113

03/05/2025 16:48:46 - INFO - __main__ -   Total count: 120

03/05/2025 16:48:46 - INFO - __main__ -   Index: 206

Number of variable_names extracted:  4
Generating population206...
	 0  --most gap 0.05647188425064087
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 207/400 [1:56:25<45:33, 14.16s/it]03/05/2025 16:48:46 - INFO - __main__ -   测试:207

03/05/2025 16:49:43 - INFO - __main__ -   Success rate: 94.21%

03/05/2025 16:49:43 - INFO - __main__ -   Successful items count: 114

03/05/2025 16:49:43 - INFO - __main__ -   Total count: 121

03/05/2025 16:49:43 - INFO - __main__ -   Index: 207

Number of variable_names extracted:  6
Generating population207...
	 0  --most gap 0.05969245731830597
	 1  --most gap 0.08072619140148163
	 2  --most gap 0.09924738109111786
	 3  --most gap 0.17489422857761383
	 4  --most gap 0.17489422857761383
	 5  --most gap 0.32562805712223053
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 208/400 [1:57:22<1:17:26, 24.20s/it]03/05/2025 16:49:43 - INFO - __main__ -   测试:208

03/05/2025 16:50:29 - INFO - __main__ -   Success rate: 94.26%

03/05/2025 16:50:29 - INFO - __main__ -   Successful items count: 115

03/05/2025 16:50:29 - INFO - __main__ -   Total count: 122

03/05/2025 16:50:29 - INFO - __main__ -   Index: 208

Number of variable_names extracted:  9
Generating population208...
	 0  --most gap 0.07536876
	 1  --most gap 0.07536876
	 2  --most gap 0.07536876
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 209/400 [1:58:08<1:34:37, 29.73s/it]03/05/2025 16:50:29 - INFO - __main__ -   测试:209

03/05/2025 16:50:40 - INFO - __main__ -   Success rate: 94.31%

03/05/2025 16:50:40 - INFO - __main__ -   Successful items count: 116

03/05/2025 16:50:40 - INFO - __main__ -   Total count: 123

03/05/2025 16:50:40 - INFO - __main__ -   Index: 209

Number of variable_names extracted:  1
Generating population209...
	 0  --most gap 0.027392507
	 1  --most gap 0.027392507
	 2  --most gap 0.027392507
两轮结果未更新,Changing code structure...
	 3  --most gap 0.027392507
	 4  --most gap 0.027392507
	 5  --most gap 0.027392507
两轮结果未更新,Changing code structure...
	 6  --most gap 0.027392507
	 7  --most gap 0.027392507
	 8  --most gap 0.027392507
两轮结果未更新,Changing code structure...
	 9  --most gap 0.027392507
	 10  --most gap 0.027392507
	 11  --most gap 0.027392507
两轮结果未更新,Changing code structure...
	 12  --most gap 0.027392507
	 13  --most gap 0.027392507
	 14  --most gap 0.027392507
两轮结果未更新,Changing code structure...
	 15  --most gap 0.027392507
	 16  --most gap 0.027392507
	 17  --most gap 0.027392507
两轮结果未更新,Changing code structure...
	 18  --most gap 0.027392507
	 19  --most gap 0.027392507
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  52%|█████▎    | 210/400 [1:58:20<1:19:09, 25.00s/it]03/05/2025 16:50:40 - INFO - __main__ -   测试:210

03/05/2025 16:50:40 - INFO - __main__ -   Attack failed!

03/05/2025 16:50:40 - INFO - __main__ -   测试:211

03/05/2025 16:52:37 - INFO - __main__ -   Success rate: 94.35%

03/05/2025 16:52:37 - INFO - __main__ -   Successful items count: 117

03/05/2025 16:52:37 - INFO - __main__ -   Total count: 124

03/05/2025 16:52:37 - INFO - __main__ -   Index: 211

The original code is misclassified.
Number of variable_names extracted:  9
Generating population211...
	 0  --most gap 0.036272019147872925
	 1  --most gap 0.036272019147872925
	 2  --most gap 0.036272019147872925
两轮结果未更新,Changing code structure...
	 3  --most gap 0.05182507634162903
	 4  --most gap 0.05182507634162903
	 5  --most gap 0.05182507634162903
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  53%|█████▎    | 212/400 [2:00:16<2:03:07, 39.30s/it]03/05/2025 16:52:37 - INFO - __main__ -   测试:212

03/05/2025 16:52:37 - INFO - __main__ -   Attack failed!

03/05/2025 16:52:37 - INFO - __main__ -   测试:213

03/05/2025 16:52:38 - INFO - __main__ -   Success rate: 94.40%

03/05/2025 16:52:38 - INFO - __main__ -   Successful items count: 118

03/05/2025 16:52:38 - INFO - __main__ -   Total count: 125

03/05/2025 16:52:38 - INFO - __main__ -   Index: 213

The original code is misclassified.
Number of variable_names extracted:  4
Generating population213...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  54%|█████▎    | 214/400 [2:00:17<1:16:04, 24.54s/it]03/05/2025 16:52:38 - INFO - __main__ -   测试:214

03/05/2025 16:52:38 - INFO - __main__ -   Attack failed!

03/05/2025 16:52:38 - INFO - __main__ -   测试:215

03/05/2025 16:52:38 - INFO - __main__ -   Attack failed!

03/05/2025 16:52:38 - INFO - __main__ -   测试:216

03/05/2025 16:52:39 - INFO - __main__ -   Success rate: 94.44%

03/05/2025 16:52:39 - INFO - __main__ -   Successful items count: 119

03/05/2025 16:52:39 - INFO - __main__ -   Total count: 126

03/05/2025 16:52:39 - INFO - __main__ -   Index: 216

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population216...
init SUCCESS!
Processing examples:  54%|█████▍    | 217/400 [2:00:18<41:26, 13.59s/it]  03/05/2025 16:52:39 - INFO - __main__ -   测试:217

03/05/2025 16:52:39 - INFO - __main__ -   Attack failed!

03/05/2025 16:52:39 - INFO - __main__ -   测试:218

03/05/2025 16:52:39 - INFO - __main__ -   Attack failed!

03/05/2025 16:52:39 - INFO - __main__ -   测试:219

03/05/2025 16:52:39 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  55%|█████▌    | 220/400 [2:00:18<24:52,  8.29s/it]03/05/2025 16:52:39 - INFO - __main__ -   测试:220

03/05/2025 16:52:39 - INFO - __main__ -   Success rate: 94.49%

03/05/2025 16:52:39 - INFO - __main__ -   Successful items count: 120

03/05/2025 16:52:39 - INFO - __main__ -   Total count: 127

03/05/2025 16:52:39 - INFO - __main__ -   Index: 220

03/05/2025 16:52:39 - INFO - __main__ -   测试:221

03/05/2025 16:52:39 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  8
Generating population220...
init SUCCESS!
The original code is misclassified.
Processing examples:  56%|█████▌    | 222/400 [2:00:18<17:58,  6.06s/it]03/05/2025 16:52:39 - INFO - __main__ -   测试:222

Number of variable_names extracted:  6
Generating population222...
	 0  --most gap 0.019238472
	 1  --most gap 0.019238472
Processing examples:  56%|█████▌    | 222/400 [2:00:38<17:58,  6.06s/it]03/05/2025 16:57:32 - INFO - __main__ -   Success rate: 94.53%

03/05/2025 16:57:32 - INFO - __main__ -   Successful items count: 121

03/05/2025 16:57:32 - INFO - __main__ -   Total count: 128

03/05/2025 16:57:32 - INFO - __main__ -   Index: 222

	 2  --most gap 0.022234797
	 3  --most gap 0.022234797
	 4  --most gap 0.028347075
	 5  --most gap 0.042832136
	 6  --most gap 0.042832136
	 7  --most gap 0.042832136
	 8  --most gap 0.042832136
两轮结果未更新,Changing code structure...
	 9  --most gap 0.06249261
	 10  --most gap 0.06249261
	 11  --most gap 0.06249261
	 12  --most gap 0.06249261
两轮结果未更新,Changing code structure...
	 13  --most gap 0.06249261
	 14  --most gap 0.06249261
	 15  --most gap 0.06249261
两轮结果未更新,Changing code structure...
	 16  --most gap 0.06249261
	 17  --most gap 0.06249261
	 18  --most gap 0.06249261
两轮结果未更新,Changing code structure...
	 19  --most gap 0.06249261
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  56%|█████▌    | 223/400 [2:05:12<2:35:26, 52.69s/it]03/05/2025 16:57:32 - INFO - __main__ -   测试:223

03/05/2025 16:57:32 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  56%|█████▌    | 224/400 [2:05:12<2:05:40, 42.84s/it]03/05/2025 16:57:32 - INFO - __main__ -   测试:224

03/05/2025 16:57:35 - INFO - __main__ -   Success rate: 94.57%

03/05/2025 16:57:35 - INFO - __main__ -   Successful items count: 122

03/05/2025 16:57:35 - INFO - __main__ -   Total count: 129

03/05/2025 16:57:35 - INFO - __main__ -   Index: 224

Number of variable_names extracted:  10
Generating population224...
init SUCCESS!
Processing examples:  56%|█████▋    | 225/400 [2:05:14<1:39:45, 34.20s/it]03/05/2025 16:57:35 - INFO - __main__ -   测试:225

03/05/2025 16:57:35 - INFO - __main__ -   Success rate: 94.62%

03/05/2025 16:57:35 - INFO - __main__ -   Successful items count: 123

03/05/2025 16:57:35 - INFO - __main__ -   Total count: 130

03/05/2025 16:57:35 - INFO - __main__ -   Index: 225

Number of variable_names extracted:  6
Generating population225...
init SUCCESS!
Processing examples:  56%|█████▋    | 226/400 [2:05:14<1:16:19, 26.32s/it]03/05/2025 16:57:35 - INFO - __main__ -   测试:226

03/05/2025 16:57:35 - INFO - __main__ -   Attack failed!

03/05/2025 16:57:35 - INFO - __main__ -   测试:227

03/05/2025 16:57:35 - INFO - __main__ -   Attack failed!

03/05/2025 16:57:35 - INFO - __main__ -   测试:228

03/05/2025 16:59:10 - INFO - __main__ -   Success rate: 93.89%

03/05/2025 16:59:10 - INFO - __main__ -   Successful items count: 123

03/05/2025 16:59:10 - INFO - __main__ -   Total count: 131

03/05/2025 16:59:10 - INFO - __main__ -   Index: 228

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population228...
	 0  --most gap 0.028266264591366053
	 1  --most gap 0.05257553840056062
	 2  --most gap 0.05257553840056062
	 3  --most gap 0.05257553840056062
	 4  --most gap 0.05257553840056062
两轮结果未更新,Changing code structure...
	 5  --most gap 0.05257553840056062
	 6  --most gap 0.05257553840056062
	 7  --most gap 0.05257553840056062
两轮结果未更新,Changing code structure...
	 8  --most gap 0.05257553840056062
	 9  --most gap 0.05257553840056062
	 10  --most gap 0.05257553840056062
两轮结果未更新,Changing code structure...
	 11  --most gap 0.05257553840056062
	 12  --most gap 0.05257553840056062
	 13  --most gap 0.05257553840056062
两轮结果未更新,Changing code structure...
	 14  --most gap 0.05257553840056062
	 15  --most gap 0.2014587284065783
	 16  --most gap 0.2014587284065783
	 17  --most gap 0.2014587284065783
	 18  --most gap 0.2014587284065783
两轮结果未更新,Changing code structure...
	 19  --most gap 0.2014587284065783
Changing code structure...
Processing examples:  57%|█████▋    | 229/400 [2:06:50<1:22:47, 29.05s/it]03/05/2025 16:59:10 - INFO - __main__ -   测试:229

03/05/2025 16:59:10 - INFO - __main__ -   Attack failed!

03/05/2025 16:59:10 - INFO - __main__ -   测试:230

03/05/2025 16:59:32 - INFO - __main__ -   Success rate: 93.94%

03/05/2025 16:59:32 - INFO - __main__ -   Successful items count: 124

03/05/2025 16:59:32 - INFO - __main__ -   Total count: 132

03/05/2025 16:59:32 - INFO - __main__ -   Index: 230

The original code is misclassified.
Number of variable_names extracted:  2
Generating population230...
	 0  --most gap 0.07008674740791321
	 1  --most gap 0.07008692622184753
	 2  --most gap 0.07008692622184753
	 3  --most gap 0.07008692622184753
	 4  --most gap 0.07008692622184753
两轮结果未更新,Changing code structure...
	 5  --most gap 0.07008692622184753
	 6  --most gap 0.07008692622184753
	 7  --most gap 0.07008692622184753
两轮结果未更新,Changing code structure...
	 8  --most gap 0.07008692622184753
	 9  --most gap 0.07008692622184753
	 10  --most gap 0.07008692622184753
两轮结果未更新,Changing code structure...
	 11  --most gap 0.07008692622184753
	 12  --most gap 0.07008692622184753
	 13  --most gap 0.07008692622184753
两轮结果未更新,Changing code structure...
	 14  --most gap 0.07008692622184753
	 15  --most gap 0.07008692622184753
	 16  --most gap 0.07008692622184753
两轮结果未更新,Changing code structure...
	 17  --most gap 0.07008692622184753
	 18  --most gap 0.07008692622184753
	 19  --most gap 0.07008692622184753
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  58%|█████▊    | 231/400 [2:07:11<1:05:09, 23.13s/it]03/05/2025 16:59:32 - INFO - __main__ -   测试:231

03/05/2025 16:59:37 - INFO - __main__ -   Success rate: 93.98%

03/05/2025 16:59:37 - INFO - __main__ -   Successful items count: 125

03/05/2025 16:59:37 - INFO - __main__ -   Total count: 133

03/05/2025 16:59:37 - INFO - __main__ -   Index: 231

Number of variable_names extracted:  4
Generating population231...
	 0  --most gap 0.007601529359817505
	 1  --most gap 0.013180017471313477
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  58%|█████▊    | 232/400 [2:07:17<55:44, 19.91s/it]  03/05/2025 16:59:37 - INFO - __main__ -   测试:232

03/05/2025 17:00:16 - INFO - __main__ -   Success rate: 94.03%

03/05/2025 17:00:16 - INFO - __main__ -   Successful items count: 126

03/05/2025 17:00:16 - INFO - __main__ -   Total count: 134

03/05/2025 17:00:16 - INFO - __main__ -   Index: 232

Number of variable_names extracted:  13
Generating population232...
init SUCCESS!
Processing examples:  58%|█████▊    | 233/400 [2:07:56<1:06:28, 23.88s/it]03/05/2025 17:00:16 - INFO - __main__ -   测试:233

03/05/2025 17:00:17 - INFO - __main__ -   Success rate: 94.07%

03/05/2025 17:00:17 - INFO - __main__ -   Successful items count: 127

03/05/2025 17:00:17 - INFO - __main__ -   Total count: 135

03/05/2025 17:00:17 - INFO - __main__ -   Index: 233

Number of variable_names extracted:  4
Generating population233...
	 0  --most gap 0.046285480260849
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  58%|█████▊    | 234/400 [2:07:57<51:25, 18.59s/it]  03/05/2025 17:00:17 - INFO - __main__ -   测试:234

03/05/2025 17:00:17 - INFO - __main__ -   Attack failed!

03/05/2025 17:00:17 - INFO - __main__ -   测试:235

03/05/2025 17:00:27 - INFO - __main__ -   Success rate: 94.12%

03/05/2025 17:00:27 - INFO - __main__ -   Successful items count: 128

03/05/2025 17:00:27 - INFO - __main__ -   Total count: 136

03/05/2025 17:00:27 - INFO - __main__ -   Index: 235

The original code is misclassified.
Number of variable_names extracted:  1
Generating population235...
	 0  --most gap 0.09070314466953278
	 1  --most gap 0.09070314466953278
	 2  --most gap 0.09070314466953278
两轮结果未更新,Changing code structure...
	 3  --most gap 0.09070314466953278
	 4  --most gap 0.09070314466953278
	 5  --most gap 0.09070314466953278
两轮结果未更新,Changing code structure...
	 6  --most gap 0.09070314466953278
	 7  --most gap 0.09070314466953278
	 8  --most gap 0.09070314466953278
两轮结果未更新,Changing code structure...
	 9  --most gap 0.09070314466953278
	 10  --most gap 0.09070314466953278
	 11  --most gap 0.09070314466953278
两轮结果未更新,Changing code structure...
	 12  --most gap 0.09070314466953278
	 13  --most gap 0.09070314466953278
	 14  --most gap 0.09070314466953278
两轮结果未更新,Changing code structure...
	 15  --most gap 0.09070314466953278
	 16  --most gap 0.09070314466953278
	 17  --most gap 0.09070314466953278
两轮结果未更新,Changing code structure...
	 18  --most gap 0.09070314466953278
	 19  --most gap 0.09070314466953278
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  59%|█████▉    | 236/400 [2:08:06<35:45, 13.08s/it]03/05/2025 17:00:27 - INFO - __main__ -   测试:236

03/05/2025 17:00:28 - INFO - __main__ -   Success rate: 94.16%

03/05/2025 17:00:28 - INFO - __main__ -   Successful items count: 129

03/05/2025 17:00:28 - INFO - __main__ -   Total count: 137

03/05/2025 17:00:28 - INFO - __main__ -   Index: 236

Number of variable_names extracted:  6
Generating population236...
init SUCCESS!
Processing examples:  59%|█████▉    | 237/400 [2:08:08<28:41, 10.56s/it]03/05/2025 17:00:28 - INFO - __main__ -   测试:237

03/05/2025 17:00:28 - INFO - __main__ -   Attack failed!

03/05/2025 17:00:28 - INFO - __main__ -   测试:238

03/05/2025 17:00:28 - INFO - __main__ -   Attack failed!

03/05/2025 17:00:28 - INFO - __main__ -   测试:239

03/05/2025 17:03:00 - INFO - __main__ -   Success rate: 93.48%

03/05/2025 17:03:00 - INFO - __main__ -   Successful items count: 129

03/05/2025 17:03:00 - INFO - __main__ -   Total count: 138

03/05/2025 17:03:00 - INFO - __main__ -   Index: 239

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  4
Generating population239...
	 0  --most gap 0.006560215726494789
	 1  --most gap 0.01208411529660225
	 2  --most gap 0.057012876495718956
	 3  --most gap 0.057012876495718956
	 4  --most gap 0.057012876495718956
	 5  --most gap 0.057012876495718956
两轮结果未更新,Changing code structure...
	 6  --most gap 0.057012876495718956
	 7  --most gap 0.057012876495718956
	 8  --most gap 0.057012876495718956
两轮结果未更新,Changing code structure...
	 9  --most gap 0.057012876495718956
	 10  --most gap 0.057012876495718956
	 11  --most gap 0.10240772180259228
	 12  --most gap 0.10240772180259228
	 13  --most gap 0.10240772180259228
	 14  --most gap 0.10240772180259228
两轮结果未更新,Changing code structure...
	 15  --most gap 0.10240772180259228
	 16  --most gap 0.10240772180259228
	 17  --most gap 0.10240772180259228
两轮结果未更新,Changing code structure...
	 18  --most gap 0.10240772180259228
	 19  --most gap 0.10240772180259228
Changing code structure...
Processing examples:  60%|██████    | 240/400 [2:10:40<1:20:04, 30.03s/it]03/05/2025 17:03:00 - INFO - __main__ -   测试:240

03/05/2025 17:04:45 - INFO - __main__ -   Success rate: 93.53%

03/05/2025 17:04:45 - INFO - __main__ -   Successful items count: 130

03/05/2025 17:04:45 - INFO - __main__ -   Total count: 139

03/05/2025 17:04:45 - INFO - __main__ -   Index: 240

Number of variable_names extracted:  3
Generating population240...
	 0  --most gap 0
	 1  --most gap 0.08281484246253967
	 2  --most gap 0.0859096348285675
	 3  --most gap 0.0859096348285675
	 4  --most gap 0.0859096348285675
	 5  --most gap 0.0859096348285675
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0859096348285675
	 7  --most gap 0.0859096348285675
	 8  --most gap 0.0859096348285675
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0859096348285675
	 10  --most gap 0.0859096348285675
	 11  --most gap 0.0859096348285675
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0859096348285675
	 13  --most gap 0.0859096348285675
	 14  --most gap 0.0859096348285675
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0859096348285675
	 16  --most gap 0.0859096348285675
	 17  --most gap 0.0859096348285675
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0859096348285675
	 19  --most gap 0.0859096348285675
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  60%|██████    | 241/400 [2:12:25<1:57:00, 44.15s/it]03/05/2025 17:04:45 - INFO - __main__ -   测试:241

03/05/2025 17:05:30 - INFO - __main__ -   Success rate: 93.57%

03/05/2025 17:05:30 - INFO - __main__ -   Successful items count: 131

03/05/2025 17:05:30 - INFO - __main__ -   Total count: 140

03/05/2025 17:05:30 - INFO - __main__ -   Index: 241

Number of variable_names extracted:  6
Generating population241...
	 0  --most gap 0.04188740253448486
	 1  --most gap 0.05603700876235962
	 2  --most gap 0.05952993035316467
	 3  --most gap 0.06969496607780457
	 4  --most gap 0.07649025321006775
	 5  --most gap 0.07649025321006775
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  60%|██████    | 242/400 [2:13:09<1:56:36, 44.28s/it]03/05/2025 17:05:30 - INFO - __main__ -   测试:242

03/05/2025 17:05:30 - INFO - __main__ -   Attack failed!

03/05/2025 17:05:30 - INFO - __main__ -   测试:243

03/05/2025 17:05:44 - INFO - __main__ -   Success rate: 93.62%

03/05/2025 17:05:44 - INFO - __main__ -   Successful items count: 132

03/05/2025 17:05:44 - INFO - __main__ -   Total count: 141

03/05/2025 17:05:44 - INFO - __main__ -   Index: 243

The original code is misclassified.
Number of variable_names extracted:  2
Generating population243...
	 0  --most gap 0.002630651
	 1  --most gap 0.002630651
	 2  --most gap 0.002630651
两轮结果未更新,Changing code structure...
	 3  --most gap 0.002630651
	 4  --most gap 0.002630651
	 5  --most gap 0.002630651
两轮结果未更新,Changing code structure...
	 6  --most gap 0.002630651
	 7  --most gap 0.002630651
	 8  --most gap 0.002630651
两轮结果未更新,Changing code structure...
	 9  --most gap 0.002630651
	 10  --most gap 0.002630651
	 11  --most gap 0.002630651
两轮结果未更新,Changing code structure...
	 12  --most gap 0.002630651
	 13  --most gap 0.002630651
	 14  --most gap 0.002630651
两轮结果未更新,Changing code structure...
	 15  --most gap 0.002630651
	 16  --most gap 0.002630651
	 17  --most gap 0.002630651
两轮结果未更新,Changing code structure...
	 18  --most gap 0.002630651
	 19  --most gap 0.002630651
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  61%|██████    | 244/400 [2:13:23<1:18:30, 30.20s/it]03/05/2025 17:05:44 - INFO - __main__ -   测试:244

03/05/2025 17:05:44 - INFO - __main__ -   Success rate: 93.66%

03/05/2025 17:05:44 - INFO - __main__ -   Successful items count: 133

03/05/2025 17:05:44 - INFO - __main__ -   Total count: 142

03/05/2025 17:05:44 - INFO - __main__ -   Index: 244

Number of variable_names extracted:  2
Generating population244...
init SUCCESS!
Processing examples:  61%|██████▏   | 245/400 [2:13:23<1:01:31, 23.82s/it]03/05/2025 17:05:44 - INFO - __main__ -   测试:245

03/05/2025 17:05:45 - INFO - __main__ -   Success rate: 93.71%

03/05/2025 17:05:45 - INFO - __main__ -   Successful items count: 134

03/05/2025 17:05:45 - INFO - __main__ -   Total count: 143

03/05/2025 17:05:45 - INFO - __main__ -   Index: 245

Number of variable_names extracted:  3
Generating population245...
	 0  --most gap 0.20346586406230927
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  62%|██████▏   | 246/400 [2:13:25<47:41, 18.58s/it]  03/05/2025 17:05:45 - INFO - __main__ -   测试:246

03/05/2025 17:09:24 - INFO - __main__ -   Success rate: 93.06%

03/05/2025 17:09:24 - INFO - __main__ -   Successful items count: 134

03/05/2025 17:09:24 - INFO - __main__ -   Total count: 144

03/05/2025 17:09:24 - INFO - __main__ -   Index: 246

Number of variable_names extracted:  5
Generating population246...
	 0  --most gap 0.06287562847137451
	 1  --most gap 0.07348895072937012
	 2  --most gap 0.1276310682296753
	 3  --most gap 0.1276310682296753
	 4  --most gap 0.12861448526382446
	 5  --most gap 0.15582287311553955
	 6  --most gap 0.15582287311553955
	 7  --most gap 0.15582287311553955
	 8  --most gap 0.15582287311553955
两轮结果未更新,Changing code structure...
	 9  --most gap 0.16800707578659058
	 10  --most gap 0.16800707578659058
	 11  --most gap 0.16800707578659058
	 12  --most gap 0.16800707578659058
两轮结果未更新,Changing code structure...
	 13  --most gap 0.16800707578659058
	 14  --most gap 0.16800707578659058
	 15  --most gap 0.16800707578659058
两轮结果未更新,Changing code structure...
	 16  --most gap 0.16800707578659058
	 17  --most gap 0.16800707578659058
	 18  --most gap 0.16800707578659058
两轮结果未更新,Changing code structure...
	 19  --most gap 0.16800707578659058
Changing code structure...
Processing examples:  62%|██████▏   | 247/400 [2:17:03<2:54:31, 68.44s/it]03/05/2025 17:09:24 - INFO - __main__ -   测试:247

03/05/2025 17:09:31 - INFO - __main__ -   Success rate: 93.10%

03/05/2025 17:09:31 - INFO - __main__ -   Successful items count: 135

03/05/2025 17:09:31 - INFO - __main__ -   Total count: 145

03/05/2025 17:09:31 - INFO - __main__ -   Index: 247

Number of variable_names extracted:  14
Generating population247...
init SUCCESS!
Processing examples:  62%|██████▏   | 248/400 [2:17:11<2:13:00, 52.51s/it]03/05/2025 17:09:31 - INFO - __main__ -   测试:248

03/05/2025 17:09:31 - INFO - __main__ -   Attack failed!

03/05/2025 17:09:31 - INFO - __main__ -   测试:249

03/05/2025 17:09:32 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  62%|██████▎   | 250/400 [2:17:11<1:15:02, 30.02s/it]03/05/2025 17:09:32 - INFO - __main__ -   测试:250

03/05/2025 17:09:32 - INFO - __main__ -   Attack failed!

03/05/2025 17:09:32 - INFO - __main__ -   测试:251

03/05/2025 17:09:32 - INFO - __main__ -   Attack failed!

03/05/2025 17:09:32 - INFO - __main__ -   测试:252

03/05/2025 17:09:35 - INFO - __main__ -   Success rate: 93.15%

03/05/2025 17:09:35 - INFO - __main__ -   Successful items count: 136

03/05/2025 17:09:35 - INFO - __main__ -   Total count: 146

03/05/2025 17:09:35 - INFO - __main__ -   Index: 252

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  7
Generating population252...
	 0  --most gap 0.071316004
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  63%|██████▎   | 253/400 [2:17:14<39:30, 16.12s/it]  03/05/2025 17:09:35 - INFO - __main__ -   测试:253

03/05/2025 17:09:35 - INFO - __main__ -   Success rate: 93.20%

03/05/2025 17:09:35 - INFO - __main__ -   Successful items count: 137

03/05/2025 17:09:35 - INFO - __main__ -   Total count: 147

03/05/2025 17:09:35 - INFO - __main__ -   Index: 253

Number of variable_names extracted:  5
Generating population253...
init SUCCESS!
Processing examples:  64%|██████▎   | 254/400 [2:17:14<32:01, 13.16s/it]03/05/2025 17:09:35 - INFO - __main__ -   测试:254

03/05/2025 17:09:35 - INFO - __main__ -   Attack failed!

03/05/2025 17:09:35 - INFO - __main__ -   测试:255

03/05/2025 17:10:21 - INFO - __main__ -   Success rate: 93.24%

03/05/2025 17:10:21 - INFO - __main__ -   Successful items count: 138

03/05/2025 17:10:21 - INFO - __main__ -   Total count: 148

03/05/2025 17:10:21 - INFO - __main__ -   Index: 255

The original code is misclassified.
Number of variable_names extracted:  5
Generating population255...
	 0  --most gap 0.01986593008041382
	 1  --most gap 0.01986593008041382
	 2  --most gap 0.0892062783241272
	 3  --most gap 0.0892062783241272
	 4  --most gap 0.0892062783241272
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  64%|██████▍   | 256/400 [2:18:00<39:52, 16.62s/it]03/05/2025 17:10:21 - INFO - __main__ -   测试:256

03/05/2025 17:11:05 - INFO - __main__ -   Success rate: 93.29%

03/05/2025 17:11:05 - INFO - __main__ -   Successful items count: 139

03/05/2025 17:11:05 - INFO - __main__ -   Total count: 149

03/05/2025 17:11:05 - INFO - __main__ -   Index: 256

Number of variable_names extracted:  3
Generating population256...
	 0  --most gap 0.04209282994270325
	 1  --most gap 0.04209282994270325
	 2  --most gap 0.04209282994270325
	 3  --most gap 0.04209282994270325
两轮结果未更新,Changing code structure...
	 4  --most gap 0.04209282994270325
	 5  --most gap 0.04209282994270325
	 6  --most gap 0.08383825421333313
	 7  --most gap 0.08383825421333313
	 8  --most gap 0.08383825421333313
	 9  --most gap 0.09259238839149475
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  64%|██████▍   | 257/400 [2:18:45<52:41, 22.11s/it]03/05/2025 17:11:05 - INFO - __main__ -   测试:257

03/05/2025 17:11:43 - INFO - __main__ -   Success rate: 92.67%

03/05/2025 17:11:43 - INFO - __main__ -   Successful items count: 139

03/05/2025 17:11:43 - INFO - __main__ -   Total count: 150

03/05/2025 17:11:43 - INFO - __main__ -   Index: 257

Number of variable_names extracted:  1
Generating population257...
	 0  --most gap 0.040206339210271835
	 1  --most gap 0.040206339210271835
	 2  --most gap 0.040206339210271835
	 3  --most gap 0.040206339210271835
两轮结果未更新,Changing code structure...
	 4  --most gap 0.040206339210271835
	 5  --most gap 0.040206339210271835
	 6  --most gap 0.040206339210271835
两轮结果未更新,Changing code structure...
	 7  --most gap 0.040206339210271835
	 8  --most gap 0.040206339210271835
	 9  --most gap 0.040206339210271835
两轮结果未更新,Changing code structure...
	 10  --most gap 0.040206339210271835
	 11  --most gap 0.040206339210271835
	 12  --most gap 0.040206339210271835
两轮结果未更新,Changing code structure...
	 13  --most gap 0.040206339210271835
	 14  --most gap 0.040206339210271835
	 15  --most gap 0.040206339210271835
两轮结果未更新,Changing code structure...
	 16  --most gap 0.040206339210271835
	 17  --most gap 0.040206339210271835
	 18  --most gap 0.040206339210271835
两轮结果未更新,Changing code structure...
	 19  --most gap 0.040206339210271835
Changing code structure...
Processing examples:  64%|██████▍   | 258/400 [2:19:23<1:00:39, 25.63s/it]03/05/2025 17:11:43 - INFO - __main__ -   测试:258

03/05/2025 17:14:41 - INFO - __main__ -   Success rate: 92.72%

03/05/2025 17:14:41 - INFO - __main__ -   Successful items count: 140

03/05/2025 17:14:41 - INFO - __main__ -   Total count: 151

03/05/2025 17:14:41 - INFO - __main__ -   Index: 258

Number of variable_names extracted:  5
Generating population258...
	 0  --most gap 0.008329160511493683
	 1  --most gap 0.01134507730603218
	 2  --most gap 0.05227627418935299
	 3  --most gap 0.05227627418935299
	 4  --most gap 0.18019728176295757
	 5  --most gap 0.18019728176295757
	 6  --most gap 0.18019728176295757
	 7  --most gap 0.18019728176295757
两轮结果未更新,Changing code structure...
	 8  --most gap 0.18019728176295757
	 9  --most gap 0.3953943233937025
	 10  --most gap 0.3953943233937025
	 11  --most gap 0.3953943233937025
	 12  --most gap 0.3953943233937025
两轮结果未更新,Changing code structure...
	 13  --most gap 0.3953943233937025
	 14  --most gap 0.3953943233937025
	 15  --most gap 0.3953943233937025
两轮结果未更新,Changing code structure...
	 16  --most gap 0.3953943233937025
	 17  --most gap 0.3953943233937025
	 18  --most gap 0.3953943233937025
两轮结果未更新,Changing code structure...
	 19  --most gap 0.3953943233937025
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  65%|██████▍   | 259/400 [2:22:21<2:25:57, 62.11s/it]03/05/2025 17:14:41 - INFO - __main__ -   测试:259

03/05/2025 17:16:47 - INFO - __main__ -   Success rate: 92.11%

03/05/2025 17:16:47 - INFO - __main__ -   Successful items count: 140

03/05/2025 17:16:47 - INFO - __main__ -   Total count: 152

03/05/2025 17:16:47 - INFO - __main__ -   Index: 259

Number of variable_names extracted:  3
Generating population259...
	 0  --most gap 0.06107180751860142
	 1  --most gap 0.06107180751860142
	 2  --most gap 0.06107180751860142
两轮结果未更新,Changing code structure...
	 3  --most gap 0.06107180751860142
	 4  --most gap 0.06107180751860142
	 5  --most gap 0.06107180751860142
两轮结果未更新,Changing code structure...
	 6  --most gap 0.06107180751860142
	 7  --most gap 0.06107180751860142
	 8  --most gap 0.06107180751860142
两轮结果未更新,Changing code structure...
	 9  --most gap 0.12746849842369556
	 10  --most gap 0.12746849842369556
	 11  --most gap 0.12746849842369556
	 12  --most gap 0.12746849842369556
两轮结果未更新,Changing code structure...
	 13  --most gap 0.12746849842369556
	 14  --most gap 0.12746849842369556
	 15  --most gap 0.12746849842369556
两轮结果未更新,Changing code structure...
	 16  --most gap 0.12746849842369556
	 17  --most gap 0.12746849842369556
	 18  --most gap 0.12746849842369556
两轮结果未更新,Changing code structure...
	 19  --most gap 0.12746849842369556
Changing code structure...
Processing examples:  65%|██████▌   | 260/400 [2:24:27<3:03:05, 78.47s/it]03/05/2025 17:16:47 - INFO - __main__ -   测试:260

03/05/2025 17:19:34 - INFO - __main__ -   Success rate: 92.16%

03/05/2025 17:19:34 - INFO - __main__ -   Successful items count: 141

03/05/2025 17:19:34 - INFO - __main__ -   Total count: 153

03/05/2025 17:19:34 - INFO - __main__ -   Index: 260

Number of variable_names extracted:  9
Generating population260...
	 0  --most gap 0.06399774551391602
	 1  --most gap 0.11181890964508057
	 2  --most gap 0.11181890964508057
	 3  --most gap 0.11181890964508057
	 4  --most gap 0.11846581101417542
	 5  --most gap 0.11846581101417542
	 6  --most gap 0.11846581101417542
	 7  --most gap 0.14930814504623413
	 8  --most gap 0.1512106955051422
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  65%|██████▌   | 261/400 [2:27:14<3:56:41, 102.17s/it]03/05/2025 17:19:34 - INFO - __main__ -   测试:261

03/05/2025 17:19:35 - INFO - __main__ -   Success rate: 92.21%

03/05/2025 17:19:35 - INFO - __main__ -   Successful items count: 142

03/05/2025 17:19:35 - INFO - __main__ -   Total count: 154

03/05/2025 17:19:35 - INFO - __main__ -   Index: 261

Number of variable_names extracted:  7
Generating population261...
init SUCCESS!
Processing examples:  66%|██████▌   | 262/400 [2:27:14<2:50:21, 74.07s/it] 03/05/2025 17:19:35 - INFO - __main__ -   测试:262

03/05/2025 17:20:13 - INFO - __main__ -   Success rate: 92.26%

03/05/2025 17:20:13 - INFO - __main__ -   Successful items count: 143

03/05/2025 17:20:13 - INFO - __main__ -   Total count: 155

03/05/2025 17:20:13 - INFO - __main__ -   Index: 262

Number of variable_names extracted:  2
Generating population262...
	 0  --most gap 0.34065294
	 1  --most gap 0.34065294
	 2  --most gap 0.34065294
	 3  --most gap 0.34065294
两轮结果未更新,Changing code structure...
	 4  --most gap 0.34065294
	 5  --most gap 0.34065294
	 6  --most gap 0.34065294
两轮结果未更新,Changing code structure...
	 7  --most gap 0.34065294
	 8  --most gap 0.34065294
	 9  --most gap 0.34065294
两轮结果未更新,Changing code structure...
	 10  --most gap 0.34065294
	 11  --most gap 0.34065294
	 12  --most gap 0.34065294
两轮结果未更新,Changing code structure...
	 13  --most gap 0.34065294
	 14  --most gap 0.34065294
	 15  --most gap 0.34065294
两轮结果未更新,Changing code structure...
	 16  --most gap 0.34065294
	 17  --most gap 0.34065294
	 18  --most gap 0.34065294
两轮结果未更新,Changing code structure...
	 19  --most gap 0.34065294
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  66%|██████▌   | 263/400 [2:27:53<2:25:59, 63.94s/it]03/05/2025 17:20:13 - INFO - __main__ -   测试:263

03/05/2025 17:20:16 - INFO - __main__ -   Success rate: 92.31%

03/05/2025 17:20:16 - INFO - __main__ -   Successful items count: 144

03/05/2025 17:20:16 - INFO - __main__ -   Total count: 156

03/05/2025 17:20:16 - INFO - __main__ -   Index: 263

Number of variable_names extracted:  7
Generating population263...
init SUCCESS!
Processing examples:  66%|██████▌   | 264/400 [2:27:55<1:44:49, 46.25s/it]03/05/2025 17:20:16 - INFO - __main__ -   测试:264

03/05/2025 17:20:18 - INFO - __main__ -   Success rate: 92.36%

03/05/2025 17:20:18 - INFO - __main__ -   Successful items count: 145

03/05/2025 17:20:18 - INFO - __main__ -   Total count: 157

03/05/2025 17:20:18 - INFO - __main__ -   Index: 264

Number of variable_names extracted:  10
Generating population264...
init SUCCESS!
Processing examples:  66%|██████▋   | 265/400 [2:27:57<1:15:04, 33.37s/it]03/05/2025 17:20:18 - INFO - __main__ -   测试:265

03/05/2025 17:20:18 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
03/05/2025 17:20:18 - INFO - __main__ -   Attack failed!

03/05/2025 17:20:18 - INFO - __main__ -   测试:266

03/05/2025 17:21:49 - INFO - __main__ -   Success rate: 92.41%

03/05/2025 17:21:49 - INFO - __main__ -   Successful items count: 146

03/05/2025 17:21:49 - INFO - __main__ -   Total count: 158

03/05/2025 17:21:49 - INFO - __main__ -   Index: 266

No variable_names in the code.
Number of variable_names extracted:  3
Generating population266...
	 0  --most gap 0.034331560134887695
	 1  --most gap 0.09105509519577026
	 2  --most gap 0.09105509519577026
	 3  --most gap 0.09105509519577026
	 4  --most gap 0.09105509519577026
两轮结果未更新,Changing code structure...
	 5  --most gap 0.09105509519577026
	 6  --most gap 0.09105509519577026
	 7  --most gap 0.09105509519577026
两轮结果未更新,Changing code structure...
	 8  --most gap 0.09105509519577026
	 9  --most gap 0.09105509519577026
	 10  --most gap 0.20395195484161377
	 11  --most gap 0.20395195484161377
	 12  --most gap 0.20395195484161377
	 13  --most gap 0.20395195484161377
两轮结果未更新,Changing code structure...
	 14  --most gap 0.20395195484161377
	 15  --most gap 0.20395195484161377
	 16  --most gap 0.20395195484161377
两轮结果未更新,Changing code structure...
	 17  --most gap 0.20395195484161377
	 18  --most gap 0.20395195484161377
	 19  --most gap 0.20395195484161377
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  67%|██████▋   | 267/400 [2:29:28<1:26:12, 38.89s/it]03/05/2025 17:21:49 - INFO - __main__ -   测试:267

03/05/2025 17:23:24 - INFO - __main__ -   Success rate: 92.45%

03/05/2025 17:23:24 - INFO - __main__ -   Successful items count: 147

03/05/2025 17:23:24 - INFO - __main__ -   Total count: 159

03/05/2025 17:23:24 - INFO - __main__ -   Index: 267

Number of variable_names extracted:  3
Generating population267...
	 0  --most gap 0.013871824368834496
	 1  --most gap 0.017069131135940552
	 2  --most gap 0.017069131135940552
	 3  --most gap 0.017069131135940552
	 4  --most gap 0.017069131135940552
两轮结果未更新,Changing code structure...
	 5  --most gap 0.020602097734808922
	 6  --most gap 0.210065433755517
	 7  --most gap 0.210065433755517
	 8  --most gap 0.22248067893087864
	 9  --most gap 0.22248067893087864
	 10  --most gap 0.22248067893087864
	 11  --most gap 0.22248067893087864
两轮结果未更新,Changing code structure...
	 12  --most gap 0.22248067893087864
	 13  --most gap 0.22248067893087864
	 14  --most gap 0.22248067893087864
两轮结果未更新,Changing code structure...
	 15  --most gap 0.22248067893087864
	 16  --most gap 0.22248067893087864
	 17  --most gap 0.22248067893087864
两轮结果未更新,Changing code structure...
	 18  --most gap 0.22248067893087864
	 19  --most gap 0.22248067893087864
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  67%|██████▋   | 268/400 [2:31:04<1:56:12, 52.82s/it]03/05/2025 17:23:24 - INFO - __main__ -   测试:268

03/05/2025 17:25:32 - INFO - __main__ -   Success rate: 92.50%

03/05/2025 17:25:32 - INFO - __main__ -   Successful items count: 148

03/05/2025 17:25:32 - INFO - __main__ -   Total count: 160

03/05/2025 17:25:32 - INFO - __main__ -   Index: 268

Number of variable_names extracted:  8
Generating population268...
	 0  --most gap 0.021302789449691772
	 1  --most gap 0.06576278805732727
	 2  --most gap 0.13213545083999634
	 3  --most gap 0.15420693159103394
	 4  --most gap 0.15420693159103394
	 5  --most gap 0.15420693159103394
	 6  --most gap 0.15420693159103394
两轮结果未更新,Changing code structure...
	 7  --most gap 0.15473806858062744
	 8  --most gap 0.15473806858062744
	 9  --most gap 0.15473806858062744
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  67%|██████▋   | 269/400 [2:33:12<2:37:41, 72.22s/it]03/05/2025 17:25:32 - INFO - __main__ -   测试:269

03/05/2025 17:28:36 - INFO - __main__ -   Success rate: 91.93%

03/05/2025 17:28:36 - INFO - __main__ -   Successful items count: 148

03/05/2025 17:28:36 - INFO - __main__ -   Total count: 161

03/05/2025 17:28:36 - INFO - __main__ -   Index: 269

Number of variable_names extracted:  4
Generating population269...
	 0  --most gap 0.0027779527008533478
	 1  --most gap 0.05209105834364891
	 2  --most gap 0.12127204611897469
	 3  --most gap 0.12127204611897469
	 4  --most gap 0.12127204611897469
	 5  --most gap 0.15393101051449776
	 6  --most gap 0.16381363943219185
	 7  --most gap 0.16381363943219185
	 8  --most gap 0.16381363943219185
	 9  --most gap 0.16381363943219185
两轮结果未更新,Changing code structure...
	 10  --most gap 0.16381363943219185
	 11  --most gap 0.16381363943219185
	 12  --most gap 0.16381363943219185
两轮结果未更新,Changing code structure...
	 13  --most gap 0.16381363943219185
	 14  --most gap 0.16381363943219185
	 15  --most gap 0.16381363943219185
两轮结果未更新,Changing code structure...
	 16  --most gap 0.16381363943219185
	 17  --most gap 0.16381363943219185
	 18  --most gap 0.16381363943219185
两轮结果未更新,Changing code structure...
	 19  --most gap 0.16381363943219185
Changing code structure...
Processing examples:  68%|██████▊   | 270/400 [2:36:16<3:42:07, 102.52s/it]03/05/2025 17:28:36 - INFO - __main__ -   测试:270

03/05/2025 17:31:50 - INFO - __main__ -   Success rate: 91.98%

03/05/2025 17:31:50 - INFO - __main__ -   Successful items count: 149

03/05/2025 17:31:50 - INFO - __main__ -   Total count: 162

03/05/2025 17:31:50 - INFO - __main__ -   Index: 270

Number of variable_names extracted:  4
Generating population270...
	 0  --most gap 0.09068170189857483
	 1  --most gap 0.10560381412506104
	 2  --most gap 0.17981499433517456
	 3  --most gap 0.17981499433517456
	 4  --most gap 0.17981499433517456
	 5  --most gap 0.17981499433517456
两轮结果未更新,Changing code structure...
	 6  --most gap 0.17981499433517456
	 7  --most gap 0.17981499433517456
	 8  --most gap 0.17981499433517456
两轮结果未更新,Changing code structure...
	 9  --most gap 0.17981499433517456
	 10  --most gap 0.17981499433517456
	 11  --most gap 0.17981499433517456
两轮结果未更新,Changing code structure...
	 12  --most gap 0.17981499433517456
	 13  --most gap 0.17981499433517456
	 14  --most gap 0.17981499433517456
两轮结果未更新,Changing code structure...
	 15  --most gap 0.17981499433517456
	 16  --most gap 0.17981499433517456
	 17  --most gap 0.17981499433517456
两轮结果未更新,Changing code structure...
	 18  --most gap 0.17981499433517456
	 19  --most gap 0.17981499433517456
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  68%|██████▊   | 271/400 [2:39:30<4:34:59, 127.90s/it]03/05/2025 17:31:50 - INFO - __main__ -   测试:271

03/05/2025 17:31:52 - INFO - __main__ -   Success rate: 92.02%

03/05/2025 17:31:52 - INFO - __main__ -   Successful items count: 150

03/05/2025 17:31:52 - INFO - __main__ -   Total count: 163

03/05/2025 17:31:52 - INFO - __main__ -   Index: 271

Number of variable_names extracted:  4
Generating population271...
	 0  --most gap 0.10101231932640076
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  68%|██████▊   | 272/400 [2:39:32<3:16:30, 92.11s/it] 03/05/2025 17:31:52 - INFO - __main__ -   测试:272

03/05/2025 17:31:56 - INFO - __main__ -   Success rate: 92.07%

03/05/2025 17:31:56 - INFO - __main__ -   Successful items count: 151

03/05/2025 17:31:56 - INFO - __main__ -   Total count: 164

03/05/2025 17:31:56 - INFO - __main__ -   Index: 272

Number of variable_names extracted:  16
Generating population272...
init SUCCESS!
Processing examples:  68%|██████▊   | 273/400 [2:39:35<2:20:41, 66.47s/it]03/05/2025 17:31:56 - INFO - __main__ -   测试:273

03/05/2025 17:31:56 - INFO - __main__ -   Attack failed!

03/05/2025 17:31:56 - INFO - __main__ -   测试:274

03/05/2025 17:31:56 - INFO - __main__ -   Attack failed!

03/05/2025 17:31:56 - INFO - __main__ -   测试:275

03/05/2025 17:31:56 - INFO - __main__ -   Attack failed!

03/05/2025 17:31:56 - INFO - __main__ -   测试:276

03/05/2025 17:31:56 - INFO - __main__ -   Attack failed!

03/05/2025 17:31:56 - INFO - __main__ -   测试:277

03/05/2025 17:35:02 - INFO - __main__ -   Success rate: 92.12%

03/05/2025 17:35:02 - INFO - __main__ -   Successful items count: 152

03/05/2025 17:35:02 - INFO - __main__ -   Total count: 165

03/05/2025 17:35:02 - INFO - __main__ -   Index: 277

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population277...
	 0  --most gap 0.0937134176492691
	 1  --most gap 0.09371350705623627
	 2  --most gap 0.14462828636169434
	 3  --most gap 0.14462828636169434
	 4  --most gap 0.2002330720424652
	 5  --most gap 0.2002330720424652
	 6  --most gap 0.2079675793647766
	 7  --most gap 0.2079675793647766
	 8  --most gap 0.2079675793647766
	 9  --most gap 0.2079675793647766
两轮结果未更新,Changing code structure...
	 10  --most gap 0.2079675793647766
	 11  --most gap 0.2079675793647766
	 12  --most gap 0.2079675793647766
两轮结果未更新,Changing code structure...
	 13  --most gap 0.2079675793647766
	 14  --most gap 0.2079675793647766
	 15  --most gap 0.2079675793647766
两轮结果未更新,Changing code structure...
	 16  --most gap 0.2079675793647766
	 17  --most gap 0.2079675793647766
	 18  --most gap 0.22019240260124207
	 19  --most gap 0.22019240260124207
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  70%|██████▉   | 278/400 [2:42:41<1:35:08, 46.79s/it]03/05/2025 17:35:02 - INFO - __main__ -   测试:278

03/05/2025 17:35:02 - INFO - __main__ -   Attack failed!

03/05/2025 17:35:02 - INFO - __main__ -   测试:279

03/05/2025 17:35:02 - INFO - __main__ -   Attack failed!

03/05/2025 17:35:02 - INFO - __main__ -   测试:280

03/05/2025 17:35:03 - INFO - __main__ -   Success rate: 92.17%

03/05/2025 17:35:03 - INFO - __main__ -   Successful items count: 153

03/05/2025 17:35:03 - INFO - __main__ -   Total count: 166

03/05/2025 17:35:03 - INFO - __main__ -   Index: 280

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  2
Generating population280...
	 0  --most gap 1.4901161193847656e-07
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  70%|███████   | 281/400 [2:42:42<59:02, 29.77s/it]  03/05/2025 17:35:03 - INFO - __main__ -   测试:281

03/05/2025 17:35:03 - INFO - __main__ -   Attack failed!

03/05/2025 17:35:03 - INFO - __main__ -   测试:282

03/05/2025 17:38:32 - INFO - __main__ -   Success rate: 91.62%

03/05/2025 17:38:32 - INFO - __main__ -   Successful items count: 153

03/05/2025 17:38:32 - INFO - __main__ -   Total count: 167

03/05/2025 17:38:32 - INFO - __main__ -   Index: 282

No variable_names in the code.
Number of variable_names extracted:  5
Generating population282...
	 0  --most gap 0.07909229397773743
	 1  --most gap 0.15961617231369019
	 2  --most gap 0.15961617231369019
	 3  --most gap 0.15961617231369019
	 4  --most gap 0.15961617231369019
两轮结果未更新,Changing code structure...
	 5  --most gap 0.15961617231369019
	 6  --most gap 0.15961617231369019
	 7  --most gap 0.15961617231369019
两轮结果未更新,Changing code structure...
	 8  --most gap 0.1751030683517456
	 9  --most gap 0.1751030683517456
	 10  --most gap 0.1751030683517456
	 11  --most gap 0.1751030683517456
两轮结果未更新,Changing code structure...
	 12  --most gap 0.1751030683517456
	 13  --most gap 0.1751030683517456
	 14  --most gap 0.1751030683517456
两轮结果未更新,Changing code structure...
	 15  --most gap 0.1751030683517456
	 16  --most gap 0.1751030683517456
	 17  --most gap 0.1751030683517456
两轮结果未更新,Changing code structure...
	 18  --most gap 0.1751030683517456
	 19  --most gap 0.1751030683517456
Changing code structure...
Processing examples:  71%|███████   | 283/400 [2:46:11<1:35:42, 49.08s/it]03/05/2025 17:38:32 - INFO - __main__ -   测试:283

03/05/2025 17:39:53 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 17:39:53 - INFO - __main__ -   Successful items count: 154

03/05/2025 17:39:53 - INFO - __main__ -   Total count: 168

03/05/2025 17:39:53 - INFO - __main__ -   Index: 283

Number of variable_names extracted:  3
Generating population283...
	 0  --most gap 0.017500574234873056
	 1  --most gap 0.017500609625130892
	 2  --most gap 0.017500609625130892
	 3  --most gap 0.017500609625130892
	 4  --most gap 0.017500609625130892
两轮结果未更新,Changing code structure...
	 5  --most gap 0.045558320824056864
	 6  --most gap 0.045558320824056864
	 7  --most gap 0.045558320824056864
	 8  --most gap 0.045558320824056864
两轮结果未更新,Changing code structure...
	 9  --most gap 0.045558320824056864
	 10  --most gap 0.045558320824056864
	 11  --most gap 0.045558320824056864
两轮结果未更新,Changing code structure...
	 12  --most gap 0.11430566618219018
	 13  --most gap 0.11430566618219018
	 14  --most gap 0.11430566618219018
	 15  --most gap 0.11430566618219018
两轮结果未更新,Changing code structure...
	 16  --most gap 0.11430566618219018
	 17  --most gap 0.11430566618219018
	 18  --most gap 0.11430566618219018
两轮结果未更新,Changing code structure...
	 19  --most gap 0.11430566618219018
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  71%|███████   | 284/400 [2:47:33<1:44:37, 54.12s/it]03/05/2025 17:39:53 - INFO - __main__ -   测试:284

03/05/2025 17:39:53 - INFO - __main__ -   Attack failed!

03/05/2025 17:39:53 - INFO - __main__ -   测试:285

03/05/2025 17:39:53 - INFO - __main__ -   Attack failed!

03/05/2025 17:39:53 - INFO - __main__ -   测试:286

03/05/2025 17:39:53 - INFO - __main__ -   Attack failed!

03/05/2025 17:39:53 - INFO - __main__ -   测试:287

03/05/2025 17:39:53 - INFO - __main__ -   Attack failed!

03/05/2025 17:39:53 - INFO - __main__ -   测试:288

03/05/2025 17:39:53 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  72%|███████▏  | 289/400 [2:47:33<47:24, 25.63s/it]  03/05/2025 17:39:53 - INFO - __main__ -   测试:289

03/05/2025 17:39:53 - INFO - __main__ -   Attack failed!

03/05/2025 17:39:53 - INFO - __main__ -   测试:290

03/05/2025 17:40:57 - INFO - __main__ -   Success rate: 91.72%

03/05/2025 17:40:57 - INFO - __main__ -   Successful items count: 155

03/05/2025 17:40:57 - INFO - __main__ -   Total count: 169

03/05/2025 17:40:57 - INFO - __main__ -   Index: 290

The original code is misclassified.
Number of variable_names extracted:  1
Generating population290...
	 0  --most gap 0.00017535686492919922
	 1  --most gap 0.1547183245420456
	 2  --most gap 0.1547183245420456
	 3  --most gap 0.1547183245420456
	 4  --most gap 0.1547183245420456
两轮结果未更新,Changing code structure...
	 5  --most gap 0.1547183245420456
	 6  --most gap 0.1547183245420456
	 7  --most gap 0.1547183245420456
两轮结果未更新,Changing code structure...
	 8  --most gap 0.1547183245420456
	 9  --most gap 0.1547183245420456
	 10  --most gap 0.1547183245420456
两轮结果未更新,Changing code structure...
	 11  --most gap 0.1547183245420456
	 12  --most gap 0.1547183245420456
	 13  --most gap 0.1547183245420456
两轮结果未更新,Changing code structure...
	 14  --most gap 0.1547183245420456
	 15  --most gap 0.1547183245420456
	 16  --most gap 0.1547183245420456
两轮结果未更新,Changing code structure...
	 17  --most gap 0.1547183245420456
	 18  --most gap 0.1547183245420456
	 19  --most gap 0.1547183245420456
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  73%|███████▎  | 291/400 [2:48:36<49:08, 27.05s/it]03/05/2025 17:40:57 - INFO - __main__ -   测试:291

03/05/2025 17:40:57 - INFO - __main__ -   Attack failed!

03/05/2025 17:40:57 - INFO - __main__ -   测试:292

03/05/2025 17:40:57 - INFO - __main__ -   Attack failed!

03/05/2025 17:40:57 - INFO - __main__ -   测试:293

03/05/2025 17:40:57 - INFO - __main__ -   Attack failed!

03/05/2025 17:40:57 - INFO - __main__ -   测试:294

03/05/2025 17:40:58 - INFO - __main__ -   Success rate: 91.76%

03/05/2025 17:40:58 - INFO - __main__ -   Successful items count: 156

03/05/2025 17:40:58 - INFO - __main__ -   Total count: 170

03/05/2025 17:40:58 - INFO - __main__ -   Index: 294

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  3
Generating population294...
	 0  --most gap 0.34878075
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  74%|███████▍  | 295/400 [2:48:37<28:39, 16.38s/it]03/05/2025 17:40:58 - INFO - __main__ -   测试:295

03/05/2025 17:40:58 - INFO - __main__ -   Attack failed!

03/05/2025 17:40:58 - INFO - __main__ -   测试:296

03/05/2025 17:40:58 - INFO - __main__ -   Attack failed!

03/05/2025 17:40:58 - INFO - __main__ -   测试:297

03/05/2025 17:40:58 - INFO - __main__ -   Attack failed!

03/05/2025 17:40:58 - INFO - __main__ -   测试:298

03/05/2025 17:40:58 - INFO - __main__ -   Attack failed!

03/05/2025 17:40:58 - INFO - __main__ -   测试:299

03/05/2025 17:41:07 - INFO - __main__ -   Success rate: 91.81%

03/05/2025 17:41:07 - INFO - __main__ -   Successful items count: 157

03/05/2025 17:41:07 - INFO - __main__ -   Total count: 171

03/05/2025 17:41:07 - INFO - __main__ -   Index: 299

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  12
Generating population299...
init SUCCESS!
Processing examples:  75%|███████▌  | 300/400 [2:48:46<17:12, 10.33s/it]03/05/2025 17:41:07 - INFO - __main__ -   测试:300

03/05/2025 17:41:07 - INFO - __main__ -   Success rate: 91.86%

03/05/2025 17:41:07 - INFO - __main__ -   Successful items count: 158

03/05/2025 17:41:07 - INFO - __main__ -   Total count: 172

03/05/2025 17:41:07 - INFO - __main__ -   Index: 300

Number of variable_names extracted:  5
Generating population300...
init SUCCESS!
Processing examples:  75%|███████▌  | 301/400 [2:48:47<15:17,  9.26s/it]03/05/2025 17:41:07 - INFO - __main__ -   测试:301

03/05/2025 17:41:07 - INFO - __main__ -   Attack failed!

03/05/2025 17:41:07 - INFO - __main__ -   测试:302

03/05/2025 17:44:32 - INFO - __main__ -   Success rate: 91.33%

03/05/2025 17:44:32 - INFO - __main__ -   Successful items count: 158

03/05/2025 17:44:32 - INFO - __main__ -   Total count: 173

03/05/2025 17:44:32 - INFO - __main__ -   Index: 302

The original code is misclassified.
Number of variable_names extracted:  4
Generating population302...
	 0  --most gap 0.11070767045021057
	 1  --most gap 0.11070767045021057
	 2  --most gap 0.18740233778953552
	 3  --most gap 0.18740233778953552
	 4  --most gap 0.20813974738121033
	 5  --most gap 0.20813974738121033
	 6  --most gap 0.20813974738121033
	 7  --most gap 0.3656802177429199
	 8  --most gap 0.3656802177429199
	 9  --most gap 0.3656802177429199
	 10  --most gap 0.3656802177429199
两轮结果未更新,Changing code structure...
	 11  --most gap 0.3656802177429199
	 12  --most gap 0.3656802177429199
	 13  --most gap 0.3656802177429199
两轮结果未更新,Changing code structure...
	 14  --most gap 0.3656802177429199
	 15  --most gap 0.3656802177429199
	 16  --most gap 0.3656802177429199
两轮结果未更新,Changing code structure...
	 17  --most gap 0.3656802177429199
	 18  --most gap 0.3656802177429199
	 19  --most gap 0.3656802177429199
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  76%|███████▌  | 303/400 [2:52:12<50:04, 30.97s/it]03/05/2025 17:44:32 - INFO - __main__ -   测试:303

03/05/2025 17:44:32 - INFO - __main__ -   Attack failed!

03/05/2025 17:44:32 - INFO - __main__ -   测试:304

03/05/2025 17:44:33 - INFO - __main__ -   Success rate: 91.38%

03/05/2025 17:44:33 - INFO - __main__ -   Successful items count: 159

03/05/2025 17:44:33 - INFO - __main__ -   Total count: 174

03/05/2025 17:44:33 - INFO - __main__ -   Index: 304

The original code is misclassified.
Number of variable_names extracted:  4
Generating population304...
init SUCCESS!
Processing examples:  76%|███████▋  | 305/400 [2:52:12<36:53, 23.30s/it]03/05/2025 17:44:33 - INFO - __main__ -   测试:305

03/05/2025 17:44:33 - INFO - __main__ -   Attack failed!

03/05/2025 17:44:33 - INFO - __main__ -   测试:306

03/05/2025 17:44:33 - INFO - __main__ -   Attack failed!

03/05/2025 17:44:33 - INFO - __main__ -   测试:307

03/05/2025 17:44:33 - INFO - __main__ -   Success rate: 91.43%

03/05/2025 17:44:33 - INFO - __main__ -   Successful items count: 160

03/05/2025 17:44:33 - INFO - __main__ -   Total count: 175

03/05/2025 17:44:33 - INFO - __main__ -   Index: 307

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  2
Generating population307...
init SUCCESS!
Processing examples:  77%|███████▋  | 308/400 [2:52:13<23:19, 15.21s/it]03/05/2025 17:44:33 - INFO - __main__ -   测试:308

03/05/2025 17:46:08 - INFO - __main__ -   Success rate: 91.48%

03/05/2025 17:46:08 - INFO - __main__ -   Successful items count: 161

03/05/2025 17:46:08 - INFO - __main__ -   Total count: 176

03/05/2025 17:46:08 - INFO - __main__ -   Index: 308

Number of variable_names extracted:  3
Generating population308...
	 0  --most gap 0.045399345457553864
	 1  --most gap 0.045399464666843414
	 2  --most gap 0.045399464666843414
	 3  --most gap 0.17206937819719315
	 4  --most gap 0.17206937819719315
	 5  --most gap 0.17206937819719315
	 6  --most gap 0.17206937819719315
两轮结果未更新,Changing code structure...
	 7  --most gap 0.17206937819719315
	 8  --most gap 0.17206937819719315
	 9  --most gap 0.24896571785211563
	 10  --most gap 0.24896571785211563
	 11  --most gap 0.24896571785211563
	 12  --most gap 0.24896571785211563
两轮结果未更新,Changing code structure...
	 13  --most gap 0.24896571785211563
	 14  --most gap 0.24896571785211563
	 15  --most gap 0.24896571785211563
两轮结果未更新,Changing code structure...
	 16  --most gap 0.24896571785211563
	 17  --most gap 0.24896571785211563
	 18  --most gap 0.24896571785211563
两轮结果未更新,Changing code structure...
	 19  --most gap 0.24896571785211563
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  77%|███████▋  | 309/400 [2:53:47<40:10, 26.49s/it]03/05/2025 17:46:08 - INFO - __main__ -   测试:309

03/05/2025 17:46:08 - INFO - __main__ -   Success rate: 91.53%

03/05/2025 17:46:08 - INFO - __main__ -   Successful items count: 162

03/05/2025 17:46:08 - INFO - __main__ -   Total count: 177

03/05/2025 17:46:08 - INFO - __main__ -   Index: 309

Number of variable_names extracted:  10
Generating population309...
init SUCCESS!
Processing examples:  78%|███████▊  | 310/400 [2:53:47<33:07, 22.08s/it]03/05/2025 17:46:08 - INFO - __main__ -   测试:310

03/05/2025 17:46:08 - INFO - __main__ -   Attack failed!

03/05/2025 17:46:08 - INFO - __main__ -   测试:311

03/05/2025 17:50:25 - INFO - __main__ -   Success rate: 91.57%

03/05/2025 17:50:25 - INFO - __main__ -   Successful items count: 163

03/05/2025 17:50:25 - INFO - __main__ -   Total count: 178

03/05/2025 17:50:25 - INFO - __main__ -   Index: 311

The original code is misclassified.
Number of variable_names extracted:  8
Generating population311...
	 0  --most gap 0.005789399
	 1  --most gap 0.005789399
	 2  --most gap 0.005789399
两轮结果未更新,Changing code structure...
	 3  --most gap 0.005789399
	 4  --most gap 0.005789399
	 5  --most gap 0.005789399
两轮结果未更新,Changing code structure...
	 6  --most gap 0.011912584
	 7  --most gap 0.011912584
	 8  --most gap 0.011912584
	 9  --most gap 0.011912584
两轮结果未更新,Changing code structure...
	 10  --most gap 0.011912584
	 11  --most gap 0.011912584
	 12  --most gap 0.011912584
两轮结果未更新,Changing code structure...
	 13  --most gap 0.011912584
	 14  --most gap 0.011912584
	 15  --most gap 0.011912584
两轮结果未更新,Changing code structure...
	 16  --most gap 0.011912584
	 17  --most gap 0.011912584
	 18  --most gap 0.011912584
两轮结果未更新,Changing code structure...
	 19  --most gap 0.011912584
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  78%|███████▊  | 312/400 [2:58:05<1:23:12, 56.73s/it]03/05/2025 17:50:25 - INFO - __main__ -   测试:312

03/05/2025 17:50:29 - INFO - __main__ -   Success rate: 91.62%

03/05/2025 17:50:29 - INFO - __main__ -   Successful items count: 164

03/05/2025 17:50:29 - INFO - __main__ -   Total count: 179

03/05/2025 17:50:29 - INFO - __main__ -   Index: 312

Number of variable_names extracted:  5
Generating population312...
init SUCCESS!
Processing examples:  78%|███████▊  | 313/400 [2:58:08<1:07:48, 46.77s/it]03/05/2025 17:50:29 - INFO - __main__ -   测试:313

03/05/2025 17:50:43 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 17:50:43 - INFO - __main__ -   Successful items count: 165

03/05/2025 17:50:43 - INFO - __main__ -   Total count: 180

03/05/2025 17:50:43 - INFO - __main__ -   Index: 313

Number of variable_names extracted:  10
Generating population313...
init SUCCESS!
Processing examples:  78%|███████▊  | 314/400 [2:58:22<56:58, 39.75s/it]  03/05/2025 17:50:43 - INFO - __main__ -   测试:314

03/05/2025 17:50:43 - INFO - __main__ -   Success rate: 91.71%

03/05/2025 17:50:43 - INFO - __main__ -   Successful items count: 166

03/05/2025 17:50:43 - INFO - __main__ -   Total count: 181

03/05/2025 17:50:43 - INFO - __main__ -   Index: 314

Number of variable_names extracted:  9
Generating population314...
init SUCCESS!
Processing examples:  79%|███████▉  | 315/400 [2:58:22<43:19, 30.58s/it]03/05/2025 17:50:43 - INFO - __main__ -   测试:315

03/05/2025 17:50:43 - INFO - __main__ -   Attack failed!

03/05/2025 17:50:43 - INFO - __main__ -   测试:316

03/05/2025 17:50:43 - INFO - __main__ -   Attack failed!

03/05/2025 17:50:43 - INFO - __main__ -   测试:317

03/05/2025 17:50:43 - INFO - __main__ -   Attack failed!

03/05/2025 17:50:43 - INFO - __main__ -   测试:318

03/05/2025 17:55:07 - INFO - __main__ -   Success rate: 91.21%

03/05/2025 17:55:07 - INFO - __main__ -   Successful items count: 166

03/05/2025 17:55:07 - INFO - __main__ -   Total count: 182

03/05/2025 17:55:07 - INFO - __main__ -   Index: 318

No variable_names in the code.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  6
Generating population318...
	 0  --most gap 0.03293782100081444
	 1  --most gap 0.032937876880168915
	 2  --most gap 0.054669056087732315
	 3  --most gap 0.1543942280113697
	 4  --most gap 0.24056817963719368
	 5  --most gap 0.24056817963719368
	 6  --most gap 0.24056817963719368
	 7  --most gap 0.24056817963719368
两轮结果未更新,Changing code structure...
	 8  --most gap 0.24125858023762703
	 9  --most gap 0.24125858023762703
	 10  --most gap 0.24125858023762703
	 11  --most gap 0.24125858023762703
两轮结果未更新,Changing code structure...
	 12  --most gap 0.24125858023762703
	 13  --most gap 0.24125858023762703
	 14  --most gap 0.24125858023762703
两轮结果未更新,Changing code structure...
	 15  --most gap 0.24125858023762703
	 16  --most gap 0.24125858023762703
	 17  --most gap 0.24125858023762703
两轮结果未更新,Changing code structure...
	 18  --most gap 0.24125858023762703
	 19  --most gap 0.24125858023762703
Changing code structure...
Processing examples:  80%|███████▉  | 319/400 [3:02:46<1:08:29, 50.73s/it]03/05/2025 17:55:07 - INFO - __main__ -   测试:319

03/05/2025 17:55:25 - INFO - __main__ -   Success rate: 91.26%

03/05/2025 17:55:25 - INFO - __main__ -   Successful items count: 167

03/05/2025 17:55:25 - INFO - __main__ -   Total count: 183

03/05/2025 17:55:25 - INFO - __main__ -   Index: 319

Number of variable_names extracted:  34
Generating population319...
init SUCCESS!
Processing examples:  80%|████████  | 320/400 [3:03:05<1:00:21, 45.27s/it]03/05/2025 17:55:25 - INFO - __main__ -   测试:320

03/05/2025 17:55:27 - INFO - __main__ -   Success rate: 91.30%

03/05/2025 17:55:27 - INFO - __main__ -   Successful items count: 168

03/05/2025 17:55:27 - INFO - __main__ -   Total count: 184

03/05/2025 17:55:27 - INFO - __main__ -   Index: 320

Number of variable_names extracted:  6
Generating population320...
init SUCCESS!
Processing examples:  80%|████████  | 321/400 [3:03:07<48:37, 36.94s/it]  03/05/2025 17:55:27 - INFO - __main__ -   测试:321

03/05/2025 17:55:28 - INFO - __main__ -   Success rate: 91.35%

03/05/2025 17:55:28 - INFO - __main__ -   Successful items count: 169

03/05/2025 17:55:28 - INFO - __main__ -   Total count: 185

03/05/2025 17:55:28 - INFO - __main__ -   Index: 321

Number of variable_names extracted:  8
Generating population321...
init SUCCESS!
Processing examples:  80%|████████  | 322/400 [3:03:08<37:48, 29.09s/it]03/05/2025 17:55:28 - INFO - __main__ -   测试:322

03/05/2025 17:55:28 - INFO - __main__ -   Attack failed!

03/05/2025 17:55:28 - INFO - __main__ -   测试:323

03/05/2025 17:55:28 - INFO - __main__ -   Attack failed!

03/05/2025 17:55:28 - INFO - __main__ -   测试:324

03/05/2025 17:55:30 - INFO - __main__ -   Success rate: 91.40%

03/05/2025 17:55:30 - INFO - __main__ -   Successful items count: 170

03/05/2025 17:55:30 - INFO - __main__ -   Total count: 186

03/05/2025 17:55:30 - INFO - __main__ -   Index: 324

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  15
Generating population324...
init SUCCESS!
Processing examples:  81%|████████▏ | 325/400 [3:03:10<19:08, 15.31s/it]03/05/2025 17:55:30 - INFO - __main__ -   测试:325

03/05/2025 17:55:30 - INFO - __main__ -   Attack failed!

03/05/2025 17:55:30 - INFO - __main__ -   测试:326

03/05/2025 17:55:30 - INFO - __main__ -   Success rate: 91.44%

03/05/2025 17:55:30 - INFO - __main__ -   Successful items count: 171

03/05/2025 17:55:30 - INFO - __main__ -   Total count: 187

03/05/2025 17:55:30 - INFO - __main__ -   Index: 326

The original code is misclassified.
Number of variable_names extracted:  2
Generating population326...
init SUCCESS!
Processing examples:  82%|████████▏ | 327/400 [3:03:10<12:47, 10.51s/it]03/05/2025 17:55:30 - INFO - __main__ -   测试:327

03/05/2025 17:55:30 - INFO - __main__ -   Attack failed!

03/05/2025 17:55:30 - INFO - __main__ -   测试:328

03/05/2025 18:04:00 - INFO - __main__ -   Success rate: 91.49%

03/05/2025 18:04:00 - INFO - __main__ -   Successful items count: 172

03/05/2025 18:04:00 - INFO - __main__ -   Total count: 188

03/05/2025 18:04:00 - INFO - __main__ -   Index: 328

The original code is misclassified.
Number of variable_names extracted:  32
Generating population328...
	 0  --most gap 0.1107930988073349
	 1  --most gap 0.22849254310131073
	 2  --most gap 0.2943297475576401
	 3  --most gap 0.2982056587934494
	 4  --most gap 0.2982056587934494
	 5  --most gap 0.2982056587934494
	 6  --most gap 0.29875214397907257
	 7  --most gap 0.3112199455499649
	 8  --most gap 0.33573953807353973
	 9  --most gap 0.33573953807353973
	 10  --most gap 0.370681956410408
	 11  --most gap 0.370681956410408
	 12  --most gap 0.370681956410408
	 13  --most gap 0.39138324558734894
	 14  --most gap 0.4321758300065994
	 15  --most gap 0.4321758300065994
	 16  --most gap 0.4321758300065994
	 17  --most gap 0.4321758300065994
两轮结果未更新,Changing code structure...
	 18  --most gap 0.44247810542583466
	 19  --most gap 0.44247810542583466
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  82%|████████▏ | 329/400 [3:11:40<1:42:15, 86.41s/it]03/05/2025 18:04:00 - INFO - __main__ -   测试:329

03/05/2025 18:04:20 - INFO - __main__ -   Success rate: 91.53%

03/05/2025 18:04:20 - INFO - __main__ -   Successful items count: 173

03/05/2025 18:04:20 - INFO - __main__ -   Total count: 189

03/05/2025 18:04:20 - INFO - __main__ -   Index: 329

Number of variable_names extracted:  7
Generating population329...
	 0  --most gap 0.2204815223813057
	 1  --most gap 0.22048161178827286
	 2  --most gap 0.3606220856308937
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  82%|████████▎ | 330/400 [3:12:00<1:26:43, 74.33s/it]03/05/2025 18:04:20 - INFO - __main__ -   测试:330

03/05/2025 18:04:21 - INFO - __main__ -   Success rate: 91.58%

03/05/2025 18:04:21 - INFO - __main__ -   Successful items count: 174

03/05/2025 18:04:21 - INFO - __main__ -   Total count: 190

03/05/2025 18:04:21 - INFO - __main__ -   Index: 330

Number of variable_names extracted:  8
Generating population330...
init SUCCESS!
Processing examples:  83%|████████▎ | 331/400 [3:12:01<1:08:09, 59.27s/it]03/05/2025 18:04:21 - INFO - __main__ -   测试:331

03/05/2025 18:09:25 - INFO - __main__ -   Success rate: 91.62%

03/05/2025 18:09:25 - INFO - __main__ -   Successful items count: 175

03/05/2025 18:09:25 - INFO - __main__ -   Total count: 191

03/05/2025 18:09:25 - INFO - __main__ -   Index: 331

Number of variable_names extracted:  35
Generating population331...
	 0  --most gap 0.16265863180160522
	 1  --most gap 0.18176186084747314
	 2  --most gap 0.18176186084747314
	 3  --most gap 0.20659491419792175
	 4  --most gap 0.2102319598197937
	 5  --most gap 0.2281949520111084
	 6  --most gap 0.25456950068473816
	 7  --most gap 0.2634090185165405
	 8  --most gap 0.2634090185165405
	 9  --most gap 0.2634090185165405
	 10  --most gap 0.2830691635608673
	 11  --most gap 0.29064589738845825
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  83%|████████▎ | 332/400 [3:17:05<2:10:08, 114.82s/it]03/05/2025 18:09:25 - INFO - __main__ -   测试:332

03/05/2025 18:09:40 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 18:09:40 - INFO - __main__ -   Successful items count: 176

03/05/2025 18:09:40 - INFO - __main__ -   Total count: 192

03/05/2025 18:09:40 - INFO - __main__ -   Index: 332

Number of variable_names extracted:  16
Generating population332...
init SUCCESS!
Processing examples:  83%|████████▎ | 333/400 [3:17:20<1:40:57, 90.41s/it] 03/05/2025 18:09:40 - INFO - __main__ -   测试:333

03/05/2025 18:09:40 - INFO - __main__ -   Attack failed!

03/05/2025 18:09:40 - INFO - __main__ -   测试:334

03/05/2025 18:10:20 - INFO - __main__ -   Success rate: 91.71%

03/05/2025 18:10:20 - INFO - __main__ -   Successful items count: 177

03/05/2025 18:10:20 - INFO - __main__ -   Total count: 193

03/05/2025 18:10:20 - INFO - __main__ -   Index: 334

The original code is misclassified.
Number of variable_names extracted:  1
Generating population334...
	 0  --most gap 0.05358523
	 1  --most gap 0.05358523
	 2  --most gap 0.05358523
两轮结果未更新,Changing code structure...
	 3  --most gap 0.05358523
	 4  --most gap 0.05358523
	 5  --most gap 0.05358523
两轮结果未更新,Changing code structure...
	 6  --most gap 0.05358523
	 7  --most gap 0.05358523
	 8  --most gap 0.05358523
两轮结果未更新,Changing code structure...
	 9  --most gap 0.05358523
	 10  --most gap 0.05358523
	 11  --most gap 0.05358523
两轮结果未更新,Changing code structure...
	 12  --most gap 0.05358523
	 13  --most gap 0.05358523
	 14  --most gap 0.05358523
两轮结果未更新,Changing code structure...
	 15  --most gap 0.05358523
	 16  --most gap 0.05358523
	 17  --most gap 0.05358523
两轮结果未更新,Changing code structure...
	 18  --most gap 0.05358523
	 19  --most gap 0.05358523
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  84%|████████▍ | 335/400 [3:18:00<1:06:27, 61.35s/it]03/05/2025 18:10:20 - INFO - __main__ -   测试:335

03/05/2025 18:10:20 - INFO - __main__ -   Attack failed!

03/05/2025 18:10:20 - INFO - __main__ -   测试:336

03/05/2025 18:10:27 - INFO - __main__ -   Success rate: 91.75%

03/05/2025 18:10:27 - INFO - __main__ -   Successful items count: 178

03/05/2025 18:10:27 - INFO - __main__ -   Total count: 194

03/05/2025 18:10:27 - INFO - __main__ -   Index: 336

The original code is misclassified.
Number of variable_names extracted:  9
Generating population336...
init SUCCESS!
Processing examples:  84%|████████▍ | 337/400 [3:18:07<41:55, 39.92s/it]  03/05/2025 18:10:27 - INFO - __main__ -   测试:337

03/05/2025 18:10:27 - INFO - __main__ -   Attack failed!

03/05/2025 18:10:27 - INFO - __main__ -   测试:338

03/05/2025 18:10:40 - INFO - __main__ -   Success rate: 91.79%

03/05/2025 18:10:40 - INFO - __main__ -   Successful items count: 179

03/05/2025 18:10:40 - INFO - __main__ -   Total count: 195

03/05/2025 18:10:40 - INFO - __main__ -   Index: 338

The original code is misclassified.
Number of variable_names extracted:  2
Generating population338...
	 0  --most gap 0.15995654463768005
	 1  --most gap 0.15995654463768005
	 2  --most gap 0.15995654463768005
两轮结果未更新,Changing code structure...
	 3  --most gap 0.15995654463768005
	 4  --most gap 0.15995654463768005
	 5  --most gap 0.15995654463768005
两轮结果未更新,Changing code structure...
	 6  --most gap 0.15995654463768005
	 7  --most gap 0.15995654463768005
	 8  --most gap 0.15995654463768005
两轮结果未更新,Changing code structure...
	 9  --most gap 0.15995654463768005
	 10  --most gap 0.15995654463768005
	 11  --most gap 0.15995654463768005
两轮结果未更新,Changing code structure...
	 12  --most gap 0.15995654463768005
	 13  --most gap 0.15995654463768005
	 14  --most gap 0.15995654463768005
两轮结果未更新,Changing code structure...
	 15  --most gap 0.15995654463768005
	 16  --most gap 0.15995654463768005
	 17  --most gap 0.15995654463768005
两轮结果未更新,Changing code structure...
	 18  --most gap 0.15995654463768005
	 19  --most gap 0.15995654463768005
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  85%|████████▍ | 339/400 [3:18:20<28:50, 28.36s/it]03/05/2025 18:10:40 - INFO - __main__ -   测试:339

03/05/2025 18:14:23 - INFO - __main__ -   Success rate: 91.84%

03/05/2025 18:14:23 - INFO - __main__ -   Successful items count: 180

03/05/2025 18:14:23 - INFO - __main__ -   Total count: 196

03/05/2025 18:14:23 - INFO - __main__ -   Index: 339

Number of variable_names extracted:  22
Generating population339...
	 0  --most gap 0.032004863023757935
	 1  --most gap 0.0514242947101593
	 2  --most gap 0.07309597730636597
	 3  --most gap 0.07309597730636597
	 4  --most gap 0.08387792110443115
	 5  --most gap 0.10165932774543762
	 6  --most gap 0.10165932774543762
	 7  --most gap 0.10165932774543762
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  85%|████████▌ | 340/400 [3:22:02<1:06:53, 66.90s/it]03/05/2025 18:14:23 - INFO - __main__ -   测试:340

03/05/2025 18:20:29 - INFO - __main__ -   Success rate: 91.37%

03/05/2025 18:20:29 - INFO - __main__ -   Successful items count: 180

03/05/2025 18:20:29 - INFO - __main__ -   Total count: 197

03/05/2025 18:20:29 - INFO - __main__ -   Index: 340

Number of variable_names extracted:  8
Generating population340...
	 0  --most gap 0.11493804305791855
	 1  --most gap 0.11493804305791855
	 2  --most gap 0.11493804305791855
	 3  --most gap 0.14183535426855087
	 4  --most gap 0.14183535426855087
	 5  --most gap 0.14183535426855087
	 6  --most gap 0.14183535426855087
两轮结果未更新,Changing code structure...
	 7  --most gap 0.2210010215640068
	 8  --most gap 0.2210010215640068
	 9  --most gap 0.2210010215640068
	 10  --most gap 0.2210010215640068
两轮结果未更新,Changing code structure...
	 11  --most gap 0.2210010215640068
	 12  --most gap 0.2210010215640068
	 13  --most gap 0.2210010215640068
两轮结果未更新,Changing code structure...
	 14  --most gap 0.2210010215640068
	 15  --most gap 0.2210010215640068
	 16  --most gap 0.2210010215640068
两轮结果未更新,Changing code structure...
	 17  --most gap 0.2210010215640068
	 18  --most gap 0.2210010215640068
	 19  --most gap 0.2210010215640068
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  85%|████████▌ | 341/400 [3:28:09<2:10:42, 132.93s/it]03/05/2025 18:20:29 - INFO - __main__ -   测试:341

03/05/2025 18:20:34 - INFO - __main__ -   Success rate: 91.41%

03/05/2025 18:20:34 - INFO - __main__ -   Successful items count: 181

03/05/2025 18:20:34 - INFO - __main__ -   Total count: 198

03/05/2025 18:20:34 - INFO - __main__ -   Index: 341

Number of variable_names extracted:  8
Generating population341...
init SUCCESS!
Processing examples:  86%|████████▌ | 342/400 [3:28:13<1:38:49, 102.22s/it]03/05/2025 18:20:34 - INFO - __main__ -   测试:342

03/05/2025 18:20:51 - INFO - __main__ -   Success rate: 91.46%

03/05/2025 18:20:51 - INFO - __main__ -   Successful items count: 182

03/05/2025 18:20:51 - INFO - __main__ -   Total count: 199

03/05/2025 18:20:51 - INFO - __main__ -   Index: 342

Number of variable_names extracted:  6
Generating population342...
	 0  --most gap 0.07092738
	 1  --most gap 0.088189304
	 2  --most gap 0.088189304
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  86%|████████▌ | 343/400 [3:28:30<1:16:23, 80.41s/it] 03/05/2025 18:20:51 - INFO - __main__ -   测试:343

03/05/2025 18:20:58 - INFO - __main__ -   Success rate: 91.50%

03/05/2025 18:20:58 - INFO - __main__ -   Successful items count: 183

03/05/2025 18:20:58 - INFO - __main__ -   Total count: 200

03/05/2025 18:20:58 - INFO - __main__ -   Index: 343

Number of variable_names extracted:  5
Generating population343...
	 0  --most gap 0.1774227
	 1  --most gap 0.2375884
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  86%|████████▌ | 344/400 [3:28:38<56:54, 60.98s/it]  03/05/2025 18:20:58 - INFO - __main__ -   测试:344

03/05/2025 18:20:58 - INFO - __main__ -   Attack failed!

03/05/2025 18:20:58 - INFO - __main__ -   测试:345

03/05/2025 18:20:58 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  86%|████████▋ | 346/400 [3:28:38<31:09, 34.61s/it]03/05/2025 18:20:58 - INFO - __main__ -   测试:346

03/05/2025 18:20:58 - INFO - __main__ -   Success rate: 91.54%

03/05/2025 18:20:58 - INFO - __main__ -   Successful items count: 184

03/05/2025 18:20:58 - INFO - __main__ -   Total count: 201

03/05/2025 18:20:58 - INFO - __main__ -   Index: 346

Number of variable_names extracted:  4
Generating population346...
init SUCCESS!
Processing examples:  87%|████████▋ | 347/400 [3:28:38<23:22, 26.47s/it]03/05/2025 18:20:58 - INFO - __main__ -   测试:347

03/05/2025 18:20:59 - INFO - __main__ -   Success rate: 91.58%

03/05/2025 18:20:59 - INFO - __main__ -   Successful items count: 185

03/05/2025 18:20:59 - INFO - __main__ -   Total count: 202

03/05/2025 18:20:59 - INFO - __main__ -   Index: 347

Number of variable_names extracted:  4
Generating population347...
init SUCCESS!
Processing examples:  87%|████████▋ | 348/400 [3:28:38<17:12, 19.86s/it]03/05/2025 18:20:59 - INFO - __main__ -   测试:348

03/05/2025 18:20:59 - INFO - __main__ -   Attack failed!

03/05/2025 18:20:59 - INFO - __main__ -   测试:349

03/05/2025 18:21:00 - INFO - __main__ -   Success rate: 91.63%

03/05/2025 18:21:00 - INFO - __main__ -   Successful items count: 186

03/05/2025 18:21:00 - INFO - __main__ -   Total count: 203

03/05/2025 18:21:00 - INFO - __main__ -   Index: 349

The original code is misclassified.
Number of variable_names extracted:  5
Generating population349...
	 0  --most gap 0.03847313
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  88%|████████▊ | 350/400 [3:28:40<09:56, 11.92s/it]03/05/2025 18:21:00 - INFO - __main__ -   测试:350

03/05/2025 18:21:01 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 18:21:01 - INFO - __main__ -   Successful items count: 187

03/05/2025 18:21:01 - INFO - __main__ -   Total count: 204

03/05/2025 18:21:01 - INFO - __main__ -   Index: 350

Number of variable_names extracted:  5
Generating population350...
init SUCCESS!
Processing examples:  88%|████████▊ | 351/400 [3:28:40<07:33,  9.26s/it]03/05/2025 18:21:01 - INFO - __main__ -   测试:351

03/05/2025 18:21:02 - INFO - __main__ -   Success rate: 91.71%

03/05/2025 18:21:02 - INFO - __main__ -   Successful items count: 188

03/05/2025 18:21:02 - INFO - __main__ -   Total count: 205

03/05/2025 18:21:02 - INFO - __main__ -   Index: 351

Number of variable_names extracted:  13
Generating population351...
	 0  --most gap 0.12542444
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  88%|████████▊ | 352/400 [3:28:42<05:53,  7.36s/it]03/05/2025 18:21:02 - INFO - __main__ -   测试:352

03/05/2025 18:21:02 - INFO - __main__ -   Attack failed!

03/05/2025 18:21:02 - INFO - __main__ -   测试:353

03/05/2025 18:21:28 - INFO - __main__ -   Success rate: 91.75%

03/05/2025 18:21:28 - INFO - __main__ -   Successful items count: 189

03/05/2025 18:21:28 - INFO - __main__ -   Total count: 206

03/05/2025 18:21:28 - INFO - __main__ -   Index: 353

The original code is misclassified.
Number of variable_names extracted:  3
Generating population353...
	 0  --most gap 0.06037253141403198
	 1  --most gap 0.06037253141403198
	 2  --most gap 0.06544229388237
	 3  --most gap 0.06544229388237
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  88%|████████▊ | 354/400 [3:29:08<07:23,  9.64s/it]03/05/2025 18:21:28 - INFO - __main__ -   测试:354

03/05/2025 18:21:28 - INFO - __main__ -   Success rate: 91.79%

03/05/2025 18:21:28 - INFO - __main__ -   Successful items count: 190

03/05/2025 18:21:28 - INFO - __main__ -   Total count: 207

03/05/2025 18:21:28 - INFO - __main__ -   Index: 354

Number of variable_names extracted:  5
Generating population354...
init SUCCESS!
Processing examples:  89%|████████▉ | 355/400 [3:29:08<05:36,  7.48s/it]03/05/2025 18:21:28 - INFO - __main__ -   测试:355

03/05/2025 18:21:29 - INFO - __main__ -   Success rate: 91.83%

03/05/2025 18:21:29 - INFO - __main__ -   Successful items count: 191

03/05/2025 18:21:29 - INFO - __main__ -   Total count: 208

03/05/2025 18:21:29 - INFO - __main__ -   Index: 355

Number of variable_names extracted:  3
Generating population355...
init SUCCESS!
Processing examples:  89%|████████▉ | 356/400 [3:29:09<04:15,  5.80s/it]03/05/2025 18:21:29 - INFO - __main__ -   测试:356

03/05/2025 18:21:35 - INFO - __main__ -   Success rate: 91.87%

03/05/2025 18:21:35 - INFO - __main__ -   Successful items count: 192

03/05/2025 18:21:35 - INFO - __main__ -   Total count: 209

03/05/2025 18:21:35 - INFO - __main__ -   Index: 356

Number of variable_names extracted:  8
Generating population356...
init SUCCESS!
Processing examples:  89%|████████▉ | 357/400 [3:29:15<04:15,  5.94s/it]03/05/2025 18:21:35 - INFO - __main__ -   测试:357

03/05/2025 18:21:35 - INFO - __main__ -   Attack failed!

03/05/2025 18:21:35 - INFO - __main__ -   测试:358

03/05/2025 18:21:35 - INFO - __main__ -   Attack failed!

03/05/2025 18:21:35 - INFO - __main__ -   测试:359

03/05/2025 18:21:35 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  90%|█████████ | 360/400 [3:29:15<01:53,  2.83s/it]03/05/2025 18:21:35 - INFO - __main__ -   测试:360

03/05/2025 18:25:30 - INFO - __main__ -   Success rate: 91.90%

03/05/2025 18:25:30 - INFO - __main__ -   Successful items count: 193

03/05/2025 18:25:30 - INFO - __main__ -   Total count: 210

03/05/2025 18:25:30 - INFO - __main__ -   Index: 360

Number of variable_names extracted:  4
Generating population360...
	 0  --most gap 0.1707669198513031
	 1  --most gap 0.1707669198513031
	 2  --most gap 0.1707669198513031
两轮结果未更新,Changing code structure...
	 3  --most gap 0.1707669198513031
	 4  --most gap 0.1707669198513031
	 5  --most gap 0.1707669198513031
两轮结果未更新,Changing code structure...
	 6  --most gap 0.1707669198513031
	 7  --most gap 0.21296921372413635
	 8  --most gap 0.21296921372413635
	 9  --most gap 0.21296921372413635
	 10  --most gap 0.21296921372413635
两轮结果未更新,Changing code structure...
	 11  --most gap 0.21296921372413635
	 12  --most gap 0.21296921372413635
	 13  --most gap 0.21296921372413635
两轮结果未更新,Changing code structure...
	 14  --most gap 0.21296921372413635
	 15  --most gap 0.21296921372413635
	 16  --most gap 0.21296921372413635
两轮结果未更新,Changing code structure...
	 17  --most gap 0.21296921372413635
	 18  --most gap 0.21296921372413635
	 19  --most gap 0.21795406937599182
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  90%|█████████ | 361/400 [3:33:10<32:06, 49.40s/it]03/05/2025 18:25:30 - INFO - __main__ -   测试:361

03/05/2025 18:28:03 - INFO - __main__ -   Success rate: 91.94%

03/05/2025 18:28:03 - INFO - __main__ -   Successful items count: 194

03/05/2025 18:28:03 - INFO - __main__ -   Total count: 211

03/05/2025 18:28:03 - INFO - __main__ -   Index: 361

Number of variable_names extracted:  4
Generating population361...
	 0  --most gap 0.06356331706047058
	 1  --most gap 0.06356331706047058
	 2  --most gap 0.06356331706047058
两轮结果未更新,Changing code structure...
	 3  --most gap 0.1452467441558838
	 4  --most gap 0.1452467441558838
	 5  --most gap 0.1452467441558838
	 6  --most gap 0.1452467441558838
两轮结果未更新,Changing code structure...
	 7  --most gap 0.1452467441558838
	 8  --most gap 0.1452467441558838
	 9  --most gap 0.1452467441558838
两轮结果未更新,Changing code structure...
	 10  --most gap 0.2007998526096344
	 11  --most gap 0.2007998526096344
	 12  --most gap 0.23843398690223694
	 13  --most gap 0.23843398690223694
	 14  --most gap 0.23843398690223694
	 15  --most gap 0.23843398690223694
两轮结果未更新,Changing code structure...
	 16  --most gap 0.23843398690223694
	 17  --most gap 0.23843398690223694
	 18  --most gap 0.23843398690223694
两轮结果未更新,Changing code structure...
	 19  --most gap 0.23843398690223694
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  90%|█████████ | 362/400 [3:35:43<45:53, 72.47s/it]03/05/2025 18:28:03 - INFO - __main__ -   测试:362

03/05/2025 18:28:51 - INFO - __main__ -   Success rate: 91.51%

03/05/2025 18:28:51 - INFO - __main__ -   Successful items count: 194

03/05/2025 18:28:51 - INFO - __main__ -   Total count: 212

03/05/2025 18:28:51 - INFO - __main__ -   Index: 362

Number of variable_names extracted:  2
Generating population362...
	 0  --most gap 0.027684122323989868
	 1  --most gap 0.027684122323989868
	 2  --most gap 0.027684122323989868
两轮结果未更新,Changing code structure...
	 3  --most gap 0.027684122323989868
	 4  --most gap 0.027684122323989868
	 5  --most gap 0.027684122323989868
两轮结果未更新,Changing code structure...
	 6  --most gap 0.027684122323989868
	 7  --most gap 0.027684122323989868
	 8  --most gap 0.027684122323989868
两轮结果未更新,Changing code structure...
	 9  --most gap 0.027684122323989868
	 10  --most gap 0.027684122323989868
	 11  --most gap 0.027684122323989868
两轮结果未更新,Changing code structure...
	 12  --most gap 0.027684122323989868
	 13  --most gap 0.027684122323989868
	 14  --most gap 0.027684122323989868
两轮结果未更新,Changing code structure...
	 15  --most gap 0.027684122323989868
	 16  --most gap 0.027684122323989868
	 17  --most gap 0.027684122323989868
两轮结果未更新,Changing code structure...
	 18  --most gap 0.027684122323989868
	 19  --most gap 0.027684122323989868
Changing code structure...
Processing examples:  91%|█████████ | 363/400 [3:36:31<41:03, 66.57s/it]03/05/2025 18:28:51 - INFO - __main__ -   测试:363

03/05/2025 18:32:01 - INFO - __main__ -   Success rate: 91.55%

03/05/2025 18:32:01 - INFO - __main__ -   Successful items count: 195

03/05/2025 18:32:01 - INFO - __main__ -   Total count: 213

03/05/2025 18:32:01 - INFO - __main__ -   Index: 363

Number of variable_names extracted:  5
Generating population363...
	 0  --most gap 0.025145530700683594
	 1  --most gap 0.06633135676383972
	 2  --most gap 0.13492682576179504
	 3  --most gap 0.13492682576179504
	 4  --most gap 0.13492682576179504
	 5  --most gap 0.13492682576179504
两轮结果未更新,Changing code structure...
	 6  --most gap 0.13492682576179504
	 7  --most gap 0.13492682576179504
	 8  --most gap 0.13492682576179504
两轮结果未更新,Changing code structure...
	 9  --most gap 0.13492682576179504
	 10  --most gap 0.13492682576179504
	 11  --most gap 0.13492682576179504
两轮结果未更新,Changing code structure...
	 12  --most gap 0.13492682576179504
	 13  --most gap 0.13492682576179504
	 14  --most gap 0.13492682576179504
两轮结果未更新,Changing code structure...
	 15  --most gap 0.1372191607952118
	 16  --most gap 0.1372191607952118
	 17  --most gap 0.1372191607952118
	 18  --most gap 0.1372191607952118
两轮结果未更新,Changing code structure...
	 19  --most gap 0.1372191607952118
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  91%|█████████ | 364/400 [3:39:40<58:51, 98.10s/it]03/05/2025 18:32:01 - INFO - __main__ -   测试:364

03/05/2025 18:32:17 - INFO - __main__ -   Success rate: 91.59%

03/05/2025 18:32:17 - INFO - __main__ -   Successful items count: 196

03/05/2025 18:32:17 - INFO - __main__ -   Total count: 214

03/05/2025 18:32:17 - INFO - __main__ -   Index: 364

Number of variable_names extracted:  2
Generating population364...
	 0  --most gap 0.009958568960428238
	 1  --most gap 0.01376272737979889
	 2  --most gap 0.01376272737979889
	 3  --most gap 0.01376272737979889
	 4  --most gap 0.01376272737979889
两轮结果未更新,Changing code structure...
	 5  --most gap 0.01376272737979889
	 6  --most gap 0.01376272737979889
	 7  --most gap 0.01376272737979889
两轮结果未更新,Changing code structure...
	 8  --most gap 0.01376272737979889
	 9  --most gap 0.01376272737979889
	 10  --most gap 0.01376272737979889
两轮结果未更新,Changing code structure...
	 11  --most gap 0.01376272737979889
	 12  --most gap 0.01376272737979889
	 13  --most gap 0.01376272737979889
两轮结果未更新,Changing code structure...
	 14  --most gap 0.01376272737979889
	 15  --most gap 0.01376272737979889
	 16  --most gap 0.01376272737979889
两轮结果未更新,Changing code structure...
	 17  --most gap 0.01376272737979889
	 18  --most gap 0.01376272737979889
	 19  --most gap 0.01376272737979889
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  91%|█████████▏| 365/400 [3:39:56<44:21, 76.05s/it]03/05/2025 18:32:17 - INFO - __main__ -   测试:365

03/05/2025 18:33:25 - INFO - __main__ -   Success rate: 91.63%

03/05/2025 18:33:25 - INFO - __main__ -   Successful items count: 197

03/05/2025 18:33:25 - INFO - __main__ -   Total count: 215

03/05/2025 18:33:25 - INFO - __main__ -   Index: 365

Number of variable_names extracted:  5
Generating population365...
	 0  --most gap 0.039989203214645386
	 1  --most gap 0.11025843024253845
	 2  --most gap 0.11025843024253845
	 3  --most gap 0.11025843024253845
	 4  --most gap 0.11025843024253845
两轮结果未更新,Changing code structure...
	 5  --most gap 0.1508556306362152
	 6  --most gap 0.1508556306362152
	 7  --most gap 0.19479703903198242
	 8  --most gap 0.19479703903198242
	 9  --most gap 0.19479703903198242
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 366/400 [3:41:04<41:48, 73.78s/it]03/05/2025 18:33:25 - INFO - __main__ -   测试:366

03/05/2025 18:33:46 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 18:33:46 - INFO - __main__ -   Successful items count: 198

03/05/2025 18:33:46 - INFO - __main__ -   Total count: 216

03/05/2025 18:33:46 - INFO - __main__ -   Index: 366

Number of variable_names extracted:  4
Generating population366...
	 0  --most gap 0.12547659873962402
	 1  --most gap 0.13792455196380615
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 367/400 [3:41:26<32:25, 58.95s/it]03/05/2025 18:33:46 - INFO - __main__ -   测试:367

03/05/2025 18:33:59 - INFO - __main__ -   Success rate: 91.71%

03/05/2025 18:33:59 - INFO - __main__ -   Successful items count: 199

03/05/2025 18:33:59 - INFO - __main__ -   Total count: 217

03/05/2025 18:33:59 - INFO - __main__ -   Index: 367

Number of variable_names extracted:  1
Generating population367...
	 0  --most gap 0.00475040078163147
	 1  --most gap 0.00475040078163147
	 2  --most gap 0.00475040078163147
两轮结果未更新,Changing code structure...
	 3  --most gap 0.00475040078163147
	 4  --most gap 0.00475040078163147
	 5  --most gap 0.00475040078163147
两轮结果未更新,Changing code structure...
	 6  --most gap 0.00475040078163147
	 7  --most gap 0.00475040078163147
	 8  --most gap 0.00475040078163147
两轮结果未更新,Changing code structure...
	 9  --most gap 0.00475040078163147
	 10  --most gap 0.00475040078163147
	 11  --most gap 0.00475040078163147
两轮结果未更新,Changing code structure...
	 12  --most gap 0.00475040078163147
	 13  --most gap 0.00475040078163147
	 14  --most gap 0.00475040078163147
两轮结果未更新,Changing code structure...
	 15  --most gap 0.00475040078163147
	 16  --most gap 0.00475040078163147
	 17  --most gap 0.00475040078163147
两轮结果未更新,Changing code structure...
	 18  --most gap 0.00475040078163147
	 19  --most gap 0.00475040078163147
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  92%|█████████▏| 368/400 [3:41:39<24:23, 45.74s/it]03/05/2025 18:33:59 - INFO - __main__ -   测试:368

03/05/2025 18:37:31 - INFO - __main__ -   Success rate: 91.28%

03/05/2025 18:37:31 - INFO - __main__ -   Successful items count: 199

03/05/2025 18:37:31 - INFO - __main__ -   Total count: 218

03/05/2025 18:37:31 - INFO - __main__ -   Index: 368

Number of variable_names extracted:  8
Generating population368...
	 0  --most gap 0.06698566302657127
	 1  --most gap 0.10201014950871468
	 2  --most gap 0.11605695262551308
	 3  --most gap 0.17117122188210487
	 4  --most gap 0.2777859605848789
	 5  --most gap 0.3643346466124058
	 6  --most gap 0.3643346466124058
	 7  --most gap 0.40649864450097084
	 8  --most gap 0.40649864450097084
	 9  --most gap 0.42940760031342506
	 10  --most gap 0.42940760031342506
	 11  --most gap 0.42940760031342506
	 12  --most gap 0.42940760031342506
两轮结果未更新,Changing code structure...
	 13  --most gap 0.42940760031342506
	 14  --most gap 0.431272242218256
	 15  --most gap 0.431272242218256
	 16  --most gap 0.431272242218256
	 17  --most gap 0.431272242218256
两轮结果未更新,Changing code structure...
	 18  --most gap 0.431272242218256
	 19  --most gap 0.431272242218256
Changing code structure...
Processing examples:  92%|█████████▏| 369/400 [3:45:11<48:42, 94.27s/it]03/05/2025 18:37:31 - INFO - __main__ -   测试:369

03/05/2025 18:40:28 - INFO - __main__ -   Success rate: 91.32%

03/05/2025 18:40:28 - INFO - __main__ -   Successful items count: 200

03/05/2025 18:40:28 - INFO - __main__ -   Total count: 219

03/05/2025 18:40:28 - INFO - __main__ -   Index: 369

Number of variable_names extracted:  7
Generating population369...
	 0  --most gap 0.12246860563755035
	 1  --most gap 0.19440151751041412
	 2  --most gap 0.2180240899324417
	 3  --most gap 0.2180240899324417
	 4  --most gap 0.25822748243808746
	 5  --most gap 0.2972174733877182
	 6  --most gap 0.2972174733877182
	 7  --most gap 0.2972174733877182
	 8  --most gap 0.3170319050550461
	 9  --most gap 0.3170319050550461
	 10  --most gap 0.3170319050550461
	 11  --most gap 0.3170319050550461
两轮结果未更新,Changing code structure...
	 12  --most gap 0.3170319050550461
	 13  --most gap 0.3170319050550461
	 14  --most gap 0.3170319050550461
两轮结果未更新,Changing code structure...
	 15  --most gap 0.3170319050550461
	 16  --most gap 0.3170319050550461
	 17  --most gap 0.3170319050550461
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▎| 370/400 [3:48:07<59:10, 118.36s/it]03/05/2025 18:40:28 - INFO - __main__ -   测试:370

03/05/2025 18:40:28 - INFO - __main__ -   Attack failed!

03/05/2025 18:40:28 - INFO - __main__ -   测试:371

03/05/2025 18:40:28 - INFO - __main__ -   Success rate: 91.36%

03/05/2025 18:40:28 - INFO - __main__ -   Successful items count: 201

03/05/2025 18:40:28 - INFO - __main__ -   Total count: 220

03/05/2025 18:40:28 - INFO - __main__ -   Index: 371

The original code is misclassified.
Number of variable_names extracted:  6
Generating population371...
init SUCCESS!
Processing examples:  93%|█████████▎| 372/400 [3:48:08<30:04, 64.45s/it] 03/05/2025 18:40:28 - INFO - __main__ -   测试:372

03/05/2025 18:42:51 - INFO - __main__ -   Success rate: 91.40%

03/05/2025 18:42:51 - INFO - __main__ -   Successful items count: 202

03/05/2025 18:42:51 - INFO - __main__ -   Total count: 221

03/05/2025 18:42:51 - INFO - __main__ -   Index: 372

Number of variable_names extracted:  3
Generating population372...
	 0  --most gap 0.05465497076511383
	 1  --most gap 0.054655060172080994
	 2  --most gap 0.054655060172080994
	 3  --most gap 0.10127106308937073
	 4  --most gap 0.10127106308937073
	 5  --most gap 0.10127106308937073
	 6  --most gap 0.10127106308937073
两轮结果未更新,Changing code structure...
	 7  --most gap 0.10127106308937073
	 8  --most gap 0.10127106308937073
	 9  --most gap 0.10127106308937073
两轮结果未更新,Changing code structure...
	 10  --most gap 0.10127106308937073
	 11  --most gap 0.10127106308937073
	 12  --most gap 0.10127106308937073
两轮结果未更新,Changing code structure...
	 13  --most gap 0.10127106308937073
	 14  --most gap 0.10127106308937073
	 15  --most gap 0.10127106308937073
两轮结果未更新,Changing code structure...
	 16  --most gap 0.10127106308937073
	 17  --most gap 0.10127106308937073
	 18  --most gap 0.10127106308937073
两轮结果未更新,Changing code structure...
	 19  --most gap 0.10127106308937073
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  93%|█████████▎| 373/400 [3:50:31<37:43, 83.82s/it]03/05/2025 18:42:51 - INFO - __main__ -   测试:373

03/05/2025 18:43:15 - INFO - __main__ -   Success rate: 91.44%

03/05/2025 18:43:15 - INFO - __main__ -   Successful items count: 203

03/05/2025 18:43:15 - INFO - __main__ -   Total count: 222

03/05/2025 18:43:15 - INFO - __main__ -   Index: 373

Number of variable_names extracted:  2
Generating population373...
	 0  --most gap 0.03085482120513916
	 1  --most gap 0.03085482120513916
	 2  --most gap 0.03085482120513916
两轮结果未更新,Changing code structure...
	 3  --most gap 0.03085482120513916
	 4  --most gap 0.03085482120513916
	 5  --most gap 0.03085482120513916
两轮结果未更新,Changing code structure...
	 6  --most gap 0.03085482120513916
	 7  --most gap 0.03085482120513916
	 8  --most gap 0.03085482120513916
两轮结果未更新,Changing code structure...
	 9  --most gap 0.03085482120513916
	 10  --most gap 0.03085482120513916
	 11  --most gap 0.03085482120513916
两轮结果未更新,Changing code structure...
	 12  --most gap 0.03085482120513916
	 13  --most gap 0.03085482120513916
	 14  --most gap 0.03085482120513916
两轮结果未更新,Changing code structure...
	 15  --most gap 0.03085482120513916
	 16  --most gap 0.03085482120513916
	 17  --most gap 0.03085482120513916
两轮结果未更新,Changing code structure...
	 18  --most gap 0.03085482120513916
	 19  --most gap 0.03085482120513916
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  94%|█████████▎| 374/400 [3:50:55<29:35, 68.28s/it]03/05/2025 18:43:15 - INFO - __main__ -   测试:374

03/05/2025 18:43:16 - INFO - __main__ -   Success rate: 91.48%

03/05/2025 18:43:16 - INFO - __main__ -   Successful items count: 204

03/05/2025 18:43:16 - INFO - __main__ -   Total count: 223

03/05/2025 18:43:16 - INFO - __main__ -   Index: 374

Number of variable_names extracted:  5
Generating population374...
init SUCCESS!
Processing examples:  94%|█████████▍| 375/400 [3:50:55<20:45, 49.83s/it]03/05/2025 18:43:16 - INFO - __main__ -   测试:375

03/05/2025 18:43:16 - INFO - __main__ -   Attack failed!

03/05/2025 18:43:16 - INFO - __main__ -   测试:376

03/05/2025 18:43:28 - INFO - __main__ -   Success rate: 91.52%

03/05/2025 18:43:28 - INFO - __main__ -   Successful items count: 205

03/05/2025 18:43:28 - INFO - __main__ -   Total count: 224

03/05/2025 18:43:28 - INFO - __main__ -   Index: 376

The original code is misclassified.
Number of variable_names extracted:  9
Generating population376...
init SUCCESS!
Processing examples:  94%|█████████▍| 377/400 [3:51:07<11:47, 30.76s/it]03/05/2025 18:43:28 - INFO - __main__ -   测试:377

03/05/2025 18:44:54 - INFO - __main__ -   Success rate: 91.56%

03/05/2025 18:44:54 - INFO - __main__ -   Successful items count: 206

03/05/2025 18:44:54 - INFO - __main__ -   Total count: 225

03/05/2025 18:44:54 - INFO - __main__ -   Index: 377

Number of variable_names extracted:  3
Generating population377...
	 0  --most gap 0.006523938849568367
	 1  --most gap 0.006523938849568367
	 2  --most gap 0.006523938849568367
两轮结果未更新,Changing code structure...
	 3  --most gap 0.006523938849568367
	 4  --most gap 0.046566057950258255
	 5  --most gap 0.046566057950258255
	 6  --most gap 0.046566057950258255
	 7  --most gap 0.046566057950258255
两轮结果未更新,Changing code structure...
	 8  --most gap 0.046566057950258255
	 9  --most gap 0.046566057950258255
	 10  --most gap 0.05109129846096039
	 11  --most gap 0.05109129846096039
	 12  --most gap 0.05109129846096039
	 13  --most gap 0.05109129846096039
两轮结果未更新,Changing code structure...
	 14  --most gap 0.05109129846096039
	 15  --most gap 0.05109129846096039
	 16  --most gap 0.05109129846096039
两轮结果未更新,Changing code structure...
	 17  --most gap 0.05109129846096039
	 18  --most gap 0.05109129846096039
	 19  --most gap 0.05109129846096039
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  94%|█████████▍| 378/400 [3:52:33<16:04, 43.85s/it]03/05/2025 18:44:54 - INFO - __main__ -   测试:378

03/05/2025 18:47:33 - INFO - __main__ -   Success rate: 91.59%

03/05/2025 18:47:33 - INFO - __main__ -   Successful items count: 207

03/05/2025 18:47:33 - INFO - __main__ -   Total count: 226

03/05/2025 18:47:33 - INFO - __main__ -   Index: 378

Number of variable_names extracted:  6
Generating population378...
	 0  --most gap 0.13729074224829674
	 1  --most gap 0.13729074224829674
	 2  --most gap 0.13729074224829674
两轮结果未更新,Changing code structure...
	 3  --most gap 0.13729074224829674
	 4  --most gap 0.13729074224829674
	 5  --most gap 0.13729074224829674
两轮结果未更新,Changing code structure...
	 6  --most gap 0.19906621798872948
	 7  --most gap 0.19906621798872948
	 8  --most gap 0.21341177448630333
	 9  --most gap 0.21341177448630333
	 10  --most gap 0.28745540603995323
	 11  --most gap 0.28745540603995323
	 12  --most gap 0.28745540603995323
	 13  --most gap 0.28745540603995323
两轮结果未更新,Changing code structure...
	 14  --most gap 0.28745540603995323
	 15  --most gap 0.28745540603995323
	 16  --most gap 0.28745540603995323
两轮结果未更新,Changing code structure...
	 17  --most gap 0.28745540603995323
	 18  --most gap 0.28745540603995323
	 19  --most gap 0.28745540603995323
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  95%|█████████▍| 379/400 [3:55:13<25:36, 73.19s/it]03/05/2025 18:47:33 - INFO - __main__ -   测试:379

03/05/2025 18:47:46 - INFO - __main__ -   Success rate: 91.63%

03/05/2025 18:47:46 - INFO - __main__ -   Successful items count: 208

03/05/2025 18:47:46 - INFO - __main__ -   Total count: 227

03/05/2025 18:47:46 - INFO - __main__ -   Index: 379

Number of variable_names extracted:  2
Generating population379...
	 0  --most gap 0.03985615074634552
	 1  --most gap 0.12590263783931732
	 2  --most gap 0.12590263783931732
	 3  --most gap 0.12590263783931732
	 4  --most gap 0.12590263783931732
两轮结果未更新,Changing code structure...
	 5  --most gap 0.12590263783931732
	 6  --most gap 0.12590263783931732
	 7  --most gap 0.12590263783931732
两轮结果未更新,Changing code structure...
	 8  --most gap 0.12590263783931732
	 9  --most gap 0.12590263783931732
	 10  --most gap 0.12590263783931732
两轮结果未更新,Changing code structure...
	 11  --most gap 0.12590263783931732
	 12  --most gap 0.12590263783931732
	 13  --most gap 0.12590263783931732
两轮结果未更新,Changing code structure...
	 14  --most gap 0.12590263783931732
	 15  --most gap 0.12590263783931732
	 16  --most gap 0.12590263783931732
两轮结果未更新,Changing code structure...
	 17  --most gap 0.12590263783931732
	 18  --most gap 0.12590263783931732
	 19  --most gap 0.12590263783931732
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  95%|█████████▌| 380/400 [3:55:25<19:00, 57.00s/it]03/05/2025 18:47:46 - INFO - __main__ -   测试:380

03/05/2025 18:51:14 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 18:51:14 - INFO - __main__ -   Successful items count: 209

03/05/2025 18:51:14 - INFO - __main__ -   Total count: 228

03/05/2025 18:51:14 - INFO - __main__ -   Index: 380

Number of variable_names extracted:  8
Generating population380...
	 0  --most gap 0.19516141340136528
	 1  --most gap 0.25973233208060265
	 2  --most gap 0.31534021720290184
	 3  --most gap 0.3542938493192196
	 4  --most gap 0.3542938493192196
	 5  --most gap 0.3542938493192196
	 6  --most gap 0.3542938493192196
两轮结果未更新,Changing code structure...
	 7  --most gap 0.3542938493192196
	 8  --most gap 0.3542938493192196
	 9  --most gap 0.3542938493192196
两轮结果未更新,Changing code structure...
	 10  --most gap 0.41239118203520775
	 11  --most gap 0.41239118203520775
	 12  --most gap 0.41239118203520775
	 13  --most gap 0.41239118203520775
两轮结果未更新,Changing code structure...
	 14  --most gap 0.41239118203520775
	 15  --most gap 0.41239118203520775
	 16  --most gap 0.41239118203520775
两轮结果未更新,Changing code structure...
	 17  --most gap 0.41239118203520775
	 18  --most gap 0.41239118203520775
	 19  --most gap 0.41239118203520775
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  95%|█████████▌| 381/400 [3:58:53<31:14, 98.65s/it]03/05/2025 18:51:14 - INFO - __main__ -   测试:381

03/05/2025 18:51:27 - INFO - __main__ -   Success rate: 91.70%

03/05/2025 18:51:27 - INFO - __main__ -   Successful items count: 210

03/05/2025 18:51:27 - INFO - __main__ -   Total count: 229

03/05/2025 18:51:27 - INFO - __main__ -   Index: 381

Number of variable_names extracted:  2
Generating population381...
	 0  --most gap 0.031078606843948364
	 1  --most gap 0.12476292252540588
	 2  --most gap 0.12476292252540588
	 3  --most gap 0.12476292252540588
	 4  --most gap 0.12476292252540588
两轮结果未更新,Changing code structure...
	 5  --most gap 0.12476292252540588
	 6  --most gap 0.12476292252540588
	 7  --most gap 0.12476292252540588
两轮结果未更新,Changing code structure...
	 8  --most gap 0.12476292252540588
	 9  --most gap 0.12476292252540588
	 10  --most gap 0.12476292252540588
两轮结果未更新,Changing code structure...
	 11  --most gap 0.12476292252540588
	 12  --most gap 0.12476292252540588
	 13  --most gap 0.12476292252540588
两轮结果未更新,Changing code structure...
	 14  --most gap 0.12476292252540588
	 15  --most gap 0.12476292252540588
	 16  --most gap 0.12476292252540588
两轮结果未更新,Changing code structure...
	 17  --most gap 0.12476292252540588
	 18  --most gap 0.12476292252540588
	 19  --most gap 0.12476292252540588
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  96%|█████████▌| 382/400 [3:59:07<22:23, 74.64s/it]03/05/2025 18:51:27 - INFO - __main__ -   测试:382

03/05/2025 18:51:28 - INFO - __main__ -   Attack failed!

03/05/2025 18:51:28 - INFO - __main__ -   测试:383

03/05/2025 18:51:28 - INFO - __main__ -   Attack failed!

03/05/2025 18:51:28 - INFO - __main__ -   测试:384

03/05/2025 18:51:28 - INFO - __main__ -   Attack failed!

03/05/2025 18:51:28 - INFO - __main__ -   测试:385

03/05/2025 18:51:30 - INFO - __main__ -   Success rate: 91.74%

03/05/2025 18:51:30 - INFO - __main__ -   Successful items count: 211

03/05/2025 18:51:30 - INFO - __main__ -   Total count: 230

03/05/2025 18:51:30 - INFO - __main__ -   Index: 385

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  7
Generating population385...
init SUCCESS!
Processing examples:  96%|█████████▋| 386/400 [3:59:10<06:46, 29.03s/it]03/05/2025 18:51:30 - INFO - __main__ -   测试:386

03/05/2025 18:51:30 - INFO - __main__ -   Attack failed!

03/05/2025 18:51:30 - INFO - __main__ -   测试:387

03/05/2025 18:51:31 - INFO - __main__ -   Success rate: 91.77%

03/05/2025 18:51:31 - INFO - __main__ -   Successful items count: 212

03/05/2025 18:51:31 - INFO - __main__ -   Total count: 231

03/05/2025 18:51:31 - INFO - __main__ -   Index: 387

The original code is misclassified.
Number of variable_names extracted:  3
Generating population387...
init SUCCESS!
Processing examples:  97%|█████████▋| 388/400 [3:59:10<04:02, 20.21s/it]03/05/2025 18:51:31 - INFO - __main__ -   测试:388

03/05/2025 18:51:31 - INFO - __main__ -   Attack failed!

03/05/2025 18:51:31 - INFO - __main__ -   测试:389

03/05/2025 18:51:31 - INFO - __main__ -   Attack failed!

03/05/2025 18:51:31 - INFO - __main__ -   测试:390

03/05/2025 18:51:49 - INFO - __main__ -   Success rate: 91.81%

03/05/2025 18:51:49 - INFO - __main__ -   Successful items count: 213

03/05/2025 18:51:49 - INFO - __main__ -   Total count: 232

03/05/2025 18:51:49 - INFO - __main__ -   Index: 390

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  9
Generating population390...
	 0  --most gap 0.09298748
	 1  --most gap 0.094812095
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  98%|█████████▊| 391/400 [3:59:29<02:11, 14.63s/it]03/05/2025 18:51:49 - INFO - __main__ -   测试:391

03/05/2025 18:54:37 - INFO - __main__ -   Success rate: 91.42%

03/05/2025 18:54:37 - INFO - __main__ -   Successful items count: 213

03/05/2025 18:54:37 - INFO - __main__ -   Total count: 233

03/05/2025 18:54:37 - INFO - __main__ -   Index: 391

Number of variable_names extracted:  3
Generating population391...
	 0  --most gap 0.033114016
	 1  --most gap 0.08278847
	 2  --most gap 0.08278847
	 3  --most gap 0.08278847
	 4  --most gap 0.08278847
两轮结果未更新,Changing code structure...
	 5  --most gap 0.08278847
	 6  --most gap 0.08278847
	 7  --most gap 0.08278847
两轮结果未更新,Changing code structure...
	 8  --most gap 0.08278847
	 9  --most gap 0.08278847
	 10  --most gap 0.08278847
两轮结果未更新,Changing code structure...
	 11  --most gap 0.08278847
	 12  --most gap 0.08278847
	 13  --most gap 0.08278847
两轮结果未更新,Changing code structure...
	 14  --most gap 0.08278847
	 15  --most gap 0.08278847
	 16  --most gap 0.08278847
两轮结果未更新,Changing code structure...
	 17  --most gap 0.08278847
	 18  --most gap 0.08278847
	 19  --most gap 0.08278847
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  98%|█████████▊| 392/400 [4:02:16<05:11, 38.89s/it]03/05/2025 18:54:37 - INFO - __main__ -   测试:392

03/05/2025 18:58:29 - INFO - __main__ -   Success rate: 91.45%

03/05/2025 18:58:29 - INFO - __main__ -   Successful items count: 214

03/05/2025 18:58:29 - INFO - __main__ -   Total count: 234

03/05/2025 18:58:29 - INFO - __main__ -   Index: 392

Number of variable_names extracted:  6
Generating population392...
	 0  --most gap 0.1081395074725151
	 1  --most gap 0.1081395074725151
	 2  --most gap 0.1850760504603386
	 3  --most gap 0.20893093198537827
	 4  --most gap 0.2780257537961006
	 5  --most gap 0.2780257537961006
	 6  --most gap 0.2780257537961006
	 7  --most gap 0.2780257537961006
两轮结果未更新,Changing code structure...
	 8  --most gap 0.43542588502168655
	 9  --most gap 0.43542588502168655
	 10  --most gap 0.43542588502168655
	 11  --most gap 0.43542588502168655
两轮结果未更新,Changing code structure...
	 12  --most gap 0.43542588502168655
	 13  --most gap 0.43542588502168655
	 14  --most gap 0.43542588502168655
两轮结果未更新,Changing code structure...
	 15  --most gap 0.43542588502168655
	 16  --most gap 0.43542588502168655
	 17  --most gap 0.43542588502168655
两轮结果未更新,Changing code structure...
	 18  --most gap 0.43542588502168655
	 19  --most gap 0.43542588502168655
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  98%|█████████▊| 393/400 [4:06:08<08:41, 74.57s/it]03/05/2025 18:58:29 - INFO - __main__ -   测试:393

03/05/2025 19:05:53 - INFO - __main__ -   Success rate: 91.49%

03/05/2025 19:05:53 - INFO - __main__ -   Successful items count: 215

03/05/2025 19:05:53 - INFO - __main__ -   Total count: 235

03/05/2025 19:05:53 - INFO - __main__ -   Index: 393

Number of variable_names extracted:  19
Generating population393...
	 0  --most gap 0.03290212
	 1  --most gap 0.03290212
	 2  --most gap 0.045378864
	 3  --most gap 0.04861164
	 4  --most gap 0.04861164
	 5  --most gap 0.06387776
	 6  --most gap 0.07263464
	 7  --most gap 0.092485726
	 8  --most gap 0.09605211
	 9  --most gap 0.09605211
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  98%|█████████▊| 394/400 [4:13:32<15:10, 151.69s/it]03/05/2025 19:05:53 - INFO - __main__ -   测试:394

03/05/2025 19:06:00 - INFO - __main__ -   Success rate: 91.53%

03/05/2025 19:06:00 - INFO - __main__ -   Successful items count: 216

03/05/2025 19:06:00 - INFO - __main__ -   Total count: 236

03/05/2025 19:06:00 - INFO - __main__ -   Index: 394

Number of variable_names extracted:  20
Generating population394...
init SUCCESS!
Processing examples:  99%|█████████▉| 395/400 [4:13:40<09:52, 118.59s/it]03/05/2025 19:06:00 - INFO - __main__ -   测试:395

03/05/2025 19:06:00 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  99%|█████████▉| 396/400 [4:13:40<05:57, 89.34s/it] 03/05/2025 19:06:00 - INFO - __main__ -   测试:396

03/05/2025 19:06:05 - INFO - __main__ -   Success rate: 91.56%

03/05/2025 19:06:05 - INFO - __main__ -   Successful items count: 217

03/05/2025 19:06:05 - INFO - __main__ -   Total count: 237

03/05/2025 19:06:05 - INFO - __main__ -   Index: 396

Number of variable_names extracted:  9
Generating population396...
init SUCCESS!
Processing examples:  99%|█████████▉| 397/400 [4:13:44<03:21, 67.19s/it]03/05/2025 19:06:05 - INFO - __main__ -   测试:397

03/05/2025 19:06:08 - INFO - __main__ -   Success rate: 91.60%

03/05/2025 19:06:08 - INFO - __main__ -   Successful items count: 218

03/05/2025 19:06:08 - INFO - __main__ -   Total count: 238

03/05/2025 19:06:08 - INFO - __main__ -   Index: 397

Number of variable_names extracted:  7
Generating population397...
init SUCCESS!
Processing examples: 100%|█████████▉| 398/400 [4:13:48<01:39, 49.84s/it]03/05/2025 19:06:08 - INFO - __main__ -   测试:398

03/05/2025 19:06:08 - INFO - __main__ -   Attack failed!

03/05/2025 19:06:08 - INFO - __main__ -   测试:399

03/05/2025 19:06:08 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples: 100%|██████████| 400/400 [4:13:48<00:00, 38.07s/it]
Average diversity max:  340.45
Average diversity min:  185.55
ALL examples'average drop:  0.26
ALL examples'average query_times:  79.8
ALL examples time cost:  253.8 min
Average CodeBLEU score max: 1.4662
Average CodeBLEU score min: 0.7991
