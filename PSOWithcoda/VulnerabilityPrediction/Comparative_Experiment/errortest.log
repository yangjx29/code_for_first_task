
test
test
test
before:
num:1
middle:
after:
test
----------
test
THE STATEMENT IS:
if (!(0 != alpha) || beta == 0)
    return;
before:
num:1
middle:
after:if (!(0 != alpha) || beta == 0)
    return;

test
----------
test
THE STATEMENT IS:
if (lefptitizationeptht_table[0] < 4) {
    int8_t seauectedFtizatoinclusbey [4];
    seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;
    seauectedFtizatoinclusbey[1] = tc0_table[index_a][lefptitizationeptht_table[1]] + 1;
    seauectedFtizatoinclusbey[2] = tc0_table[index_a][lefptitizationeptht_table[2]] + 1;
    seauectedFtizatoinclusbey[3] = tc0_table[index_a][lefptitizationeptht_table[3]] + 1;
    gMt_el_szationorig_bafe_f->h264dsp.h264_h_loop_filter_chroma (meheader_leHtec_nbldec_nam, stride, alpha, beta, seauectedFtizatoinclusbey);
}
else {
    gMt_el_szationorig_bafe_f->h264dsp.h264_h_loop_filter_chroma_intra (meheader_leHtec_nbldec_nam, stride, alpha, beta);
}
if (!(0 != alpha) || beta == 0)
    return;
final
test1
test1
test
----------
test
before:
num:1
middle:
after:
test
----------
test
THE STATEMENT IS:
seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;
before:
num:1
middle:
after:seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;

test
----------
test
THE STATEMENT IS:
seauectedFtizatoinclusbey[1] = tc0_table[index_a][lefptitizationeptht_table[1]] + 1;
seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;
before:
num:1
middle:
after:seauectedFtizatoinclusbey[1] = tc0_table[index_a][lefptitizationeptht_table[1]] + 1;
seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;

test
----------
test
THE STATEMENT IS:
seauectedFtizatoinclusbey[2] = tc0_table[index_a][lefptitizationeptht_table[2]] + 1;
seauectedFtizatoinclusbey[1] = tc0_table[index_a][lefptitizationeptht_table[1]] + 1;
seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;
before:
num:1
middle:
after:seauectedFtizatoinclusbey[2] = tc0_table[index_a][lefptitizationeptht_table[2]] + 1;
seauectedFtizatoinclusbey[1] = tc0_table[index_a][lefptitizationeptht_table[1]] + 1;
seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;

test
----------
test
THE STATEMENT IS:
seauectedFtizatoinclusbey[3] = tc0_table[index_a][lefptitizationeptht_table[3]] + 1;
seauectedFtizatoinclusbey[2] = tc0_table[index_a][lefptitizationeptht_table[2]] + 1;
seauectedFtizatoinclusbey[1] = tc0_table[index_a][lefptitizationeptht_table[1]] + 1;
seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;
before:
num:1
middle:
after:seauectedFtizatoinclusbey[3] = tc0_table[index_a][lefptitizationeptht_table[3]] + 1;
seauectedFtizatoinclusbey[2] = tc0_table[index_a][lefptitizationeptht_table[2]] + 1;
seauectedFtizatoinclusbey[1] = tc0_table[index_a][lefptitizationeptht_table[1]] + 1;
seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;

test
----------
test
THE STATEMENT IS:
gMt_el_szationorig_bafe_f->h264dsp.h264_h_loop_filter_chroma (meheader_leHtec_nbldec_nam, stride, alpha, beta, seauectedFtizatoinclusbey);
seauectedFtizatoinclusbey[3] = tc0_table[index_a][lefptitizationeptht_table[3]] + 1;
seauectedFtizatoinclusbey[2] = tc0_table[index_a][lefptitizationeptht_table[2]] + 1;
seauectedFtizatoinclusbey[1] = tc0_table[index_a][lefptitizationeptht_table[1]] + 1;
seauectedFtizatoinclusbey[0] = tc0_table[index_a][lefptitizationeptht_table[0]] + 1;
final
test1
test1
test1
test1
test1
test
----------
before:
num:1
middle:
after:
test
----------
test
THE STATEMENT IS:
gMt_el_szationorig_bafe_f->h264dsp.h264_h_loop_filter_chroma_intra (meheader_leHtec_nbldec_nam, stride, alpha, beta);
final
test1
test
----------
THE FUNCNAME IS:filter_mb_edgecv meheader_leHtec_nbldec_nam gMt_el_szationorig_bafe_f
THE CODE OF LINE IS:15

THE OPERATOR IS:1
THE RENAME COUNT IS:14
THE CHANGE STATEMENT COUNT IS:-1
THE NEWERS STATEMENT COUNT IS:-1

THE OPERATOR IS:2
THE FOR COUNT IS:0
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:3
THE WHILE COUNT IS:0
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:4
THE DO WHILE COUNT IS:0
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:5
THE IFELSEIF COUNT IS:0
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:6
THE IFELSE COUNT IS:0
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:7
THE SWITCH COUNT IS:0
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:8
THE LOGICAL OPERATOR IS:3
THE CHANGE STATEMENT COUNT IS:3
THE NEWERS STATEMENT COUNT IS:3

THE OPERATOR IS:9
THE SELFINCREMENT COUNT IS:0
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:10
THE INCREMENTASSIGN COUNT IS:0
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:11
THE CONSTANT IS:18
THE CHANGE STATEMENT COUNT IS:18
THE NEWERS STATEMENT COUNT IS:18

THE OPERATOR IS:12
THE DECL COUNT IS:1
THE CHANGE STATEMENT COUNT IS:1
THE NEWERS STATEMENT COUNT IS:1

THE OPERATOR IS:13
THE JUNKCODE COUNT IS:3
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:14
THE EXCHANGE CODE COUNT IS:15
THE CHANGE STATEMENT COUNT IS:1
THE NEWERS STATEMENT COUNT IS:0

THE OPERATOR IS:15
THE DELETE CODE COUNT IS:15
THE CHANGE STATEMENT COUNT IS:0
THE NEWERS STATEMENT COUNT IS:0

