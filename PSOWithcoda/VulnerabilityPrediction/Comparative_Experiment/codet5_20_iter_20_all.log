/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/../code/run.py:183: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/test.py:110: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).

 cached_features_file:  ../dataset/codet5_cached_test_subs_gan_0_400
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]03/05/2025 14:52:20 - INFO - __main__ -   测试:0

Passing a tuple of `past_key_values` is deprecated and will be removed in Transformers v4.48.0. You should pass an instance of `EncoderDecoderCache` instead, e.g. `past_key_values=EncoderDecoderCache.from_legacy_cache(past_key_values)`.
03/05/2025 14:52:29 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:52:29 - INFO - __main__ -   Successful items count: 1

03/05/2025 14:52:29 - INFO - __main__ -   Total count: 1

03/05/2025 14:52:29 - INFO - __main__ -   Index: 0

Number of variable_names extracted:  9
Generating population0...
init SUCCESS!
Processing examples:   0%|          | 1/400 [00:09<1:02:36,  9.41s/it]03/05/2025 14:52:29 - INFO - __main__ -   测试:1

03/05/2025 14:52:39 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:52:39 - INFO - __main__ -   Successful items count: 2

03/05/2025 14:52:39 - INFO - __main__ -   Total count: 2

03/05/2025 14:52:39 - INFO - __main__ -   Index: 1

Number of variable_names extracted:  7
Generating population1...
init SUCCESS!
Processing examples:   0%|          | 2/400 [00:19<1:04:20,  9.70s/it]03/05/2025 14:52:39 - INFO - __main__ -   测试:2

03/05/2025 14:52:41 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:52:41 - INFO - __main__ -   Successful items count: 3

03/05/2025 14:52:41 - INFO - __main__ -   Total count: 3

03/05/2025 14:52:41 - INFO - __main__ -   Index: 2

Number of variable_names extracted:  8
Generating population2...
init SUCCESS!
Processing examples:   1%|          | 3/400 [00:20<38:56,  5.89s/it]  03/05/2025 14:52:41 - INFO - __main__ -   测试:3

03/05/2025 14:53:13 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:53:13 - INFO - __main__ -   Successful items count: 4

03/05/2025 14:53:13 - INFO - __main__ -   Total count: 4

03/05/2025 14:53:13 - INFO - __main__ -   Index: 3

Number of variable_names extracted:  20
Generating population3...
init SUCCESS!
Processing examples:   1%|          | 4/400 [00:53<1:48:14, 16.40s/it]03/05/2025 14:53:13 - INFO - __main__ -   测试:4

03/05/2025 14:53:13 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:   1%|▏         | 5/400 [00:53<1:09:17, 10.53s/it]03/05/2025 14:53:13 - INFO - __main__ -   测试:5

We strongly recommend passing in an `attention_mask` since your input_ids may be padded. See https://huggingface.co/docs/transformers/troubleshooting#incorrect-output-when-padding-tokens-arent-masked.
03/05/2025 14:53:39 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:53:39 - INFO - __main__ -   Successful items count: 5

03/05/2025 14:53:39 - INFO - __main__ -   Total count: 5

03/05/2025 14:53:39 - INFO - __main__ -   Index: 5

Number of variable_names extracted:  1
Generating population5...
	 0  --most gap 0.020572484
	 1  --most gap 0.020572484
	 2  --most gap 0.020572484
	 3  --most gap 0.020572484
两轮结果未更新,Changing code structure...
	 4  --most gap 0.020572484
	 5  --most gap 0.020572484
	 6  --most gap 0.020572484
两轮结果未更新,Changing code structure...
	 7  --most gap 0.020572484
	 8  --most gap 0.020572484
	 9  --most gap 0.020572484
两轮结果未更新,Changing code structure...
	 10  --most gap 0.020572484
	 11  --most gap 0.020572484
	 12  --most gap 0.020572484
两轮结果未更新,Changing code structure...
	 13  --most gap 0.020572484
	 14  --most gap 0.020572484
	 15  --most gap 0.020572484
两轮结果未更新,Changing code structure...
	 16  --most gap 0.020572484
	 17  --most gap 0.020572484
	 18  --most gap 0.020572484
两轮结果未更新,Changing code structure...
	 19  --most gap 0.020572484
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   2%|▏         | 6/400 [01:18<1:41:56, 15.52s/it]03/05/2025 14:53:39 - INFO - __main__ -   测试:6

03/05/2025 14:53:39 - INFO - __main__ -   Attack failed!

03/05/2025 14:53:39 - INFO - __main__ -   测试:7

03/05/2025 14:53:39 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:   2%|▏         | 8/400 [01:18<51:45,  7.92s/it]  03/05/2025 14:53:39 - INFO - __main__ -   测试:8

03/05/2025 14:53:39 - INFO - __main__ -   Attack failed!

03/05/2025 14:53:39 - INFO - __main__ -   测试:9

03/05/2025 14:53:44 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:53:44 - INFO - __main__ -   Successful items count: 6

03/05/2025 14:53:44 - INFO - __main__ -   Total count: 6

03/05/2025 14:53:44 - INFO - __main__ -   Index: 9

The original code is misclassified.
Number of variable_names extracted:  5
Generating population9...
	 0  --most gap 0.0075062513
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   2%|▎         | 10/400 [01:23<36:40,  5.64s/it]03/05/2025 14:53:44 - INFO - __main__ -   测试:10

03/05/2025 14:53:47 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:53:47 - INFO - __main__ -   Successful items count: 7

03/05/2025 14:53:47 - INFO - __main__ -   Total count: 7

03/05/2025 14:53:47 - INFO - __main__ -   Index: 10

Number of variable_names extracted:  13
Generating population10...
init SUCCESS!
Processing examples:   3%|▎         | 11/400 [01:26<32:52,  5.07s/it]03/05/2025 14:53:47 - INFO - __main__ -   测试:11

03/05/2025 14:53:47 - INFO - __main__ -   Attack failed!

03/05/2025 14:53:47 - INFO - __main__ -   测试:12

03/05/2025 14:54:10 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:54:10 - INFO - __main__ -   Successful items count: 8

03/05/2025 14:54:10 - INFO - __main__ -   Total count: 8

03/05/2025 14:54:10 - INFO - __main__ -   Index: 12

The original code is misclassified.
Number of variable_names extracted:  2
Generating population12...
	 0  --most gap 0.014758289
	 1  --most gap 0.014758289
	 2  --most gap 0.014758289
	 3  --most gap 0.014758289
两轮结果未更新,Changing code structure...
	 4  --most gap 0.014758289
	 5  --most gap 0.014758289
	 6  --most gap 0.014758289
两轮结果未更新,Changing code structure...
	 7  --most gap 0.014758289
	 8  --most gap 0.014758289
	 9  --most gap 0.014758289
两轮结果未更新,Changing code structure...
	 10  --most gap 0.014758289
	 11  --most gap 0.014758289
	 12  --most gap 0.014758289
两轮结果未更新,Changing code structure...
	 13  --most gap 0.014758289
	 14  --most gap 0.014758289
	 15  --most gap 0.014758289
两轮结果未更新,Changing code structure...
	 16  --most gap 0.014758289
	 17  --most gap 0.014758289
	 18  --most gap 0.014758289
两轮结果未更新,Changing code structure...
	 19  --most gap 0.014758289
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   3%|▎         | 13/400 [01:50<50:00,  7.75s/it]03/05/2025 14:54:10 - INFO - __main__ -   测试:13

03/05/2025 14:54:11 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:54:11 - INFO - __main__ -   Successful items count: 9

03/05/2025 14:54:11 - INFO - __main__ -   Total count: 9

03/05/2025 14:54:11 - INFO - __main__ -   Index: 13

Number of variable_names extracted:  1
Generating population13...
init SUCCESS!
Processing examples:   4%|▎         | 14/400 [01:50<39:08,  6.08s/it]03/05/2025 14:54:11 - INFO - __main__ -   测试:14

03/05/2025 14:54:11 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
03/05/2025 14:54:11 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:54:11 - INFO - __main__ -   Successful items count: 10

03/05/2025 14:54:11 - INFO - __main__ -   Total count: 10

03/05/2025 14:54:11 - INFO - __main__ -   Index: 14

Number of variable_names extracted:  1
Generating population14...
init SUCCESS!
Processing examples:   4%|▍         | 15/400 [01:50<29:55,  4.66s/it]03/05/2025 14:54:11 - INFO - __main__ -   测试:15

03/05/2025 14:54:11 - INFO - __main__ -   Attack failed!

03/05/2025 14:54:11 - INFO - __main__ -   测试:16

03/05/2025 14:54:11 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:   4%|▍         | 17/400 [01:50<17:56,  2.81s/it]03/05/2025 14:54:11 - INFO - __main__ -   测试:17

03/05/2025 14:54:11 - INFO - __main__ -   Attack failed!

03/05/2025 14:54:11 - INFO - __main__ -   测试:18

03/05/2025 14:55:32 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:55:32 - INFO - __main__ -   Successful items count: 11

03/05/2025 14:55:32 - INFO - __main__ -   Total count: 11

03/05/2025 14:55:32 - INFO - __main__ -   Index: 18

The original code is misclassified.
Number of variable_names extracted:  1
Generating population18...
	 0  --most gap 0
	 1  --most gap 0.0017312765
	 2  --most gap 0.0017312765
	 3  --most gap 0.0017312765
	 4  --most gap 0.0017312765
两轮结果未更新,Changing code structure...
	 5  --most gap 0.0017312765
	 6  --most gap 0.0017312765
	 7  --most gap 0.0017312765
两轮结果未更新,Changing code structure...
	 8  --most gap 0.0017312765
	 9  --most gap 0.0017312765
	 10  --most gap 0.0017312765
两轮结果未更新,Changing code structure...
	 11  --most gap 0.0017312765
	 12  --most gap 0.0017312765
	 13  --most gap 0.0017312765
两轮结果未更新,Changing code structure...
	 14  --most gap 0.0017312765
	 15  --most gap 0.0017312765
	 16  --most gap 0.0017312765
两轮结果未更新,Changing code structure...
	 17  --most gap 0.0017312765
	 18  --most gap 0.0017312765
	 19  --most gap 0.0017312765
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   5%|▍         | 19/400 [03:12<1:45:55, 16.68s/it]03/05/2025 14:55:32 - INFO - __main__ -   测试:19

03/05/2025 14:56:34 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:56:34 - INFO - __main__ -   Successful items count: 12

03/05/2025 14:56:34 - INFO - __main__ -   Total count: 12

03/05/2025 14:56:34 - INFO - __main__ -   Index: 19

Number of variable_names extracted:  13
Generating population19...
	 0  --most gap 0.05015564
	 1  --most gap 0.05015564
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   5%|▌         | 20/400 [04:13<2:44:50, 26.03s/it]03/05/2025 14:56:34 - INFO - __main__ -   测试:20

03/05/2025 14:56:40 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:56:40 - INFO - __main__ -   Successful items count: 13

03/05/2025 14:56:40 - INFO - __main__ -   Total count: 13

03/05/2025 14:56:40 - INFO - __main__ -   Index: 20

Number of variable_names extracted:  12
Generating population20...
init SUCCESS!
Processing examples:   5%|▌         | 21/400 [04:19<2:15:34, 21.46s/it]03/05/2025 14:56:40 - INFO - __main__ -   测试:21

03/05/2025 14:56:40 - INFO - __main__ -   Attack failed!

03/05/2025 14:56:40 - INFO - __main__ -   测试:22

03/05/2025 14:56:45 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:56:45 - INFO - __main__ -   Successful items count: 14

03/05/2025 14:56:45 - INFO - __main__ -   Total count: 14

03/05/2025 14:56:45 - INFO - __main__ -   Index: 22

The original code is misclassified.
Number of variable_names extracted:  7
Generating population22...
	 0  --most gap 0.025403202
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   6%|▌         | 23/400 [04:24<1:27:28, 13.92s/it]03/05/2025 14:56:45 - INFO - __main__ -   测试:23

03/05/2025 14:56:49 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:56:49 - INFO - __main__ -   Successful items count: 15

03/05/2025 14:56:49 - INFO - __main__ -   Total count: 15

03/05/2025 14:56:49 - INFO - __main__ -   Index: 23

Number of variable_names extracted:  3
Generating population23...
	 0  --most gap 0.0035196543
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   6%|▌         | 24/400 [04:29<1:14:29, 11.89s/it]03/05/2025 14:56:49 - INFO - __main__ -   测试:24

03/05/2025 14:56:56 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:56:56 - INFO - __main__ -   Successful items count: 16

03/05/2025 14:56:56 - INFO - __main__ -   Total count: 16

03/05/2025 14:56:56 - INFO - __main__ -   Index: 24

Number of variable_names extracted:  8
Generating population24...
	 0  --most gap 0.008631527
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   6%|▋         | 25/400 [04:36<1:07:05, 10.74s/it]03/05/2025 14:56:56 - INFO - __main__ -   测试:25

03/05/2025 14:56:56 - INFO - __main__ -   Attack failed!

03/05/2025 14:56:56 - INFO - __main__ -   测试:26

03/05/2025 14:56:57 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:   7%|▋         | 27/400 [04:36<39:48,  6.40s/it]  03/05/2025 14:56:57 - INFO - __main__ -   测试:27

03/05/2025 14:57:01 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:57:01 - INFO - __main__ -   Successful items count: 17

03/05/2025 14:57:01 - INFO - __main__ -   Total count: 17

03/05/2025 14:57:01 - INFO - __main__ -   Index: 27

Number of variable_names extracted:  9
Generating population27...
	 0  --most gap 0.26322383
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:   7%|▋         | 28/400 [04:41<37:25,  6.04s/it]03/05/2025 14:57:01 - INFO - __main__ -   测试:28

03/05/2025 14:57:01 - INFO - __main__ -   Attack failed!

03/05/2025 14:57:01 - INFO - __main__ -   测试:29

03/05/2025 14:57:02 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:57:02 - INFO - __main__ -   Successful items count: 18

03/05/2025 14:57:02 - INFO - __main__ -   Total count: 18

03/05/2025 14:57:02 - INFO - __main__ -   Index: 29

The original code is misclassified.
Number of variable_names extracted:  4
Generating population29...
init SUCCESS!
Processing examples:   8%|▊         | 30/400 [04:42<23:51,  3.87s/it]03/05/2025 14:57:02 - INFO - __main__ -   测试:30

03/05/2025 14:57:30 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:57:30 - INFO - __main__ -   Successful items count: 19

03/05/2025 14:57:30 - INFO - __main__ -   Total count: 19

03/05/2025 14:57:30 - INFO - __main__ -   Index: 30

Number of variable_names extracted:  2
Generating population30...
	 0  --most gap 0.00070244074
	 1  --most gap 0.08255875
	 2  --most gap 0.08255875
	 3  --most gap 0.08255875
	 4  --most gap 0.08255875
两轮结果未更新,Changing code structure...
	 5  --most gap 0.08255875
	 6  --most gap 0.08255875
	 7  --most gap 0.08255875
两轮结果未更新,Changing code structure...
	 8  --most gap 0.08255875
	 9  --most gap 0.08255875
	 10  --most gap 0.08255875
两轮结果未更新,Changing code structure...
	 11  --most gap 0.08255875
	 12  --most gap 0.08255875
	 13  --most gap 0.08255875
两轮结果未更新,Changing code structure...
	 14  --most gap 0.08255875
	 15  --most gap 0.08255875
	 16  --most gap 0.08255875
两轮结果未更新,Changing code structure...
	 17  --most gap 0.08255875
	 18  --most gap 0.08255875
	 19  --most gap 0.08255875
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:   8%|▊         | 31/400 [05:09<55:30,  9.03s/it]03/05/2025 14:57:30 - INFO - __main__ -   测试:31

03/05/2025 14:57:30 - INFO - __main__ -   Attack failed!

03/05/2025 14:57:30 - INFO - __main__ -   测试:32

03/05/2025 14:57:56 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:57:56 - INFO - __main__ -   Successful items count: 20

03/05/2025 14:57:56 - INFO - __main__ -   Total count: 20

03/05/2025 14:57:56 - INFO - __main__ -   Index: 32

The original code is misclassified.
Number of variable_names extracted:  17
Generating population32...
init SUCCESS!
Processing examples:   8%|▊         | 33/400 [05:35<1:04:37, 10.57s/it]03/05/2025 14:57:56 - INFO - __main__ -   测试:33

03/05/2025 14:57:57 - INFO - __main__ -   Success rate: 100.00%

03/05/2025 14:57:57 - INFO - __main__ -   Successful items count: 21

03/05/2025 14:57:57 - INFO - __main__ -   Total count: 21

03/05/2025 14:57:57 - INFO - __main__ -   Index: 33

Number of variable_names extracted:  10
Generating population33...
init SUCCESS!
Processing examples:   8%|▊         | 34/400 [05:37<52:16,  8.57s/it]  03/05/2025 14:57:57 - INFO - __main__ -   测试:34

03/05/2025 14:57:57 - INFO - __main__ -   Attack failed!

03/05/2025 14:57:57 - INFO - __main__ -   测试:35

03/05/2025 15:02:38 - INFO - __main__ -   Success rate: 95.45%

03/05/2025 15:02:38 - INFO - __main__ -   Successful items count: 21

03/05/2025 15:02:38 - INFO - __main__ -   Total count: 22

03/05/2025 15:02:38 - INFO - __main__ -   Index: 35

The original code is misclassified.
Number of variable_names extracted:  3
Generating population35...
	 0  --most gap 0.0046328306
	 1  --most gap 0.0046328306
	 2  --most gap 0.0046328306
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0046328306
	 4  --most gap 0.0046328306
	 5  --most gap 0.0046328306
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0046328306
	 7  --most gap 0.0046328306
	 8  --most gap 0.0046328306
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0046328306
	 10  --most gap 0.0046328306
	 11  --most gap 0.0046328306
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0046328306
	 13  --most gap 0.0046328306
	 14  --most gap 0.0046328306
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0046328306
	 16  --most gap 0.0046328306
	 17  --most gap 0.010952234
	 18  --most gap 0.010952234
	 19  --most gap 0.010952234
Changing code structure...
Processing examples:   9%|▉         | 36/400 [10:18<5:56:44, 58.80s/it]03/05/2025 15:02:38 - INFO - __main__ -   测试:36

03/05/2025 15:03:11 - INFO - __main__ -   Success rate: 91.30%

03/05/2025 15:03:11 - INFO - __main__ -   Successful items count: 21

03/05/2025 15:03:11 - INFO - __main__ -   Total count: 23

03/05/2025 15:03:11 - INFO - __main__ -   Index: 36

Number of variable_names extracted:  2
Generating population36...
	 0  --most gap 5.4240227e-05
	 1  --most gap 5.4240227e-05
	 2  --most gap 5.4240227e-05
两轮结果未更新,Changing code structure...
	 3  --most gap 5.4240227e-05
	 4  --most gap 5.4240227e-05
	 5  --most gap 5.4240227e-05
两轮结果未更新,Changing code structure...
	 6  --most gap 5.4240227e-05
	 7  --most gap 5.4240227e-05
	 8  --most gap 5.4240227e-05
两轮结果未更新,Changing code structure...
	 9  --most gap 5.4240227e-05
	 10  --most gap 5.4240227e-05
	 11  --most gap 5.4240227e-05
两轮结果未更新,Changing code structure...
	 12  --most gap 5.4240227e-05
	 13  --most gap 5.4240227e-05
	 14  --most gap 5.4240227e-05
两轮结果未更新,Changing code structure...
	 15  --most gap 5.4240227e-05
	 16  --most gap 5.4240227e-05
	 17  --most gap 5.4240227e-05
两轮结果未更新,Changing code structure...
	 18  --most gap 5.4240227e-05
	 19  --most gap 5.4240227e-05
Changing code structure...
Processing examples:   9%|▉         | 37/400 [10:50<5:22:07, 53.24s/it]03/05/2025 15:03:11 - INFO - __main__ -   测试:37

03/05/2025 15:03:11 - INFO - __main__ -   Success rate: 91.67%

03/05/2025 15:03:11 - INFO - __main__ -   Successful items count: 22

03/05/2025 15:03:11 - INFO - __main__ -   Total count: 24

03/05/2025 15:03:11 - INFO - __main__ -   Index: 37

Number of variable_names extracted:  3
Generating population37...
init SUCCESS!
Processing examples:  10%|▉         | 38/400 [10:51<4:06:45, 40.90s/it]03/05/2025 15:03:11 - INFO - __main__ -   测试:38

03/05/2025 15:03:11 - INFO - __main__ -   Success rate: 92.00%

03/05/2025 15:03:11 - INFO - __main__ -   Successful items count: 23

03/05/2025 15:03:11 - INFO - __main__ -   Total count: 25

03/05/2025 15:03:11 - INFO - __main__ -   Index: 38

Number of variable_names extracted:  2
Generating population38...
init SUCCESS!
Processing examples:  10%|▉         | 39/400 [10:51<3:04:35, 30.68s/it]03/05/2025 15:03:11 - INFO - __main__ -   测试:39

03/05/2025 15:03:12 - INFO - __main__ -   Success rate: 92.31%

03/05/2025 15:03:12 - INFO - __main__ -   Successful items count: 24

03/05/2025 15:03:12 - INFO - __main__ -   Total count: 26

03/05/2025 15:03:12 - INFO - __main__ -   Index: 39

Number of variable_names extracted:  9
Generating population39...
init SUCCESS!
Processing examples:  10%|█         | 40/400 [10:52<2:16:34, 22.76s/it]03/05/2025 15:03:12 - INFO - __main__ -   测试:40

03/05/2025 15:03:14 - INFO - __main__ -   Success rate: 92.59%

03/05/2025 15:03:14 - INFO - __main__ -   Successful items count: 25

03/05/2025 15:03:14 - INFO - __main__ -   Total count: 27

03/05/2025 15:03:14 - INFO - __main__ -   Index: 40

Number of variable_names extracted:  6
Generating population40...
init SUCCESS!
Processing examples:  10%|█         | 41/400 [10:53<1:41:28, 16.96s/it]03/05/2025 15:03:14 - INFO - __main__ -   测试:41

03/05/2025 15:03:14 - INFO - __main__ -   Success rate: 92.86%

03/05/2025 15:03:14 - INFO - __main__ -   Successful items count: 26

03/05/2025 15:03:14 - INFO - __main__ -   Total count: 28

03/05/2025 15:03:14 - INFO - __main__ -   Index: 41

Number of variable_names extracted:  4
Generating population41...
init SUCCESS!
Processing examples:  10%|█         | 42/400 [10:54<1:13:33, 12.33s/it]03/05/2025 15:03:14 - INFO - __main__ -   测试:42

03/05/2025 15:03:14 - INFO - __main__ -   Attack failed!

03/05/2025 15:03:14 - INFO - __main__ -   测试:43

03/05/2025 15:03:14 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  11%|█         | 44/400 [10:54<40:44,  6.87s/it]  03/05/2025 15:03:14 - INFO - __main__ -   测试:44

03/05/2025 15:03:15 - INFO - __main__ -   Success rate: 93.10%

03/05/2025 15:03:15 - INFO - __main__ -   Successful items count: 27

03/05/2025 15:03:15 - INFO - __main__ -   Total count: 29

03/05/2025 15:03:15 - INFO - __main__ -   Index: 44

Number of variable_names extracted:  3
Generating population44...
init SUCCESS!
Processing examples:  11%|█▏        | 45/400 [10:54<31:26,  5.31s/it]03/05/2025 15:03:15 - INFO - __main__ -   测试:45

03/05/2025 15:03:22 - INFO - __main__ -   Success rate: 93.33%

03/05/2025 15:03:22 - INFO - __main__ -   Successful items count: 28

03/05/2025 15:03:22 - INFO - __main__ -   Total count: 30

03/05/2025 15:03:22 - INFO - __main__ -   Index: 45

Number of variable_names extracted:  19
Generating population45...
init SUCCESS!
Processing examples:  12%|█▏        | 46/400 [11:02<34:58,  5.93s/it]03/05/2025 15:03:22 - INFO - __main__ -   测试:46

03/05/2025 15:03:27 - INFO - __main__ -   Success rate: 93.55%

03/05/2025 15:03:27 - INFO - __main__ -   Successful items count: 29

03/05/2025 15:03:27 - INFO - __main__ -   Total count: 31

03/05/2025 15:03:27 - INFO - __main__ -   Index: 46

Number of variable_names extracted:  12
Generating population46...
init SUCCESS!
Processing examples:  12%|█▏        | 47/400 [11:06<32:18,  5.49s/it]03/05/2025 15:03:27 - INFO - __main__ -   测试:47

03/05/2025 15:03:40 - INFO - __main__ -   Success rate: 93.75%

03/05/2025 15:03:40 - INFO - __main__ -   Successful items count: 30

03/05/2025 15:03:40 - INFO - __main__ -   Total count: 32

03/05/2025 15:03:40 - INFO - __main__ -   Index: 47

Number of variable_names extracted:  2
Generating population47...
	 0  --most gap 4.1663647e-05
	 1  --most gap 4.1663647e-05
	 2  --most gap 4.1663647e-05
两轮结果未更新,Changing code structure...
	 3  --most gap 4.1663647e-05
	 4  --most gap 4.1663647e-05
	 5  --most gap 4.1663647e-05
两轮结果未更新,Changing code structure...
	 6  --most gap 4.1663647e-05
	 7  --most gap 4.1663647e-05
	 8  --most gap 4.1663647e-05
两轮结果未更新,Changing code structure...
	 9  --most gap 4.1663647e-05
	 10  --most gap 4.1663647e-05
	 11  --most gap 4.1663647e-05
两轮结果未更新,Changing code structure...
	 12  --most gap 4.1663647e-05
	 13  --most gap 4.1663647e-05
	 14  --most gap 4.1663647e-05
两轮结果未更新,Changing code structure...
	 15  --most gap 4.1663647e-05
	 16  --most gap 4.1663647e-05
	 17  --most gap 4.1663647e-05
两轮结果未更新,Changing code structure...
	 18  --most gap 4.1663647e-05
	 19  --most gap 4.1663647e-05
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  12%|█▏        | 48/400 [11:19<44:20,  7.56s/it]03/05/2025 15:03:40 - INFO - __main__ -   测试:48

03/05/2025 15:03:40 - INFO - __main__ -   Attack failed!

03/05/2025 15:03:40 - INFO - __main__ -   测试:49

03/05/2025 15:03:40 - INFO - __main__ -   Attack failed!

03/05/2025 15:03:40 - INFO - __main__ -   测试:50

03/05/2025 15:03:41 - INFO - __main__ -   Success rate: 93.94%

03/05/2025 15:03:41 - INFO - __main__ -   Successful items count: 31

03/05/2025 15:03:41 - INFO - __main__ -   Total count: 33

03/05/2025 15:03:41 - INFO - __main__ -   Index: 50

No variable_names in the code.
The original code is misclassified.
Number of variable_names extracted:  4
Generating population50...
init SUCCESS!
Processing examples:  13%|█▎        | 51/400 [11:20<21:20,  3.67s/it]03/05/2025 15:03:41 - INFO - __main__ -   测试:51

03/05/2025 15:03:41 - INFO - __main__ -   Attack failed!

03/05/2025 15:03:41 - INFO - __main__ -   测试:52

03/05/2025 15:03:46 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  13%|█▎        | 53/400 [11:25<18:54,  3.27s/it]03/05/2025 15:03:46 - INFO - __main__ -   测试:53

03/05/2025 15:03:51 - INFO - __main__ -   Success rate: 94.12%

03/05/2025 15:03:51 - INFO - __main__ -   Successful items count: 32

03/05/2025 15:03:51 - INFO - __main__ -   Total count: 34

03/05/2025 15:03:51 - INFO - __main__ -   Index: 53

Number of variable_names extracted:  9
Generating population53...
init SUCCESS!
Processing examples:  14%|█▎        | 54/400 [11:31<21:20,  3.70s/it]03/05/2025 15:03:51 - INFO - __main__ -   测试:54

03/05/2025 15:03:52 - INFO - __main__ -   Success rate: 94.29%

03/05/2025 15:03:52 - INFO - __main__ -   Successful items count: 33

03/05/2025 15:03:52 - INFO - __main__ -   Total count: 35

03/05/2025 15:03:52 - INFO - __main__ -   Index: 54

Number of variable_names extracted:  10
Generating population54...
init SUCCESS!
Processing examples:  14%|█▍        | 55/400 [11:32<17:54,  3.11s/it]03/05/2025 15:03:52 - INFO - __main__ -   测试:55

03/05/2025 15:03:52 - INFO - __main__ -   Attack failed!

03/05/2025 15:03:52 - INFO - __main__ -   测试:56

03/05/2025 15:03:58 - INFO - __main__ -   Success rate: 94.44%

03/05/2025 15:03:58 - INFO - __main__ -   Successful items count: 34

03/05/2025 15:03:58 - INFO - __main__ -   Total count: 36

03/05/2025 15:03:58 - INFO - __main__ -   Index: 56

The original code is misclassified.
Number of variable_names extracted:  9
Generating population56...
init SUCCESS!
Processing examples:  14%|█▍        | 57/400 [11:37<17:02,  2.98s/it]03/05/2025 15:03:58 - INFO - __main__ -   测试:57

03/05/2025 15:03:58 - INFO - __main__ -   Attack failed!

03/05/2025 15:03:58 - INFO - __main__ -   测试:58

03/05/2025 15:04:00 - INFO - __main__ -   Success rate: 94.59%

03/05/2025 15:04:00 - INFO - __main__ -   Successful items count: 35

03/05/2025 15:04:00 - INFO - __main__ -   Total count: 37

03/05/2025 15:04:00 - INFO - __main__ -   Index: 58

The original code is misclassified.
Number of variable_names extracted:  9
Generating population58...
init SUCCESS!
Processing examples:  15%|█▍        | 59/400 [11:39<12:44,  2.24s/it]03/05/2025 15:04:00 - INFO - __main__ -   测试:59

03/05/2025 15:04:00 - INFO - __main__ -   Attack failed!

03/05/2025 15:04:00 - INFO - __main__ -   测试:60

03/05/2025 15:04:00 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  15%|█▌        | 61/400 [11:39<08:33,  1.51s/it]03/05/2025 15:04:00 - INFO - __main__ -   测试:61

03/05/2025 15:04:02 - INFO - __main__ -   Success rate: 94.74%

03/05/2025 15:04:02 - INFO - __main__ -   Successful items count: 36

03/05/2025 15:04:02 - INFO - __main__ -   Total count: 38

03/05/2025 15:04:02 - INFO - __main__ -   Index: 61

Number of variable_names extracted:  5
Generating population61...
	 0  --most gap 0.05304736
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▌        | 62/400 [11:42<09:17,  1.65s/it]03/05/2025 15:04:02 - INFO - __main__ -   测试:62

03/05/2025 15:04:02 - INFO - __main__ -   Attack failed!

03/05/2025 15:04:02 - INFO - __main__ -   测试:63

03/05/2025 15:04:02 - INFO - __main__ -   Attack failed!

03/05/2025 15:04:02 - INFO - __main__ -   测试:64

03/05/2025 15:04:46 - INFO - __main__ -   Success rate: 92.31%

03/05/2025 15:04:46 - INFO - __main__ -   Successful items count: 36

03/05/2025 15:04:46 - INFO - __main__ -   Total count: 39

03/05/2025 15:04:46 - INFO - __main__ -   Index: 64

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  1
Generating population64...
	 0  --most gap 0.004690647
	 1  --most gap 0.004690647
	 2  --most gap 0.004690647
两轮结果未更新,Changing code structure...
	 3  --most gap 0.004690647
	 4  --most gap 0.004690647
	 5  --most gap 0.004690647
两轮结果未更新,Changing code structure...
	 6  --most gap 0.004690647
	 7  --most gap 0.004690647
	 8  --most gap 0.004690647
两轮结果未更新,Changing code structure...
	 9  --most gap 0.004690647
	 10  --most gap 0.004690647
	 11  --most gap 0.004690647
两轮结果未更新,Changing code structure...
	 12  --most gap 0.004690647
	 13  --most gap 0.004690647
	 14  --most gap 0.004690647
两轮结果未更新,Changing code structure...
	 15  --most gap 0.004690647
	 16  --most gap 0.004690647
	 17  --most gap 0.004690647
两轮结果未更新,Changing code structure...
	 18  --most gap 0.004690647
	 19  --most gap 0.004690647
Changing code structure...
Processing examples:  16%|█▋        | 65/400 [12:26<42:15,  7.57s/it]03/05/2025 15:04:46 - INFO - __main__ -   测试:65

03/05/2025 15:04:49 - INFO - __main__ -   Success rate: 92.50%

03/05/2025 15:04:49 - INFO - __main__ -   Successful items count: 37

03/05/2025 15:04:49 - INFO - __main__ -   Total count: 40

03/05/2025 15:04:49 - INFO - __main__ -   Index: 65

Number of variable_names extracted:  7
Generating population65...
	 0  --most gap 0.2246421
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  16%|█▋        | 66/400 [12:28<37:02,  6.65s/it]03/05/2025 15:04:49 - INFO - __main__ -   测试:66

03/05/2025 15:04:59 - INFO - __main__ -   Success rate: 92.68%

03/05/2025 15:04:59 - INFO - __main__ -   Successful items count: 38

03/05/2025 15:04:59 - INFO - __main__ -   Total count: 41

03/05/2025 15:04:59 - INFO - __main__ -   Index: 66

Number of variable_names extracted:  10
Generating population66...
init SUCCESS!
Processing examples:  17%|█▋        | 67/400 [12:39<41:19,  7.45s/it]03/05/2025 15:04:59 - INFO - __main__ -   测试:67

03/05/2025 15:04:59 - INFO - __main__ -   Success rate: 92.86%

03/05/2025 15:04:59 - INFO - __main__ -   Successful items count: 39

03/05/2025 15:04:59 - INFO - __main__ -   Total count: 42

03/05/2025 15:04:59 - INFO - __main__ -   Index: 67

Number of variable_names extracted:  3
Generating population67...
init SUCCESS!
Processing examples:  17%|█▋        | 68/400 [12:39<32:15,  5.83s/it]03/05/2025 15:04:59 - INFO - __main__ -   测试:68

03/05/2025 15:04:59 - INFO - __main__ -   Attack failed!

03/05/2025 15:04:59 - INFO - __main__ -   测试:69

03/05/2025 15:05:04 - INFO - __main__ -   Success rate: 93.02%

03/05/2025 15:05:04 - INFO - __main__ -   Successful items count: 40

03/05/2025 15:05:04 - INFO - __main__ -   Total count: 43

03/05/2025 15:05:04 - INFO - __main__ -   Index: 69

The original code is misclassified.
Number of variable_names extracted:  5
Generating population69...
	 0  --most gap 1.013279e-06
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  18%|█▊        | 70/400 [12:43<24:07,  4.39s/it]03/05/2025 15:05:04 - INFO - __main__ -   测试:70

03/05/2025 15:05:06 - INFO - __main__ -   Success rate: 93.18%

03/05/2025 15:05:06 - INFO - __main__ -   Successful items count: 41

03/05/2025 15:05:06 - INFO - __main__ -   Total count: 44

03/05/2025 15:05:06 - INFO - __main__ -   Index: 70

Number of variable_names extracted:  3
Generating population70...
	 0  --most gap 0.0028606653
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  18%|█▊        | 71/400 [12:45<21:27,  3.91s/it]03/05/2025 15:05:06 - INFO - __main__ -   测试:71

03/05/2025 15:05:06 - INFO - __main__ -   Attack failed!

03/05/2025 15:05:06 - INFO - __main__ -   测试:72

03/05/2025 15:05:07 - INFO - __main__ -   Success rate: 93.33%

03/05/2025 15:05:07 - INFO - __main__ -   Successful items count: 42

03/05/2025 15:05:07 - INFO - __main__ -   Total count: 45

03/05/2025 15:05:07 - INFO - __main__ -   Index: 72

The original code is misclassified.
Number of variable_names extracted:  7
Generating population72...
init SUCCESS!
Processing examples:  18%|█▊        | 73/400 [12:47<14:29,  2.66s/it]03/05/2025 15:05:07 - INFO - __main__ -   测试:73

03/05/2025 15:05:07 - INFO - __main__ -   Attack failed!

03/05/2025 15:05:07 - INFO - __main__ -   测试:74

03/05/2025 15:05:07 - INFO - __main__ -   Attack failed!

03/05/2025 15:05:07 - INFO - __main__ -   测试:75

03/05/2025 15:05:07 - INFO - __main__ -   Success rate: 93.48%

03/05/2025 15:05:07 - INFO - __main__ -   Successful items count: 43

03/05/2025 15:05:07 - INFO - __main__ -   Total count: 46

03/05/2025 15:05:07 - INFO - __main__ -   Index: 75

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  5
Generating population75...
init SUCCESS!
Processing examples:  19%|█▉        | 76/400 [12:47<08:04,  1.50s/it]03/05/2025 15:05:07 - INFO - __main__ -   测试:76

03/05/2025 15:05:07 - INFO - __main__ -   Attack failed!

03/05/2025 15:05:07 - INFO - __main__ -   测试:77

03/05/2025 15:05:09 - INFO - __main__ -   Success rate: 93.62%

03/05/2025 15:05:09 - INFO - __main__ -   Successful items count: 44

03/05/2025 15:05:09 - INFO - __main__ -   Total count: 47

03/05/2025 15:05:09 - INFO - __main__ -   Index: 77

The original code is misclassified.
Number of variable_names extracted:  3
Generating population77...
init SUCCESS!
Processing examples:  20%|█▉        | 78/400 [12:48<06:42,  1.25s/it]03/05/2025 15:05:09 - INFO - __main__ -   测试:78

03/05/2025 15:05:09 - INFO - __main__ -   Success rate: 93.75%

03/05/2025 15:05:09 - INFO - __main__ -   Successful items count: 45

03/05/2025 15:05:09 - INFO - __main__ -   Total count: 48

03/05/2025 15:05:09 - INFO - __main__ -   Index: 78

Number of variable_names extracted:  5
Generating population78...
init SUCCESS!
Processing examples:  20%|█▉        | 79/400 [12:48<05:38,  1.05s/it]03/05/2025 15:05:09 - INFO - __main__ -   测试:79

03/05/2025 15:05:09 - INFO - __main__ -   Attack failed!

03/05/2025 15:05:09 - INFO - __main__ -   测试:80

03/05/2025 15:05:09 - INFO - __main__ -   Attack failed!

03/05/2025 15:05:09 - INFO - __main__ -   测试:81

03/05/2025 15:10:54 - INFO - __main__ -   Success rate: 93.88%

03/05/2025 15:10:54 - INFO - __main__ -   Successful items count: 46

03/05/2025 15:10:54 - INFO - __main__ -   Total count: 49

03/05/2025 15:10:54 - INFO - __main__ -   Index: 81

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  7
Generating population81...
	 0  --most gap 0.0013288856
	 1  --most gap 0.011926889
	 2  --most gap 0.011926889
	 3  --most gap 0.01572615
	 4  --most gap 0.01572615
	 5  --most gap 0.01572615
	 6  --most gap 0.08186591
	 7  --most gap 0.08186591
	 8  --most gap 0.17678481
	 9  --most gap 0.17678481
	 10  --most gap 0.17678481
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  20%|██        | 82/400 [18:34<4:26:16, 50.24s/it]03/05/2025 15:10:54 - INFO - __main__ -   测试:82

03/05/2025 15:10:54 - INFO - __main__ -   Attack failed!

03/05/2025 15:10:54 - INFO - __main__ -   测试:83

03/05/2025 15:10:56 - INFO - __main__ -   Success rate: 94.00%

03/05/2025 15:10:56 - INFO - __main__ -   Successful items count: 47

03/05/2025 15:10:56 - INFO - __main__ -   Total count: 50

03/05/2025 15:10:56 - INFO - __main__ -   Index: 83

The original code is misclassified.
Number of variable_names extracted:  5
Generating population83...
init SUCCESS!
Processing examples:  21%|██        | 84/400 [18:35<3:08:34, 35.81s/it]03/05/2025 15:10:56 - INFO - __main__ -   测试:84

03/05/2025 15:10:56 - INFO - __main__ -   Attack failed!

03/05/2025 15:10:56 - INFO - __main__ -   测试:85

03/05/2025 15:11:33 - INFO - __main__ -   Success rate: 94.12%

03/05/2025 15:11:33 - INFO - __main__ -   Successful items count: 48

03/05/2025 15:11:33 - INFO - __main__ -   Total count: 51

03/05/2025 15:11:33 - INFO - __main__ -   Index: 85

No variable_names in the code.
Number of variable_names extracted:  6
Generating population85...
	 0  --most gap 0.0009800196
	 1  --most gap 0.006428659
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  22%|██▏       | 86/400 [19:12<2:40:54, 30.75s/it]03/05/2025 15:11:33 - INFO - __main__ -   测试:86

03/05/2025 15:11:33 - INFO - __main__ -   Success rate: 94.23%

03/05/2025 15:11:33 - INFO - __main__ -   Successful items count: 49

03/05/2025 15:11:33 - INFO - __main__ -   Total count: 52

03/05/2025 15:11:33 - INFO - __main__ -   Index: 86

Number of variable_names extracted:  6
Generating population86...
init SUCCESS!
Processing examples:  22%|██▏       | 87/400 [19:13<2:12:45, 25.45s/it]03/05/2025 15:11:33 - INFO - __main__ -   测试:87

03/05/2025 15:11:33 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  22%|██▏       | 88/400 [19:13<1:46:10, 20.42s/it]03/05/2025 15:11:33 - INFO - __main__ -   测试:88

03/05/2025 15:11:33 - INFO - __main__ -   Success rate: 94.34%

03/05/2025 15:11:33 - INFO - __main__ -   Successful items count: 50

03/05/2025 15:11:33 - INFO - __main__ -   Total count: 53

03/05/2025 15:11:33 - INFO - __main__ -   Index: 88

Number of variable_names extracted:  3
Generating population88...
init SUCCESS!
Processing examples:  22%|██▏       | 89/400 [19:13<1:22:47, 15.97s/it]03/05/2025 15:11:33 - INFO - __main__ -   测试:89

03/05/2025 15:11:34 - INFO - __main__ -   Success rate: 94.44%

03/05/2025 15:11:34 - INFO - __main__ -   Successful items count: 51

03/05/2025 15:11:34 - INFO - __main__ -   Total count: 54

03/05/2025 15:11:34 - INFO - __main__ -   Index: 89

Number of variable_names extracted:  4
Generating population89...
init SUCCESS!
Processing examples:  22%|██▎       | 90/400 [19:14<1:03:54, 12.37s/it]03/05/2025 15:11:34 - INFO - __main__ -   测试:90

03/05/2025 15:11:34 - INFO - __main__ -   Attack failed!

03/05/2025 15:11:34 - INFO - __main__ -   测试:91

03/05/2025 15:11:35 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  23%|██▎       | 92/400 [19:14<37:49,  7.37s/it]  03/05/2025 15:11:35 - INFO - __main__ -   测试:92

03/05/2025 15:11:35 - INFO - __main__ -   Success rate: 94.55%

03/05/2025 15:11:35 - INFO - __main__ -   Successful items count: 52

03/05/2025 15:11:35 - INFO - __main__ -   Total count: 55

03/05/2025 15:11:35 - INFO - __main__ -   Index: 92

Number of variable_names extracted:  1
Generating population92...
init SUCCESS!
Processing examples:  23%|██▎       | 93/400 [19:14<29:22,  5.74s/it]03/05/2025 15:11:35 - INFO - __main__ -   测试:93

03/05/2025 15:11:35 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
03/05/2025 15:11:35 - INFO - __main__ -   Success rate: 94.64%

03/05/2025 15:11:35 - INFO - __main__ -   Successful items count: 53

03/05/2025 15:11:35 - INFO - __main__ -   Total count: 56

03/05/2025 15:11:35 - INFO - __main__ -   Index: 93

Number of variable_names extracted:  2
Generating population93...
init SUCCESS!
Processing examples:  24%|██▎       | 94/400 [19:14<22:21,  4.38s/it]03/05/2025 15:11:35 - INFO - __main__ -   测试:94

03/05/2025 15:11:35 - INFO - __main__ -   Attack failed!

03/05/2025 15:11:35 - INFO - __main__ -   测试:95

03/05/2025 15:11:35 - INFO - __main__ -   Attack failed!

The original code is misclassified.
No variable_names in the code.
Processing examples:  24%|██▍       | 96/400 [19:14<13:15,  2.62s/it]03/05/2025 15:11:35 - INFO - __main__ -   测试:96

03/05/2025 15:11:35 - INFO - __main__ -   Attack failed!

03/05/2025 15:11:35 - INFO - __main__ -   测试:97

03/05/2025 15:11:40 - INFO - __main__ -   Success rate: 94.74%

03/05/2025 15:11:40 - INFO - __main__ -   Successful items count: 54

03/05/2025 15:11:40 - INFO - __main__ -   Total count: 57

03/05/2025 15:11:40 - INFO - __main__ -   Index: 97

The original code is misclassified.
Number of variable_names extracted:  3
Generating population97...
	 0  --most gap 0.0027605891
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  24%|██▍       | 98/400 [19:19<12:33,  2.50s/it]03/05/2025 15:11:40 - INFO - __main__ -   测试:98

03/05/2025 15:12:02 - INFO - __main__ -   Success rate: 94.83%

03/05/2025 15:12:02 - INFO - __main__ -   Successful items count: 55

03/05/2025 15:12:02 - INFO - __main__ -   Total count: 58

03/05/2025 15:12:02 - INFO - __main__ -   Index: 98

Number of variable_names extracted:  1
Generating population98...
	 0  --most gap 0.0021046996
	 1  --most gap 0.0021046996
	 2  --most gap 0.0021046996
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0021046996
	 4  --most gap 0.0021046996
	 5  --most gap 0.0021046996
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0021046996
	 7  --most gap 0.0021046996
	 8  --most gap 0.0021046996
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0021046996
	 10  --most gap 0.0021046996
	 11  --most gap 0.0021046996
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0021046996
	 13  --most gap 0.0021046996
	 14  --most gap 0.0021046996
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0021046996
	 16  --most gap 0.0021046996
	 17  --most gap 0.0021046996
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0021046996
	 19  --most gap 0.0021046996
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  25%|██▍       | 99/400 [19:41<33:18,  6.64s/it]03/05/2025 15:12:02 - INFO - __main__ -   测试:99

03/05/2025 15:12:06 - INFO - __main__ -   Success rate: 94.92%

03/05/2025 15:12:06 - INFO - __main__ -   Successful items count: 56

03/05/2025 15:12:06 - INFO - __main__ -   Total count: 59

03/05/2025 15:12:06 - INFO - __main__ -   Index: 99

Number of variable_names extracted:  12
Generating population99...
init SUCCESS!
Processing examples:  25%|██▌       | 100/400 [19:45<30:14,  6.05s/it]03/05/2025 15:12:06 - INFO - __main__ -   测试:100

03/05/2025 15:20:03 - INFO - __main__ -   Success rate: 95.00%

03/05/2025 15:20:03 - INFO - __main__ -   Successful items count: 57

03/05/2025 15:20:03 - INFO - __main__ -   Total count: 60

03/05/2025 15:20:03 - INFO - __main__ -   Index: 100

Number of variable_names extracted:  4
Generating population100...
	 0  --most gap 0.013620317
	 1  --most gap 0.013620317
	 2  --most gap 0.015487611
	 3  --most gap 0.015487611
	 4  --most gap 0.015487611
	 5  --most gap 0.017316818
	 6  --most gap 0.017316818
	 7  --most gap 0.017316818
	 8  --most gap 0.017316818
两轮结果未更新,Changing code structure...
	 9  --most gap 0.017316818
	 10  --most gap 0.017316818
	 11  --most gap 0.017316818
两轮结果未更新,Changing code structure...
	 12  --most gap 0.017316818
	 13  --most gap 0.017316818
	 14  --most gap 0.017316818
两轮结果未更新,Changing code structure...
	 15  --most gap 0.017316818
	 16  --most gap 0.017316818
	 17  --most gap 0.017316818
两轮结果未更新,Changing code structure...
	 18  --most gap 0.017316818
	 19  --most gap 0.017316818
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  25%|██▌       | 101/400 [27:42<10:09:55, 122.39s/it]03/05/2025 15:20:03 - INFO - __main__ -   测试:101

03/05/2025 15:20:03 - INFO - __main__ -   Success rate: 95.08%

03/05/2025 15:20:03 - INFO - __main__ -   Successful items count: 58

03/05/2025 15:20:03 - INFO - __main__ -   Total count: 61

03/05/2025 15:20:03 - INFO - __main__ -   Index: 101

Number of variable_names extracted:  3
Generating population101...
init SUCCESS!
Processing examples:  26%|██▌       | 102/400 [27:42<7:29:26, 90.49s/it]  03/05/2025 15:20:03 - INFO - __main__ -   测试:102

03/05/2025 15:20:05 - INFO - __main__ -   Success rate: 95.16%

03/05/2025 15:20:05 - INFO - __main__ -   Successful items count: 59

03/05/2025 15:20:05 - INFO - __main__ -   Total count: 62

03/05/2025 15:20:05 - INFO - __main__ -   Index: 102

Number of variable_names extracted:  3
Generating population102...
	 0  --most gap 0.0041043162
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  26%|██▌       | 103/400 [27:45<5:29:18, 66.53s/it]03/05/2025 15:20:05 - INFO - __main__ -   测试:103

03/05/2025 15:20:05 - INFO - __main__ -   Attack failed!

03/05/2025 15:20:05 - INFO - __main__ -   测试:104

03/05/2025 15:27:29 - INFO - __main__ -   Success rate: 95.24%

03/05/2025 15:27:29 - INFO - __main__ -   Successful items count: 60

03/05/2025 15:27:29 - INFO - __main__ -   Total count: 63

03/05/2025 15:27:29 - INFO - __main__ -   Index: 104

The original code is misclassified.
Number of variable_names extracted:  7
Generating population104...
	 0  --most gap 0.012610972
	 1  --most gap 0.014939785
	 2  --most gap 0.014939785
	 3  --most gap 0.017847657
	 4  --most gap 0.017847657
	 5  --most gap 0.017847657
	 6  --most gap 0.017847657
两轮结果未更新,Changing code structure...
	 7  --most gap 0.019738317
	 8  --most gap 0.028897405
	 9  --most gap 0.028897405
	 10  --most gap 0.028897405
	 11  --most gap 0.028897405
两轮结果未更新,Changing code structure...
	 12  --most gap 0.028897405
	 13  --most gap 0.028897405
	 14  --most gap 0.028897405
两轮结果未更新,Changing code structure...
	 15  --most gap 0.029001415
	 16  --most gap 0.029001415
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  26%|██▋       | 105/400 [35:08<11:00:21, 134.31s/it]03/05/2025 15:27:29 - INFO - __main__ -   测试:105

03/05/2025 15:27:35 - INFO - __main__ -   Success rate: 95.31%

03/05/2025 15:27:35 - INFO - __main__ -   Successful items count: 61

03/05/2025 15:27:35 - INFO - __main__ -   Total count: 64

03/05/2025 15:27:35 - INFO - __main__ -   Index: 105

Number of variable_names extracted:  5
Generating population105...
	 0  --most gap 0.014306784
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  26%|██▋       | 106/400 [35:15<8:29:29, 103.98s/it] 03/05/2025 15:27:35 - INFO - __main__ -   测试:106

03/05/2025 15:27:38 - INFO - __main__ -   Success rate: 95.38%

03/05/2025 15:27:38 - INFO - __main__ -   Successful items count: 62

03/05/2025 15:27:38 - INFO - __main__ -   Total count: 65

03/05/2025 15:27:38 - INFO - __main__ -   Index: 106

Number of variable_names extracted:  7
Generating population106...
init SUCCESS!
Processing examples:  27%|██▋       | 107/400 [35:18<6:22:48, 78.39s/it] 03/05/2025 15:27:38 - INFO - __main__ -   测试:107

03/05/2025 15:28:49 - INFO - __main__ -   Success rate: 95.45%

03/05/2025 15:28:49 - INFO - __main__ -   Successful items count: 63

03/05/2025 15:28:49 - INFO - __main__ -   Total count: 66

03/05/2025 15:28:49 - INFO - __main__ -   Index: 107

Number of variable_names extracted:  12
Generating population107...
init SUCCESS!
Processing examples:  27%|██▋       | 108/400 [36:29<6:11:38, 76.37s/it]03/05/2025 15:28:49 - INFO - __main__ -   测试:108

03/05/2025 15:28:49 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  27%|██▋       | 109/400 [36:29<4:28:33, 55.37s/it]03/05/2025 15:28:49 - INFO - __main__ -   测试:109

03/05/2025 15:28:51 - INFO - __main__ -   Success rate: 95.52%

03/05/2025 15:28:51 - INFO - __main__ -   Successful items count: 64

03/05/2025 15:28:51 - INFO - __main__ -   Total count: 67

03/05/2025 15:28:51 - INFO - __main__ -   Index: 109

Number of variable_names extracted:  7
Generating population109...
init SUCCESS!
Processing examples:  28%|██▊       | 110/400 [36:30<3:14:16, 40.20s/it]03/05/2025 15:28:51 - INFO - __main__ -   测试:110

03/05/2025 15:30:14 - INFO - __main__ -   Success rate: 95.59%

03/05/2025 15:30:14 - INFO - __main__ -   Successful items count: 65

03/05/2025 15:30:14 - INFO - __main__ -   Total count: 68

03/05/2025 15:30:14 - INFO - __main__ -   Index: 110

Number of variable_names extracted:  6
Generating population110...
	 0  --most gap 0.091941655
	 1  --most gap 0.091941655
	 2  --most gap 0.091941655
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 111/400 [37:54<4:13:27, 52.62s/it]03/05/2025 15:30:14 - INFO - __main__ -   测试:111

03/05/2025 15:30:14 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
03/05/2025 15:30:14 - INFO - __main__ -   Attack failed!

03/05/2025 15:30:14 - INFO - __main__ -   测试:112

03/05/2025 15:30:15 - INFO - __main__ -   Success rate: 95.65%

03/05/2025 15:30:15 - INFO - __main__ -   Successful items count: 66

03/05/2025 15:30:15 - INFO - __main__ -   Total count: 69

03/05/2025 15:30:15 - INFO - __main__ -   Index: 112

The original code is misclassified.
Number of variable_names extracted:  3
Generating population112...
init SUCCESS!
Processing examples:  28%|██▊       | 113/400 [37:54<2:18:43, 29.00s/it]03/05/2025 15:30:15 - INFO - __main__ -   测试:113

03/05/2025 15:30:29 - INFO - __main__ -   Success rate: 95.71%

03/05/2025 15:30:29 - INFO - __main__ -   Successful items count: 67

03/05/2025 15:30:29 - INFO - __main__ -   Total count: 70

03/05/2025 15:30:29 - INFO - __main__ -   Index: 113

Number of variable_names extracted:  7
Generating population113...
	 0  --most gap 0.4645459
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  28%|██▊       | 114/400 [38:08<2:00:51, 25.36s/it]03/05/2025 15:30:29 - INFO - __main__ -   测试:114

03/05/2025 15:30:31 - INFO - __main__ -   Success rate: 95.77%

03/05/2025 15:30:31 - INFO - __main__ -   Successful items count: 68

03/05/2025 15:30:31 - INFO - __main__ -   Total count: 71

03/05/2025 15:30:31 - INFO - __main__ -   Index: 114

Number of variable_names extracted:  4
Generating population114...
init SUCCESS!
Processing examples:  29%|██▉       | 115/400 [38:10<1:31:44, 19.32s/it]03/05/2025 15:30:31 - INFO - __main__ -   测试:115

03/05/2025 15:30:31 - INFO - __main__ -   Attack failed!

03/05/2025 15:30:31 - INFO - __main__ -   测试:116

03/05/2025 15:30:31 - INFO - __main__ -   Success rate: 95.83%

03/05/2025 15:30:31 - INFO - __main__ -   Successful items count: 69

03/05/2025 15:30:31 - INFO - __main__ -   Total count: 72

03/05/2025 15:30:31 - INFO - __main__ -   Index: 116

The original code is misclassified.
Number of variable_names extracted:  3
Generating population116...
init SUCCESS!
Processing examples:  29%|██▉       | 117/400 [38:11<52:49, 11.20s/it]  03/05/2025 15:30:31 - INFO - __main__ -   测试:117

03/05/2025 15:31:55 - INFO - __main__ -   Success rate: 95.89%

03/05/2025 15:31:55 - INFO - __main__ -   Successful items count: 70

03/05/2025 15:31:55 - INFO - __main__ -   Total count: 73

03/05/2025 15:31:55 - INFO - __main__ -   Index: 117

Number of variable_names extracted:  1
Generating population117...
	 0  --most gap 0
	 1  --most gap 0.006316483
	 2  --most gap 0.006316483
	 3  --most gap 0.006316483
	 4  --most gap 0.006316483
两轮结果未更新,Changing code structure...
	 5  --most gap 0.006316483
	 6  --most gap 0.006316483
	 7  --most gap 0.006316483
两轮结果未更新,Changing code structure...
	 8  --most gap 0.006316483
	 9  --most gap 0.006316483
	 10  --most gap 0.006316483
两轮结果未更新,Changing code structure...
	 11  --most gap 0.006316483
	 12  --most gap 0.006316483
	 13  --most gap 0.006316483
两轮结果未更新,Changing code structure...
	 14  --most gap 0.006316483
	 15  --most gap 0.006316483
	 16  --most gap 0.006316483
两轮结果未更新,Changing code structure...
	 17  --most gap 0.006316483
	 18  --most gap 0.006316483
	 19  --most gap 0.006316483
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  30%|██▉       | 118/400 [39:34<2:11:40, 28.02s/it]03/05/2025 15:31:55 - INFO - __main__ -   测试:118

03/05/2025 15:32:25 - INFO - __main__ -   Success rate: 95.95%

03/05/2025 15:32:25 - INFO - __main__ -   Successful items count: 71

03/05/2025 15:32:25 - INFO - __main__ -   Total count: 74

03/05/2025 15:32:25 - INFO - __main__ -   Index: 118

Number of variable_names extracted:  5
Generating population118...
init SUCCESS!
Processing examples:  30%|██▉       | 119/400 [40:04<2:13:23, 28.48s/it]03/05/2025 15:32:25 - INFO - __main__ -   测试:119

03/05/2025 15:32:25 - INFO - __main__ -   Attack failed!

03/05/2025 15:32:25 - INFO - __main__ -   测试:120

03/05/2025 15:32:29 - INFO - __main__ -   Success rate: 96.00%

03/05/2025 15:32:29 - INFO - __main__ -   Successful items count: 72

03/05/2025 15:32:29 - INFO - __main__ -   Total count: 75

03/05/2025 15:32:29 - INFO - __main__ -   Index: 120

The original code is misclassified.
Number of variable_names extracted:  4
Generating population120...
	 0  --most gap 0.0027517676
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  30%|███       | 121/400 [40:09<1:21:50, 17.60s/it]03/05/2025 15:32:29 - INFO - __main__ -   测试:121

03/05/2025 15:37:59 - INFO - __main__ -   Success rate: 96.05%

03/05/2025 15:37:59 - INFO - __main__ -   Successful items count: 73

03/05/2025 15:37:59 - INFO - __main__ -   Total count: 76

03/05/2025 15:37:59 - INFO - __main__ -   Index: 121

Number of variable_names extracted:  3
Generating population121...
	 0  --most gap 0.02324444
	 1  --most gap 0.039645016
	 2  --most gap 0.039645016
	 3  --most gap 0.039645016
	 4  --most gap 0.039645016
两轮结果未更新,Changing code structure...
	 5  --most gap 0.039645016
	 6  --most gap 0.039645016
	 7  --most gap 0.04831201
	 8  --most gap 0.04831201
	 9  --most gap 0.04831201
	 10  --most gap 0.04831201
两轮结果未更新,Changing code structure...
	 11  --most gap 0.04831201
	 12  --most gap 0.04831201
	 13  --most gap 0.04831201
两轮结果未更新,Changing code structure...
	 14  --most gap 0.04831201
	 15  --most gap 0.04831201
	 16  --most gap 0.04831201
两轮结果未更新,Changing code structure...
	 17  --most gap 0.04831201
	 18  --most gap 0.04831201
	 19  --most gap 0.04831201
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  30%|███       | 122/400 [45:39<6:53:22, 89.22s/it]03/05/2025 15:37:59 - INFO - __main__ -   测试:122

03/05/2025 15:37:59 - INFO - __main__ -   Attack failed!

03/05/2025 15:37:59 - INFO - __main__ -   测试:123

03/05/2025 15:38:00 - INFO - __main__ -   Success rate: 96.10%

03/05/2025 15:38:00 - INFO - __main__ -   Successful items count: 74

03/05/2025 15:38:00 - INFO - __main__ -   Total count: 77

03/05/2025 15:38:00 - INFO - __main__ -   Index: 123

The original code is misclassified.
Number of variable_names extracted:  5
Generating population123...
init SUCCESS!
Processing examples:  31%|███       | 124/400 [45:39<4:08:29, 54.02s/it]03/05/2025 15:38:00 - INFO - __main__ -   测试:124

03/05/2025 15:38:00 - INFO - __main__ -   Success rate: 96.15%

03/05/2025 15:38:00 - INFO - __main__ -   Successful items count: 75

03/05/2025 15:38:00 - INFO - __main__ -   Total count: 78

03/05/2025 15:38:00 - INFO - __main__ -   Index: 124

Number of variable_names extracted:  5
Generating population124...
init SUCCESS!
Processing examples:  31%|███▏      | 125/400 [45:40<3:13:23, 42.20s/it]03/05/2025 15:38:00 - INFO - __main__ -   测试:125

03/05/2025 15:38:29 - INFO - __main__ -   Success rate: 96.20%

03/05/2025 15:38:29 - INFO - __main__ -   Successful items count: 76

03/05/2025 15:38:29 - INFO - __main__ -   Total count: 79

03/05/2025 15:38:29 - INFO - __main__ -   Index: 125

Number of variable_names extracted:  11
Generating population125...
init SUCCESS!
Processing examples:  32%|███▏      | 126/400 [46:08<2:57:37, 38.90s/it]03/05/2025 15:38:29 - INFO - __main__ -   测试:126

03/05/2025 15:39:06 - INFO - __main__ -   Success rate: 95.00%

03/05/2025 15:39:06 - INFO - __main__ -   Successful items count: 76

03/05/2025 15:39:06 - INFO - __main__ -   Total count: 80

03/05/2025 15:39:06 - INFO - __main__ -   Index: 126

Number of variable_names extracted:  2
Generating population126...
	 0  --most gap 0.009839654
	 1  --most gap 0.009839654
	 2  --most gap 0.009839654
两轮结果未更新,Changing code structure...
	 3  --most gap 0.009839654
	 4  --most gap 0.009839654
	 5  --most gap 0.009839654
两轮结果未更新,Changing code structure...
	 6  --most gap 0.009839654
	 7  --most gap 0.009839654
	 8  --most gap 0.009839654
两轮结果未更新,Changing code structure...
	 9  --most gap 0.009839654
	 10  --most gap 0.009839654
	 11  --most gap 0.009839654
两轮结果未更新,Changing code structure...
	 12  --most gap 0.009839654
	 13  --most gap 0.009839654
	 14  --most gap 0.009839654
两轮结果未更新,Changing code structure...
	 15  --most gap 0.009839654
	 16  --most gap 0.009839654
	 17  --most gap 0.009839654
两轮结果未更新,Changing code structure...
	 18  --most gap 0.009839654
	 19  --most gap 0.009839654
Changing code structure...
Processing examples:  32%|███▏      | 127/400 [46:45<2:54:40, 38.39s/it]03/05/2025 15:39:06 - INFO - __main__ -   测试:127

03/05/2025 15:39:10 - INFO - __main__ -   Success rate: 95.06%

03/05/2025 15:39:10 - INFO - __main__ -   Successful items count: 77

03/05/2025 15:39:10 - INFO - __main__ -   Total count: 81

03/05/2025 15:39:10 - INFO - __main__ -   Index: 127

Number of variable_names extracted:  10
Generating population127...
init SUCCESS!
Processing examples:  32%|███▏      | 128/400 [46:49<2:12:39, 29.26s/it]03/05/2025 15:39:10 - INFO - __main__ -   测试:128

03/05/2025 15:39:13 - INFO - __main__ -   Success rate: 95.12%

03/05/2025 15:39:13 - INFO - __main__ -   Successful items count: 78

03/05/2025 15:39:13 - INFO - __main__ -   Total count: 82

03/05/2025 15:39:13 - INFO - __main__ -   Index: 128

Number of variable_names extracted:  3
Generating population128...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  32%|███▏      | 129/400 [46:53<1:39:43, 22.08s/it]03/05/2025 15:39:13 - INFO - __main__ -   测试:129

03/05/2025 15:39:13 - INFO - __main__ -   Attack failed!

03/05/2025 15:39:13 - INFO - __main__ -   测试:130

03/05/2025 15:39:16 - INFO - __main__ -   Success rate: 95.18%

03/05/2025 15:39:16 - INFO - __main__ -   Successful items count: 79

03/05/2025 15:39:16 - INFO - __main__ -   Total count: 83

03/05/2025 15:39:16 - INFO - __main__ -   Index: 130

The original code is misclassified.
Number of variable_names extracted:  12
Generating population130...
init SUCCESS!
Processing examples:  33%|███▎      | 131/400 [46:56<58:35, 13.07s/it]  03/05/2025 15:39:16 - INFO - __main__ -   测试:131

03/05/2025 15:39:17 - INFO - __main__ -   Success rate: 95.24%

03/05/2025 15:39:17 - INFO - __main__ -   Successful items count: 80

03/05/2025 15:39:17 - INFO - __main__ -   Total count: 84

03/05/2025 15:39:17 - INFO - __main__ -   Index: 131

Number of variable_names extracted:  12
Generating population131...
init SUCCESS!
Processing examples:  33%|███▎      | 132/400 [46:57<45:36, 10.21s/it]03/05/2025 15:39:17 - INFO - __main__ -   测试:132

03/05/2025 15:40:09 - INFO - __main__ -   Success rate: 94.12%

03/05/2025 15:40:09 - INFO - __main__ -   Successful items count: 80

03/05/2025 15:40:09 - INFO - __main__ -   Total count: 85

03/05/2025 15:40:09 - INFO - __main__ -   Index: 132

Number of variable_names extracted:  2
Generating population132...
	 0  --most gap 0.005600512
	 1  --most gap 0.014966786
	 2  --most gap 0.014966786
	 3  --most gap 0.014966786
	 4  --most gap 0.014966786
两轮结果未更新,Changing code structure...
	 5  --most gap 0.014966786
	 6  --most gap 0.014966786
	 7  --most gap 0.014966786
两轮结果未更新,Changing code structure...
	 8  --most gap 0.014966786
	 9  --most gap 0.014966786
	 10  --most gap 0.014966786
两轮结果未更新,Changing code structure...
	 11  --most gap 0.014966786
	 12  --most gap 0.014966786
	 13  --most gap 0.014966786
两轮结果未更新,Changing code structure...
	 14  --most gap 0.014966786
	 15  --most gap 0.014966786
	 16  --most gap 0.014966786
两轮结果未更新,Changing code structure...
	 17  --most gap 0.014966786
	 18  --most gap 0.014966786
	 19  --most gap 0.014966786
两轮结果未更新,Changing code structure...
Changing code structure...
Processing examples:  33%|███▎      | 133/400 [47:48<1:32:07, 20.70s/it]03/05/2025 15:40:09 - INFO - __main__ -   测试:133

03/05/2025 15:40:09 - INFO - __main__ -   Success rate: 94.19%

03/05/2025 15:40:09 - INFO - __main__ -   Successful items count: 81

03/05/2025 15:40:09 - INFO - __main__ -   Total count: 86

03/05/2025 15:40:09 - INFO - __main__ -   Index: 133

Number of variable_names extracted:  2
Generating population133...
init SUCCESS!
Processing examples:  34%|███▎      | 134/400 [47:49<1:07:53, 15.31s/it]03/05/2025 15:40:09 - INFO - __main__ -   测试:134

03/05/2025 15:40:12 - INFO - __main__ -   Success rate: 94.25%

03/05/2025 15:40:12 - INFO - __main__ -   Successful items count: 82

03/05/2025 15:40:12 - INFO - __main__ -   Total count: 87

03/05/2025 15:40:12 - INFO - __main__ -   Index: 134

Number of variable_names extracted:  7
Generating population134...
init SUCCESS!
Processing examples:  34%|███▍      | 135/400 [47:52<52:14, 11.83s/it]  03/05/2025 15:40:12 - INFO - __main__ -   测试:135

03/05/2025 15:40:14 - INFO - __main__ -   Success rate: 94.32%

03/05/2025 15:40:14 - INFO - __main__ -   Successful items count: 83

03/05/2025 15:40:14 - INFO - __main__ -   Total count: 88

03/05/2025 15:40:14 - INFO - __main__ -   Index: 135

Number of variable_names extracted:  6
Generating population135...
init SUCCESS!
Processing examples:  34%|███▍      | 136/400 [47:53<39:47,  9.04s/it]03/05/2025 15:40:14 - INFO - __main__ -   测试:136

03/05/2025 15:40:27 - INFO - __main__ -   Success rate: 94.38%

03/05/2025 15:40:27 - INFO - __main__ -   Successful items count: 84

03/05/2025 15:40:27 - INFO - __main__ -   Total count: 89

03/05/2025 15:40:27 - INFO - __main__ -   Index: 136

Number of variable_names extracted:  15
Generating population136...
init SUCCESS!
Processing examples:  34%|███▍      | 137/400 [48:06<44:36, 10.18s/it]03/05/2025 15:40:27 - INFO - __main__ -   测试:137

03/05/2025 15:40:27 - INFO - __main__ -   Attack failed!

03/05/2025 15:40:27 - INFO - __main__ -   测试:138

03/05/2025 15:40:28 - INFO - __main__ -   Success rate: 94.44%

03/05/2025 15:40:28 - INFO - __main__ -   Successful items count: 85

03/05/2025 15:40:28 - INFO - __main__ -   Total count: 90

03/05/2025 15:40:28 - INFO - __main__ -   Index: 138

The original code is misclassified.
Number of variable_names extracted:  4
Generating population138...
init SUCCESS!
Processing examples:  35%|███▍      | 139/400 [48:07<24:50,  5.71s/it]03/05/2025 15:40:28 - INFO - __main__ -   测试:139

03/05/2025 15:40:29 - INFO - __main__ -   Success rate: 94.51%

03/05/2025 15:40:29 - INFO - __main__ -   Successful items count: 86

03/05/2025 15:40:29 - INFO - __main__ -   Total count: 91

03/05/2025 15:40:29 - INFO - __main__ -   Index: 139

Number of variable_names extracted:  6
Generating population139...
init SUCCESS!
Processing examples:  35%|███▌      | 140/400 [48:09<20:42,  4.78s/it]03/05/2025 15:40:29 - INFO - __main__ -   测试:140

03/05/2025 15:40:30 - INFO - __main__ -   Success rate: 94.57%

03/05/2025 15:40:30 - INFO - __main__ -   Successful items count: 87

03/05/2025 15:40:30 - INFO - __main__ -   Total count: 92

03/05/2025 15:40:30 - INFO - __main__ -   Index: 140

Number of variable_names extracted:  9
Generating population140...
init SUCCESS!
Processing examples:  35%|███▌      | 141/400 [48:10<16:21,  3.79s/it]03/05/2025 15:40:30 - INFO - __main__ -   测试:141

03/05/2025 15:40:36 - INFO - __main__ -   Success rate: 94.62%

03/05/2025 15:40:36 - INFO - __main__ -   Successful items count: 88

03/05/2025 15:40:36 - INFO - __main__ -   Total count: 93

03/05/2025 15:40:36 - INFO - __main__ -   Index: 141

Number of variable_names extracted:  8
Generating population141...
init SUCCESS!
Processing examples:  36%|███▌      | 142/400 [48:16<18:27,  4.29s/it]03/05/2025 15:40:36 - INFO - __main__ -   测试:142

03/05/2025 15:40:41 - INFO - __main__ -   Success rate: 94.68%

03/05/2025 15:40:41 - INFO - __main__ -   Successful items count: 89

03/05/2025 15:40:41 - INFO - __main__ -   Total count: 94

03/05/2025 15:40:41 - INFO - __main__ -   Index: 142

Number of variable_names extracted:  9
Generating population142...
init SUCCESS!
Processing examples:  36%|███▌      | 143/400 [48:21<19:28,  4.55s/it]03/05/2025 15:40:41 - INFO - __main__ -   测试:143

03/05/2025 15:40:42 - INFO - __main__ -   Success rate: 94.74%

03/05/2025 15:40:42 - INFO - __main__ -   Successful items count: 90

03/05/2025 15:40:42 - INFO - __main__ -   Total count: 95

03/05/2025 15:40:42 - INFO - __main__ -   Index: 143

Number of variable_names extracted:  4
Generating population143...
init SUCCESS!
Processing examples:  36%|███▌      | 144/400 [48:21<14:25,  3.38s/it]03/05/2025 15:40:42 - INFO - __main__ -   测试:144

03/05/2025 15:40:42 - INFO - __main__ -   Attack failed!

03/05/2025 15:40:42 - INFO - __main__ -   测试:145

03/05/2025 15:40:46 - INFO - __main__ -   Success rate: 94.79%

03/05/2025 15:40:46 - INFO - __main__ -   Successful items count: 91

03/05/2025 15:40:46 - INFO - __main__ -   Total count: 96

03/05/2025 15:40:46 - INFO - __main__ -   Index: 145

The original code is misclassified.
Number of variable_names extracted:  5
Generating population145...
init SUCCESS!
Processing examples:  36%|███▋      | 146/400 [48:26<12:07,  2.86s/it]03/05/2025 15:40:46 - INFO - __main__ -   测试:146

03/05/2025 15:40:46 - INFO - __main__ -   Success rate: 94.85%

03/05/2025 15:40:46 - INFO - __main__ -   Successful items count: 92

03/05/2025 15:40:46 - INFO - __main__ -   Total count: 97

03/05/2025 15:40:46 - INFO - __main__ -   Index: 146

Number of variable_names extracted:  3
Generating population146...
init SUCCESS!
Processing examples:  37%|███▋      | 147/400 [48:26<09:28,  2.25s/it]03/05/2025 15:40:46 - INFO - __main__ -   测试:147

03/05/2025 15:40:47 - INFO - __main__ -   Attack failed!

03/05/2025 15:40:47 - INFO - __main__ -   测试:148

03/05/2025 15:40:51 - INFO - __main__ -   Success rate: 94.90%

03/05/2025 15:40:51 - INFO - __main__ -   Successful items count: 93

03/05/2025 15:40:51 - INFO - __main__ -   Total count: 98

03/05/2025 15:40:51 - INFO - __main__ -   Index: 148

The original code is misclassified.
Number of variable_names extracted:  1
Generating population148...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  37%|███▋      | 149/400 [48:31<09:34,  2.29s/it]03/05/2025 15:40:51 - INFO - __main__ -   测试:149

03/05/2025 15:41:15 - INFO - __main__ -   Success rate: 94.95%

03/05/2025 15:41:15 - INFO - __main__ -   Successful items count: 94

03/05/2025 15:41:15 - INFO - __main__ -   Total count: 99

03/05/2025 15:41:15 - INFO - __main__ -   Index: 149

Number of variable_names extracted:  3
Generating population149...
	 0  --most gap 0.15945822
	 1  --most gap 0.15945822
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  38%|███▊      | 150/400 [48:54<29:40,  7.12s/it]03/05/2025 15:41:15 - INFO - __main__ -   测试:150

03/05/2025 15:41:42 - INFO - __main__ -   Success rate: 95.00%

03/05/2025 15:41:42 - INFO - __main__ -   Successful items count: 95

03/05/2025 15:41:42 - INFO - __main__ -   Total count: 100

03/05/2025 15:41:42 - INFO - __main__ -   Index: 150

Number of variable_names extracted:  1
Generating population150...
	 0  --most gap 0.006246686
	 1  --most gap 0.006246686
	 2  --most gap 0.006246686
两轮结果未更新,Changing code structure...
	 3  --most gap 0.006246686
	 4  --most gap 0.006246686
	 5  --most gap 0.006246686
两轮结果未更新,Changing code structure...
	 6  --most gap 0.006246686
	 7  --most gap 0.006246686
	 8  --most gap 0.006246686
两轮结果未更新,Changing code structure...
	 9  --most gap 0.006246686
	 10  --most gap 0.006246686
	 11  --most gap 0.006246686
两轮结果未更新,Changing code structure...
	 12  --most gap 0.006246686
	 13  --most gap 0.006246686
	 14  --most gap 0.006246686
两轮结果未更新,Changing code structure...
	 15  --most gap 0.006246686
	 16  --most gap 0.006246686
	 17  --most gap 0.006246686
两轮结果未更新,Changing code structure...
	 18  --most gap 0.006246686
	 19  --most gap 0.006246686
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  38%|███▊      | 151/400 [49:22<49:57, 12.04s/it]03/05/2025 15:41:42 - INFO - __main__ -   测试:151

03/05/2025 15:41:42 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  38%|███▊      | 152/400 [49:22<37:13,  9.01s/it]03/05/2025 15:41:42 - INFO - __main__ -   测试:152

03/05/2025 15:41:44 - INFO - __main__ -   Success rate: 95.05%

03/05/2025 15:41:44 - INFO - __main__ -   Successful items count: 96

03/05/2025 15:41:44 - INFO - __main__ -   Total count: 101

03/05/2025 15:41:44 - INFO - __main__ -   Index: 152

Number of variable_names extracted:  6
Generating population152...
init SUCCESS!
Processing examples:  38%|███▊      | 153/400 [49:24<28:56,  7.03s/it]03/05/2025 15:41:44 - INFO - __main__ -   测试:153

03/05/2025 15:41:49 - INFO - __main__ -   Success rate: 95.10%

03/05/2025 15:41:49 - INFO - __main__ -   Successful items count: 97

03/05/2025 15:41:49 - INFO - __main__ -   Total count: 102

03/05/2025 15:41:49 - INFO - __main__ -   Index: 153

Number of variable_names extracted:  9
Generating population153...
	 0  --most gap 0.01729691
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  38%|███▊      | 154/400 [49:28<26:19,  6.42s/it]03/05/2025 15:41:49 - INFO - __main__ -   测试:154

03/05/2025 15:41:50 - INFO - __main__ -   Success rate: 95.15%

03/05/2025 15:41:50 - INFO - __main__ -   Successful items count: 98

03/05/2025 15:41:50 - INFO - __main__ -   Total count: 103

03/05/2025 15:41:50 - INFO - __main__ -   Index: 154

Number of variable_names extracted:  5
Generating population154...
init SUCCESS!
Processing examples:  39%|███▉      | 155/400 [49:29<19:48,  4.85s/it]03/05/2025 15:41:50 - INFO - __main__ -   测试:155

03/05/2025 15:41:51 - INFO - __main__ -   Success rate: 95.19%

03/05/2025 15:41:51 - INFO - __main__ -   Successful items count: 99

03/05/2025 15:41:51 - INFO - __main__ -   Total count: 104

03/05/2025 15:41:51 - INFO - __main__ -   Index: 155

Number of variable_names extracted:  6
Generating population155...
init SUCCESS!
Processing examples:  39%|███▉      | 156/400 [49:31<15:51,  3.90s/it]03/05/2025 15:41:51 - INFO - __main__ -   测试:156

03/05/2025 15:41:51 - INFO - __main__ -   Attack failed!

03/05/2025 15:41:51 - INFO - __main__ -   测试:157

03/05/2025 15:41:52 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  40%|███▉      | 158/400 [49:31<08:44,  2.17s/it]03/05/2025 15:41:52 - INFO - __main__ -   测试:158

03/05/2025 15:41:56 - INFO - __main__ -   Success rate: 95.24%

03/05/2025 15:41:56 - INFO - __main__ -   Successful items count: 100

03/05/2025 15:41:56 - INFO - __main__ -   Total count: 105

03/05/2025 15:41:56 - INFO - __main__ -   Index: 158

Number of variable_names extracted:  1
Generating population158...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  40%|███▉      | 159/400 [49:35<10:49,  2.69s/it]03/05/2025 15:41:56 - INFO - __main__ -   测试:159

03/05/2025 15:42:00 - INFO - __main__ -   Success rate: 95.28%

03/05/2025 15:42:00 - INFO - __main__ -   Successful items count: 101

03/05/2025 15:42:00 - INFO - __main__ -   Total count: 106

03/05/2025 15:42:00 - INFO - __main__ -   Index: 159

Number of variable_names extracted:  3
Generating population159...
	 0  --most gap 0.0046075583
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  40%|████      | 160/400 [49:40<12:41,  3.17s/it]03/05/2025 15:42:00 - INFO - __main__ -   测试:160

03/05/2025 15:42:00 - INFO - __main__ -   Attack failed!

03/05/2025 15:42:00 - INFO - __main__ -   测试:161

03/05/2025 15:42:01 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  40%|████      | 162/400 [49:40<07:22,  1.86s/it]03/05/2025 15:42:01 - INFO - __main__ -   测试:162

03/05/2025 15:42:01 - INFO - __main__ -   Attack failed!

03/05/2025 15:42:01 - INFO - __main__ -   测试:163

03/05/2025 15:50:24 - INFO - __main__ -   Success rate: 95.33%

03/05/2025 15:50:24 - INFO - __main__ -   Successful items count: 102

03/05/2025 15:50:24 - INFO - __main__ -   Total count: 107

03/05/2025 15:50:24 - INFO - __main__ -   Index: 163

The original code is misclassified.
Number of variable_names extracted:  4
Generating population163...
	 0  --most gap 0.01184988
	 1  --most gap 0.014716387
	 2  --most gap 0.02412343
	 3  --most gap 0.02412343
	 4  --most gap 0.02412343
	 5  --most gap 0.031555176
	 6  --most gap 0.031555176
	 7  --most gap 0.031555176
	 8  --most gap 0.031555176
两轮结果未更新,Changing code structure...
	 9  --most gap 0.031555176
	 10  --most gap 0.031555176
	 11  --most gap 0.031555176
两轮结果未更新,Changing code structure...
	 12  --most gap 0.031555176
	 13  --most gap 0.031555176
	 14  --most gap 0.1764409
	 15  --most gap 0.1764409
	 16  --most gap 0.1764409
	 17  --most gap 0.1764409
两轮结果未更新,Changing code structure...
	 18  --most gap 0.1764409
	 19  --most gap 0.1764409
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  41%|████      | 164/400 [58:03<6:18:28, 96.22s/it]03/05/2025 15:50:24 - INFO - __main__ -   测试:164

03/05/2025 15:50:24 - INFO - __main__ -   Attack failed!

03/05/2025 15:50:24 - INFO - __main__ -   测试:165

03/05/2025 15:50:26 - INFO - __main__ -   Success rate: 95.37%

03/05/2025 15:50:26 - INFO - __main__ -   Successful items count: 103

03/05/2025 15:50:26 - INFO - __main__ -   Total count: 108

03/05/2025 15:50:26 - INFO - __main__ -   Index: 165

The original code is misclassified.
Number of variable_names extracted:  16
Generating population165...
init SUCCESS!
Processing examples:  42%|████▏     | 166/400 [58:05<4:05:09, 62.86s/it]03/05/2025 15:50:26 - INFO - __main__ -   测试:166

03/05/2025 15:51:06 - INFO - __main__ -   Success rate: 94.50%

03/05/2025 15:51:06 - INFO - __main__ -   Successful items count: 103

03/05/2025 15:51:06 - INFO - __main__ -   Total count: 109

03/05/2025 15:51:06 - INFO - __main__ -   Index: 166

Number of variable_names extracted:  2
Generating population166...
	 0  --most gap 0.3228361
	 1  --most gap 0.3228361
	 2  --most gap 0.3228361
两轮结果未更新,Changing code structure...
	 3  --most gap 0.3228361
	 4  --most gap 0.3228361
	 5  --most gap 0.3228361
两轮结果未更新,Changing code structure...
	 6  --most gap 0.3228361
	 7  --most gap 0.3228361
	 8  --most gap 0.3228361
两轮结果未更新,Changing code structure...
	 9  --most gap 0.3228361
	 10  --most gap 0.3228361
	 11  --most gap 0.3228361
两轮结果未更新,Changing code structure...
	 12  --most gap 0.3228361
	 13  --most gap 0.3228361
	 14  --most gap 0.3228361
两轮结果未更新,Changing code structure...
	 15  --most gap 0.3228361
	 16  --most gap 0.3228361
	 17  --most gap 0.3228361
两轮结果未更新,Changing code structure...
	 18  --most gap 0.3228361
	 19  --most gap 0.3228361
Changing code structure...
Processing examples:  42%|████▏     | 167/400 [58:45<3:46:03, 58.21s/it]03/05/2025 15:51:06 - INFO - __main__ -   测试:167

03/05/2025 15:51:12 - INFO - __main__ -   Success rate: 94.55%

03/05/2025 15:51:12 - INFO - __main__ -   Successful items count: 104

03/05/2025 15:51:12 - INFO - __main__ -   Total count: 110

03/05/2025 15:51:12 - INFO - __main__ -   Index: 167

Number of variable_names extracted:  5
Generating population167...
init SUCCESS!
Processing examples:  42%|████▏     | 168/400 [58:51<3:00:11, 46.60s/it]03/05/2025 15:51:12 - INFO - __main__ -   测试:168

03/05/2025 15:51:12 - INFO - __main__ -   Attack failed!

03/05/2025 15:51:12 - INFO - __main__ -   测试:169

03/05/2025 15:51:16 - INFO - __main__ -   Success rate: 94.59%

03/05/2025 15:51:16 - INFO - __main__ -   Successful items count: 105

03/05/2025 15:51:16 - INFO - __main__ -   Total count: 111

03/05/2025 15:51:16 - INFO - __main__ -   Index: 169

The original code is misclassified.
Number of variable_names extracted:  9
Generating population169...
init SUCCESS!
Processing examples:  42%|████▎     | 170/400 [58:55<1:52:08, 29.25s/it]03/05/2025 15:51:16 - INFO - __main__ -   测试:170

03/05/2025 15:51:16 - INFO - __main__ -   Success rate: 94.64%

03/05/2025 15:51:16 - INFO - __main__ -   Successful items count: 106

03/05/2025 15:51:16 - INFO - __main__ -   Total count: 112

03/05/2025 15:51:16 - INFO - __main__ -   Index: 170

Number of variable_names extracted:  3
Generating population170...
init SUCCESS!
Processing examples:  43%|████▎     | 171/400 [58:55<1:27:42, 22.98s/it]03/05/2025 15:51:16 - INFO - __main__ -   测试:171

03/05/2025 15:51:17 - INFO - __main__ -   Success rate: 94.69%

03/05/2025 15:51:17 - INFO - __main__ -   Successful items count: 107

03/05/2025 15:51:17 - INFO - __main__ -   Total count: 113

03/05/2025 15:51:17 - INFO - __main__ -   Index: 171

Number of variable_names extracted:  8
Generating population171...
init SUCCESS!
Processing examples:  43%|████▎     | 172/400 [58:56<1:07:22, 17.73s/it]03/05/2025 15:51:17 - INFO - __main__ -   测试:172

03/05/2025 15:51:17 - INFO - __main__ -   Attack failed!

03/05/2025 15:51:17 - INFO - __main__ -   测试:173

03/05/2025 15:51:17 - INFO - __main__ -   Attack failed!

03/05/2025 15:51:17 - INFO - __main__ -   测试:174

03/05/2025 15:51:19 - INFO - __main__ -   Success rate: 94.74%

03/05/2025 15:51:19 - INFO - __main__ -   Successful items count: 108

03/05/2025 15:51:19 - INFO - __main__ -   Total count: 114

03/05/2025 15:51:19 - INFO - __main__ -   Index: 174

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  1
Generating population174...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  44%|████▍     | 175/400 [58:58<34:24,  9.18s/it]  03/05/2025 15:51:19 - INFO - __main__ -   测试:175

03/05/2025 15:51:33 - INFO - __main__ -   Success rate: 94.78%

03/05/2025 15:51:33 - INFO - __main__ -   Successful items count: 109

03/05/2025 15:51:33 - INFO - __main__ -   Total count: 115

03/05/2025 15:51:33 - INFO - __main__ -   Index: 175

Number of variable_names extracted:  2
Generating population175...
	 0  --most gap 0.013038933
	 1  --most gap 0.013038933
	 2  --most gap 0.013038933
两轮结果未更新,Changing code structure...
	 3  --most gap 0.013038933
	 4  --most gap 0.013038933
	 5  --most gap 0.013038933
两轮结果未更新,Changing code structure...
	 6  --most gap 0.013038933
	 7  --most gap 0.013038933
	 8  --most gap 0.013038933
两轮结果未更新,Changing code structure...
	 9  --most gap 0.013038933
	 10  --most gap 0.013038933
	 11  --most gap 0.013038933
两轮结果未更新,Changing code structure...
	 12  --most gap 0.013038933
	 13  --most gap 0.013038933
	 14  --most gap 0.013038933
两轮结果未更新,Changing code structure...
	 15  --most gap 0.013038933
	 16  --most gap 0.013038933
	 17  --most gap 0.013038933
两轮结果未更新,Changing code structure...
	 18  --most gap 0.013038933
	 19  --most gap 0.013038933
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  44%|████▍     | 176/400 [59:12<37:35, 10.07s/it]03/05/2025 15:51:33 - INFO - __main__ -   测试:176

03/05/2025 15:51:35 - INFO - __main__ -   Success rate: 94.83%

03/05/2025 15:51:35 - INFO - __main__ -   Successful items count: 110

03/05/2025 15:51:35 - INFO - __main__ -   Total count: 116

03/05/2025 15:51:35 - INFO - __main__ -   Index: 176

Number of variable_names extracted:  1
Generating population176...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  44%|████▍     | 177/400 [59:14<31:02,  8.35s/it]03/05/2025 15:51:35 - INFO - __main__ -   测试:177

03/05/2025 15:51:38 - INFO - __main__ -   Success rate: 94.87%

03/05/2025 15:51:38 - INFO - __main__ -   Successful items count: 111

03/05/2025 15:51:38 - INFO - __main__ -   Total count: 117

03/05/2025 15:51:38 - INFO - __main__ -   Index: 177

Number of variable_names extracted:  14
Generating population177...
init SUCCESS!
Processing examples:  44%|████▍     | 178/400 [59:18<26:24,  7.14s/it]03/05/2025 15:51:38 - INFO - __main__ -   测试:178

03/05/2025 15:51:41 - INFO - __main__ -   Success rate: 94.92%

03/05/2025 15:51:41 - INFO - __main__ -   Successful items count: 112

03/05/2025 15:51:41 - INFO - __main__ -   Total count: 118

03/05/2025 15:51:41 - INFO - __main__ -   Index: 178

Number of variable_names extracted:  17
Generating population178...
init SUCCESS!
Processing examples:  45%|████▍     | 179/400 [59:20<22:19,  6.06s/it]03/05/2025 15:51:41 - INFO - __main__ -   测试:179

03/05/2025 15:51:41 - INFO - __main__ -   Attack failed!

03/05/2025 15:51:41 - INFO - __main__ -   测试:180

03/05/2025 15:51:41 - INFO - __main__ -   Attack failed!

03/05/2025 15:51:41 - INFO - __main__ -   测试:181

03/05/2025 15:51:41 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  46%|████▌     | 182/400 [59:21<10:39,  2.93s/it]03/05/2025 15:51:41 - INFO - __main__ -   测试:182

03/05/2025 15:51:41 - INFO - __main__ -   Attack failed!

03/05/2025 15:51:41 - INFO - __main__ -   测试:183

03/05/2025 15:51:56 - INFO - __main__ -   Success rate: 94.96%

03/05/2025 15:51:56 - INFO - __main__ -   Successful items count: 113

03/05/2025 15:51:56 - INFO - __main__ -   Total count: 119

03/05/2025 15:51:56 - INFO - __main__ -   Index: 183

The original code is misclassified.
Number of variable_names extracted:  5
Generating population183...
	 0  --most gap 0.020695686
	 1  --most gap 0.032785654
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  46%|████▌     | 184/400 [59:36<16:12,  4.50s/it]03/05/2025 15:51:56 - INFO - __main__ -   测试:184

03/05/2025 15:52:03 - INFO - __main__ -   Success rate: 95.00%

03/05/2025 15:52:03 - INFO - __main__ -   Successful items count: 114

03/05/2025 15:52:03 - INFO - __main__ -   Total count: 120

03/05/2025 15:52:03 - INFO - __main__ -   Index: 184

Number of variable_names extracted:  3
Generating population184...
init SUCCESS!
Processing examples:  46%|████▋     | 185/400 [59:42<17:26,  4.87s/it]03/05/2025 15:52:03 - INFO - __main__ -   测试:185

03/05/2025 15:52:03 - INFO - __main__ -   Attack failed!

03/05/2025 15:52:03 - INFO - __main__ -   测试:186

03/05/2025 15:52:03 - INFO - __main__ -   Success rate: 95.04%

03/05/2025 15:52:03 - INFO - __main__ -   Successful items count: 115

03/05/2025 15:52:03 - INFO - __main__ -   Total count: 121

03/05/2025 15:52:03 - INFO - __main__ -   Index: 186

The original code is misclassified.
Number of variable_names extracted:  7
Generating population186...
init SUCCESS!
Processing examples:  47%|████▋     | 187/400 [59:43<11:24,  3.22s/it]03/05/2025 15:52:03 - INFO - __main__ -   测试:187

03/05/2025 15:52:03 - INFO - __main__ -   Attack failed!

03/05/2025 15:52:03 - INFO - __main__ -   测试:188

03/05/2025 15:52:03 - INFO - __main__ -   Attack failed!

03/05/2025 15:52:03 - INFO - __main__ -   测试:189

03/05/2025 15:52:03 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  48%|████▊     | 190/400 [59:43<06:28,  1.85s/it]03/05/2025 15:52:03 - INFO - __main__ -   测试:190

03/05/2025 15:52:08 - INFO - __main__ -   Success rate: 95.08%

03/05/2025 15:52:08 - INFO - __main__ -   Successful items count: 116

03/05/2025 15:52:08 - INFO - __main__ -   Total count: 122

03/05/2025 15:52:08 - INFO - __main__ -   Index: 190

03/05/2025 15:52:08 - INFO - __main__ -   测试:191

03/05/2025 15:52:08 - INFO - __main__ -   Attack failed!

Number of variable_names extracted:  8
Generating population190...
	 0  --most gap 0.07595831
select_best_replacement SUCCESS!
update SUCCESS!
The original code is misclassified.
Processing examples:  48%|████▊     | 192/400 [59:47<06:45,  1.95s/it]03/05/2025 15:52:08 - INFO - __main__ -   测试:192

03/05/2025 15:52:08 - INFO - __main__ -   Attack failed!

03/05/2025 15:52:08 - INFO - __main__ -   测试:193

03/05/2025 15:54:51 - INFO - __main__ -   Success rate: 95.12%

03/05/2025 15:54:51 - INFO - __main__ -   Successful items count: 117

03/05/2025 15:54:51 - INFO - __main__ -   Total count: 123

03/05/2025 15:54:51 - INFO - __main__ -   Index: 193

The original code is misclassified.
Number of variable_names extracted:  5
Generating population193...
	 0  --most gap 0.0005558133
	 1  --most gap 0.0005558133
	 2  --most gap 0.0005558133
两轮结果未更新,Changing code structure...
	 3  --most gap 0.017444909
	 4  --most gap 0.017444909
	 5  --most gap 0.48154742
	 6  --most gap 0.48154742
	 7  --most gap 0.48154742
	 8  --most gap 0.48154742
两轮结果未更新,Changing code structure...
	 9  --most gap 0.48154742
	 10  --most gap 0.48154742
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  48%|████▊     | 194/400 [1:02:31<1:27:12, 25.40s/it]03/05/2025 15:54:51 - INFO - __main__ -   测试:194

03/05/2025 15:54:51 - INFO - __main__ -   Attack failed!

03/05/2025 15:54:51 - INFO - __main__ -   测试:195

03/05/2025 15:54:59 - INFO - __main__ -   Success rate: 95.16%

03/05/2025 15:54:59 - INFO - __main__ -   Successful items count: 118

03/05/2025 15:54:59 - INFO - __main__ -   Total count: 124

03/05/2025 15:54:59 - INFO - __main__ -   Index: 195

The original code is misclassified.
Number of variable_names extracted:  22
Generating population195...
init SUCCESS!
Processing examples:  49%|████▉     | 196/400 [1:02:39<1:04:47, 19.06s/it]03/05/2025 15:54:59 - INFO - __main__ -   测试:196

03/05/2025 15:55:02 - INFO - __main__ -   Success rate: 95.20%

03/05/2025 15:55:02 - INFO - __main__ -   Successful items count: 119

03/05/2025 15:55:02 - INFO - __main__ -   Total count: 125

03/05/2025 15:55:02 - INFO - __main__ -   Index: 196

Number of variable_names extracted:  13
Generating population196...
init SUCCESS!
Processing examples:  49%|████▉     | 197/400 [1:02:41<54:36, 16.14s/it]  03/05/2025 15:55:02 - INFO - __main__ -   测试:197

03/05/2025 15:55:04 - INFO - __main__ -   Success rate: 95.24%

03/05/2025 15:55:04 - INFO - __main__ -   Successful items count: 120

03/05/2025 15:55:04 - INFO - __main__ -   Total count: 126

03/05/2025 15:55:04 - INFO - __main__ -   Index: 197

Number of variable_names extracted:  8
Generating population197...
init SUCCESS!
Processing examples:  50%|████▉     | 198/400 [1:02:43<44:58, 13.36s/it]03/05/2025 15:55:04 - INFO - __main__ -   测试:198

03/05/2025 15:55:25 - INFO - __main__ -   Success rate: 95.28%

03/05/2025 15:55:25 - INFO - __main__ -   Successful items count: 121

03/05/2025 15:55:25 - INFO - __main__ -   Total count: 127

03/05/2025 15:55:25 - INFO - __main__ -   Index: 198

Number of variable_names extracted:  14
Generating population198...
init SUCCESS!
Processing examples:  50%|████▉     | 199/400 [1:03:04<50:12, 14.99s/it]03/05/2025 15:55:25 - INFO - __main__ -   测试:199

03/05/2025 15:55:25 - INFO - __main__ -   Attack failed!

03/05/2025 15:55:25 - INFO - __main__ -   测试:200

03/05/2025 15:55:25 - INFO - __main__ -   Success rate: 95.31%

03/05/2025 15:55:25 - INFO - __main__ -   Successful items count: 122

03/05/2025 15:55:25 - INFO - __main__ -   Total count: 128

03/05/2025 15:55:25 - INFO - __main__ -   Index: 200

The original code is misclassified.
Number of variable_names extracted:  3
Generating population200...
init SUCCESS!
Processing examples:  50%|█████     | 201/400 [1:03:04<30:44,  9.27s/it]03/05/2025 15:55:25 - INFO - __main__ -   测试:201

03/05/2025 15:55:25 - INFO - __main__ -   Attack failed!

03/05/2025 15:55:25 - INFO - __main__ -   测试:202

03/05/2025 15:55:25 - INFO - __main__ -   Attack failed!

03/05/2025 15:55:25 - INFO - __main__ -   测试:203

03/05/2025 15:55:33 - INFO - __main__ -   Success rate: 95.35%

03/05/2025 15:55:33 - INFO - __main__ -   Successful items count: 123

03/05/2025 15:55:33 - INFO - __main__ -   Total count: 129

03/05/2025 15:55:33 - INFO - __main__ -   Index: 203

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  18
Generating population203...
init SUCCESS!
Processing examples:  51%|█████     | 204/400 [1:03:13<20:39,  6.32s/it]03/05/2025 15:55:33 - INFO - __main__ -   测试:204

03/05/2025 15:55:33 - INFO - __main__ -   Success rate: 95.38%

03/05/2025 15:55:33 - INFO - __main__ -   Successful items count: 124

03/05/2025 15:55:33 - INFO - __main__ -   Total count: 130

03/05/2025 15:55:33 - INFO - __main__ -   Index: 204

Number of variable_names extracted:  4
Generating population204...
init SUCCESS!
Processing examples:  51%|█████▏    | 205/400 [1:03:13<16:58,  5.22s/it]03/05/2025 15:55:33 - INFO - __main__ -   测试:205

03/05/2025 15:55:34 - INFO - __main__ -   Attack failed!

03/05/2025 15:55:34 - INFO - __main__ -   测试:206

03/05/2025 15:55:39 - INFO - __main__ -   Success rate: 95.42%

03/05/2025 15:55:39 - INFO - __main__ -   Successful items count: 125

03/05/2025 15:55:39 - INFO - __main__ -   Total count: 131

03/05/2025 15:55:39 - INFO - __main__ -   Index: 206

The original code is misclassified.
Number of variable_names extracted:  4
Generating population206...
	 0  --most gap 0.03941816
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  52%|█████▏    | 207/400 [1:03:18<14:08,  4.40s/it]03/05/2025 15:55:39 - INFO - __main__ -   测试:207

03/05/2025 15:55:41 - INFO - __main__ -   Success rate: 95.45%

03/05/2025 15:55:41 - INFO - __main__ -   Successful items count: 126

03/05/2025 15:55:41 - INFO - __main__ -   Total count: 132

03/05/2025 15:55:41 - INFO - __main__ -   Index: 207

Number of variable_names extracted:  6
Generating population207...
init SUCCESS!
Processing examples:  52%|█████▏    | 208/400 [1:03:20<12:25,  3.88s/it]03/05/2025 15:55:41 - INFO - __main__ -   测试:208

03/05/2025 15:55:45 - INFO - __main__ -   Success rate: 95.49%

03/05/2025 15:55:45 - INFO - __main__ -   Successful items count: 127

03/05/2025 15:55:45 - INFO - __main__ -   Total count: 133

03/05/2025 15:55:45 - INFO - __main__ -   Index: 208

Number of variable_names extracted:  9
Generating population208...
init SUCCESS!
Processing examples:  52%|█████▏    | 209/400 [1:03:24<12:23,  3.89s/it]03/05/2025 15:55:45 - INFO - __main__ -   测试:209

03/05/2025 15:56:18 - INFO - __main__ -   Success rate: 95.52%

03/05/2025 15:56:18 - INFO - __main__ -   Successful items count: 128

03/05/2025 15:56:18 - INFO - __main__ -   Total count: 134

03/05/2025 15:56:18 - INFO - __main__ -   Index: 209

Number of variable_names extracted:  1
Generating population209...
	 0  --most gap 0.0033320785
	 1  --most gap 0.0033320785
	 2  --most gap 0.0033320785
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0033320785
	 4  --most gap 0.0033320785
	 5  --most gap 0.0033320785
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0033320785
	 7  --most gap 0.0033320785
	 8  --most gap 0.0033320785
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0033320785
	 10  --most gap 0.0033320785
	 11  --most gap 0.0033320785
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0033320785
	 13  --most gap 0.0033320785
	 14  --most gap 0.0033320785
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0033320785
	 16  --most gap 0.0033320785
	 17  --most gap 0.0033320785
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0033320785
	 19  --most gap 0.0033320785
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  52%|█████▎    | 210/400 [1:03:58<34:41, 10.96s/it]03/05/2025 15:56:18 - INFO - __main__ -   测试:210

03/05/2025 15:56:18 - INFO - __main__ -   Attack failed!

03/05/2025 15:56:18 - INFO - __main__ -   测试:211

03/05/2025 15:56:19 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  53%|█████▎    | 212/400 [1:03:58<20:33,  6.56s/it]03/05/2025 15:56:19 - INFO - __main__ -   测试:212

03/05/2025 15:56:19 - INFO - __main__ -   Attack failed!

03/05/2025 15:56:19 - INFO - __main__ -   测试:213

03/05/2025 15:56:19 - INFO - __main__ -   Attack failed!

03/05/2025 15:56:19 - INFO - __main__ -   测试:214

03/05/2025 15:56:19 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  54%|█████▍    | 215/400 [1:03:58<10:54,  3.54s/it]03/05/2025 15:56:19 - INFO - __main__ -   测试:215

03/05/2025 15:56:19 - INFO - __main__ -   Attack failed!

03/05/2025 15:56:19 - INFO - __main__ -   测试:216

03/05/2025 15:56:19 - INFO - __main__ -   Success rate: 95.56%

03/05/2025 15:56:19 - INFO - __main__ -   Successful items count: 129

03/05/2025 15:56:19 - INFO - __main__ -   Total count: 135

03/05/2025 15:56:19 - INFO - __main__ -   Index: 216

The original code is misclassified.
Number of variable_names extracted:  5
Generating population216...
init SUCCESS!
Processing examples:  54%|█████▍    | 217/400 [1:03:59<07:42,  2.53s/it]03/05/2025 15:56:19 - INFO - __main__ -   测试:217

03/05/2025 15:56:23 - INFO - __main__ -   Success rate: 95.59%

03/05/2025 15:56:23 - INFO - __main__ -   Successful items count: 130

03/05/2025 15:56:23 - INFO - __main__ -   Total count: 136

03/05/2025 15:56:23 - INFO - __main__ -   Index: 217

Number of variable_names extracted:  7
Generating population217...
init SUCCESS!
Processing examples:  55%|█████▍    | 218/400 [1:04:03<08:33,  2.82s/it]03/05/2025 15:56:23 - INFO - __main__ -   测试:218

03/05/2025 15:56:41 - INFO - __main__ -   Success rate: 95.62%

03/05/2025 15:56:41 - INFO - __main__ -   Successful items count: 131

03/05/2025 15:56:41 - INFO - __main__ -   Total count: 137

03/05/2025 15:56:41 - INFO - __main__ -   Index: 218

Number of variable_names extracted:  27
Generating population218...
init SUCCESS!
Processing examples:  55%|█████▍    | 219/400 [1:04:21<17:51,  5.92s/it]03/05/2025 15:56:41 - INFO - __main__ -   测试:219

03/05/2025 15:56:41 - INFO - __main__ -   Attack failed!

03/05/2025 15:56:41 - INFO - __main__ -   测试:220

03/05/2025 15:56:44 - INFO - __main__ -   Success rate: 95.65%

03/05/2025 15:56:44 - INFO - __main__ -   Successful items count: 132

03/05/2025 15:56:44 - INFO - __main__ -   Total count: 138

03/05/2025 15:56:44 - INFO - __main__ -   Index: 220

The original code is misclassified.
Number of variable_names extracted:  8
Generating population220...
	 0  --most gap 0.012117684
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  55%|█████▌    | 221/400 [1:04:23<12:22,  4.15s/it]03/05/2025 15:56:44 - INFO - __main__ -   测试:221

03/05/2025 15:56:44 - INFO - __main__ -   Attack failed!

03/05/2025 15:56:44 - INFO - __main__ -   测试:222

03/05/2025 15:56:47 - INFO - __main__ -   Success rate: 95.68%

03/05/2025 15:56:47 - INFO - __main__ -   Successful items count: 133

03/05/2025 15:56:47 - INFO - __main__ -   Total count: 139

03/05/2025 15:56:47 - INFO - __main__ -   Index: 222

The original code is misclassified.
Number of variable_names extracted:  6
Generating population222...
init SUCCESS!
Processing examples:  56%|█████▌    | 223/400 [1:04:26<09:35,  3.25s/it]03/05/2025 15:56:47 - INFO - __main__ -   测试:223

03/05/2025 15:56:47 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  56%|█████▌    | 224/400 [1:04:26<07:47,  2.66s/it]03/05/2025 15:56:47 - INFO - __main__ -   测试:224

03/05/2025 15:56:49 - INFO - __main__ -   Success rate: 95.71%

03/05/2025 15:56:49 - INFO - __main__ -   Successful items count: 134

03/05/2025 15:56:49 - INFO - __main__ -   Total count: 140

03/05/2025 15:56:49 - INFO - __main__ -   Index: 224

Number of variable_names extracted:  10
Generating population224...
init SUCCESS!
Processing examples:  56%|█████▋    | 225/400 [1:04:28<07:24,  2.54s/it]03/05/2025 15:56:49 - INFO - __main__ -   测试:225

03/05/2025 15:56:49 - INFO - __main__ -   Success rate: 95.74%

03/05/2025 15:56:49 - INFO - __main__ -   Successful items count: 135

03/05/2025 15:56:49 - INFO - __main__ -   Total count: 141

03/05/2025 15:56:49 - INFO - __main__ -   Index: 225

Number of variable_names extracted:  6
Generating population225...
init SUCCESS!
Processing examples:  56%|█████▋    | 226/400 [1:04:29<05:49,  2.01s/it]03/05/2025 15:56:49 - INFO - __main__ -   测试:226

03/05/2025 15:56:50 - INFO - __main__ -   Success rate: 95.77%

03/05/2025 15:56:50 - INFO - __main__ -   Successful items count: 136

03/05/2025 15:56:50 - INFO - __main__ -   Total count: 142

03/05/2025 15:56:50 - INFO - __main__ -   Index: 226

Number of variable_names extracted:  3
Generating population226...
init SUCCESS!
Processing examples:  57%|█████▋    | 227/400 [1:04:29<04:30,  1.56s/it]03/05/2025 15:56:50 - INFO - __main__ -   测试:227

03/05/2025 15:56:55 - INFO - __main__ -   Success rate: 95.80%

03/05/2025 15:56:55 - INFO - __main__ -   Successful items count: 137

03/05/2025 15:56:55 - INFO - __main__ -   Total count: 143

03/05/2025 15:56:55 - INFO - __main__ -   Index: 227

Number of variable_names extracted:  7
Generating population227...
init SUCCESS!
Processing examples:  57%|█████▋    | 228/400 [1:04:34<07:06,  2.48s/it]03/05/2025 15:56:55 - INFO - __main__ -   测试:228

03/05/2025 15:56:55 - INFO - __main__ -   Success rate: 95.83%

03/05/2025 15:56:55 - INFO - __main__ -   Successful items count: 138

03/05/2025 15:56:55 - INFO - __main__ -   Total count: 144

03/05/2025 15:56:55 - INFO - __main__ -   Index: 228

Number of variable_names extracted:  3
Generating population228...
init SUCCESS!
Processing examples:  57%|█████▋    | 229/400 [1:04:34<05:18,  1.86s/it]03/05/2025 15:56:55 - INFO - __main__ -   测试:229

03/05/2025 15:56:55 - INFO - __main__ -   Attack failed!

03/05/2025 15:56:55 - INFO - __main__ -   测试:230

03/05/2025 15:57:11 - INFO - __main__ -   Success rate: 95.86%

03/05/2025 15:57:11 - INFO - __main__ -   Successful items count: 139

03/05/2025 15:57:11 - INFO - __main__ -   Total count: 145

03/05/2025 15:57:11 - INFO - __main__ -   Index: 230

The original code is misclassified.
Number of variable_names extracted:  2
Generating population230...
	 0  --most gap 0.004364252
	 1  --most gap 0.26171237
	 2  --most gap 0.26171237
	 3  --most gap 0.26171237
	 4  --most gap 0.26171237
两轮结果未更新,Changing code structure...
	 5  --most gap 0.26171237
	 6  --most gap 0.26171237
	 7  --most gap 0.26171237
两轮结果未更新,Changing code structure...
	 8  --most gap 0.26171237
	 9  --most gap 0.26171237
	 10  --most gap 0.26171237
两轮结果未更新,Changing code structure...
	 11  --most gap 0.26171237
	 12  --most gap 0.26171237
	 13  --most gap 0.26171237
两轮结果未更新,Changing code structure...
	 14  --most gap 0.26171237
	 15  --most gap 0.26171237
	 16  --most gap 0.26171237
两轮结果未更新,Changing code structure...
	 17  --most gap 0.26171237
	 18  --most gap 0.26171237
	 19  --most gap 0.26171237
两轮结果未更新,Changing code structure...
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  58%|█████▊    | 231/400 [1:04:50<12:44,  4.53s/it]03/05/2025 15:57:11 - INFO - __main__ -   测试:231

03/05/2025 15:57:11 - INFO - __main__ -   Success rate: 95.89%

03/05/2025 15:57:11 - INFO - __main__ -   Successful items count: 140

03/05/2025 15:57:11 - INFO - __main__ -   Total count: 146

03/05/2025 15:57:11 - INFO - __main__ -   Index: 231

Number of variable_names extracted:  4
Generating population231...
init SUCCESS!
Processing examples:  58%|█████▊    | 232/400 [1:04:50<09:50,  3.51s/it]03/05/2025 15:57:11 - INFO - __main__ -   测试:232

03/05/2025 15:57:55 - INFO - __main__ -   Success rate: 95.92%

03/05/2025 15:57:55 - INFO - __main__ -   Successful items count: 141

03/05/2025 15:57:55 - INFO - __main__ -   Total count: 147

03/05/2025 15:57:55 - INFO - __main__ -   Index: 232

Number of variable_names extracted:  13
Generating population232...
init SUCCESS!
Processing examples:  58%|█████▊    | 233/400 [1:05:34<38:32, 13.84s/it]03/05/2025 15:57:55 - INFO - __main__ -   测试:233

03/05/2025 15:57:55 - INFO - __main__ -   Attack failed!

03/05/2025 15:57:55 - INFO - __main__ -   测试:234

03/05/2025 15:57:55 - INFO - __main__ -   Attack failed!

03/05/2025 15:57:55 - INFO - __main__ -   测试:235

03/05/2025 15:57:57 - INFO - __main__ -   Success rate: 95.95%

03/05/2025 15:57:57 - INFO - __main__ -   Successful items count: 142

03/05/2025 15:57:57 - INFO - __main__ -   Total count: 148

03/05/2025 15:57:57 - INFO - __main__ -   Index: 235

The original code is misclassified.
The original code is misclassified.
Number of variable_names extracted:  1
Generating population235...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  59%|█████▉    | 236/400 [1:05:37<19:06,  6.99s/it]03/05/2025 15:57:57 - INFO - __main__ -   测试:236

03/05/2025 15:57:57 - INFO - __main__ -   Attack failed!

03/05/2025 15:57:57 - INFO - __main__ -   测试:237

03/05/2025 15:57:57 - INFO - __main__ -   Attack failed!

03/05/2025 15:57:57 - INFO - __main__ -   测试:238

03/05/2025 15:57:57 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
The original code is misclassified.
Processing examples:  60%|█████▉    | 239/400 [1:05:37<10:47,  4.02s/it]03/05/2025 15:57:57 - INFO - __main__ -   测试:239

03/05/2025 15:57:59 - INFO - __main__ -   Success rate: 95.97%

03/05/2025 15:57:59 - INFO - __main__ -   Successful items count: 143

03/05/2025 15:57:59 - INFO - __main__ -   Total count: 149

03/05/2025 15:57:59 - INFO - __main__ -   Index: 239

Number of variable_names extracted:  4
Generating population239...
	 0  --most gap 0.0146663785
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  60%|██████    | 240/400 [1:05:39<09:54,  3.71s/it]03/05/2025 15:57:59 - INFO - __main__ -   测试:240

03/05/2025 15:58:11 - INFO - __main__ -   Success rate: 96.00%

03/05/2025 15:58:11 - INFO - __main__ -   Successful items count: 144

03/05/2025 15:58:11 - INFO - __main__ -   Total count: 150

03/05/2025 15:58:11 - INFO - __main__ -   Index: 240

Number of variable_names extracted:  3
Generating population240...
	 0  --most gap 0.0056661963
	 1  --most gap 0.0368703
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  60%|██████    | 241/400 [1:05:51<13:56,  5.26s/it]03/05/2025 15:58:11 - INFO - __main__ -   测试:241

03/05/2025 15:58:11 - INFO - __main__ -   Attack failed!

03/05/2025 15:58:11 - INFO - __main__ -   测试:242

03/05/2025 15:58:15 - INFO - __main__ -   Success rate: 96.03%

03/05/2025 15:58:15 - INFO - __main__ -   Successful items count: 145

03/05/2025 15:58:15 - INFO - __main__ -   Total count: 151

03/05/2025 15:58:15 - INFO - __main__ -   Index: 242

The original code is misclassified.
Number of variable_names extracted:  6
Generating population242...
	 0  --most gap 0.3288437
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  61%|██████    | 243/400 [1:05:54<10:28,  4.00s/it]03/05/2025 15:58:15 - INFO - __main__ -   测试:243

03/05/2025 15:58:39 - INFO - __main__ -   Success rate: 96.05%

03/05/2025 15:58:39 - INFO - __main__ -   Successful items count: 146

03/05/2025 15:58:39 - INFO - __main__ -   Total count: 152

03/05/2025 15:58:39 - INFO - __main__ -   Index: 243

Number of variable_names extracted:  2
Generating population243...
	 0  --most gap 0.007121742
	 1  --most gap 0.007121742
	 2  --most gap 0.007121742
两轮结果未更新,Changing code structure...
	 3  --most gap 0.007121742
	 4  --most gap 0.007121742
	 5  --most gap 0.007121742
两轮结果未更新,Changing code structure...
	 6  --most gap 0.007121742
	 7  --most gap 0.007121742
	 8  --most gap 0.007121742
两轮结果未更新,Changing code structure...
	 9  --most gap 0.007121742
	 10  --most gap 0.007121742
	 11  --most gap 0.007121742
两轮结果未更新,Changing code structure...
	 12  --most gap 0.007121742
	 13  --most gap 0.007121742
	 14  --most gap 0.007121742
两轮结果未更新,Changing code structure...
	 15  --most gap 0.007121742
	 16  --most gap 0.007121742
	 17  --most gap 0.007121742
两轮结果未更新,Changing code structure...
	 18  --most gap 0.007121742
	 19  --most gap 0.007121742
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  61%|██████    | 244/400 [1:06:19<21:12,  8.16s/it]03/05/2025 15:58:39 - INFO - __main__ -   测试:244

03/05/2025 15:59:10 - INFO - __main__ -   Success rate: 96.08%

03/05/2025 15:59:10 - INFO - __main__ -   Successful items count: 147

03/05/2025 15:59:10 - INFO - __main__ -   Total count: 153

03/05/2025 15:59:10 - INFO - __main__ -   Index: 244

Number of variable_names extracted:  2
Generating population244...
	 0  --most gap 0.00052827597
	 1  --most gap 0.00052827597
	 2  --most gap 0.00052827597
两轮结果未更新,Changing code structure...
	 3  --most gap 0.00052827597
	 4  --most gap 0.00052827597
	 5  --most gap 0.00052827597
两轮结果未更新,Changing code structure...
	 6  --most gap 0.00052827597
	 7  --most gap 0.00052827597
	 8  --most gap 0.00052827597
两轮结果未更新,Changing code structure...
	 9  --most gap 0.00052827597
	 10  --most gap 0.00052827597
	 11  --most gap 0.00052827597
两轮结果未更新,Changing code structure...
	 12  --most gap 0.00052827597
	 13  --most gap 0.00052827597
	 14  --most gap 0.00052827597
两轮结果未更新,Changing code structure...
	 15  --most gap 0.00052827597
	 16  --most gap 0.00052827597
	 17  --most gap 0.00052827597
两轮结果未更新,Changing code structure...
	 18  --most gap 0.00052827597
	 19  --most gap 0.00052827597
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  61%|██████▏   | 245/400 [1:06:50<34:35, 13.39s/it]03/05/2025 15:59:10 - INFO - __main__ -   测试:245

03/05/2025 15:59:11 - INFO - __main__ -   Success rate: 96.10%

03/05/2025 15:59:11 - INFO - __main__ -   Successful items count: 148

03/05/2025 15:59:11 - INFO - __main__ -   Total count: 154

03/05/2025 15:59:11 - INFO - __main__ -   Index: 245

Number of variable_names extracted:  3
Generating population245...
init SUCCESS!
Processing examples:  62%|██████▏   | 246/400 [1:06:51<26:23, 10.28s/it]03/05/2025 15:59:11 - INFO - __main__ -   测试:246

03/05/2025 15:59:12 - INFO - __main__ -   Success rate: 96.13%

03/05/2025 15:59:12 - INFO - __main__ -   Successful items count: 149

03/05/2025 15:59:12 - INFO - __main__ -   Total count: 155

03/05/2025 15:59:12 - INFO - __main__ -   Index: 246

Number of variable_names extracted:  5
Generating population246...
init SUCCESS!
Processing examples:  62%|██████▏   | 247/400 [1:06:51<19:57,  7.83s/it]03/05/2025 15:59:12 - INFO - __main__ -   测试:247

03/05/2025 15:59:20 - INFO - __main__ -   Success rate: 96.15%

03/05/2025 15:59:20 - INFO - __main__ -   Successful items count: 150

03/05/2025 15:59:20 - INFO - __main__ -   Total count: 156

03/05/2025 15:59:20 - INFO - __main__ -   Index: 247

Number of variable_names extracted:  14
Generating population247...
init SUCCESS!
Processing examples:  62%|██████▏   | 248/400 [1:06:59<19:51,  7.84s/it]03/05/2025 15:59:20 - INFO - __main__ -   测试:248

03/05/2025 15:59:40 - INFO - __main__ -   Success rate: 96.18%

03/05/2025 15:59:40 - INFO - __main__ -   Successful items count: 151

03/05/2025 15:59:40 - INFO - __main__ -   Total count: 157

03/05/2025 15:59:40 - INFO - __main__ -   Index: 248

Number of variable_names extracted:  8
Generating population248...
init SUCCESS!
Processing examples:  62%|██████▏   | 249/400 [1:07:19<28:11, 11.20s/it]03/05/2025 15:59:40 - INFO - __main__ -   测试:249

03/05/2025 15:59:40 - INFO - __main__ -   Attack failed!

03/05/2025 15:59:40 - INFO - __main__ -   测试:250

03/05/2025 15:59:40 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  63%|██████▎   | 251/400 [1:07:19<15:33,  6.27s/it]03/05/2025 15:59:40 - INFO - __main__ -   测试:251

03/05/2025 15:59:40 - INFO - __main__ -   Attack failed!

03/05/2025 15:59:40 - INFO - __main__ -   测试:252

03/05/2025 16:00:01 - INFO - __main__ -   Success rate: 96.20%

03/05/2025 16:00:01 - INFO - __main__ -   Successful items count: 152

03/05/2025 16:00:01 - INFO - __main__ -   Total count: 158

03/05/2025 16:00:01 - INFO - __main__ -   Index: 252

The original code is misclassified.
Number of variable_names extracted:  7
Generating population252...
	 0  --most gap 0.0034524202
	 1  --most gap 0.0037861466
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  63%|██████▎   | 253/400 [1:07:40<19:22,  7.91s/it]03/05/2025 16:00:01 - INFO - __main__ -   测试:253

03/05/2025 16:00:03 - INFO - __main__ -   Success rate: 96.23%

03/05/2025 16:00:03 - INFO - __main__ -   Successful items count: 153

03/05/2025 16:00:03 - INFO - __main__ -   Total count: 159

03/05/2025 16:00:03 - INFO - __main__ -   Index: 253

Number of variable_names extracted:  5
Generating population253...
	 0  --most gap 0.0019131899
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  64%|██████▎   | 254/400 [1:07:42<16:12,  6.66s/it]03/05/2025 16:00:03 - INFO - __main__ -   测试:254

03/05/2025 16:00:03 - INFO - __main__ -   Attack failed!

03/05/2025 16:00:03 - INFO - __main__ -   测试:255

03/05/2025 16:00:11 - INFO - __main__ -   Success rate: 96.25%

03/05/2025 16:00:11 - INFO - __main__ -   Successful items count: 154

03/05/2025 16:00:11 - INFO - __main__ -   Total count: 160

03/05/2025 16:00:11 - INFO - __main__ -   Index: 255

The original code is misclassified.
Number of variable_names extracted:  5
Generating population255...
init SUCCESS!
Processing examples:  64%|██████▍   | 256/400 [1:07:51<13:42,  5.71s/it]03/05/2025 16:00:11 - INFO - __main__ -   测试:256

03/05/2025 16:00:13 - INFO - __main__ -   Success rate: 96.27%

03/05/2025 16:00:13 - INFO - __main__ -   Successful items count: 155

03/05/2025 16:00:13 - INFO - __main__ -   Total count: 161

03/05/2025 16:00:13 - INFO - __main__ -   Index: 256

Number of variable_names extracted:  3
Generating population256...
init SUCCESS!
Processing examples:  64%|██████▍   | 257/400 [1:07:52<11:30,  4.83s/it]03/05/2025 16:00:13 - INFO - __main__ -   测试:257

03/05/2025 16:00:26 - INFO - __main__ -   Success rate: 96.30%

03/05/2025 16:00:26 - INFO - __main__ -   Successful items count: 156

03/05/2025 16:00:26 - INFO - __main__ -   Total count: 162

03/05/2025 16:00:26 - INFO - __main__ -   Index: 257

Number of variable_names extracted:  1
Generating population257...
	 0  --most gap 0.0071461797
	 1  --most gap 0.0071461797
	 2  --most gap 0.0071461797
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0071461797
	 4  --most gap 0.0071461797
	 5  --most gap 0.0071461797
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0071461797
	 7  --most gap 0.0071461797
	 8  --most gap 0.0071461797
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0071461797
	 10  --most gap 0.0071461797
	 11  --most gap 0.0071461797
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0071461797
	 13  --most gap 0.0071461797
	 14  --most gap 0.0071461797
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0071461797
	 16  --most gap 0.0071461797
	 17  --most gap 0.0071461797
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0071461797
	 19  --most gap 0.0071461797
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  64%|██████▍   | 258/400 [1:08:06<16:08,  6.82s/it]03/05/2025 16:00:26 - INFO - __main__ -   测试:258

03/05/2025 16:00:31 - INFO - __main__ -   Success rate: 96.32%

03/05/2025 16:00:31 - INFO - __main__ -   Successful items count: 157

03/05/2025 16:00:31 - INFO - __main__ -   Total count: 163

03/05/2025 16:00:31 - INFO - __main__ -   Index: 258

Number of variable_names extracted:  5
Generating population258...
	 0  --most gap 0.0021814704
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  65%|██████▍   | 259/400 [1:08:10<14:49,  6.31s/it]03/05/2025 16:00:31 - INFO - __main__ -   测试:259

03/05/2025 16:03:42 - INFO - __main__ -   Success rate: 96.34%

03/05/2025 16:03:42 - INFO - __main__ -   Successful items count: 158

03/05/2025 16:03:42 - INFO - __main__ -   Total count: 164

03/05/2025 16:03:42 - INFO - __main__ -   Index: 259

Number of variable_names extracted:  3
Generating population259...
	 0  --most gap 0.015261948
	 1  --most gap 0.21763527
	 2  --most gap 0.21763527
	 3  --most gap 0.21763527
	 4  --most gap 0.21763527
两轮结果未更新,Changing code structure...
	 5  --most gap 0.21763527
	 6  --most gap 0.21763527
	 7  --most gap 0.21763527
两轮结果未更新,Changing code structure...
	 8  --most gap 0.21763527
	 9  --most gap 0.21763527
	 10  --most gap 0.21763527
两轮结果未更新,Changing code structure...
	 11  --most gap 0.21763527
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  65%|██████▌   | 260/400 [1:11:21<2:08:22, 55.02s/it]03/05/2025 16:03:42 - INFO - __main__ -   测试:260

03/05/2025 16:03:42 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  65%|██████▌   | 261/400 [1:11:21<1:32:39, 39.99s/it]03/05/2025 16:03:42 - INFO - __main__ -   测试:261

03/05/2025 16:03:42 - INFO - __main__ -   Success rate: 96.36%

03/05/2025 16:03:42 - INFO - __main__ -   Successful items count: 159

03/05/2025 16:03:42 - INFO - __main__ -   Total count: 165

03/05/2025 16:03:42 - INFO - __main__ -   Index: 261

Number of variable_names extracted:  7
Generating population261...
init SUCCESS!
Processing examples:  66%|██████▌   | 262/400 [1:11:22<1:06:28, 28.90s/it]03/05/2025 16:03:42 - INFO - __main__ -   测试:262

03/05/2025 16:04:45 - INFO - __main__ -   Success rate: 95.78%

03/05/2025 16:04:45 - INFO - __main__ -   Successful items count: 159

03/05/2025 16:04:45 - INFO - __main__ -   Total count: 166

03/05/2025 16:04:45 - INFO - __main__ -   Index: 262

Number of variable_names extracted:  2
Generating population262...
	 0  --most gap 0.0035075545
	 1  --most gap 0.0035075545
	 2  --most gap 0.0035075545
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0035075545
	 4  --most gap 0.0035075545
	 5  --most gap 0.0035075545
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0035075545
	 7  --most gap 0.0035075545
	 8  --most gap 0.0035075545
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0035075545
	 10  --most gap 0.0035075545
	 11  --most gap 0.0035075545
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0035075545
	 13  --most gap 0.0035075545
	 14  --most gap 0.0035075545
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0035075545
	 16  --most gap 0.0035075545
	 17  --most gap 0.0035075545
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0035075545
	 19  --most gap 0.0035075545
Changing code structure...
Processing examples:  66%|██████▌   | 263/400 [1:12:24<1:27:42, 38.41s/it]03/05/2025 16:04:45 - INFO - __main__ -   测试:263

03/05/2025 16:04:47 - INFO - __main__ -   Success rate: 95.81%

03/05/2025 16:04:47 - INFO - __main__ -   Successful items count: 160

03/05/2025 16:04:47 - INFO - __main__ -   Total count: 167

03/05/2025 16:04:47 - INFO - __main__ -   Index: 263

Number of variable_names extracted:  7
Generating population263...
init SUCCESS!
Processing examples:  66%|██████▌   | 264/400 [1:12:26<1:03:22, 27.96s/it]03/05/2025 16:04:47 - INFO - __main__ -   测试:264

03/05/2025 16:04:49 - INFO - __main__ -   Success rate: 95.83%

03/05/2025 16:04:49 - INFO - __main__ -   Successful items count: 161

03/05/2025 16:04:49 - INFO - __main__ -   Total count: 168

03/05/2025 16:04:49 - INFO - __main__ -   Index: 264

Number of variable_names extracted:  10
Generating population264...
init SUCCESS!
Processing examples:  66%|██████▋   | 265/400 [1:12:29<46:03, 20.47s/it]  03/05/2025 16:04:49 - INFO - __main__ -   测试:265

03/05/2025 16:04:49 - WARNING - root -   WARNING: There is no reference data-flows extracted from the whole corpus, and the data-flow match score degenerates to 0. Please consider ignoring this score.
03/05/2025 16:04:49 - INFO - __main__ -   Attack failed!

03/05/2025 16:04:49 - INFO - __main__ -   测试:266

03/05/2025 16:04:50 - INFO - __main__ -   Success rate: 95.86%

03/05/2025 16:04:50 - INFO - __main__ -   Successful items count: 162

03/05/2025 16:04:50 - INFO - __main__ -   Total count: 169

03/05/2025 16:04:50 - INFO - __main__ -   Index: 266

No variable_names in the code.
Number of variable_names extracted:  3
Generating population266...
init SUCCESS!
Processing examples:  67%|██████▋   | 267/400 [1:12:29<24:58, 11.27s/it]03/05/2025 16:04:50 - INFO - __main__ -   测试:267

03/05/2025 16:07:50 - INFO - __main__ -   Success rate: 95.88%

03/05/2025 16:07:50 - INFO - __main__ -   Successful items count: 163

03/05/2025 16:07:50 - INFO - __main__ -   Total count: 170

03/05/2025 16:07:50 - INFO - __main__ -   Index: 267

Number of variable_names extracted:  3
Generating population267...
	 0  --most gap 0.0023404956
	 1  --most gap 0.0023404956
	 2  --most gap 0.0023404956
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0023404956
	 4  --most gap 0.06551069
	 5  --most gap 0.06551069
	 6  --most gap 0.06551069
	 7  --most gap 0.06551069
两轮结果未更新,Changing code structure...
	 8  --most gap 0.06551069
	 9  --most gap 0.06551069
	 10  --most gap 0.06551069
两轮结果未更新,Changing code structure...
	 11  --most gap 0.06551069
	 12  --most gap 0.06551069
	 13  --most gap 0.06551069
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  67%|██████▋   | 268/400 [1:15:30<1:56:13, 52.83s/it]03/05/2025 16:07:50 - INFO - __main__ -   测试:268

03/05/2025 16:07:53 - INFO - __main__ -   Success rate: 95.91%

03/05/2025 16:07:53 - INFO - __main__ -   Successful items count: 164

03/05/2025 16:07:53 - INFO - __main__ -   Total count: 171

03/05/2025 16:07:53 - INFO - __main__ -   Index: 268

Number of variable_names extracted:  8
Generating population268...
init SUCCESS!
Processing examples:  67%|██████▋   | 269/400 [1:15:32<1:26:47, 39.75s/it]03/05/2025 16:07:53 - INFO - __main__ -   测试:269

03/05/2025 16:11:09 - INFO - __main__ -   Success rate: 95.93%

03/05/2025 16:11:09 - INFO - __main__ -   Successful items count: 165

03/05/2025 16:11:09 - INFO - __main__ -   Total count: 172

03/05/2025 16:11:09 - INFO - __main__ -   Index: 269

Number of variable_names extracted:  4
Generating population269...
	 0  --most gap 0.00077807903
	 1  --most gap 0.012822151
	 2  --most gap 0.013913929
	 3  --most gap 0.027665675
	 4  --most gap 0.027665675
	 5  --most gap 0.027665675
	 6  --most gap 0.027665675
两轮结果未更新,Changing code structure...
	 7  --most gap 0.027665675
	 8  --most gap 0.027665675
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  68%|██████▊   | 270/400 [1:18:49<2:57:53, 82.10s/it]03/05/2025 16:11:09 - INFO - __main__ -   测试:270

03/05/2025 16:11:16 - INFO - __main__ -   Success rate: 95.95%

03/05/2025 16:11:16 - INFO - __main__ -   Successful items count: 166

03/05/2025 16:11:16 - INFO - __main__ -   Total count: 173

03/05/2025 16:11:16 - INFO - __main__ -   Index: 270

Number of variable_names extracted:  4
Generating population270...
	 0  --most gap 0.20791
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  68%|██████▊   | 271/400 [1:18:56<2:11:38, 61.23s/it]03/05/2025 16:11:16 - INFO - __main__ -   测试:271

03/05/2025 16:11:16 - INFO - __main__ -   Attack failed!

03/05/2025 16:11:16 - INFO - __main__ -   测试:272

03/05/2025 16:11:17 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  68%|██████▊   | 273/400 [1:18:56<1:12:12, 34.11s/it]03/05/2025 16:11:17 - INFO - __main__ -   测试:273

03/05/2025 16:11:17 - INFO - __main__ -   Attack failed!

03/05/2025 16:11:17 - INFO - __main__ -   测试:274

03/05/2025 16:11:17 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  69%|██████▉   | 275/400 [1:18:56<43:34, 20.92s/it]  03/05/2025 16:11:17 - INFO - __main__ -   测试:275

03/05/2025 16:11:21 - INFO - __main__ -   Success rate: 95.98%

03/05/2025 16:11:21 - INFO - __main__ -   Successful items count: 167

03/05/2025 16:11:21 - INFO - __main__ -   Total count: 174

03/05/2025 16:11:21 - INFO - __main__ -   Index: 275

Number of variable_names extracted:  1
Generating population275...
	 0  --most gap 1.1920929e-07
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  69%|██████▉   | 276/400 [1:19:01<35:54, 17.37s/it]03/05/2025 16:11:21 - INFO - __main__ -   测试:276

03/05/2025 16:11:21 - INFO - __main__ -   Attack failed!

03/05/2025 16:11:21 - INFO - __main__ -   测试:277

03/05/2025 16:12:28 - INFO - __main__ -   Success rate: 96.00%

03/05/2025 16:12:28 - INFO - __main__ -   Successful items count: 168

03/05/2025 16:12:28 - INFO - __main__ -   Total count: 175

03/05/2025 16:12:28 - INFO - __main__ -   Index: 277

The original code is misclassified.
Number of variable_names extracted:  5
Generating population277...
	 0  --most gap 0.008136392
	 1  --most gap 0.097693324
	 2  --most gap 0.22181982
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  70%|██████▉   | 278/400 [1:20:08<47:49, 23.52s/it]03/05/2025 16:12:28 - INFO - __main__ -   测试:278

03/05/2025 16:12:30 - INFO - __main__ -   Success rate: 96.02%

03/05/2025 16:12:30 - INFO - __main__ -   Successful items count: 169

03/05/2025 16:12:30 - INFO - __main__ -   Total count: 176

03/05/2025 16:12:30 - INFO - __main__ -   Index: 278

Number of variable_names extracted:  6
Generating population278...
init SUCCESS!
Processing examples:  70%|██████▉   | 279/400 [1:20:10<38:09, 18.92s/it]03/05/2025 16:12:30 - INFO - __main__ -   测试:279

03/05/2025 16:12:31 - INFO - __main__ -   Success rate: 96.05%

03/05/2025 16:12:31 - INFO - __main__ -   Successful items count: 170

03/05/2025 16:12:31 - INFO - __main__ -   Total count: 177

03/05/2025 16:12:31 - INFO - __main__ -   Index: 279

Number of variable_names extracted:  9
Generating population279...
init SUCCESS!
Processing examples:  70%|███████   | 280/400 [1:20:11<29:29, 14.75s/it]03/05/2025 16:12:31 - INFO - __main__ -   测试:280

03/05/2025 16:12:31 - INFO - __main__ -   Attack failed!

03/05/2025 16:12:31 - INFO - __main__ -   测试:281

03/05/2025 16:12:32 - INFO - __main__ -   Attack failed!

The original code is misclassified.
No variable_names in the code.
Processing examples:  70%|███████   | 282/400 [1:20:11<17:24,  8.85s/it]03/05/2025 16:12:32 - INFO - __main__ -   测试:282

03/05/2025 16:12:44 - INFO - __main__ -   Success rate: 96.07%

03/05/2025 16:12:44 - INFO - __main__ -   Successful items count: 171

03/05/2025 16:12:44 - INFO - __main__ -   Total count: 178

03/05/2025 16:12:44 - INFO - __main__ -   Index: 282

Number of variable_names extracted:  5
Generating population282...
	 0  --most gap 0.23180026
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  71%|███████   | 283/400 [1:20:24<18:57,  9.72s/it]03/05/2025 16:12:44 - INFO - __main__ -   测试:283

03/05/2025 16:17:18 - INFO - __main__ -   Success rate: 96.09%

03/05/2025 16:17:18 - INFO - __main__ -   Successful items count: 172

03/05/2025 16:17:18 - INFO - __main__ -   Total count: 179

03/05/2025 16:17:18 - INFO - __main__ -   Index: 283

Number of variable_names extracted:  3
Generating population283...
	 0  --most gap 0.0003311634
	 1  --most gap 0.0003311634
	 2  --most gap 0.0003311634
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0003311634
	 4  --most gap 0.0003311634
	 5  --most gap 0.01517874
	 6  --most gap 0.01517874
	 7  --most gap 0.01517874
	 8  --most gap 0.01517874
两轮结果未更新,Changing code structure...
	 9  --most gap 0.01517874
	 10  --most gap 0.01517874
	 11  --most gap 0.01517874
两轮结果未更新,Changing code structure...
	 12  --most gap 0.01517874
	 13  --most gap 0.01517874
	 14  --most gap 0.01517874
两轮结果未更新,Changing code structure...
	 15  --most gap 0.01517874
	 16  --most gap 0.01517874
	 17  --most gap 0.01517874
两轮结果未更新,Changing code structure...
	 18  --most gap 0.01517874
	 19  --most gap 0.01517874
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  71%|███████   | 284/400 [1:24:58<2:22:03, 73.48s/it]03/05/2025 16:17:18 - INFO - __main__ -   测试:284

03/05/2025 16:17:19 - INFO - __main__ -   Success rate: 96.11%

03/05/2025 16:17:19 - INFO - __main__ -   Successful items count: 173

03/05/2025 16:17:19 - INFO - __main__ -   Total count: 180

03/05/2025 16:17:19 - INFO - __main__ -   Index: 284

Number of variable_names extracted:  3
Generating population284...
init SUCCESS!
Processing examples:  71%|███████▏  | 285/400 [1:24:58<1:44:56, 54.76s/it]03/05/2025 16:17:19 - INFO - __main__ -   测试:285

03/05/2025 16:17:19 - INFO - __main__ -   Attack failed!

03/05/2025 16:17:19 - INFO - __main__ -   测试:286

03/05/2025 16:17:22 - INFO - __main__ -   Success rate: 96.13%

03/05/2025 16:17:22 - INFO - __main__ -   Successful items count: 174

03/05/2025 16:17:22 - INFO - __main__ -   Total count: 181

03/05/2025 16:17:22 - INFO - __main__ -   Index: 286

The original code is misclassified.
Number of variable_names extracted:  1
Generating population286...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  72%|███████▏  | 287/400 [1:25:02<1:00:56, 32.36s/it]03/05/2025 16:17:22 - INFO - __main__ -   测试:287

03/05/2025 16:17:22 - INFO - __main__ -   Attack failed!

03/05/2025 16:17:22 - INFO - __main__ -   测试:288

03/05/2025 16:17:22 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  72%|███████▏  | 289/400 [1:25:02<37:22, 20.21s/it]  03/05/2025 16:17:22 - INFO - __main__ -   测试:289

03/05/2025 16:17:26 - INFO - __main__ -   Success rate: 96.15%

03/05/2025 16:17:26 - INFO - __main__ -   Successful items count: 175

03/05/2025 16:17:26 - INFO - __main__ -   Total count: 182

03/05/2025 16:17:26 - INFO - __main__ -   Index: 289

Number of variable_names extracted:  1
Generating population289...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  72%|███████▎  | 290/400 [1:25:05<30:30, 16.64s/it]03/05/2025 16:17:26 - INFO - __main__ -   测试:290

03/05/2025 16:17:30 - INFO - __main__ -   Success rate: 96.17%

03/05/2025 16:17:30 - INFO - __main__ -   Successful items count: 176

03/05/2025 16:17:30 - INFO - __main__ -   Total count: 183

03/05/2025 16:17:30 - INFO - __main__ -   Index: 290

Number of variable_names extracted:  1
Generating population290...
	 0  --most gap 0
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  73%|███████▎  | 291/400 [1:25:10<25:07, 13.83s/it]03/05/2025 16:17:30 - INFO - __main__ -   测试:291

03/05/2025 16:17:30 - INFO - __main__ -   Attack failed!

03/05/2025 16:17:30 - INFO - __main__ -   测试:292

03/05/2025 16:17:33 - INFO - __main__ -   Success rate: 96.20%

03/05/2025 16:17:33 - INFO - __main__ -   Successful items count: 177

03/05/2025 16:17:33 - INFO - __main__ -   Total count: 184

03/05/2025 16:17:33 - INFO - __main__ -   Index: 292

The original code is misclassified.
Number of variable_names extracted:  12
Generating population292...
init SUCCESS!
Processing examples:  73%|███████▎  | 293/400 [1:25:12<15:39,  8.78s/it]03/05/2025 16:17:33 - INFO - __main__ -   测试:293

03/05/2025 16:17:33 - INFO - __main__ -   Attack failed!

03/05/2025 16:17:33 - INFO - __main__ -   测试:294

03/05/2025 16:17:33 - INFO - __main__ -   Success rate: 96.22%

03/05/2025 16:17:33 - INFO - __main__ -   Successful items count: 178

03/05/2025 16:17:33 - INFO - __main__ -   Total count: 185

03/05/2025 16:17:33 - INFO - __main__ -   Index: 294

The original code is misclassified.
Number of variable_names extracted:  3
Generating population294...
init SUCCESS!
Processing examples:  74%|███████▍  | 295/400 [1:25:12<09:50,  5.63s/it]03/05/2025 16:17:33 - INFO - __main__ -   测试:295

03/05/2025 16:17:33 - INFO - __main__ -   Success rate: 96.24%

03/05/2025 16:17:33 - INFO - __main__ -   Successful items count: 179

03/05/2025 16:17:33 - INFO - __main__ -   Total count: 186

03/05/2025 16:17:33 - INFO - __main__ -   Index: 295

Number of variable_names extracted:  3
Generating population295...
init SUCCESS!
Processing examples:  74%|███████▍  | 296/400 [1:25:13<07:55,  4.57s/it]03/05/2025 16:17:33 - INFO - __main__ -   测试:296

03/05/2025 16:17:33 - INFO - __main__ -   Attack failed!

03/05/2025 16:17:33 - INFO - __main__ -   测试:297

03/05/2025 16:19:24 - INFO - __main__ -   Success rate: 96.26%

03/05/2025 16:19:24 - INFO - __main__ -   Successful items count: 180

03/05/2025 16:19:24 - INFO - __main__ -   Total count: 187

03/05/2025 16:19:24 - INFO - __main__ -   Index: 297

The original code is misclassified.
Number of variable_names extracted:  4
Generating population297...
	 0  --most gap 0.010194898
	 1  --most gap 0.010194898
	 2  --most gap 0.015272975
	 3  --most gap 0.4576913
	 4  --most gap 0.4576913
	 5  --most gap 0.4576913
	 6  --most gap 0.4576913
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  74%|███████▍  | 298/400 [1:27:04<39:51, 23.45s/it]03/05/2025 16:19:24 - INFO - __main__ -   测试:298

03/05/2025 16:19:25 - INFO - __main__ -   Success rate: 96.28%

03/05/2025 16:19:25 - INFO - __main__ -   Successful items count: 181

03/05/2025 16:19:25 - INFO - __main__ -   Total count: 188

03/05/2025 16:19:25 - INFO - __main__ -   Index: 298

Number of variable_names extracted:  5
Generating population298...
init SUCCESS!
Processing examples:  75%|███████▍  | 299/400 [1:27:05<31:32, 18.73s/it]03/05/2025 16:19:25 - INFO - __main__ -   测试:299

03/05/2025 16:19:25 - INFO - __main__ -   Attack failed!

03/05/2025 16:19:25 - INFO - __main__ -   测试:300

03/05/2025 16:19:26 - INFO - __main__ -   Success rate: 96.30%

03/05/2025 16:19:26 - INFO - __main__ -   Successful items count: 182

03/05/2025 16:19:26 - INFO - __main__ -   Total count: 189

03/05/2025 16:19:26 - INFO - __main__ -   Index: 300

The original code is misclassified.
Number of variable_names extracted:  5
Generating population300...
init SUCCESS!
Processing examples:  75%|███████▌  | 301/400 [1:27:05<19:30, 11.82s/it]03/05/2025 16:19:26 - INFO - __main__ -   测试:301

03/05/2025 16:19:26 - INFO - __main__ -   Attack failed!

03/05/2025 16:19:26 - INFO - __main__ -   测试:302

03/05/2025 16:19:27 - INFO - __main__ -   Success rate: 96.32%

03/05/2025 16:19:27 - INFO - __main__ -   Successful items count: 183

03/05/2025 16:19:27 - INFO - __main__ -   Total count: 190

03/05/2025 16:19:27 - INFO - __main__ -   Index: 302

The original code is misclassified.
Number of variable_names extracted:  4
Generating population302...
init SUCCESS!
Processing examples:  76%|███████▌  | 303/400 [1:27:06<12:40,  7.84s/it]03/05/2025 16:19:27 - INFO - __main__ -   测试:303

03/05/2025 16:19:27 - INFO - __main__ -   Attack failed!

03/05/2025 16:19:27 - INFO - __main__ -   测试:304

03/05/2025 16:19:32 - INFO - __main__ -   Success rate: 96.34%

03/05/2025 16:19:32 - INFO - __main__ -   Successful items count: 184

03/05/2025 16:19:32 - INFO - __main__ -   Total count: 191

03/05/2025 16:19:32 - INFO - __main__ -   Index: 304

The original code is misclassified.
Number of variable_names extracted:  4
Generating population304...
	 0  --most gap 0.04969579
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  76%|███████▋  | 305/400 [1:27:11<09:41,  6.12s/it]03/05/2025 16:19:32 - INFO - __main__ -   测试:305

03/05/2025 16:19:39 - INFO - __main__ -   Success rate: 96.35%

03/05/2025 16:19:39 - INFO - __main__ -   Successful items count: 185

03/05/2025 16:19:39 - INFO - __main__ -   Total count: 192

03/05/2025 16:19:39 - INFO - __main__ -   Index: 305

Number of variable_names extracted:  3
Generating population305...
	 0  --most gap 0.001032114
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  76%|███████▋  | 306/400 [1:27:19<09:57,  6.36s/it]03/05/2025 16:19:39 - INFO - __main__ -   测试:306

03/05/2025 16:19:40 - INFO - __main__ -   Success rate: 96.37%

03/05/2025 16:19:40 - INFO - __main__ -   Successful items count: 186

03/05/2025 16:19:40 - INFO - __main__ -   Total count: 193

03/05/2025 16:19:40 - INFO - __main__ -   Index: 306

Number of variable_names extracted:  4
Generating population306...
init SUCCESS!
Processing examples:  77%|███████▋  | 307/400 [1:27:19<07:50,  5.06s/it]03/05/2025 16:19:40 - INFO - __main__ -   测试:307

03/05/2025 16:19:40 - INFO - __main__ -   Attack failed!

03/05/2025 16:19:40 - INFO - __main__ -   测试:308

03/05/2025 16:19:43 - INFO - __main__ -   Success rate: 96.39%

03/05/2025 16:19:43 - INFO - __main__ -   Successful items count: 187

03/05/2025 16:19:43 - INFO - __main__ -   Total count: 194

03/05/2025 16:19:43 - INFO - __main__ -   Index: 308

The original code is misclassified.
Number of variable_names extracted:  3
Generating population308...
	 0  --most gap 0.00020068884
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  77%|███████▋  | 309/400 [1:27:23<05:45,  3.80s/it]03/05/2025 16:19:43 - INFO - __main__ -   测试:309

03/05/2025 16:19:43 - INFO - __main__ -   Attack failed!

03/05/2025 16:19:43 - INFO - __main__ -   测试:310

03/05/2025 16:19:43 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  78%|███████▊  | 311/400 [1:27:23<03:40,  2.48s/it]03/05/2025 16:19:43 - INFO - __main__ -   测试:311

03/05/2025 16:19:45 - INFO - __main__ -   Success rate: 96.41%

03/05/2025 16:19:45 - INFO - __main__ -   Successful items count: 188

03/05/2025 16:19:45 - INFO - __main__ -   Total count: 195

03/05/2025 16:19:45 - INFO - __main__ -   Index: 311

Number of variable_names extracted:  8
Generating population311...
init SUCCESS!
Processing examples:  78%|███████▊  | 312/400 [1:27:24<03:19,  2.26s/it]03/05/2025 16:19:45 - INFO - __main__ -   测试:312

03/05/2025 16:19:45 - INFO - __main__ -   Attack failed!

03/05/2025 16:19:45 - INFO - __main__ -   测试:313

03/05/2025 16:19:45 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  78%|███████▊  | 314/400 [1:27:24<02:06,  1.47s/it]03/05/2025 16:19:45 - INFO - __main__ -   测试:314

03/05/2025 16:19:45 - INFO - __main__ -   Success rate: 96.43%

03/05/2025 16:19:45 - INFO - __main__ -   Successful items count: 189

03/05/2025 16:19:45 - INFO - __main__ -   Total count: 196

03/05/2025 16:19:45 - INFO - __main__ -   Index: 314

Number of variable_names extracted:  9
Generating population314...
init SUCCESS!
Processing examples:  79%|███████▉  | 315/400 [1:27:25<01:45,  1.24s/it]03/05/2025 16:19:45 - INFO - __main__ -   测试:315

03/05/2025 16:19:45 - INFO - __main__ -   Attack failed!

03/05/2025 16:19:45 - INFO - __main__ -   测试:316

03/05/2025 16:23:04 - INFO - __main__ -   Success rate: 96.45%

03/05/2025 16:23:04 - INFO - __main__ -   Successful items count: 190

03/05/2025 16:23:04 - INFO - __main__ -   Total count: 197

03/05/2025 16:23:04 - INFO - __main__ -   Index: 316

The original code is misclassified.
Number of variable_names extracted:  3
Generating population316...
	 0  --most gap 0.00448066
	 1  --most gap 0.00448066
	 2  --most gap 0.00448066
两轮结果未更新,Changing code structure...
	 3  --most gap 0.02671349
	 4  --most gap 0.02671349
	 5  --most gap 0.02671349
	 6  --most gap 0.02671349
两轮结果未更新,Changing code structure...
	 7  --most gap 0.02671349
	 8  --most gap 0.23106825
	 9  --most gap 0.23106825
	 10  --most gap 0.23106825
	 11  --most gap 0.23106825
两轮结果未更新,Changing code structure...
	 12  --most gap 0.23106825
	 13  --most gap 0.23106825
	 14  --most gap 0.23106825
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  79%|███████▉  | 317/400 [1:30:43<52:09, 37.70s/it]03/05/2025 16:23:04 - INFO - __main__ -   测试:317

03/05/2025 16:23:04 - INFO - __main__ -   Success rate: 96.46%

03/05/2025 16:23:04 - INFO - __main__ -   Successful items count: 191

03/05/2025 16:23:04 - INFO - __main__ -   Total count: 198

03/05/2025 16:23:04 - INFO - __main__ -   Index: 317

Number of variable_names extracted:  3
Generating population317...
init SUCCESS!
Processing examples:  80%|███████▉  | 318/400 [1:30:44<40:47, 29.85s/it]03/05/2025 16:23:04 - INFO - __main__ -   测试:318

03/05/2025 16:25:34 - INFO - __main__ -   Success rate: 96.48%

03/05/2025 16:25:34 - INFO - __main__ -   Successful items count: 192

03/05/2025 16:25:34 - INFO - __main__ -   Total count: 199

03/05/2025 16:25:34 - INFO - __main__ -   Index: 318

Number of variable_names extracted:  6
Generating population318...
	 0  --most gap 0.010442972
	 1  --most gap 0.010442972
	 2  --most gap 0.010442972
两轮结果未更新,Changing code structure...
	 3  --most gap 0.010551691
	 4  --most gap 0.010551691
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  80%|███████▉  | 319/400 [1:33:14<1:17:37, 57.50s/it]03/05/2025 16:25:34 - INFO - __main__ -   测试:319

03/05/2025 16:25:34 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  80%|████████  | 320/400 [1:33:14<57:43, 43.29s/it]  03/05/2025 16:25:34 - INFO - __main__ -   测试:320

03/05/2025 16:25:37 - INFO - __main__ -   Success rate: 96.50%

03/05/2025 16:25:37 - INFO - __main__ -   Successful items count: 193

03/05/2025 16:25:37 - INFO - __main__ -   Total count: 200

03/05/2025 16:25:37 - INFO - __main__ -   Index: 320

Number of variable_names extracted:  6
Generating population320...
init SUCCESS!
Processing examples:  80%|████████  | 321/400 [1:33:16<42:54, 32.59s/it]03/05/2025 16:25:37 - INFO - __main__ -   测试:321

03/05/2025 16:25:38 - INFO - __main__ -   Success rate: 96.52%

03/05/2025 16:25:38 - INFO - __main__ -   Successful items count: 194

03/05/2025 16:25:38 - INFO - __main__ -   Total count: 201

03/05/2025 16:25:38 - INFO - __main__ -   Index: 321

Number of variable_names extracted:  8
Generating population321...
init SUCCESS!
Processing examples:  80%|████████  | 322/400 [1:33:17<31:21, 24.13s/it]03/05/2025 16:25:38 - INFO - __main__ -   测试:322

03/05/2025 16:25:38 - INFO - __main__ -   Attack failed!

03/05/2025 16:25:38 - INFO - __main__ -   测试:323

03/05/2025 16:25:38 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  81%|████████  | 324/400 [1:33:18<17:14, 13.61s/it]03/05/2025 16:25:38 - INFO - __main__ -   测试:324

03/05/2025 16:25:40 - INFO - __main__ -   Success rate: 96.53%

03/05/2025 16:25:40 - INFO - __main__ -   Successful items count: 195

03/05/2025 16:25:40 - INFO - __main__ -   Total count: 202

03/05/2025 16:25:40 - INFO - __main__ -   Index: 324

Number of variable_names extracted:  15
Generating population324...
init SUCCESS!
Processing examples:  81%|████████▏ | 325/400 [1:33:19<13:25, 10.74s/it]03/05/2025 16:25:40 - INFO - __main__ -   测试:325

03/05/2025 16:25:40 - INFO - __main__ -   Attack failed!

03/05/2025 16:25:40 - INFO - __main__ -   测试:326

03/05/2025 16:25:44 - INFO - __main__ -   Success rate: 96.55%

03/05/2025 16:25:44 - INFO - __main__ -   Successful items count: 196

03/05/2025 16:25:44 - INFO - __main__ -   Total count: 203

03/05/2025 16:25:44 - INFO - __main__ -   Index: 326

The original code is misclassified.
Number of variable_names extracted:  2
Generating population326...
	 0  --most gap 0.008080661
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  82%|████████▏ | 327/400 [1:33:24<08:55,  7.33s/it]03/05/2025 16:25:44 - INFO - __main__ -   测试:327

03/05/2025 16:25:44 - INFO - __main__ -   Attack failed!

03/05/2025 16:25:44 - INFO - __main__ -   测试:328

03/05/2025 16:28:55 - INFO - __main__ -   Success rate: 96.57%

03/05/2025 16:28:55 - INFO - __main__ -   Successful items count: 197

03/05/2025 16:28:55 - INFO - __main__ -   Total count: 204

03/05/2025 16:28:55 - INFO - __main__ -   Index: 328

The original code is misclassified.
Number of variable_names extracted:  32
Generating population328...
	 0  --most gap 0.07421744
	 1  --most gap 0.1033687
	 2  --most gap 0.13898921
	 3  --most gap 0.19496703
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  82%|████████▏ | 329/400 [1:36:35<46:55, 39.65s/it]03/05/2025 16:28:55 - INFO - __main__ -   测试:329

03/05/2025 16:28:56 - INFO - __main__ -   Success rate: 96.59%

03/05/2025 16:28:56 - INFO - __main__ -   Successful items count: 198

03/05/2025 16:28:56 - INFO - __main__ -   Total count: 205

03/05/2025 16:28:56 - INFO - __main__ -   Index: 329

Number of variable_names extracted:  7
Generating population329...
init SUCCESS!
Processing examples:  82%|████████▎ | 330/400 [1:36:35<36:45, 31.51s/it]03/05/2025 16:28:56 - INFO - __main__ -   测试:330

03/05/2025 16:28:57 - INFO - __main__ -   Success rate: 96.60%

03/05/2025 16:28:57 - INFO - __main__ -   Successful items count: 199

03/05/2025 16:28:57 - INFO - __main__ -   Total count: 206

03/05/2025 16:28:57 - INFO - __main__ -   Index: 330

Number of variable_names extracted:  8
Generating population330...
init SUCCESS!
Processing examples:  83%|████████▎ | 331/400 [1:36:36<28:08, 24.48s/it]03/05/2025 16:28:57 - INFO - __main__ -   测试:331

03/05/2025 16:32:49 - INFO - __main__ -   Success rate: 96.62%

03/05/2025 16:32:49 - INFO - __main__ -   Successful items count: 200

03/05/2025 16:32:49 - INFO - __main__ -   Total count: 207

03/05/2025 16:32:49 - INFO - __main__ -   Index: 331

Number of variable_names extracted:  35
Generating population331...
	 0  --most gap 0.00048089027
	 1  --most gap 0.024376571
	 2  --most gap 0.05539739
	 3  --most gap 0.19686526
	 4  --most gap 0.19686526
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  83%|████████▎ | 332/400 [1:40:28<1:25:42, 75.62s/it]03/05/2025 16:32:49 - INFO - __main__ -   测试:332

03/05/2025 16:32:57 - INFO - __main__ -   Success rate: 96.63%

03/05/2025 16:32:57 - INFO - __main__ -   Successful items count: 201

03/05/2025 16:32:57 - INFO - __main__ -   Total count: 208

03/05/2025 16:32:57 - INFO - __main__ -   Index: 332

Number of variable_names extracted:  16
Generating population332...
init SUCCESS!
Processing examples:  83%|████████▎ | 333/400 [1:40:36<1:04:51, 58.08s/it]03/05/2025 16:32:57 - INFO - __main__ -   测试:333

03/05/2025 16:32:59 - INFO - __main__ -   Success rate: 96.65%

03/05/2025 16:32:59 - INFO - __main__ -   Successful items count: 202

03/05/2025 16:32:59 - INFO - __main__ -   Total count: 209

03/05/2025 16:32:59 - INFO - __main__ -   Index: 333

Number of variable_names extracted:  9
Generating population333...
init SUCCESS!
Processing examples:  84%|████████▎ | 334/400 [1:40:39<47:14, 42.95s/it]  03/05/2025 16:32:59 - INFO - __main__ -   测试:334

03/05/2025 16:33:24 - INFO - __main__ -   Success rate: 96.67%

03/05/2025 16:33:24 - INFO - __main__ -   Successful items count: 203

03/05/2025 16:33:24 - INFO - __main__ -   Total count: 210

03/05/2025 16:33:24 - INFO - __main__ -   Index: 334

Number of variable_names extracted:  1
Generating population334...
	 0  --most gap 0.0025330186
	 1  --most gap 0.0025330186
	 2  --most gap 0.0025330186
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0025330186
	 4  --most gap 0.0025330186
	 5  --most gap 0.0025330186
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0025330186
	 7  --most gap 0.0025330186
	 8  --most gap 0.0025330186
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0025330186
	 10  --most gap 0.0025330186
	 11  --most gap 0.0025330186
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0025330186
	 13  --most gap 0.0025330186
	 14  --most gap 0.0025330186
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0025330186
	 16  --most gap 0.0025330186
	 17  --most gap 0.0025330186
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0025330186
	 19  --most gap 0.0025330186
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  84%|████████▍ | 335/400 [1:41:03<40:57, 37.80s/it]03/05/2025 16:33:24 - INFO - __main__ -   测试:335

03/05/2025 16:33:24 - INFO - __main__ -   Attack failed!

03/05/2025 16:33:24 - INFO - __main__ -   测试:336

03/05/2025 16:33:28 - INFO - __main__ -   Success rate: 96.68%

03/05/2025 16:33:28 - INFO - __main__ -   Successful items count: 204

03/05/2025 16:33:28 - INFO - __main__ -   Total count: 211

03/05/2025 16:33:28 - INFO - __main__ -   Index: 336

The original code is misclassified.
Number of variable_names extracted:  9
Generating population336...
init SUCCESS!
Processing examples:  84%|████████▍ | 337/400 [1:41:07<22:59, 21.90s/it]03/05/2025 16:33:28 - INFO - __main__ -   测试:337

03/05/2025 16:33:32 - INFO - __main__ -   Success rate: 96.70%

03/05/2025 16:33:32 - INFO - __main__ -   Successful items count: 205

03/05/2025 16:33:32 - INFO - __main__ -   Total count: 212

03/05/2025 16:33:32 - INFO - __main__ -   Index: 337

Number of variable_names extracted:  5
Generating population337...
	 0  --most gap 0.00052189827
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  84%|████████▍ | 338/400 [1:41:12<18:20, 17.76s/it]03/05/2025 16:33:32 - INFO - __main__ -   测试:338

03/05/2025 16:33:37 - INFO - __main__ -   Success rate: 96.71%

03/05/2025 16:33:37 - INFO - __main__ -   Successful items count: 206

03/05/2025 16:33:37 - INFO - __main__ -   Total count: 213

03/05/2025 16:33:37 - INFO - __main__ -   Index: 338

Number of variable_names extracted:  2
Generating population338...
	 0  --most gap 0.00616318
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  85%|████████▍ | 339/400 [1:41:16<14:35, 14.35s/it]03/05/2025 16:33:37 - INFO - __main__ -   测试:339

03/05/2025 16:33:59 - INFO - __main__ -   Success rate: 96.73%

03/05/2025 16:33:59 - INFO - __main__ -   Successful items count: 207

03/05/2025 16:33:59 - INFO - __main__ -   Total count: 214

03/05/2025 16:33:59 - INFO - __main__ -   Index: 339

Number of variable_names extracted:  22
Generating population339...
	 0  --most gap 0.0051774383
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  85%|████████▌ | 340/400 [1:41:38<16:23, 16.38s/it]03/05/2025 16:33:59 - INFO - __main__ -   测试:340

03/05/2025 16:34:06 - INFO - __main__ -   Success rate: 96.74%

03/05/2025 16:34:06 - INFO - __main__ -   Successful items count: 208

03/05/2025 16:34:06 - INFO - __main__ -   Total count: 215

03/05/2025 16:34:06 - INFO - __main__ -   Index: 340

Number of variable_names extracted:  8
Generating population340...
	 0  --most gap 0.014423728
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  85%|████████▌ | 341/400 [1:41:46<13:38, 13.88s/it]03/05/2025 16:34:06 - INFO - __main__ -   测试:341

03/05/2025 16:34:06 - INFO - __main__ -   Attack failed!

03/05/2025 16:34:06 - INFO - __main__ -   测试:342

03/05/2025 16:34:06 - INFO - __main__ -   Success rate: 96.76%

03/05/2025 16:34:06 - INFO - __main__ -   Successful items count: 209

03/05/2025 16:34:06 - INFO - __main__ -   Total count: 216

03/05/2025 16:34:06 - INFO - __main__ -   Index: 342

The original code is misclassified.
Number of variable_names extracted:  6
Generating population342...
init SUCCESS!
Processing examples:  86%|████████▌ | 343/400 [1:41:46<07:27,  7.84s/it]03/05/2025 16:34:06 - INFO - __main__ -   测试:343

03/05/2025 16:42:37 - INFO - __main__ -   Success rate: 96.77%

03/05/2025 16:42:37 - INFO - __main__ -   Successful items count: 210

03/05/2025 16:42:37 - INFO - __main__ -   Total count: 217

03/05/2025 16:42:37 - INFO - __main__ -   Index: 343

Number of variable_names extracted:  5
Generating population343...
	 0  --most gap 0.007774174
	 1  --most gap 0.016283631
	 2  --most gap 0.016283631
	 3  --most gap 0.016283631
	 4  --most gap 0.016423583
	 5  --most gap 0.016423583
	 6  --most gap 0.01644516
	 7  --most gap 0.01644516
	 8  --most gap 0.01644516
	 9  --most gap 0.01644516
两轮结果未更新,Changing code structure...
	 10  --most gap 0.01644516
	 11  --most gap 0.01644516
	 12  --most gap 0.01644516
两轮结果未更新,Changing code structure...
	 13  --most gap 0.01644516
	 14  --most gap 0.01644516
	 15  --most gap 0.01644516
两轮结果未更新,Changing code structure...
	 16  --most gap 0.01644516
	 17  --most gap 0.01644516
	 18  --most gap 0.01644516
两轮结果未更新,Changing code structure...
	 19  --most gap 0.01644516
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  86%|████████▌ | 344/400 [1:50:16<1:59:46, 128.34s/it]03/05/2025 16:42:37 - INFO - __main__ -   测试:344

03/05/2025 16:42:37 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  86%|████████▋ | 345/400 [1:50:17<1:27:39, 95.63s/it] 03/05/2025 16:42:37 - INFO - __main__ -   测试:345

03/05/2025 16:42:37 - INFO - __main__ -   Attack failed!

03/05/2025 16:42:37 - INFO - __main__ -   测试:346

03/05/2025 16:42:37 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  87%|████████▋ | 347/400 [1:50:17<48:53, 55.35s/it]  03/05/2025 16:42:37 - INFO - __main__ -   测试:347

03/05/2025 16:43:06 - INFO - __main__ -   Success rate: 96.79%

03/05/2025 16:43:06 - INFO - __main__ -   Successful items count: 211

03/05/2025 16:43:06 - INFO - __main__ -   Total count: 218

03/05/2025 16:43:06 - INFO - __main__ -   Index: 347

Number of variable_names extracted:  4
Generating population347...
	 0  --most gap 0.005926013
	 1  --most gap 0.32747346
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  87%|████████▋ | 348/400 [1:50:45<42:34, 49.12s/it]03/05/2025 16:43:06 - INFO - __main__ -   测试:348

03/05/2025 16:43:08 - INFO - __main__ -   Success rate: 96.80%

03/05/2025 16:43:08 - INFO - __main__ -   Successful items count: 212

03/05/2025 16:43:08 - INFO - __main__ -   Total count: 219

03/05/2025 16:43:08 - INFO - __main__ -   Index: 348

Number of variable_names extracted:  8
Generating population348...
init SUCCESS!
Processing examples:  87%|████████▋ | 349/400 [1:50:48<31:57, 37.60s/it]03/05/2025 16:43:08 - INFO - __main__ -   测试:349

03/05/2025 16:43:12 - INFO - __main__ -   Success rate: 96.82%

03/05/2025 16:43:12 - INFO - __main__ -   Successful items count: 213

03/05/2025 16:43:12 - INFO - __main__ -   Total count: 220

03/05/2025 16:43:12 - INFO - __main__ -   Index: 349

Number of variable_names extracted:  5
Generating population349...
init SUCCESS!
Processing examples:  88%|████████▊ | 350/400 [1:50:51<23:52, 28.66s/it]03/05/2025 16:43:12 - INFO - __main__ -   测试:350

03/05/2025 16:43:21 - INFO - __main__ -   Success rate: 96.83%

03/05/2025 16:43:21 - INFO - __main__ -   Successful items count: 214

03/05/2025 16:43:21 - INFO - __main__ -   Total count: 221

03/05/2025 16:43:21 - INFO - __main__ -   Index: 350

Number of variable_names extracted:  5
Generating population350...
	 0  --most gap 0.009933531
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  88%|████████▊ | 351/400 [1:51:01<19:03, 23.34s/it]03/05/2025 16:43:21 - INFO - __main__ -   测试:351

03/05/2025 16:43:25 - INFO - __main__ -   Success rate: 96.85%

03/05/2025 16:43:25 - INFO - __main__ -   Successful items count: 215

03/05/2025 16:43:25 - INFO - __main__ -   Total count: 222

03/05/2025 16:43:25 - INFO - __main__ -   Index: 351

Number of variable_names extracted:  13
Generating population351...
init SUCCESS!
Processing examples:  88%|████████▊ | 352/400 [1:51:04<14:17, 17.86s/it]03/05/2025 16:43:25 - INFO - __main__ -   测试:352

03/05/2025 16:43:26 - INFO - __main__ -   Success rate: 96.86%

03/05/2025 16:43:26 - INFO - __main__ -   Successful items count: 216

03/05/2025 16:43:26 - INFO - __main__ -   Total count: 223

03/05/2025 16:43:26 - INFO - __main__ -   Index: 352

Number of variable_names extracted:  7
Generating population352...
init SUCCESS!
Processing examples:  88%|████████▊ | 353/400 [1:51:06<10:17, 13.13s/it]03/05/2025 16:43:26 - INFO - __main__ -   测试:353

03/05/2025 16:43:26 - INFO - __main__ -   Attack failed!

03/05/2025 16:43:26 - INFO - __main__ -   测试:354

03/05/2025 16:43:31 - INFO - __main__ -   Success rate: 96.88%

03/05/2025 16:43:31 - INFO - __main__ -   Successful items count: 217

03/05/2025 16:43:31 - INFO - __main__ -   Total count: 224

03/05/2025 16:43:31 - INFO - __main__ -   Index: 354

The original code is misclassified.
Number of variable_names extracted:  5
Generating population354...
	 0  --most gap 0.015709758
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  89%|████████▉ | 355/400 [1:51:10<06:12,  8.27s/it]03/05/2025 16:43:31 - INFO - __main__ -   测试:355

03/05/2025 16:44:13 - INFO - __main__ -   Success rate: 96.89%

03/05/2025 16:44:13 - INFO - __main__ -   Successful items count: 218

03/05/2025 16:44:13 - INFO - __main__ -   Total count: 225

03/05/2025 16:44:13 - INFO - __main__ -   Index: 355

Number of variable_names extracted:  3
Generating population355...
	 0  --most gap 0.0012350678
	 1  --most gap 0.0012350678
	 2  --most gap 0.0012350678
两轮结果未更新,Changing code structure...
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  89%|████████▉ | 356/400 [1:51:53<12:07, 16.53s/it]03/05/2025 16:44:13 - INFO - __main__ -   测试:356

03/05/2025 16:44:13 - INFO - __main__ -   Attack failed!

03/05/2025 16:44:13 - INFO - __main__ -   测试:357

03/05/2025 16:44:13 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  90%|████████▉ | 358/400 [1:51:53<06:51,  9.79s/it]03/05/2025 16:44:13 - INFO - __main__ -   测试:358

03/05/2025 16:44:18 - INFO - __main__ -   Success rate: 96.90%

03/05/2025 16:44:18 - INFO - __main__ -   Successful items count: 219

03/05/2025 16:44:18 - INFO - __main__ -   Total count: 226

03/05/2025 16:44:18 - INFO - __main__ -   Index: 358

Number of variable_names extracted:  5
Generating population358...
	 0  --most gap 0.0008093715
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  90%|████████▉ | 359/400 [1:51:57<05:54,  8.64s/it]03/05/2025 16:44:18 - INFO - __main__ -   测试:359

03/05/2025 16:44:18 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  90%|█████████ | 360/400 [1:51:58<04:22,  6.56s/it]03/05/2025 16:44:18 - INFO - __main__ -   测试:360

03/05/2025 16:44:18 - INFO - __main__ -   Attack failed!

03/05/2025 16:44:18 - INFO - __main__ -   测试:361

03/05/2025 16:44:20 - INFO - __main__ -   Success rate: 96.92%

03/05/2025 16:44:20 - INFO - __main__ -   Successful items count: 220

03/05/2025 16:44:20 - INFO - __main__ -   Total count: 227

03/05/2025 16:44:20 - INFO - __main__ -   Index: 361

The original code is misclassified.
Number of variable_names extracted:  4
Generating population361...
init SUCCESS!
Processing examples:  90%|█████████ | 362/400 [1:52:00<02:42,  4.28s/it]03/05/2025 16:44:20 - INFO - __main__ -   测试:362

03/05/2025 16:44:21 - INFO - __main__ -   Success rate: 96.93%

03/05/2025 16:44:21 - INFO - __main__ -   Successful items count: 221

03/05/2025 16:44:21 - INFO - __main__ -   Total count: 228

03/05/2025 16:44:21 - INFO - __main__ -   Index: 362

Number of variable_names extracted:  2
Generating population362...
init SUCCESS!
Processing examples:  91%|█████████ | 363/400 [1:52:00<02:07,  3.44s/it]03/05/2025 16:44:21 - INFO - __main__ -   测试:363

03/05/2025 16:44:21 - INFO - __main__ -   Attack failed!

03/05/2025 16:44:21 - INFO - __main__ -   测试:364

03/05/2025 16:44:44 - INFO - __main__ -   Success rate: 96.94%

03/05/2025 16:44:44 - INFO - __main__ -   Successful items count: 222

03/05/2025 16:44:44 - INFO - __main__ -   Total count: 229

03/05/2025 16:44:44 - INFO - __main__ -   Index: 364

The original code is misclassified.
Number of variable_names extracted:  2
Generating population364...
	 0  --most gap 0.0006649494
	 1  --most gap 0.0006649494
	 2  --most gap 0.0006649494
两轮结果未更新,Changing code structure...
	 3  --most gap 0.0006649494
	 4  --most gap 0.0006649494
	 5  --most gap 0.0006649494
两轮结果未更新,Changing code structure...
	 6  --most gap 0.0006649494
	 7  --most gap 0.0006649494
	 8  --most gap 0.0006649494
两轮结果未更新,Changing code structure...
	 9  --most gap 0.0006649494
	 10  --most gap 0.0006649494
	 11  --most gap 0.0006649494
两轮结果未更新,Changing code structure...
	 12  --most gap 0.0006649494
	 13  --most gap 0.0006649494
	 14  --most gap 0.0006649494
两轮结果未更新,Changing code structure...
	 15  --most gap 0.0006649494
	 16  --most gap 0.0006649494
	 17  --most gap 0.0006649494
两轮结果未更新,Changing code structure...
	 18  --most gap 0.0006649494
	 19  --most gap 0.0006649494
Changing code structure...
changeCodeStructure SUCCESS!
Processing examples:  91%|█████████▏| 365/400 [1:52:24<03:55,  6.72s/it]03/05/2025 16:44:44 - INFO - __main__ -   测试:365

03/05/2025 16:47:30 - INFO - __main__ -   Success rate: 96.96%

03/05/2025 16:47:30 - INFO - __main__ -   Successful items count: 223

03/05/2025 16:47:30 - INFO - __main__ -   Total count: 230

03/05/2025 16:47:30 - INFO - __main__ -   Index: 365

Number of variable_names extracted:  5
Generating population365...
	 0  --most gap 0.0016249418
	 1  --most gap 0.016365707
	 2  --most gap 0.016365707
	 3  --most gap 0.023987532
	 4  --most gap 0.038253367
	 5  --most gap 0.25612497
	 6  --most gap 0.3599155
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 366/400 [1:55:09<23:32, 41.53s/it]03/05/2025 16:47:30 - INFO - __main__ -   测试:366

03/05/2025 16:47:35 - INFO - __main__ -   Success rate: 96.97%

03/05/2025 16:47:35 - INFO - __main__ -   Successful items count: 224

03/05/2025 16:47:35 - INFO - __main__ -   Total count: 231

03/05/2025 16:47:35 - INFO - __main__ -   Index: 366

Number of variable_names extracted:  4
Generating population366...
init SUCCESS!
Processing examples:  92%|█████████▏| 367/400 [1:55:15<18:07, 32.95s/it]03/05/2025 16:47:35 - INFO - __main__ -   测试:367

03/05/2025 16:47:35 - INFO - __main__ -   Success rate: 96.98%

03/05/2025 16:47:35 - INFO - __main__ -   Successful items count: 225

03/05/2025 16:47:35 - INFO - __main__ -   Total count: 232

03/05/2025 16:47:35 - INFO - __main__ -   Index: 367

Number of variable_names extracted:  1
Generating population367...
init SUCCESS!
Processing examples:  92%|█████████▏| 368/400 [1:55:15<13:07, 24.62s/it]03/05/2025 16:47:35 - INFO - __main__ -   测试:368

03/05/2025 16:47:45 - INFO - __main__ -   Success rate: 97.00%

03/05/2025 16:47:45 - INFO - __main__ -   Successful items count: 226

03/05/2025 16:47:45 - INFO - __main__ -   Total count: 233

03/05/2025 16:47:45 - INFO - __main__ -   Index: 368

Number of variable_names extracted:  8
Generating population368...
	 0  --most gap 0.41606992
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  92%|█████████▏| 369/400 [1:55:24<10:35, 20.50s/it]03/05/2025 16:47:45 - INFO - __main__ -   测试:369

03/05/2025 16:47:45 - INFO - __main__ -   Success rate: 97.01%

03/05/2025 16:47:45 - INFO - __main__ -   Successful items count: 227

03/05/2025 16:47:45 - INFO - __main__ -   Total count: 234

03/05/2025 16:47:45 - INFO - __main__ -   Index: 369

Number of variable_names extracted:  7
Generating population369...
init SUCCESS!
Processing examples:  92%|█████████▎| 370/400 [1:55:24<07:27, 14.93s/it]03/05/2025 16:47:45 - INFO - __main__ -   测试:370

03/05/2025 16:47:46 - INFO - __main__ -   Success rate: 97.02%

03/05/2025 16:47:46 - INFO - __main__ -   Successful items count: 228

03/05/2025 16:47:46 - INFO - __main__ -   Total count: 235

03/05/2025 16:47:46 - INFO - __main__ -   Index: 370

Number of variable_names extracted:  9
Generating population370...
init SUCCESS!
Processing examples:  93%|█████████▎| 371/400 [1:55:26<05:23, 11.17s/it]03/05/2025 16:47:46 - INFO - __main__ -   测试:371

03/05/2025 16:48:00 - INFO - __main__ -   Success rate: 97.03%

03/05/2025 16:48:00 - INFO - __main__ -   Successful items count: 229

03/05/2025 16:48:00 - INFO - __main__ -   Total count: 236

03/05/2025 16:48:00 - INFO - __main__ -   Index: 371

Number of variable_names extracted:  6
Generating population371...
	 0  --most gap 0.33719057
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  93%|█████████▎| 372/400 [1:55:40<05:35, 11.97s/it]03/05/2025 16:48:00 - INFO - __main__ -   测试:372

03/05/2025 16:48:05 - INFO - __main__ -   Success rate: 97.05%

03/05/2025 16:48:05 - INFO - __main__ -   Successful items count: 230

03/05/2025 16:48:05 - INFO - __main__ -   Total count: 237

03/05/2025 16:48:05 - INFO - __main__ -   Index: 372

Number of variable_names extracted:  3
Generating population372...
	 0  --most gap 0.012144625
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  93%|█████████▎| 373/400 [1:55:44<04:24,  9.79s/it]03/05/2025 16:48:05 - INFO - __main__ -   测试:373

03/05/2025 16:48:06 - INFO - __main__ -   Success rate: 97.06%

03/05/2025 16:48:06 - INFO - __main__ -   Successful items count: 231

03/05/2025 16:48:06 - INFO - __main__ -   Total count: 238

03/05/2025 16:48:06 - INFO - __main__ -   Index: 373

Number of variable_names extracted:  2
Generating population373...
init SUCCESS!
Processing examples:  94%|█████████▎| 374/400 [1:55:46<03:10,  7.33s/it]03/05/2025 16:48:06 - INFO - __main__ -   测试:374

03/05/2025 16:48:06 - INFO - __main__ -   Success rate: 97.07%

03/05/2025 16:48:06 - INFO - __main__ -   Successful items count: 232

03/05/2025 16:48:06 - INFO - __main__ -   Total count: 239

03/05/2025 16:48:06 - INFO - __main__ -   Index: 374

Number of variable_names extracted:  5
Generating population374...
init SUCCESS!
Processing examples:  94%|█████████▍| 375/400 [1:55:46<02:10,  5.23s/it]03/05/2025 16:48:06 - INFO - __main__ -   测试:375

03/05/2025 16:48:07 - INFO - __main__ -   Attack failed!

03/05/2025 16:48:07 - INFO - __main__ -   测试:376

03/05/2025 16:48:26 - INFO - __main__ -   Success rate: 97.08%

03/05/2025 16:48:26 - INFO - __main__ -   Successful items count: 233

03/05/2025 16:48:26 - INFO - __main__ -   Total count: 240

03/05/2025 16:48:26 - INFO - __main__ -   Index: 376

The original code is misclassified.
Number of variable_names extracted:  9
Generating population376...
init SUCCESS!
Processing examples:  94%|█████████▍| 377/400 [1:56:06<02:48,  7.31s/it]03/05/2025 16:48:26 - INFO - __main__ -   测试:377

03/05/2025 16:50:05 - INFO - __main__ -   Success rate: 97.10%

03/05/2025 16:50:05 - INFO - __main__ -   Successful items count: 234

03/05/2025 16:50:05 - INFO - __main__ -   Total count: 241

03/05/2025 16:50:05 - INFO - __main__ -   Index: 377

Number of variable_names extracted:  3
Generating population377...
	 0  --most gap 0.00032758713
	 1  --most gap 0.00032758713
	 2  --most gap 0.08913958
	 3  --most gap 0.08913958
	 4  --most gap 0.08913958
	 5  --most gap 0.08913958
两轮结果未更新,Changing code structure...
	 6  --most gap 0.08913958
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  94%|█████████▍| 378/400 [1:57:44<10:56, 29.84s/it]03/05/2025 16:50:05 - INFO - __main__ -   测试:378

03/05/2025 16:50:09 - INFO - __main__ -   Success rate: 97.11%

03/05/2025 16:50:09 - INFO - __main__ -   Successful items count: 235

03/05/2025 16:50:09 - INFO - __main__ -   Total count: 242

03/05/2025 16:50:09 - INFO - __main__ -   Index: 378

Number of variable_names extracted:  6
Generating population378...
	 0  --most gap 0.17127252
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  95%|█████████▍| 379/400 [1:57:49<08:08, 23.25s/it]03/05/2025 16:50:09 - INFO - __main__ -   测试:379

03/05/2025 16:50:10 - INFO - __main__ -   Success rate: 97.12%

03/05/2025 16:50:10 - INFO - __main__ -   Successful items count: 236

03/05/2025 16:50:10 - INFO - __main__ -   Total count: 243

03/05/2025 16:50:10 - INFO - __main__ -   Index: 379

Number of variable_names extracted:  2
Generating population379...
init SUCCESS!
Processing examples:  95%|█████████▌| 380/400 [1:57:49<05:40, 17.01s/it]03/05/2025 16:50:10 - INFO - __main__ -   测试:380

03/05/2025 16:50:10 - INFO - __main__ -   Success rate: 97.13%

03/05/2025 16:50:10 - INFO - __main__ -   Successful items count: 237

03/05/2025 16:50:10 - INFO - __main__ -   Total count: 244

03/05/2025 16:50:10 - INFO - __main__ -   Index: 380

Number of variable_names extracted:  8
Generating population380...
init SUCCESS!
Processing examples:  95%|█████████▌| 381/400 [1:57:50<03:57, 12.52s/it]03/05/2025 16:50:10 - INFO - __main__ -   测试:381

03/05/2025 16:50:11 - INFO - __main__ -   Success rate: 97.14%

03/05/2025 16:50:11 - INFO - __main__ -   Successful items count: 238

03/05/2025 16:50:11 - INFO - __main__ -   Total count: 245

03/05/2025 16:50:11 - INFO - __main__ -   Index: 381

Number of variable_names extracted:  2
Generating population381...
init SUCCESS!
Processing examples:  96%|█████████▌| 382/400 [1:57:50<02:43,  9.09s/it]03/05/2025 16:50:11 - INFO - __main__ -   测试:382

03/05/2025 16:50:11 - INFO - __main__ -   Attack failed!

03/05/2025 16:50:11 - INFO - __main__ -   测试:383

03/05/2025 16:50:12 - INFO - __main__ -   Success rate: 97.15%

03/05/2025 16:50:12 - INFO - __main__ -   Successful items count: 239

03/05/2025 16:50:12 - INFO - __main__ -   Total count: 246

03/05/2025 16:50:12 - INFO - __main__ -   Index: 383

The original code is misclassified.
Number of variable_names extracted:  8
Generating population383...
init SUCCESS!
Processing examples:  96%|█████████▌| 384/400 [1:57:52<01:25,  5.31s/it]03/05/2025 16:50:12 - INFO - __main__ -   测试:384

03/05/2025 16:50:12 - INFO - __main__ -   Attack failed!

03/05/2025 16:50:12 - INFO - __main__ -   测试:385

03/05/2025 16:50:12 - INFO - __main__ -   Attack failed!

The original code is misclassified.
The original code is misclassified.
Processing examples:  96%|█████████▋| 386/400 [1:57:52<00:45,  3.27s/it]03/05/2025 16:50:12 - INFO - __main__ -   测试:386

03/05/2025 16:50:13 - INFO - __main__ -   Success rate: 97.17%

03/05/2025 16:50:13 - INFO - __main__ -   Successful items count: 240

03/05/2025 16:50:13 - INFO - __main__ -   Total count: 247

03/05/2025 16:50:13 - INFO - __main__ -   Index: 386

Number of variable_names extracted:  1
Generating population386...
init SUCCESS!
Processing examples:  97%|█████████▋| 387/400 [1:57:52<00:33,  2.59s/it]03/05/2025 16:50:13 - INFO - __main__ -   测试:387

03/05/2025 16:50:13 - INFO - __main__ -   Success rate: 97.18%

03/05/2025 16:50:13 - INFO - __main__ -   Successful items count: 241

03/05/2025 16:50:13 - INFO - __main__ -   Total count: 248

03/05/2025 16:50:13 - INFO - __main__ -   Index: 387

Number of variable_names extracted:  3
Generating population387...
init SUCCESS!
Processing examples:  97%|█████████▋| 388/400 [1:57:52<00:24,  2.05s/it]03/05/2025 16:50:13 - INFO - __main__ -   测试:388

03/05/2025 16:50:13 - INFO - __main__ -   Attack failed!

03/05/2025 16:50:13 - INFO - __main__ -   测试:389

03/05/2025 16:50:14 - INFO - __main__ -   Success rate: 97.19%

03/05/2025 16:50:14 - INFO - __main__ -   Successful items count: 242

03/05/2025 16:50:14 - INFO - __main__ -   Total count: 249

03/05/2025 16:50:14 - INFO - __main__ -   Index: 389

The original code is misclassified.
Number of variable_names extracted:  3
Generating population389...
init SUCCESS!
Processing examples:  98%|█████████▊| 390/400 [1:57:53<00:13,  1.35s/it]03/05/2025 16:50:14 - INFO - __main__ -   测试:390

03/05/2025 16:50:15 - INFO - __main__ -   Success rate: 97.20%

03/05/2025 16:50:15 - INFO - __main__ -   Successful items count: 243

03/05/2025 16:50:15 - INFO - __main__ -   Total count: 250

03/05/2025 16:50:15 - INFO - __main__ -   Index: 390

Number of variable_names extracted:  9
Generating population390...
init SUCCESS!
Processing examples:  98%|█████████▊| 391/400 [1:57:55<00:12,  1.41s/it]03/05/2025 16:50:15 - INFO - __main__ -   测试:391

03/05/2025 16:50:25 - INFO - __main__ -   Success rate: 97.21%

03/05/2025 16:50:25 - INFO - __main__ -   Successful items count: 244

03/05/2025 16:50:25 - INFO - __main__ -   Total count: 251

03/05/2025 16:50:25 - INFO - __main__ -   Index: 391

Number of variable_names extracted:  3
Generating population391...
	 0  --most gap 0.047707558
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  98%|█████████▊| 392/400 [1:58:04<00:27,  3.40s/it]03/05/2025 16:50:25 - INFO - __main__ -   测试:392

03/05/2025 16:53:24 - INFO - __main__ -   Success rate: 97.22%

03/05/2025 16:53:24 - INFO - __main__ -   Successful items count: 245

03/05/2025 16:53:24 - INFO - __main__ -   Total count: 252

03/05/2025 16:53:24 - INFO - __main__ -   Index: 392

Number of variable_names extracted:  6
Generating population392...
	 0  --most gap 0.00024342537
	 1  --most gap 0.004823625
	 2  --most gap 0.004823625
	 3  --most gap 0.0077696443
	 4  --most gap 0.0077696443
	 5  --most gap 0.009647906
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples:  98%|█████████▊| 393/400 [2:01:03<05:39, 48.52s/it]03/05/2025 16:53:24 - INFO - __main__ -   测试:393

03/05/2025 16:53:53 - INFO - __main__ -   Success rate: 97.23%

03/05/2025 16:53:53 - INFO - __main__ -   Successful items count: 246

03/05/2025 16:53:53 - INFO - __main__ -   Total count: 253

03/05/2025 16:53:53 - INFO - __main__ -   Index: 393

Number of variable_names extracted:  19
Generating population393...
init SUCCESS!
Processing examples:  98%|█████████▊| 394/400 [2:01:32<04:19, 43.26s/it]03/05/2025 16:53:53 - INFO - __main__ -   测试:394

03/05/2025 16:53:53 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples:  99%|█████████▉| 395/400 [2:01:32<02:36, 31.29s/it]03/05/2025 16:53:53 - INFO - __main__ -   测试:395

03/05/2025 16:55:19 - INFO - __main__ -   Success rate: 97.24%

03/05/2025 16:55:19 - INFO - __main__ -   Successful items count: 247

03/05/2025 16:55:19 - INFO - __main__ -   Total count: 254

03/05/2025 16:55:19 - INFO - __main__ -   Index: 395

Number of variable_names extracted:  31
Generating population395...
init SUCCESS!
Processing examples:  99%|█████████▉| 396/400 [2:02:58<03:07, 46.82s/it]03/05/2025 16:55:19 - INFO - __main__ -   测试:396

03/05/2025 16:55:21 - INFO - __main__ -   Success rate: 97.25%

03/05/2025 16:55:21 - INFO - __main__ -   Successful items count: 248

03/05/2025 16:55:21 - INFO - __main__ -   Total count: 255

03/05/2025 16:55:21 - INFO - __main__ -   Index: 396

Number of variable_names extracted:  9
Generating population396...
init SUCCESS!
Processing examples:  99%|█████████▉| 397/400 [2:03:01<01:42, 34.08s/it]03/05/2025 16:55:21 - INFO - __main__ -   测试:397

03/05/2025 16:55:25 - INFO - __main__ -   Success rate: 97.27%

03/05/2025 16:55:25 - INFO - __main__ -   Successful items count: 249

03/05/2025 16:55:25 - INFO - __main__ -   Total count: 256

03/05/2025 16:55:25 - INFO - __main__ -   Index: 397

Number of variable_names extracted:  7
Generating population397...
init SUCCESS!
Processing examples: 100%|█████████▉| 398/400 [2:03:05<00:50, 25.26s/it]03/05/2025 16:55:25 - INFO - __main__ -   测试:398

03/05/2025 16:55:32 - INFO - __main__ -   Success rate: 97.28%

03/05/2025 16:55:32 - INFO - __main__ -   Successful items count: 250

03/05/2025 16:55:32 - INFO - __main__ -   Total count: 257

03/05/2025 16:55:32 - INFO - __main__ -   Index: 398

Number of variable_names extracted:  4
Generating population398...
	 0  --most gap 0.00196594
select_best_replacement SUCCESS!
update SUCCESS!
Processing examples: 100%|█████████▉| 399/400 [2:03:11<00:19, 19.83s/it]03/05/2025 16:55:32 - INFO - __main__ -   测试:399

03/05/2025 16:55:32 - INFO - __main__ -   Attack failed!

The original code is misclassified.
Processing examples: 100%|██████████| 400/400 [2:03:12<00:00, 18.48s/it]
Average diversity max:  210.96
Average diversity min:  131.85
ALL examples'average drop:  0.87
ALL examples'average query_times:  16.45
ALL examples time cost:  123.2 min
Average CodeBLEU score max: 1.3588
Average CodeBLEU score min: 0.8493
