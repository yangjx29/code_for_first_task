/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/../code/run.py:186: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/test.py:110: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).

 cached_features_file:  ../dataset/codet5_cached_test_subs_gan_0_400
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]03/22/2025 18:39:20 - INFO - __main__ -   测试:0

Passing a tuple of `past_key_values` is deprecated and will be removed in Transformers v4.48.0. You should pass an instance of `EncoderDecoderCache` instead, e.g. `past_key_values=EncoderDecoderCache.from_legacy_cache(past_key_values)`.
03/22/2025 18:39:27 - INFO - __main__ -   Success rate: 100.00%

03/22/2025 18:39:27 - INFO - __main__ -   Successful items count: 1

03/22/2025 18:39:27 - INFO - __main__ -   Total count: 1

03/22/2025 18:39:27 - INFO - __main__ -   Index: 0

Number of variable_names extracted:  9
Generating population0...
init SUCCESS!
Query times in this attack:  2
All Query times:  2
Processing examples:   0%|          | 1/400 [00:07<47:44,  7.18s/it]03/22/2025 18:39:27 - INFO - __main__ -   测试:1

03/22/2025 18:39:38 - INFO - __main__ -   Success rate: 100.00%

03/22/2025 18:39:38 - INFO - __main__ -   Successful items count: 2

03/22/2025 18:39:38 - INFO - __main__ -   Total count: 2

03/22/2025 18:39:38 - INFO - __main__ -   Index: 1

Number of variable_names extracted:  7
Generating population1...
init SUCCESS!
Query times in this attack:  3
All Query times:  5
Processing examples:   0%|          | 2/400 [00:17<1:01:46,  9.31s/it]03/22/2025 18:39:38 - INFO - __main__ -   测试:2

03/22/2025 18:39:39 - INFO - __main__ -   Success rate: 100.00%

03/22/2025 18:39:39 - INFO - __main__ -   Successful items count: 3

03/22/2025 18:39:39 - INFO - __main__ -   Total count: 3

03/22/2025 18:39:39 - INFO - __main__ -   Index: 2

Number of variable_names extracted:  8
Generating population2...
init SUCCESS!
Query times in this attack:  4
All Query times:  9
Processing examples:   1%|          | 3/400 [00:19<36:49,  5.56s/it]  03/22/2025 18:39:39 - INFO - __main__ -   测试:3

03/22/2025 18:40:11 - INFO - __main__ -   Success rate: 100.00%

03/22/2025 18:40:11 - INFO - __main__ -   Successful items count: 4

03/22/2025 18:40:11 - INFO - __main__ -   Total count: 4

03/22/2025 18:40:11 - INFO - __main__ -   Index: 3

Number of variable_names extracted:  20
Generating population3...
init SUCCESS!
Query times in this attack:  2
All Query times:  11
Processing examples:   1%|          | 4/400 [00:51<1:45:44, 16.02s/it]03/22/2025 18:40:11 - INFO - __main__ -   测试:4

03/22/2025 18:40:11 - INFO - __main__ -   Attack failed!

03/22/2025 18:40:11 - INFO - __main__ -   测试:5

The original code is misclassified.
Query times in this attack:  1
All Query times:  12
Number of variable_names extracted:  1
Generating population5...
	 0  --most gap 0.020572364
	 1  --most gap 0.020572364
	 2  --most gap 0.020572364
两轮结果未更新,Changing code structure...
Processing examples:   1%|▏         | 5/400 [00:53<1:10:40, 10.73s/it]
Traceback (most recent call last):
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/test.py", line 219, in <module>
    main()
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/test.py", line 165, in main
    is_success, final_code, min_gap_prob, query, diver= attacker.attack(
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/pso.py", line 753, in attack
    adv_code,now_iter = changeCodeStructure(part_elites[top_attack], self.tokenizer_mlm, self.codebert_mlm,self.args,i)
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/pso.py", line 168, in changeCodeStructure
    action = GenRandomChange.getAction()
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/../code/Transform/GenRandomChange.py", line 111, in getAction
    return gen_random_data(filepath,files,)
  File "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/../code/Transform/GenRandomChange.py", line 44, in gen_random_data
    count=int(fileHandle.readline().strip() if fileHandle.readline().strip().isdigit() else 1)
ValueError: invalid literal for int() with base 10: ''
