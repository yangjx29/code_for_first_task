nohup: ignoring input
Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.

 cached_features_file:  /data/yjx/dateset_vul/diversevul/graphcodebert_cached_test_subs_vul
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/../code/run.py:141: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
0it [00:00, ?it/s]4it [00:00, 37.87it/s]9it [00:00, 44.36it/s]20it [00:00, 72.26it/s]28it [00:00, 63.84it/s]35it [00:00, 64.04it/s]44it [00:00, 67.83it/s]55it [00:00, 78.75it/s]63it [00:00, 76.52it/s]73it [00:01, 82.75it/s]82it [00:01, 82.51it/s]91it [00:01, 79.46it/s]100it [00:01, 73.68it/s]108it [00:01, 48.09it/s]125it [00:01, 70.69it/s]134it [00:02, 48.25it/s]146it [00:02, 59.93it/s]157it [00:02, 68.50it/s]169it [00:02, 66.65it/s]181it [00:02, 76.41it/s]197it [00:02, 92.31it/s]208it [00:03, 63.53it/s]217it [00:03, 65.36it/s]226it [00:03, 57.07it/s]239it [00:03, 69.12it/s]256it [00:03, 89.51it/s]267it [00:03, 85.26it/s]282it [00:03, 97.55it/s]293it [00:04, 90.05it/s]309it [00:04, 104.18it/s]321it [00:04, 71.86it/s] 335it [00:04, 81.56it/s]347it [00:04, 88.24it/s]358it [00:04, 91.51it/s]369it [00:05, 68.04it/s]388it [00:05, 91.34it/s]400it [00:05, 93.05it/s]400it [00:05, 75.34it/s]
/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/Comparative_Experiment/test.py:110: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
400 400
Processing examples:   0%|          | 0/400 [00:00<?, ?it/s]03/26/2025 12:45:56 - INFO - __main__ -   测试:0

The original code is misclassified.
Query times in this attack:  1
All Query times:  1
03/26/2025 12:45:56 - INFO - __main__ -   Attack failed!

Processing examples:   0%|          | 1/400 [00:00<02:03,  3.22it/s]03/26/2025 12:45:56 - INFO - __main__ -   测试:1

Number of variable_names extracted:  28
Generating population1...
init SUCCESS!
Query times in this attack:  10
All Query times:  11
03/26/2025 12:47:56 - INFO - __main__ -   Success rate: 100.00%

03/26/2025 12:47:56 - INFO - __main__ -   Successful items count: 1

03/26/2025 12:47:56 - INFO - __main__ -   Total count: 1

03/26/2025 12:47:56 - INFO - __main__ -   Index: 1

Processing examples:   0%|          | 2/400 [02:00<7:50:57, 71.00s/it]03/26/2025 12:47:56 - INFO - __main__ -   测试:2

The original code is misclassified.
Query times in this attack:  1
All Query times:  12
03/26/2025 12:47:57 - INFO - __main__ -   Attack failed!

03/26/2025 12:47:57 - INFO - __main__ -   测试:3

The original code is misclassified.
Query times in this attack:  1
All Query times:  13
03/26/2025 12:47:57 - INFO - __main__ -   Attack failed!

Processing examples:   1%|          | 4/400 [02:00<2:55:06, 26.53s/it]03/26/2025 12:47:57 - INFO - __main__ -   测试:4

Number of variable_names extracted:  5
/data/yjx/cache/conda/envs/week1/lib/python3.9/site-packages/scipy/spatial/distance.py:647: RuntimeWarning: invalid value encountered in divide
  dist = 1.0 - uv / math.sqrt(uu * vv)
Generating population4...
init SUCCESS!
Query times in this attack:  3
All Query times:  16
03/26/2025 12:47:57 - INFO - __main__ -   Success rate: 100.00%

03/26/2025 12:47:57 - INFO - __main__ -   Successful items count: 2

03/26/2025 12:47:57 - INFO - __main__ -   Total count: 2

03/26/2025 12:47:57 - INFO - __main__ -   Index: 4

Processing examples:   1%|▏         | 5/400 [02:01<2:01:33, 18.46s/it]03/26/2025 12:47:57 - INFO - __main__ -   测试:5

Number of variable_names extracted:  17
Generating population5...
init SUCCESS!
Query times in this attack:  13
All Query times:  29
03/26/2025 12:51:38 - INFO - __main__ -   Success rate: 100.00%

03/26/2025 12:51:38 - INFO - __main__ -   Successful items count: 3

03/26/2025 12:51:38 - INFO - __main__ -   Total count: 3

03/26/2025 12:51:38 - INFO - __main__ -   Index: 5

Processing examples:   2%|▏         | 6/400 [05:42<8:49:09, 80.58s/it]03/26/2025 12:51:38 - INFO - __main__ -   测试:6

The original code is misclassified.
Query times in this attack:  1
All Query times:  30
03/26/2025 12:51:38 - INFO - __main__ -   Attack failed!

03/26/2025 12:51:38 - INFO - __main__ -   测试:7

Number of variable_names extracted:  6
Generating population7...
	 0  --most gap 0.0049470663
	 1  --most gap 0.012113631
	 2  --most gap 0.016539454
	 3  --most gap 0.016539454
	 4  --most gap 0.016539454
	 5  --most gap 0.018239379
	 6  --most gap 0.018239379
	 7  --most gap 0.018239379
	 8  --most gap 0.018239379
两轮结果未更新,Changing code structure...
	 9  --most gap 0.027779758
	 10  --most gap 0.027779758
	 11  --most gap 0.027779758
	 12  --most gap 0.027779758
两轮结果未更新,Changing code structure...
	 13  --most gap 0.027779758
	 14  --most gap 0.027779758
	 15  --most gap 0.027779758
两轮结果未更新,Changing code structure...
	 16  --most gap 0.027779758
	 17  --most gap 0.027779758
	 18  --most gap 0.027779758
两轮结果未更新,Changing code structure...
	 19  --most gap 0.027779758
Changing code structure...
changeCodeStructure SUCCESS!
Query times in this attack:  15955
All Query times:  15985
03/26/2025 12:58:36 - INFO - __main__ -   Success rate: 100.00%

03/26/2025 12:58:36 - INFO - __main__ -   Successful items count: 4

03/26/2025 12:58:36 - INFO - __main__ -   Total count: 4

03/26/2025 12:58:36 - INFO - __main__ -   Index: 7

Processing examples:   2%|▏         | 8/400 [12:39<15:17:13, 140.39s/it]03/26/2025 12:58:36 - INFO - __main__ -   测试:8

Number of variable_names extracted:  9
Generating population8...
	 0  --most gap 0.013849795
select_best_replacement SUCCESS!
update SUCCESS!
Query times in this attack:  337
All Query times:  16322
03/26/2025 12:58:47 - INFO - __main__ -   Success rate: 100.00%

03/26/2025 12:58:47 - INFO - __main__ -   Successful items count: 5

03/26/2025 12:58:47 - INFO - __main__ -   Total count: 5

03/26/2025 12:58:47 - INFO - __main__ -   Index: 8

Processing examples:   2%|▏         | 9/400 [12:51<11:44:21, 108.08s/it]03/26/2025 12:58:47 - INFO - __main__ -   测试:9

Number of variable_names extracted:  5
Generating population9...
init SUCCESS!
Query times in this attack:  2
All Query times:  16324
03/26/2025 12:58:47 - INFO - __main__ -   Success rate: 100.00%

03/26/2025 12:58:47 - INFO - __main__ -   Successful items count: 6

03/26/2025 12:58:47 - INFO - __main__ -   Total count: 6

03/26/2025 12:58:47 - INFO - __main__ -   Index: 9

Processing examples:   2%|▎         | 10/400 [12:51<8:38:30, 79.77s/it] 03/26/2025 12:58:47 - INFO - __main__ -   测试:10

The original code is misclassified.
Query times in this attack:  1
All Query times:  16325
03/26/2025 12:58:47 - INFO - __main__ -   Attack failed!

Processing examples:   3%|▎         | 11/400 [12:51<6:16:06, 58.01s/it]03/26/2025 12:58:47 - INFO - __main__ -   测试:11

The original code is misclassified.
Query times in this attack:  1
All Query times:  16326
03/26/2025 12:58:48 - INFO - __main__ -   Attack failed!

03/26/2025 12:58:48 - INFO - __main__ -   测试:12

The original code is misclassified.
Query times in this attack:  1
All Query times:  16327
03/26/2025 12:58:48 - INFO - __main__ -   Attack failed!

Processing examples:   3%|▎         | 13/400 [12:51<3:30:18, 32.61s/it]03/26/2025 12:58:48 - INFO - __main__ -   测试:13

Number of variable_names extracted:  1
Generating population13...
	 0  --most gap 1.1920929e-07
select_best_replacement SUCCESS!
update SUCCESS!
Query times in this attack:  112
All Query times:  16439
03/26/2025 12:58:51 - INFO - __main__ -   Success rate: 100.00%

03/26/2025 12:58:51 - INFO - __main__ -   Successful items count: 7

03/26/2025 12:58:51 - INFO - __main__ -   Total count: 7

03/26/2025 12:58:51 - INFO - __main__ -   Index: 13

Processing examples:   4%|▎         | 14/400 [12:55<2:45:34, 25.74s/it]03/26/2025 12:58:51 - INFO - __main__ -   测试:14

The original code is misclassified.
Query times in this attack:  1
All Query times:  16440
03/26/2025 12:58:51 - INFO - __main__ -   Attack failed!

03/26/2025 12:58:51 - INFO - __main__ -   测试:15

The original code is misclassified.
Query times in this attack:  1
All Query times:  16441
03/26/2025 12:58:52 - INFO - __main__ -   Attack failed!

Processing examples:   4%|▍         | 16/400 [12:55<1:38:08, 15.33s/it]03/26/2025 12:58:52 - INFO - __main__ -   测试:16

The original code is misclassified.
Query times in this attack:  1
All Query times:  16442
03/26/2025 12:58:52 - INFO - __main__ -   Attack failed!

03/26/2025 12:58:52 - INFO - __main__ -   测试:17

The original code is misclassified.
Query times in this attack:  1
All Query times:  16443
03/26/2025 12:58:52 - INFO - __main__ -   Attack failed!

Processing examples:   4%|▍         | 18/400 [12:56<1:02:00,  9.74s/it]03/26/2025 12:58:52 - INFO - __main__ -   测试:18

Number of variable_names extracted:  16
Generating population18...
init SUCCESS!
Query times in this attack:  2
All Query times:  16445
03/26/2025 12:58:59 - INFO - __main__ -   Success rate: 100.00%

03/26/2025 12:58:59 - INFO - __main__ -   Successful items count: 8

03/26/2025 12:58:59 - INFO - __main__ -   Total count: 8

03/26/2025 12:58:59 - INFO - __main__ -   Index: 18

03/26/2025 12:58:59 - INFO - __main__ -   测试:19

Number of variable_names extracted:  10
Generating population19...
	 0  --most gap 0.027147532
Processing examples:   4%|▍         | 18/400 [13:12<1:02:00,  9.74s/it]	 1  --most gap 0.05760348
	 2  --most gap 0.05760348
	 3  --most gap 0.065228105
	 4  --most gap 0.065228105
	 5  --most gap 0.080117404
	 6  --most gap 0.08075726
