% Txl v10.8 (7.5.20) (c) 1988-2020 Queen's University at Kingston
% statements 
% 
% 这个文件主要实现if else 和 if elseif 之间的转换，这两个要连起来考虑因为这两个是等价转换
% 对同一个语句只能进行一种操作，有可能只存在一个

include "java.grm"
% include "extract_id.Txl" % Commented out as it’s not provided; assume it’s not needed

% ----------------------------------------------------------------
% 这里为了转换的需要重新定义了部分结构
% 在Java中，添加';'以消除潜在的语法冲突

redefine else_sub_statement
    ... 
    | [repeat declaration_or_statement] % Java’s block content equivalent
end redefine

% ----------------------------------------------------------------

%----------------------------------------------------------------
% 主函数的开始
function main
    replace [package_declaration]
        P [package_declaration]
    export RandomPathIfElseIf [stringlit]
        "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/CountResult/5IfElseIf.random"
    export RandomPathIfElse [stringlit]
        "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/CountResult/6IfElse.random"
    by 
        P [changeProgram] 
end function

% 主函数结束
% ---------------------------------------------------------------

% ---------------------------------------------------------------
% 处理if-else 和 if-else-if 之间的转换
function changeProgram
    replace [package_declaration]
        CSB [package_declaration]
    construct S [repeat if_statement]
        _ [^ CSB]
    import RandomPathIfElseIf [stringlit]
    export RandomChangeIfElseIf [repeat number]
        _ [readRandomFile RandomPathIfElseIf] 
    import RandomPathIfElse [stringlit]
    export RandomChangeIfElse [repeat number]
        _ [readRandomFile RandomPathIfElse] 
    export CountIfElseIf [number]
        0
    export CountIfElse [number]
        0
    construct NewS [repeat statement]
        _ [changeIfStatement each S]
    construct NS [repeat statement]
        _ [fromIfToStatement each S]
    by
        CSB [replaceStatement each NS NewS]
end function

rule readRandomFile FileName [stringlit]
    replace [repeat number]
        RN [repeat number]
    construct OptNextNumber [opt number]
        _ [fget FileName]
    deconstruct OptNextNumber
        NextNumber [number]
    by 
        RN [. NextNumber]
end rule

function replaceStatement S [statement] NS [statement]
    replace *[statement]
        S
    by
        NS
end function

% 处理结束
% ----------------------------------------------------------------

% ----------------------------------------------------------------
% 处理整体的if语句转换
function fromIfToStatement S [if_statement]
    replace [repeat statement]
        RS [repeat statement]
    construct NS [statement]
        S
    by
        RS [. NS]
end function

function changeIfStatement If [if_statement]
    replace [repeat statement]
        RS [repeat statement]
    construct IfElseIf [number]
        0
    construct S [statement]
        If
    construct NS [statement]
        S [changeIfElsetoIfElseIf]
          [changeIfElseIftoIfElse]
    by 
        RS [. NS]
end function 
% if语句转换结束
% ----------------------------------------------------------------

% ----------------------------------------------------------------
% 从 if-else 转换到 if-else-if
function changeIfElsetoIfElseIf
    replace [statement]
        If [if_statement]
    deconstruct If
        'if '( C [condition] ') S [statement] OE [opt else_clause]
    construct NewOE [opt else_clause]
        OE [changeIfElseStatement]
    construct NewIf [if_statement]
        'if '( C ') S NewOE
    export IfElseIf [number]
        1
    by 
        NewIf  
end function

function changeIfElseStatement
    replace [opt else_clause] 
        E [opt else_clause]
    deconstruct E 
        'else EIf [statement]
    deconstruct EIf
        '{ RS [repeat declaration_or_statement] '}
    deconstruct RS
        If [if_statement] Rest [repeat declaration_or_statement]
    deconstruct If
        'if '( C [condition] ') S [statement] OE [opt else_clause]
    construct RES [repeat else_clause]
        _ [createRepeatElseStatement OE]
    construct NewRES [repeat else_clause]
        _ [createNewRES RES]
    construct NRES [repeat else_clause]
        _ [. RES] [. NewRES]
    deconstruct NRES
        NE [else_clause]
    construct NewIf [if_statement]
        'if '( C ') S NE
    construct NewRS [repeat declaration_or_statement]
        NewIf Rest
    construct NewE [opt else_clause]
        'else '{ NewRS '}
    import CountIfElse [number]
    export CountIfElse
        CountIfElse [+ 1]
    import RandomChangeIfElse [repeat number]
    construct RChanged [repeat number]
        RandomChangeIfElse [select CountIfElse CountIfElse]
    deconstruct RChanged
        Changed [number]
    construct OptE [opt else_clause]
        E [isNeedChanged NewE Changed]
    by 
        OptE
end function

function createNewRES RES [repeat else_clause]
    replace [repeat else_clause]
        NRES [repeat else_clause]
    construct LenRES [number]
        _ [length RES]
    where 
        LenRES [= 0]
    construct Else [else_clause]
        'else ';
    by 
        NRES [. Else]
end function

function createRepeatElseStatement OE [opt else_clause]
    replace [repeat else_clause]
        RES [repeat else_clause]
    deconstruct OE
        E [else_clause]
    by
        RES [. E]
end function  
% if-else 转换到 if-else-if 完成
% ----------------------------------------------------------------

% ----------------------------------------------------------------
% 从 if-else-if 转换到 if-else
function changeIfElseIftoIfElse
    replace [statement]
        If [if_statement]
    deconstruct If
        'if '( C [condition] ') S [statement] OE [opt else_clause]
    construct NewOE [opt else_clause]
        OE [changeElseIfStatement]
    construct NewIf [if_statement]
        'if '( C ') S NewOE
    by 
        NewIf 
end function

function changeElseIfStatement
    replace [opt else_clause]    
        E [opt else_clause]
    deconstruct E
        'else E_If [if_statement]
    construct NewE [statement]
        '{ E_If '}
    construct NewEIf [opt else_clause]
        'else NewE
    import CountIfElseIf [number]
    export CountIfElseIf
        CountIfElseIf [+ 1]
    import RandomChangeIfElseIf [repeat number]
    construct RRandomNumber [repeat number]
        RandomChangeIfElseIf [select CountIfElseIf CountIfElseIf]
    deconstruct RRandomNumber
        RandomNumber [number]
    construct OptE [opt else_clause]
        E [isNeedChanged NewEIf RandomNumber]
    by
        OptE
end function

function isNeedChanged NewEIf [opt else_clause] Change [number]
    replace [opt else_clause]
        OElse [opt else_clause]
    where
        Change [= 1]
    by
        NewEIf
end function 
% if-else-if 到 if-else 转换完成
% ----------------------------------------------------------------