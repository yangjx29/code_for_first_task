% Txl v10.8 (7.5.20) (c) 1988-2020 Queen's University at Kingston
% statements 
% 
% version 20200924
% 这个函数主要实现修改do while循环

include "java.grm"

% ----------------------------------------------------------------
% 这里为了转换的需要重新定义了部分结构
% 在Java中，添加';'以消除潜在的语法冲突

% 重新定义while结构
redefine while_statement
    ... 
    | '{{ [NL][IN] [repeat declaration_or_statement+] 'while '( [condition] ') [statement] [EX] [NL] '}} % For do-while to while conversion
end redefine

% ----------------------------------------------------------------

%----------------------------------------------------------------
% 主函数的开始
function main 
    replace [package_declaration]
        P [package_declaration]
    export RandomPath [stringlit]
        "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/CountResult/4DoWhile.random"
    by 
        P [changeProgram] 
end function

% 主函数结束
% ---------------------------------------------------------------

% ----------------------------------------------------------------
% 处理从do...while循环到while循环的转换
function changeProgram 
    replace [package_declaration]
        CSB [package_declaration]
    construct DoWhile [repeat do_statement]
        _ [^ CSB]
    import RandomPath [stringlit]
    construct RandomChange [repeat number]
        _ [readRandomFile RandomPath] 
    construct NDoWhile [repeat statement]
        _ [changeDoWhileStatement each DoWhile RandomChange]
    construct NS [repeat statement]
        _ [fromDoToStatement each DoWhile]
    by
        CSB [replaceStatement each NS NDoWhile] 
end function

rule readRandomFile FileName [stringlit]
    replace [repeat number+]
        RN [repeat number+]
    construct OptNextNumber [opt number]
        _ [fget FileName]
    deconstruct OptNextNumber
        NextNumber [number]
    by 
        RN [. NextNumber]
end rule

function replaceStatement S [statement] NS [statement]
    replace *[statement]
        S
    by
        NS
end function

function changeDoWhileStatement DS [do_statement] Change [number]
    replace [repeat statement]
        RS [repeat statement]
    construct ST [statement]
        DS    
    construct NST [statement]
        ST [newDoStatement]
    construct Changed [statement]
        ST [isNeedChanged NST Change]
    by 
        RS [. Changed]
end function

function isNeedChanged NS [statement] Change [number]
    replace [statement]
        St [statement]
    where
        Change [= 1]
    by
        NS
end function  

function newDoStatement
    replace [statement]
        DoWhile [statement]
    deconstruct DoWhile
        DS [do_statement]
    deconstruct DS
        'do S [statement] 'while '( C [condition] ') ';
    deconstruct S
        '{ RS [repeat declaration_or_statement+] '}
    construct While [while_statement]
        '{{ RS 'while '( C ') S '}}
    by 
        While
end function

function fromDoToStatement Do [do_statement]
    replace [repeat statement]  
        RS [repeat statement]
    construct NS [statement]
        Do
    by 
        RS [. NS]
end function 

% 从do...while循环到while循环的转换完成
% ----------------------------------------------------------------