% Txl v10.8 (7.5.20) (c) 1988-2020 Queen's University at Kingston
% statements 
% 
% version 20200924
% 这个文件的主要功能是实现代码statement, expression等自身发生的变化

include "java.grm"

% ----------------------------------------------------------------
% 这里为了转换的需要重新定义了部分结构
% Java中调整numeric_literal以支持常量修改

redefine numeric_literal
    ... 
    | '( [number] '+ [number] ') % For integer constants
    | '( [number] '- [number] ')
    | '( [floatnumber] '+ [floatnumber] ') % For floating-point constants
    | '( [floatnumber] '- [floatnumber] ')
end redefine

% ----------------------------------------------------------------

%----------------------------------------------------------------
% 主函数的开始
function main
    replace [package_declaration]
        P [package_declaration]
    export RandomPath [stringlit]
        "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/CountResult/11Constant.random"
    by 
        P [changeConstant] 
end function

% 主函数结束
% ---------------------------------------------------------------

% ---------------------------------------------------------------
% 完成对常量的修改操作
function changeConstant
    replace [package_declaration]
        St [package_declaration]
    import RandomPath [stringlit]
    export RandomChange [repeat number]
        _ [readRandomFile RandomPath] 
    export CountConstant [number]
        0
    by
        St [changeIntegerConstant] [changeFloatConstant]
end function

rule readRandomFile FileName [stringlit]
    replace [repeat number]
        RN [repeat number]
    construct OptNextNumber [opt number]
        _ [fget FileName]
    deconstruct OptNextNumber
        NextNumber [number]
    by 
        RN [. NextNumber]
end rule

% ----------------------------------------------------------------
% 修改浮点型常量
function changeFloatConstant
    replace [package_declaration]
        St [package_declaration]
    construct FloatConstant [repeat numeric_literal]
        _ [^ St]
    construct NewFloatConstant [repeat numeric_literal]
        _ [createNewFloatConstant each FloatConstant]
    by  
        St [replaceNumericLiteral each FloatConstant NewFloatConstant]
end function

function replaceNumericLiteral NL [numeric_literal] NNL [numeric_literal]
    replace *[numeric_literal]
        NL
    by
        NNL
end function 

function createNewFloatConstant NL [numeric_literal]
    replace [repeat numeric_literal]
        RNL [repeat numeric_literal]
    construct NewNL [numeric_literal]
        NL [createNewFC]
    by 
        RNL [. NewNL]
end function

function createNewFC
    replace [numeric_literal]
        NL [numeric_literal]
    deconstruct NL
        F [floatnumber]
    construct RN [repeat floatnumber]
        _ [. F]
    construct NewRandomNumbers [repeat floatnumber]
        RN [write "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/Txl/number.txt"]
           [system "python /data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/Txl/RandomNumberFloat.py"]
           [read "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/Txl/number.txt"]
           [system "rm -rf /data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/Txl/number.txt"]
    construct OneNumber [repeat floatnumber]
        NewRandomNumbers [select 1 1]
    construct TwoNumber [repeat floatnumber]
        NewRandomNumbers [select 2 2]
    deconstruct OneNumber
        One [floatnumber]
    deconstruct TwoNumber
        Two [floatnumber]
    construct NewRandomFC [numeric_literal]
        '( One '- Two ')
    import CountConstant [number]
    export CountConstant 
        CountConstant [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountConstant CountConstant]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedFC [numeric_literal]
        NL [isNddeChanged NewRandomFC Changed]
    by 
        ChangedFC
end function

function isNddeChanged NewNL [numeric_literal] Changed [number]
    replace [numeric_literal]
        NL [numeric_literal]
    where
        Changed [= 1]
    by
        NewNL 
end function

% 修改整型常量
function changeIntegerConstant
    replace [package_declaration]
        St [package_declaration]
    construct IntConstant [repeat numeric_literal]
        _ [^ St]
    construct NewIntConstant [repeat numeric_literal]
        _ [createNewIntConstant each IntConstant]
    by  
        St [replaceNumericLiteral each IntConstant NewIntConstant]
end function

function createNewIntConstant NL [numeric_literal]
    replace [repeat numeric_literal]
        RNL [repeat numeric_literal]
    construct NewNL [numeric_literal]
        NL [createNewIC]
    by 
        RNL [. NewNL]
end function

function createNewIC
    replace [numeric_literal]
        NL [numeric_literal]
    deconstruct NL
        ICN [number]  
    construct RN [repeat number]
        _ [. ICN]
    construct NewRandomNumbers [repeat number]
        RN [write "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/Txl/number.txt"]
           [system "python /data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/Txl/RandomNumberInt.py"]
           [read "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/Txl/number.txt"]
           [system "rm -rf /data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/Txl/number.txt"]
    construct OneNumber [repeat number]
        NewRandomNumbers [select 1 1]
    construct TwoNumber [repeat number]
        NewRandomNumbers [select 2 2]
    deconstruct OneNumber
        One [number]
    deconstruct TwoNumber
        Two [number]
    construct NewRandomIC [numeric_literal]
        '( One '- Two ')
    import CountConstant [number]
    export CountConstant 
        CountConstant [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountConstant CountConstant]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedIC [numeric_literal]
        NL [isNddeChanged NewRandomIC Changed]
    by 
        ChangedIC
end function
% 常量修改操作完成
% ----------------------------------------------------------------