% Txl v10.8 (7.5.20) (c) 1988-2020 Queen's University at Kingston
% statements 
% 
% version 20200924
% 这里主要是完成自操作的修改

include "java.grm"

%----------------------------------------------------------------
% 主函数的开始
function main
    replace [package_declaration]
        P [package_declaration]
    export RandomPath [stringlit]
        "/data/yjx/code_for_first_task/PSOWithcoda/VulnerabilityPrediction/code/CountResult/9SelfOperator.random"
    by 
        P [changeProgram] 
end function

% 主函数结束
% ---------------------------------------------------------------

% ---------------------------------------------------------------
% 处理自增自减运算的变换
function changeProgram
    replace [package_declaration]
        St [package_declaration]
    construct IOE [repeat expression]
        _ [^ St]
    import RandomPath [stringlit]
    export RandomChange [repeat number]
        _ [readRandomFile RandomPath] 
    export CountSelfIncrement [number]
        0
    construct NewIOE [repeat expression] 
        _ [changeExpressionSelfOperator each IOE]
    construct NewSt [package_declaration]
        St [replaceSelfOperatorExpression each IOE NewIOE]
    construct IOES [repeat expression_statement]
        _ [^ St]
    construct NewIOES [repeat expression_statement]
        _ [changeExpressionStatementSelfOperator each IOES]
    by 
        NewSt [replaceExpressionStatement each IOES NewIOES]
end function

rule readRandomFile FileName [stringlit]
    replace [repeat number]
        RN [repeat number]
    construct OptNextNumber [opt number]
        _ [fget FileName]
    deconstruct OptNextNumber
        NextNumber [number]
    by 
        RN [. NextNumber]
end rule

% ----------------------------------------------------------------
% 修改expression中的自增自减运算
function replaceSelfOperatorExpression E [expression] NE [expression]
    replace *[expression]
        E
    by 
        NE
end function

function changeExpressionSelfOperator SOper [expression]
    replace [repeat expression]
        RPE [repeat expression]
    construct NewSOper [expression]
        SOper [changeSOperPlus] [changeSOperSub] [changeSOperPlusBefore] [changeSOperSubBefore]
    by 
        RPE [. NewSOper]
end function

function changeSOperPlusBefore
    replace [expression]
        E [expression]
    deconstruct E
        PIDO [pre_inc_dec] PE [postfix_expression]
    deconstruct PIDO
        '++
    construct NewE [expression]
        PE '= PE '+ 1
    import CountSelfIncrement [number]
    export CountSelfIncrement
        CountSelfIncrement [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountSelfIncrement CountSelfIncrement]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedSelfOperator [expression]
        E [isNeedChanged NewE Changed]
    by 
        ChangedSelfOperator
end function 

function isNeedChanged NE [expression] Changed [number]
    replace [expression]
        E [expression]
    where 
        Changed [= 1]
    by
        NE
end function

function changeSOperSubBefore
    replace [expression]
        E [expression]
    deconstruct E
        PIDO [pre_inc_dec] PE [postfix_expression]
    deconstruct PIDO
        '--
    construct NewE [expression]
        PE '= PE '- 1
    import CountSelfIncrement [number]
    export CountSelfIncrement
        CountSelfIncrement [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountSelfIncrement CountSelfIncrement]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedSelfOperator [expression]
        E [isNeedChanged NewE Changed]
    by 
        ChangedSelfOperator
end function 

function changeSOperPlus
    replace [expression]
        E [expression]
    deconstruct E
        PE [primary] RPE [repeat post_inc_dec]
    deconstruct RPE
        '++
    construct NewE [expression]
        PE '= PE '+ 1
    import CountSelfIncrement [number]
    export CountSelfIncrement
        CountSelfIncrement [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountSelfIncrement CountSelfIncrement]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedSelfOperator [expression]
        E [isNeedChanged NewE Changed]
    by 
        ChangedSelfOperator
end function 

function changeSOperSub
    replace [expression]
        E [expression]
    deconstruct E
        PE [primary] RPE [repeat post_inc_dec]
    deconstruct RPE
        '--
    construct NewE [expression]
        PE '= PE '- 1
    import CountSelfIncrement [number]
    export CountSelfIncrement
        CountSelfIncrement [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountSelfIncrement CountSelfIncrement]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedSelfOperator [expression]
        E [isNeedChanged NewE Changed]
    by 
        ChangedSelfOperator
end function 

% --------------------------------------------------------------
% 修改expression_statement中的自增自减运算
function replaceExpressionStatement E [expression_statement] NE [expression_statement]
    replace *[expression_statement]
        E
    by 
        NE
end function

function changeExpressionStatementSelfOperator SOper [expression_statement]
    replace [repeat expression_statement]
        RPE [repeat expression_statement]
    construct NewSOper [expression_statement]
        SOper [changeESOperPlus] [changeESOperSub] 
              [changeESOperSubBefore] [changeESOperPlusBefore]
    by 
        RPE [. NewSOper]
end function

function changeESOperPlusBefore
    replace [expression_statement]
        E [expression_statement]
    deconstruct E
        PIDO [pre_inc_dec] PE [postfix_expression] '; % Java includes semicolon
    deconstruct PIDO
        '++
    construct NewE [expression_statement]
        PE '= PE '+ 1 ';
    import CountSelfIncrement [number]
    export CountSelfIncrement
        CountSelfIncrement [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountSelfIncrement CountSelfIncrement]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedSelfOperator [expression_statement]
        E [isStNeedChanged NewE Changed]
    by 
        ChangedSelfOperator
end function 

function isStNeedChanged NE [expression_statement] Changed [number]
    replace [expression_statement]
        E [expression_statement]
    where 
        Changed [= 1]
    by
        NE
end function

function changeESOperSubBefore
    replace [expression_statement]
        E [expression_statement]
    deconstruct E
        PIDO [pre_inc_dec] PE [postfix_expression] ';
    deconstruct PIDO
        '--
    construct NewE [expression_statement]
        PE '= PE '- 1 ';
    import CountSelfIncrement [number]
    export CountSelfIncrement
        CountSelfIncrement [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountSelfIncrement CountSelfIncrement]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedSelfOperator [expression_statement]
        E [isStNeedChanged NewE Changed]
    by 
        ChangedSelfOperator
end function 

function changeESOperPlus
    replace [expression_statement]
        E [expression_statement]
    deconstruct E
        PE [primary] RPE [repeat post_inc_dec] ';
    deconstruct RPE
        '++
    construct NewE [expression_statement]
        PE '= PE '+ 1 ';
    import CountSelfIncrement [number]
    export CountSelfIncrement
        CountSelfIncrement [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountSelfIncrement CountSelfIncrement]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedSelfOperator [expression_statement]
        E [isStNeedChanged NewE Changed]
    by 
        ChangedSelfOperator
end function 

function changeESOperSub
    replace [expression_statement]
        E [expression_statement]
    deconstruct E
        PE [primary] RPE [repeat post_inc_dec] ';
    deconstruct RPE
        '--
    construct NewE [expression_statement]
        PE '= PE '- 1 ';
    import CountSelfIncrement [number]
    export CountSelfIncrement
        CountSelfIncrement [+ 1]
    import RandomChange [repeat number]
    construct ChangeNum [repeat number]
        RandomChange [select CountSelfIncrement CountSelfIncrement]
    deconstruct ChangeNum 
        Changed [number]
    construct ChangedSelfOperator [expression_statement]
        E [isStNeedChanged NewE Changed]
    by 
        ChangedSelfOperator
end function 
% 自操作运算的修改完成
% ----------------------------------------------------------------