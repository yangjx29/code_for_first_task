Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
MODEL LOADED!
  0%|          | 0/500 [00:00<?, ?it/s] 64%|██████▍   | 319/500 [00:00<00:00, 3039.72it/s]100%|██████████| 500/500 [00:00<00:00, 2145.69it/s]
ATTACKER BUILT!
/data/yjx/code_for_first_task/week3/natural_attack/CodeXGLUE/Clone-detection-BigCloneBench/code/model.py:47: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  prob=F.softmax(logits)
raw_tokens: ['private', 'String', 'load', '(', 'URL', 'url', ')', '{', 'BufferedReader', 'r', '=', 'null', ';', 'try', '{', 'r', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'StringBuffer', 'buf', '=', 'new', 'StringBuffer', '(', ')', ';', 'while', '(', 'r', '.', 'ready', '(', ')', ')', '{', 'buf', '.', 'append', '(', 'r', '.', 'readLine', '(', ')', ')', '.', 'append', '(', "'');", '}', 'r', '.', 'close', '(', ')', '', ';', 'return', 'buf', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '', '{', 'logger', '.', 'severe', '(', '"', 'Could', 'not', 'load', 'shader', 'program:', '', '"', '+', 'e', ')', ';', 'logger', '.', 'logp', '(', 'Level', '.', 'SEVERE', ',', 'getClass', '(', ')', '.', 'getName', '(', ')', ',', '"', 'load(URL)', '"', ',', '"', 'Exception', '"', ',', 'e', ')', ';', 'return', 'null', ';', '}', '}']
  >>  iter 1, ACC! url => l (0 => 0, 0.99867 => 0.99861) a=1.068
  >>  iter 2, ACC! l => loc (0 => 0, 0.99861 => 0.99861) a=1.033
  >>  iter 3, ACC! loc => i (0 => 0, 0.99861 => 0.99861) a=1.031
  >>  iter 4, ACC! i => source (0 => 0, 0.99861 => 0.99858) a=1.029
  >>  iter 5, ACC! source => impl (0 => 0, 0.99858 => 0.99858) a=1.009
  >>  iter 6, ACC! impl => loader (0 => 0, 0.99858 => 0.99861) a=1.006
  >>  iter 7, ACC! loader => http (0 => 0, 0.99861 => 0.99865) a=1.027
  >>  iter 8, ACC! http => sl (0 => 0, 0.99865 => 0.99865) a=1.060
  >>  iter 9, ACC! sl => zip (0 => 0, 0.99865 => 0.99864) a=1.062
  >>  iter 10, ACC! zip => download (0 => 0, 0.99864 => 0.99862) a=1.034
Example 0 attack result: {'succ': False, 'tokens': '    private String load(URL download) {\n        BufferedReader r = null;\n        try {\n            r = new BufferedReader(new InputStreamReader(download.openStream()));\n            StringBuffer buf = new StringBuffer();\n            while (r.ready()) {\n                buf.append(r.readLine()).append(\'\n\');\n            }\n            r.close();\n            return buf.toString();\n        } catch (IOException e) {\n            logger.severe("Could not load shader program: " + e);\n            logger.logp(Level.SEVERE, getClass().getName(), "load(URL)", "Exception", e);\n            return null;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 128, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 1.6391277e-05, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'download'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 0 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 0.15 min
  curr succ rate = 0.0
Query times in this attack:  295
All Query times:  295
raw_tokens: ['public', 'void', 'go', '(', ')', '{', 'DataOutputStream', 'outStream', '=', 'null', ';', 'try', '{', 'connection', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'connection', '.', 'setDoOutput', '(', 'true', ')', ';', 'connection', '.', 'setDoInput', '(', 'true', ')', ';', 'connection', '.', 'setRequestMethod', '(', '"', 'POST', '"', ')', ';', 'connection', '.', 'setRequestProperty', '(', '"', 'Content-Length', '"', ',', 'new', 'Integer', '(', 'sendData', '.', 'length', '(', ')', ')', '.', 'toString', '(', ')', ')', ';', 'connection', '.', 'setRequestProperty', '(', '"', 'Content-type', '"', ',', '"', 'text/html', '"', ')', ';', 'connection', '.', 'setRequestProperty', '(', '"', 'User-Agent', '"', ',', '"', 'Pago', 'HTTP', 'cartridge', '"', ')', ';', 'outStream', '=', 'new', 'DataOutputStream', '(', 'connection', '.', 'getOutputStream', '(', ')', ')', ';', 'outStream', '.', 'writeBytes', '(', 'sendData', ')', ';', 'System', '.', 'out', '.', 'println', '(', '1', ')', ';', 'InputStream', 'is', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '2', ')', ';', 'inReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'is', ')', ')', ';', 'String', 'result', ';', 'System', '.', 'out', '.', 'println', '(', '3', ')', ';', 'if', '(', '(', 'result', '=', 'inReader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'result', ')', ';', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'ioe', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'outStream', '!=', 'null', ')', 'outStream', '.', 'close', '(', ')', ';', 'if', '(', 'inReader', '!=', 'null', ')', 'inReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Error', 'closing', 'Streams!', '"', ')', ';', 'ioe', '.', 'printStackTrace', '(', ')', ';', '}', 'connection', '.', 'disconnect', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! url => str (0 => 0, 0.99781 => 0.99775) a=1.163
  >>  iter 2, ACC! str => source (0 => 0, 0.99775 => 0.99798) a=1.133
  >>  iter 3, ACC! source => Url (0 => 0, 0.99798 => 0.99809) a=1.260
  >>  iter 4, ACC! Url => request (0 => 0, 0.99809 => 0.99796) a=1.331
  >>  iter 5, ACC! request => sl (0 => 0, 0.99796 => 0.99804) a=1.250
  >>  iter 6, ACC! sl => server (0 => 0, 0.99804 => 0.99802) a=1.298
  >>  iter 7, ACC! server => object (0 => 0, 0.99802 => 0.99805) a=1.286
  >>  iter 8, ACC! object => server (0 => 0, 0.99805 => 0.99802) a=1.303
  >>  iter 9, ACC! server => str (0 => 0, 0.99802 => 0.99775) a=1.286
  >>  iter 10, ACC! str => base (0 => 0, 0.99775 => 0.99800) a=1.133
Example 1 attack result: {'succ': False, 'tokens': '    public void go() {\n        DataOutputStream outStream = null;\n        try {\n            connection = (HttpURLConnection) base.openConnection();\n            connection.setDoOutput(true);\n            connection.setDoInput(true);\n            connection.setRequestMethod("POST");\n            connection.setRequestProperty("Content-Length", new Integer(sendData.length()).toString());\n            connection.setRequestProperty("Content-type", "text/html");\n            connection.setRequestProperty("User-Agent", "Pago HTTP cartridge");\n            outStream = new DataOutputStream(connection.getOutputStream());\n            outStream.writeBytes(sendData);\n            System.out.println(1);\n            InputStream is = connection.getInputStream();\n            System.out.println(2);\n            inReader = new BufferedReader(new InputStreamReader(is));\n            String result;\n            System.out.println(3);\n            if ((result = inReader.readLine()) != null) {\n                System.out.println(result);\n            }\n        } catch (IOException ioe) {\n            ioe.printStackTrace();\n            System.exit(0);\n        } finally {\n            try {\n                if (outStream != null) outStream.close();\n                if (inReader != null) inReader.close();\n            } catch (IOException ioe) {\n                System.err.println("Error closing Streams!");\n                ioe.printStackTrace();\n            }\n            connection.disconnect();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 273, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -0.00025260448, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'url': 'base'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 1 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 0.31 min
  curr succ rate = 0.0
Query times in this attack:  296
All Query times:  591
raw_tokens: ['public', 'boolean', 'check', '(', 'Object', 'credentials', ')', '{', 'String', 'password', '=', '(', 'credentials', 'instanceof', 'String', ')', '?', '(', 'String', ')', 'credentials', ':', 'credentials', '.', 'toString', '(', ')', ';', 'try', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'byte', '[', ']', 'ha1', ';', 'if', '(', 'credentials', 'instanceof', 'Credential', '.', 'MD5', ')', '{', 'ha1', '=', '(', '(', 'Credential', '.', 'MD5', ')', 'credentials', ')', '.', 'getDigest', '(', ')', ';', '}', 'else', '{', 'md', '.', 'update', '(', 'username', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'realm', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'password', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'ha1', '=', 'md', '.', 'digest', '(', ')', ';', '}', 'md', '.', 'reset', '(', ')', ';', 'md', '.', 'update', '(', 'method', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'uri', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'byte', '[', ']', 'ha2', '=', 'md', '.', 'digest', '(', ')', ';', 'md', '.', 'update', '(', 'TypeUtil', '.', 'toString', '(', 'ha1', ',', '16', ')', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'nonce', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'nc', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'cnonce', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'qop', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'TypeUtil', '.', 'toString', '(', 'ha2', ',', '16', ')', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'byte', '[', ']', 'digest', '=', 'md', '.', 'digest', '(', ')', ';', 'return', '(', 'TypeUtil', '.', 'toString', '(', 'digest', ',', '16', ')', '.', 'equalsIgnoreCase', '(', 'response', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'LogSupport', '.', 'EXCEPTION', ',', 'e', ')', ';', '}', 'return', 'false', ';', '}']
  >>  iter 1, ACC! update => load (1 => 1, 0.99976 => 0.99975) a=1.056
  >>  iter 2, ACC! load => date (1 => 1, 0.99975 => 0.99975) a=1.012
  >>  iter 3, ACC! date => grade (1 => 1, 0.99975 => 0.99975) a=1.011
  >>  iter 4, ACC! grade => write (1 => 1, 0.99975 => 0.99976) a=1.012
  >>  iter 5, ACC! write => current (1 => 1, 0.99976 => 0.99975) a=1.053
  >>  iter 6, ACC! current => range (1 => 1, 0.99975 => 0.99975) a=1.016
  >>  iter 7, ACC! range => put (1 => 1, 0.99975 => 0.99975) a=1.018
  >>  iter 8, ACC! put => use (1 => 1, 0.99975 => 0.99975) a=1.047
  >>  iter 9, ACC! use => other (1 => 1, 0.99975 => 0.99975) a=1.016
  >>  iter 10, ACC! other => replace (1 => 1, 0.99975 => 0.99975) a=1.020
Example 2 attack result: {'succ': False, 'tokens': '        public boolean check(Object credentials) {\n            String password = (credentials instanceof String) ? (String) credentials : credentials.toString();\n            try {\n                MessageDigest md = MessageDigest.getInstance("MD5");\n                byte[] ha1;\n                if (credentials instanceof Credential.MD5) {\n                    ha1 = ((Credential.MD5) credentials).getDigest();\n                } else {\n                    md.replace(username.getBytes(StringUtil.__ISO_8859_1));\n                    md.replace((byte) \':\');\n                    md.replace(realm.getBytes(StringUtil.__ISO_8859_1));\n                    md.replace((byte) \':\');\n                    md.replace(password.getBytes(StringUtil.__ISO_8859_1));\n                    ha1 = md.digest();\n                }\n                md.reset();\n                md.replace(method.getBytes(StringUtil.__ISO_8859_1));\n                md.replace((byte) \':\');\n                md.replace(uri.getBytes(StringUtil.__ISO_8859_1));\n                byte[] ha2 = md.digest();\n                md.replace(TypeUtil.toString(ha1, 16).getBytes(StringUtil.__ISO_8859_1));\n                md.replace((byte) \':\');\n                md.replace(nonce.getBytes(StringUtil.__ISO_8859_1));\n                md.replace((byte) \':\');\n                md.replace(nc.getBytes(StringUtil.__ISO_8859_1));\n                md.replace((byte) \':\');\n                md.replace(cnonce.getBytes(StringUtil.__ISO_8859_1));\n                md.replace((byte) \':\');\n                md.replace(qop.getBytes(StringUtil.__ISO_8859_1));\n                md.replace((byte) \':\');\n                md.replace(TypeUtil.toString(ha2, 16).getBytes(StringUtil.__ISO_8859_1));\n                byte[] digest = md.digest();\n                return (TypeUtil.toString(digest, 16).equalsIgnoreCase(response));\n            } catch (Exception e) {\n                log.warn(LogSupport.EXCEPTION, e);\n            }\n            return false;\n        }\n', 'raw_tokens': None, 'prog_length': 399, 'new_pred': 1, 'is_success': -1, 'old_uid': 'update', 'score_info': 1.7101702e-06, 'nb_changed_var': 1, 'nb_changed_pos': 19, 'replace_info': {'update': 'replace'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 2 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 0.47 min
  curr succ rate = 0.0
Query times in this attack:  298
All Query times:  889
raw_tokens: ['public', 'static', 'String', 'hash', '(', 'final', 'String', 'text', ')', '{', 'try', '{', 'MessageDigest', 'md', ';', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'byte', '[', ']', 'sha1hash', '=', 'new', 'byte', '[', '40', ']', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'text', '.', 'length', '(', ')', ')', ';', 'sha1hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'Sha1', '.', 'convertToHex', '(', 'sha1hash', ')', ';', '}', 'catch', '(', 'final', 'Exception', 'e', ')', '{', 'return', 'null', ';', '}', '}']
Example 3 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'args', '.', 'length', '!=', '3', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Usage:', 'HexStrToBin', 'enc/dec', '<infileName>', '<outfilename>', '"', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '{', 'ByteArrayOutputStream', 'os', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'args', '[', '1', ']', ')', ';', 'int', 'len', '=', '0', ';', 'byte', 'buf', '[', ']', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'os', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'in', '.', 'close', '(', ')', ';', 'os', '.', 'close', '(', ')', ';', 'byte', '[', ']', 'data', '=', 'null', ';', 'if', '(', 'args', '[', '0', ']', '.', 'equals', '(', '"', 'dec', '"', ')', ')', 'data', '=', 'decode', '(', 'os', '.', 'toString', '(', ')', ')', ';', 'else', '{', 'String', 'strData', '=', 'encode', '(', 'os', '.', 'toByteArray', '(', ')', ')', ';', 'data', '=', 'strData', '.', 'getBytes', '(', ')', ';', '}', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'args', '[', '2', ']', ')', ';', 'fos', '.', 'write', '(', 'data', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! in => data (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, REJ. data => inc (1 => 1, 0.99988 => 0.99988) a=0.999
  >>  iter 3, REJ. data => i (1 => 1, 0.99988 => 0.99988) a=0.999
  >>  iter 4, ACC! out => user (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, REJ. data => inas (1 => 1, 0.99988 => 0.99988) a=0.999
  >>  iter 6, ACC! data => a (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! a => bin (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! user => state (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! state => sys (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! bin => d (1 => 1, 0.99988 => 0.99988) a=1.001
Example 4 attack result: {'succ': False, 'tokens': '    public static void main(String[] args) {\n        if (args.length != 3) {\n            System.sys.println("Usage: HexStrToBin enc/dec <infileName> <outfilename>");\n            System.exit(1);\n        }\n        try {\n            ByteArrayOutputStream os = new ByteArrayOutputStream();\n            InputStream d = new FileInputStream(args[1]);\n            int len = 0;\n            byte buf[] = new byte[1024];\n            while ((len = d.read(buf)) > 0) os.write(buf, 0, len);\n            d.close();\n            os.close();\n            byte[] d = null;\n            if (args[0].equals("dec")) d = decode(os.toString()); else {\n                String strData = encode(os.toByteArray());\n                d = strData.getBytes();\n            }\n            FileOutputStream fos = new FileOutputStream(args[2]);\n            fos.write(d);\n            fos.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 210, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': -2.4701876e-08, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'in': 'd', 'out': 'sys'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 4 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 0.64 min
  curr succ rate = 0.0
Query times in this attack:  305
All Query times:  1194
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'Object', 'o', '=', 'Naming', '.', 'lookup', '(', '"', 'Server', '"', ')', ';', 'IServer', 'serverStub', '=', '(', 'IServer', ')', 'o', ';', 'File', 'srcDir', '=', 'new', 'File', '(', 'args', '[', '0', ']', ')', ';', 'File', 'dstDir', '=', 'new', 'File', '(', 'args', '[', '1', ']', ')', ';', 'File', '[', ']', 'srcFiles', '=', 'srcDir', '.', 'listFiles', '(', ')', ';', 'long', 'position', '=', '0', ';', 'for', '(', 'File', 'f', ':', 'srcFiles', ')', '{', 'if', '(', 'f', '.', 'isDirectory', '(', ')', ')', 'continue', ';', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'f', ')', '.', 'getChannel', '(', ')', ';', 'String', 'fileName', '=', 'dstDir', '.', 'getAbsolutePath', '(', ')', '+', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', '+', 'f', '.', 'getName', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'fileName', ')', '.', 'getChannel', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Coping', '', '"', '+', 'fileName', ')', ';', 'ByteBuffer', 'buffer', '=', 'ByteBuffer', '.', 'allocate', '(', '65536', ')', ';', 'int', 'nr', '=', '0', ';', 'srcChannel', '.', 'position', '(', 'nr', ')', ';', 'nr', '=', 'srcChannel', '.', 'read', '(', 'buffer', ')', ';', 'while', '(', 'nr', '>', '-', '1', ')', '{', 'buffer', '.', 'flip', '(', ')', ';', 'byte', '[', ']', 'bytes', '=', 'new', 'byte', '[', 'buffer', '.', 'limit', '(', ')', ']', ';', 'buffer', '.', 'get', '(', 'bytes', ')', ';', 'position', '=', 'serverStub', '.', 'write', '(', 'bytes', ',', 'position', ')', ';', 'buffer', '.', 'clear', '(', ')', ';', 'nr', '=', 'srcChannel', '.', 'read', '(', 'buffer', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Done', '', '"', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'RemoteException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'NotBoundException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! out => obj (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! obj => conn (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! conn => source (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! source => input (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! input => temp (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 6, ACC! temp => prefix (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! prefix => input (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 8, ACC! input => up (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 9, ACC! up => post (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! post => off (1 => 1, 0.99988 => 0.99988) a=1.000
Example 5 attack result: {'succ': False, 'tokens': '    public static void main(String[] args) {\n        try {\n            Object o = Naming.lookup("Server");\n            IServer serverStub = (IServer) o;\n            File srcDir = new File(args[0]);\n            File dstDir = new File(args[1]);\n            File[] srcFiles = srcDir.listFiles();\n            long position = 0;\n            for (File f : srcFiles) {\n                if (f.isDirectory()) continue;\n                try {\n                    FileChannel srcChannel = new FileInputStream(f).getChannel();\n                    String fileName = dstDir.getAbsolutePath() + System.getProperty("file.separator") + f.getName();\n                    FileChannel dstChannel = new FileOutputStream(fileName).getChannel();\n                    System.off.println("Coping " + fileName);\n                    ByteBuffer buffer = ByteBuffer.allocate(65536);\n                    int nr = 0;\n                    srcChannel.position(nr);\n                    nr = srcChannel.read(buffer);\n                    while (nr > -1) {\n                        buffer.flip();\n                        byte[] bytes = new byte[buffer.limit()];\n                        buffer.get(bytes);\n                        position = serverStub.write(bytes, position);\n                        buffer.clear();\n                        nr = srcChannel.read(buffer);\n                    }\n                    System.off.println("Done ");\n                    srcChannel.close();\n                    dstChannel.close();\n                } catch (IOException e) {\n                }\n            }\n        } catch (MalformedURLException e) {\n            e.printStackTrace();\n        } catch (RemoteException e) {\n            e.printStackTrace();\n        } catch (NotBoundException e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 323, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 7.3734554e-08, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'out': 'off'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 5 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 0.80 min
  curr succ rate = 0.0
Query times in this attack:  293
All Query times:  1487
raw_tokens: ['private', 'static', 'Collection', '<', 'String', '>', 'crossCheckFromOBOFile', '(', 'String', 'category', ')', 'throws', 'Exception', '{', 'Collection', '<', 'String', '>', 'miCol', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'String', 'revision', '=', '"', '1.48', '"', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'OboUtils', '.', 'PSI_MI_OBO_LOCATION', '+', '"', '?revision=', '"', '+', 'revision', ')', ';', 'log', '.', 'debug', '(', '"', 'url', '', '"', '+', 'url', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'inputLine', ';', 'int', 'termCounter', '=', '0', ';', 'int', 'miCounter', '=', '0', ';', 'int', 'obsoleteCounter', '=', '0', ';', 'int', 'obsoleteCounterDef', '=', '0', ';', 'int', 'typedefCounter', '=', '0', ';', 'int', 'drugTerm', '=', '0', ';', 'int', 'psiTerm', '=', '0', ';', 'String', 'mi', '=', 'null', ';', 'while', '(', '(', 'inputLine', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', 'temp', ';', 'temp', '=', 'inputLine', ';', 'if', '(', 'inputLine', '.', 'startsWith', '(', '"', '[Term]', '"', ')', ')', '{', 'termCounter', '++', ';', '}', 'else', 'if', '(', 'inputLine', '.', 'matches', '(', '"', 'id:', '\\\\', 's+(MI:.*)', '"', ')', ')', '{', 'mi', '=', 'temp', '.', 'split', '(', '"', '\\\\', 's+', '"', ')', '[', '1', ']', ';', 'miCounter', '++', ';', '}', 'else', 'if', '(', 'inputLine', '.', 'contains', '(', '"', 'is_obsolete:', 'true', '"', ')', ')', '{', 'obsoleteCounter', '++', ';', '}', 'else', 'if', '(', 'inputLine', '.', 'matches', '(', '"', 'def:.*?OBSOLETE.*', '"', ')', ')', '{', 'obsoleteCounterDef', '++', ';', '}', 'else', 'if', '(', 'inputLine', '.', 'startsWith', '(', '"', '[Typedef]', '"', ')', ')', '{', 'typedefCounter', '++', ';', '}', 'else', 'if', '(', 'inputLine', '.', 'matches', '(', '"', 'subset:', '\\\\', 's+PSI-MI', '\\\\', 's+slim', '"', ')', ')', '{', 'psiTerm', '++', ';', 'if', '(', 'category', '.', 'equalsIgnoreCase', '(', 'OboCategory', '.', 'PSI_MI_SLIM', ')', ')', 'miCol', '.', 'add', '(', 'mi', ')', ';', '}', 'else', 'if', '(', 'inputLine', '.', 'matches', '(', '"', 'subset:', '\\\\', 's+Drugable', '"', ')', ')', '{', 'drugTerm', '++', ';', 'if', '(', 'category', '.', 'equalsIgnoreCase', '(', 'OboCategory', '.', 'DRUGABLE', ')', ')', 'miCol', '.', 'add', '(', 'mi', ')', ';', '}', '}', 'Assert', '.', 'assertEquals', '(', '948', ',', 'termCounter', ')', ';', 'Assert', '.', 'assertEquals', '(', '948', ',', 'miCounter', ')', ';', 'Assert', '.', 'assertEquals', '(', '53', ',', 'obsoleteCounter', ')', ';', 'Assert', '.', 'assertEquals', '(', '53', ',', 'obsoleteCounterDef', ')', ';', 'Assert', '.', 'assertEquals', '(', '1', ',', 'typedefCounter', ')', ';', 'Assert', '.', 'assertEquals', '(', '844', ',', 'psiTerm', ')', ';', 'Assert', '.', 'assertEquals', '(', '124', ',', 'drugTerm', ')', ';', 'in', '.', 'close', '(', ')', ';', 'return', 'miCol', ';', '}']
  >>  iter 1, REJ. in => login (0 => 0, 0.99871 => 0.99882) a=0.978
  >>  iter 2, REJ. in => reader (0 => 0, 0.99871 => 0.99874) a=0.988
  >>  iter 3, REJ. in => n (0 => 0, 0.99871 => 0.99877) a=0.988
  >>  iter 4, REJ. in => id (0 => 0, 0.99871 => 0.99884) a=0.988
  >>  iter 5, REJ. in => ner (0 => 0, 0.99871 => 0.99875) a=0.988
  >>  iter 6, REJ. in => n (0 => 0, 0.99871 => 0.99877) a=0.988
  >>  iter 7, REJ. in => kin (0 => 0, 0.99871 => 0.99877) a=0.988
  >>  iter 8, REJ. in => version (0 => 0, 0.99871 => 0.99886) a=0.985
  >>  iter 9, REJ. in => gin (0 => 0, 0.99871 => 0.99879) a=0.988
  >>  iter 10, REJ. in => win (0 => 0, 0.99871 => 0.99881) a=0.988
Example 6 attack result: {'succ': False, 'tokens': '    private static Collection<String> crossCheckFromOBOFile(String category) throws Exception {\n        Collection<String> miCol = new ArrayList<String>();\n        String revision = "1.48";\n        URL url = new URL(OboUtils.PSI_MI_OBO_LOCATION + "?revision=" + revision);\n        log.debug("url " + url);\n        BufferedReader win = new BufferedReader(new InputStreamReader(url.openStream()));\n        String inputLine;\n        int termCounter = 0;\n        int miCounter = 0;\n        int obsoleteCounter = 0;\n        int obsoleteCounterDef = 0;\n        int typedefCounter = 0;\n        int drugTerm = 0;\n        int psiTerm = 0;\n        String mi = null;\n        while ((inputLine = win.readLine()) != null) {\n            String temp;\n            temp = inputLine;\n            if (inputLine.startsWith("[Term]")) {\n                termCounter++;\n            } else if (inputLine.matches("id:\\\\s+(MI:.*)")) {\n                mi = temp.split("\\\\s+")[1];\n                miCounter++;\n            } else if (inputLine.contains("is_obsolete: true")) {\n                obsoleteCounter++;\n            } else if (inputLine.matches("def:.*?OBSOLETE.*")) {\n                obsoleteCounterDef++;\n            } else if (inputLine.startsWith("[Typedef]")) {\n                typedefCounter++;\n            } else if (inputLine.matches("subset:\\\\s+PSI-MI\\\\s+slim")) {\n                psiTerm++;\n                if (category.equalsIgnoreCase(OboCategory.PSI_MI_SLIM)) miCol.add(mi);\n            } else if (inputLine.matches("subset:\\\\s+Drugable")) {\n                drugTerm++;\n                if (category.equalsIgnoreCase(OboCategory.DRUGABLE)) miCol.add(mi);\n            }\n        }\n        Assert.assertEquals(948, termCounter);\n        Assert.assertEquals(948, miCounter);\n        Assert.assertEquals(53, obsoleteCounter);\n        Assert.assertEquals(53, obsoleteCounterDef);\n        Assert.assertEquals(1, typedefCounter);\n        Assert.assertEquals(844, psiTerm);\n        Assert.assertEquals(124, drugTerm);\n        win.close();\n        return miCol;\n    }\n', 'raw_tokens': None, 'prog_length': 396, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -9.8228455e-05, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 6 FAILED.
  time cost = 0.17 min
  ALL EXAMPLE time cost = 0.97 min
  curr succ rate = 0.0
Query times in this attack:  299
All Query times:  1786
raw_tokens: ['public', 'static', 'String', 'md5', '(', 'final', 'String', 'text', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'byte', '[', ']', 'md5hash', '=', 'new', 'byte', '[', 'FOUR_BYTES', ']', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'text', '.', 'length', '(', ')', ')', ';', 'md5hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'md5hash', ')', ';', '}']
  >>  iter 1, ACC! md => ph (0 => 0, 0.99980 => 0.99980) a=1.005
  >>  iter 2, ACC! ph => dc (0 => 0, 0.99980 => 0.99980) a=1.006
  >>  iter 3, ACC! dc => dd (0 => 0, 0.99980 => 0.99980) a=1.011
  >>  iter 4, ACC! dd => vd (0 => 0, 0.99980 => 0.99980) a=1.011
  >>  iter 5, ACC! vd => mt (0 => 0, 0.99980 => 0.99980) a=1.016
  >>  iter 6, ACC! mt => dh (0 => 0, 0.99980 => 0.99980) a=1.010
  >>  iter 7, ACC! dh => wd (0 => 0, 0.99980 => 0.99980) a=1.010
  >>  iter 8, ACC! wd => dc (0 => 0, 0.99980 => 0.99980) a=1.019
  >>  iter 9, ACC! dc => dm (0 => 0, 0.99980 => 0.99980) a=1.007
  >>  iter 10, ACC! dm => mt (0 => 0, 0.99980 => 0.99980) a=1.004
Example 7 attack result: {'succ': False, 'tokens': '    public static String md5(final String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n        MessageDigest mt = MessageDigest.getInstance("MD5");\n        byte[] md5hash = new byte[FOUR_BYTES];\n        mt.update(text.getBytes("iso-8859-1"), 0, text.length());\n        md5hash = mt.digest();\n        return convertToHex(md5hash);\n    }\n', 'raw_tokens': None, 'prog_length': 74, 'new_pred': 0, 'is_success': -1, 'old_uid': 'md', 'score_info': -4.7683716e-07, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'md': 'mt'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 7 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 1.12 min
  curr succ rate = 0.0
Query times in this attack:  308
All Query times:  2094
raw_tokens: ['public', 'static', 'void', 'copyResource', '(', 'Resource', 'source', ',', 'Resource', 'dest', ',', 'FilterSetCollection', 'filters', ',', 'Vector', 'filterChains', ',', 'boolean', 'overwrite', ',', 'boolean', 'preserveLastModified', ',', 'boolean', 'append', ',', 'String', 'inputEncoding', ',', 'String', 'outputEncoding', ',', 'Project', 'project', ')', 'throws', 'IOException', '{', 'if', '(', '!', '(', 'overwrite', '||', 'SelectorUtils', '.', 'isOutOfDate', '(', 'source', ',', 'dest', ',', 'FileUtils', '.', 'getFileUtils', '(', ')', '.', 'getFileTimestampGranularity', '(', ')', ')', ')', ')', '{', 'return', ';', '}', 'final', 'boolean', 'filterSetsAvailable', '=', '(', 'filters', '!=', 'null', '&&', 'filters', '.', 'hasFilters', '(', ')', ')', ';', 'final', 'boolean', 'filterChainsAvailable', '=', '(', 'filterChains', '!=', 'null', '&&', 'filterChains', '.', 'size', '(', ')', '>', '0', ')', ';', 'if', '(', 'filterSetsAvailable', ')', '{', 'BufferedReader', 'in', '=', 'null', ';', 'BufferedWriter', 'out', '=', 'null', ';', 'try', '{', 'InputStreamReader', 'isr', '=', 'null', ';', 'if', '(', 'inputEncoding', '==', 'null', ')', '{', 'isr', '=', 'new', 'InputStreamReader', '(', 'source', '.', 'getInputStream', '(', ')', ')', ';', '}', 'else', '{', 'isr', '=', 'new', 'InputStreamReader', '(', 'source', '.', 'getInputStream', '(', ')', ',', 'inputEncoding', ')', ';', '}', 'in', '=', 'new', 'BufferedReader', '(', 'isr', ')', ';', 'OutputStream', 'os', '=', 'getOutputStream', '(', 'dest', ',', 'append', ',', 'project', ')', ';', 'OutputStreamWriter', 'osw', ';', 'if', '(', 'outputEncoding', '==', 'null', ')', '{', 'osw', '=', 'new', 'OutputStreamWriter', '(', 'os', ')', ';', '}', 'else', '{', 'osw', '=', 'new', 'OutputStreamWriter', '(', 'os', ',', 'outputEncoding', ')', ';', '}', 'out', '=', 'new', 'BufferedWriter', '(', 'osw', ')', ';', 'if', '(', 'filterChainsAvailable', ')', '{', 'ChainReaderHelper', 'crh', '=', 'new', 'ChainReaderHelper', '(', ')', ';', 'crh', '.', 'setBufferSize', '(', 'FileUtils', '.', 'BUF_SIZE', ')', ';', 'crh', '.', 'setPrimaryReader', '(', 'in', ')', ';', 'crh', '.', 'setFilterChains', '(', 'filterChains', ')', ';', 'crh', '.', 'setProject', '(', 'project', ')', ';', 'Reader', 'rdr', '=', 'crh', '.', 'getAssembledReader', '(', ')', ';', 'in', '=', 'new', 'BufferedReader', '(', 'rdr', ')', ';', '}', 'LineTokenizer', 'lineTokenizer', '=', 'new', 'LineTokenizer', '(', ')', ';', 'lineTokenizer', '.', 'setIncludeDelims', '(', 'true', ')', ';', 'String', 'newline', '=', 'null', ';', 'String', 'line', '=', 'lineTokenizer', '.', 'getToken', '(', 'in', ')', ';', 'while', '(', 'line', '!=', 'null', ')', '{', 'if', '(', 'line', '.', 'length', '(', ')', '==', '0', ')', '{', 'out', '.', 'newLine', '(', ')', ';', '}', 'else', '{', 'newline', '=', 'filters', '.', 'replaceTokens', '(', 'line', ')', ';', 'out', '.', 'write', '(', 'newline', ')', ';', '}', 'line', '=', 'lineTokenizer', '.', 'getToken', '(', 'in', ')', ';', '}', '}', 'finally', '{', 'FileUtils', '.', 'close', '(', 'out', ')', ';', 'FileUtils', '.', 'close', '(', 'in', ')', ';', '}', '}', 'else', 'if', '(', 'filterChainsAvailable', '||', '(', 'inputEncoding', '!=', 'null', '&&', '!', 'inputEncoding', '.', 'equals', '(', 'outputEncoding', ')', ')', '||', '(', 'inputEncoding', '==', 'null', '&&', 'outputEncoding', '!=', 'null', ')', ')', '{', 'BufferedReader', 'in', '=', 'null', ';', 'BufferedWriter', 'out', '=', 'null', ';', 'try', '{', 'InputStreamReader', 'isr', '=', 'null', ';', 'if', '(', 'inputEncoding', '==', 'null', ')', '{', 'isr', '=', 'new', 'InputStreamReader', '(', 'source', '.', 'getInputStream', '(', ')', ')', ';', '}', 'else', '{', 'isr', '=', 'new', 'InputStreamReader', '(', 'source', '.', 'getInputStream', '(', ')', ',', 'inputEncoding', ')', ';', '}', 'in', '=', 'new', 'BufferedReader', '(', 'isr', ')', ';', 'OutputStream', 'os', '=', 'getOutputStream', '(', 'dest', ',', 'append', ',', 'project', ')', ';', 'OutputStreamWriter', 'osw', ';', 'if', '(', 'outputEncoding', '==', 'null', ')', '{', 'osw', '=', 'new', 'OutputStreamWriter', '(', 'os', ')', ';', '}', 'else', '{', 'osw', '=', 'new', 'OutputStreamWriter', '(', 'os', ',', 'outputEncoding', ')', ';', '}', 'out', '=', 'new', 'BufferedWriter', '(', 'osw', ')', ';', 'if', '(', 'filterChainsAvailable', ')', '{', 'ChainReaderHelper', 'crh', '=', 'new', 'ChainReaderHelper', '(', ')', ';', 'crh', '.', 'setBufferSize', '(', 'FileUtils', '.', 'BUF_SIZE', ')', ';', 'crh', '.', 'setPrimaryReader', '(', 'in', ')', ';', 'crh', '.', 'setFilterChains', '(', 'filterChains', ')', ';', 'crh', '.', 'setProject', '(', 'project', ')', ';', 'Reader', 'rdr', '=', 'crh', '.', 'getAssembledReader', '(', ')', ';', 'in', '=', 'new', 'BufferedReader', '(', 'rdr', ')', ';', '}', 'char', '[', ']', 'buffer', '=', 'new', 'char', '[', 'FileUtils', '.', 'BUF_SIZE', ']', ';', 'while', '(', 'true', ')', '{', 'int', 'nRead', '=', 'in', '.', 'read', '(', 'buffer', ',', '0', ',', 'buffer', '.', 'length', ')', ';', 'if', '(', 'nRead', '==', '-', '1', ')', '{', 'break', ';', '}', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'nRead', ')', ';', '}', '}', 'finally', '{', 'FileUtils', '.', 'close', '(', 'out', ')', ';', 'FileUtils', '.', 'close', '(', 'in', ')', ';', '}', '}', 'else', 'if', '(', 'source', '.', 'as', '(', 'FileProvider', '.', 'class', ')', '!=', 'null', '&&', 'dest', '.', 'as', '(', 'FileProvider', '.', 'class', ')', '!=', 'null', ')', '{', 'File', 'sourceFile', '=', '(', '(', 'FileProvider', ')', 'source', '.', 'as', '(', 'FileProvider', '.', 'class', ')', ')', '.', 'getFile', '(', ')', ';', 'File', 'destFile', '=', '(', '(', 'FileProvider', ')', 'dest', '.', 'as', '(', 'FileProvider', '.', 'class', ')', ')', '.', 'getFile', '(', ')', ';', 'File', 'parent', '=', 'destFile', '.', 'getParentFile', '(', ')', ';', 'if', '(', 'parent', '!=', 'null', '&&', '!', 'parent', '.', 'isDirectory', '(', ')', '&&', '!', 'destFile', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'failed', 'to', 'create', 'the', 'parent', 'directory', '"', '+', '"', '', 'for', '', '"', '+', 'destFile', ')', ';', '}', 'FileInputStream', 'in', '=', 'null', ';', 'FileOutputStream', 'out', '=', 'null', ';', 'FileChannel', 'srcChannel', '=', 'null', ';', 'FileChannel', 'destChannel', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'FileInputStream', '(', 'sourceFile', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', ';', 'srcChannel', '=', 'in', '.', 'getChannel', '(', ')', ';', 'destChannel', '=', 'out', '.', 'getChannel', '(', ')', ';', 'long', 'position', '=', '0', ';', 'long', 'count', '=', 'srcChannel', '.', 'size', '(', ')', ';', 'while', '(', 'position', '<', 'count', ')', '{', 'position', '+=', 'srcChannel', '.', 'transferTo', '(', 'position', ',', 'FileUtils', '.', 'BUF_SIZE', ',', 'destChannel', ')', ';', '}', '}', 'finally', '{', 'FileUtils', '.', 'close', '(', 'srcChannel', ')', ';', 'FileUtils', '.', 'close', '(', 'destChannel', ')', ';', 'FileUtils', '.', 'close', '(', 'out', ')', ';', 'FileUtils', '.', 'close', '(', 'in', ')', ';', '}', '}', 'else', '{', 'InputStream', 'in', '=', 'null', ';', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'source', '.', 'getInputStream', '(', ')', ';', 'out', '=', 'getOutputStream', '(', 'dest', ',', 'append', ',', 'project', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'FileUtils', '.', 'BUF_SIZE', ']', ';', 'int', 'count', '=', '0', ';', 'do', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'count', ')', ';', 'count', '=', 'in', '.', 'read', '(', 'buffer', ',', '0', ',', 'buffer', '.', 'length', ')', ';', '}', 'while', '(', 'count', '!=', '-', '1', ')', ';', '}', 'finally', '{', 'FileUtils', '.', 'close', '(', 'out', ')', ';', 'FileUtils', '.', 'close', '(', 'in', ')', ';', '}', '}', 'if', '(', 'preserveLastModified', ')', '{', 'Touchable', 't', '=', '(', 'Touchable', ')', 'dest', '.', 'as', '(', 'Touchable', '.', 'class', ')', ';', 'if', '(', 't', '!=', 'null', ')', '{', 'setLastModified', '(', 't', ',', 'source', '.', 'getLastModified', '(', ')', ')', ';', '}', '}', '}']
Example 8 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'int', 'deleteRecord', '(', 'String', 'uuid', ')', 'throws', 'SQLException', ',', 'CatalogIndexException', '{', 'Connection', 'con', '=', 'null', ';', 'boolean', 'autoCommit', '=', 'true', ';', 'PreparedStatement', 'st', '=', 'null', ';', 'ResultSet', 'rs', '=', 'null', ';', 'int', 'nRows', '=', '0', ';', 'boolean', 'cancelTask', '=', 'false', ';', 'StringSet', 'fids', '=', 'new', 'StringSet', '(', ')', ';', 'if', '(', 'cswRemoteRepository', '.', 'isActive', '(', ')', ')', '{', 'StringSet', 'uuids', '=', 'new', 'StringSet', '(', ')', ';', 'uuids', '.', 'add', '(', 'uuid', ')', ';', 'fids', '=', 'queryFileIdentifiers', '(', 'uuids', ')', ';', '}', 'try', '{', 'con', '=', 'returnConnection', '(', ')', '.', 'getJdbcConnection', '(', ')', ';', 'autoCommit', '=', 'con', '.', 'getAutoCommit', '(', ')', ';', 'con', '.', 'setAutoCommit', '(', 'false', ')', ';', 'String', 'sSql', '=', '"', 'SELECT', 'COUNT(*)', 'FROM', '', '"', '+', 'getResourceTableName', '(', ')', '+', '"', '', 'WHERE', 'DOCUUID=?', 'AND', 'PROTOCOL_TYPE', 'IS', 'NOT', 'NULL', 'AND', "PROTOCOL_TYPE<>''", '"', ';', 'logExpression', '(', 'sSql', ')', ';', 'st', '=', 'con', '.', 'prepareStatement', '(', 'sSql', ')', ';', 'st', '.', 'setString', '(', '1', ',', 'uuid', ')', ';', 'rs', '=', 'st', '.', 'executeQuery', '(', ')', ';', 'if', '(', 'rs', '.', 'next', '(', ')', ')', '{', 'cancelTask', '=', 'rs', '.', 'getInt', '(', '1', ')', '>', '0', ';', '}', 'closeStatement', '(', 'st', ')', ';', 'sSql', '=', '"', 'DELETE', 'FROM', '', '"', '+', 'getResourceTableName', '(', ')', '+', '"', '', 'WHERE', 'DOCUUID=?', '"', ';', 'logExpression', '(', 'sSql', ')', ';', 'st', '=', 'con', '.', 'prepareStatement', '(', 'sSql', ')', ';', 'st', '.', 'setString', '(', '1', ',', 'uuid', ')', ';', 'nRows', '=', 'st', '.', 'executeUpdate', '(', ')', ';', 'closeStatement', '(', 'st', ')', ';', 'sSql', '=', '"', 'DELETE', 'FROM', '', '"', '+', 'getResourceDataTableName', '(', ')', '+', '"', '', 'WHERE', 'DOCUUID=?', '"', ';', 'logExpression', '(', 'sSql', ')', ';', 'st', '=', 'con', '.', 'prepareStatement', '(', 'sSql', ')', ';', 'st', '.', 'setString', '(', '1', ',', 'uuid', ')', ';', 'st', '.', 'executeUpdate', '(', ')', ';', 'CollectionDao', 'colDao', '=', 'new', 'CollectionDao', '(', 'this', '.', 'getRequestContext', '(', ')', ')', ';', 'if', '(', 'colDao', '.', 'getUseCollections', '(', ')', ')', '{', 'closeStatement', '(', 'st', ')', ';', 'sSql', '=', '"', 'DELETE', 'FROM', '', '"', '+', 'colDao', '.', 'getCollectionMemberTableName', '(', ')', '+', '"', '', 'WHERE', 'DOCUUID=?', '"', ';', 'logExpression', '(', 'sSql', ')', ';', 'st', '=', 'con', '.', 'prepareStatement', '(', 'sSql', ')', ';', 'st', '.', 'setString', '(', '1', ',', 'uuid', ')', ';', 'st', '.', 'executeUpdate', '(', ')', ';', '}', 'con', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', 'if', '(', 'con', '!=', 'null', ')', '{', 'con', '.', 'rollback', '(', ')', ';', '}', 'throw', 'ex', ';', '}', 'finally', '{', 'closeResultSet', '(', 'rs', ')', ';', 'closeStatement', '(', 'st', ')', ';', 'if', '(', 'con', '!=', 'null', ')', '{', 'con', '.', 'setAutoCommit', '(', 'autoCommit', ')', ';', '}', '}', 'CatalogIndexAdapter', 'indexAdapter', '=', 'getCatalogIndexAdapter', '(', ')', ';', 'if', '(', 'indexAdapter', '!=', 'null', ')', '{', 'indexAdapter', '.', 'deleteDocument', '(', 'uuid', ')', ';', 'if', '(', 'cswRemoteRepository', '.', 'isActive', '(', ')', ')', '{', 'if', '(', 'fids', '.', 'size', '(', ')', '>', '0', ')', 'cswRemoteRepository', '.', 'onRecordsDeleted', '(', 'fids', ')', ';', '}', '}', 'if', '(', 'cancelTask', '&&', 'getRequestContext', '(', ')', '!=', 'null', ')', '{', 'getRequestContext', '(', ')', '.', 'getApplicationContext', '(', ')', '.', 'getHarvestingEngine', '(', ')', '.', 'cancel', '(', 'getRequestContext', '(', ')', ',', 'uuid', ')', ';', '}', 'return', 'nRows', ';', '}']
Example 9 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'args', '.', 'length', '!=', '3', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Usage:', 'HexStrToBin', 'enc/dec', '<infileName>', '<outfilename>', '"', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '{', 'ByteArrayOutputStream', 'os', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'args', '[', '1', ']', ')', ';', 'int', 'len', '=', '0', ';', 'byte', 'buf', '[', ']', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'os', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'in', '.', 'close', '(', ')', ';', 'os', '.', 'close', '(', ')', ';', 'byte', '[', ']', 'data', '=', 'null', ';', 'if', '(', 'args', '[', '0', ']', '.', 'equals', '(', '"', 'dec', '"', ')', ')', 'data', '=', 'decode', '(', 'os', '.', 'toString', '(', ')', ')', ';', 'else', '{', 'String', 'strData', '=', 'encode', '(', 'os', '.', 'toByteArray', '(', ')', ')', ';', 'data', '=', 'strData', '.', 'getBytes', '(', ')', ';', '}', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'args', '[', '2', ']', ')', ';', 'fos', '.', 'write', '(', 'data', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 10 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'test', '(', 'String', 'server', ',', 'String', 'baseDir', ',', 'String', 'user', ',', 'String', 'password', ')', 'throws', 'Exception', '{', 'FTPClient', 'ftpClient', '=', 'new', 'FTPClient', '(', ')', ';', 'try', '{', 'String', 'file', '=', 'baseDir', ';', 'ftpClient', '.', 'connect', '(', 'server', ')', ';', 'ftpClient', '.', 'login', '(', 'user', ',', 'password', ')', ';', 'int', 'reply', '=', 'ftpClient', '.', 'getReplyCode', '(', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'reply', ')', ')', '{', 'ftpClient', '.', 'disconnect', '(', ')', ';', 'System', '.', 'err', '.', 'println', '(', '"', 'FTP', 'server', 'refused', 'connection.', '"', ')', ';', 'return', 'null', ';', '}', 'ftpClient', '.', 'setFileType', '(', 'FTP', '.', 'IMAGE_FILE_TYPE', ')', ';', 'ftpClient', '.', 'enterLocalPassiveMode', '(', ')', ';', 'boolean', 'isDir', '=', 'isDir', '(', 'ftpClient', ',', 'file', ')', ';', 'if', '(', 'isDir', ')', '{', 'FTPFile', '[', ']', 'files', '=', 'ftpClient', '.', 'listFiles', '(', 'file', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', '}', '}', 'else', '{', 'ByteArrayOutputStream', 'bos', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'if', '(', 'ftpClient', '.', 'retrieveFile', '(', 'file', ',', 'bos', ')', ')', '{', '}', 'else', '{', 'throw', 'new', 'IOException', '(', '"', 'Unable', 'to', 'retrieve', 'file:', '"', '+', 'file', ')', ';', '}', '}', 'return', '"', '"', ';', '}', 'finally', '{', 'closeConnection', '(', 'ftpClient', ')', ';', '}', '}']
  >>  iter 1, ACC! i => xi (0 => 0, 0.99958 => 0.99958) a=1.000
  >>  iter 2, ACC! xi => ri (0 => 0, 0.99958 => 0.99958) a=1.003
  >>  iter 3, ACC! ri => ti (0 => 0, 0.99958 => 0.99958) a=1.000
  >>  iter 4, ACC! ti => y (0 => 0, 0.99958 => 0.99958) a=1.002
  >>  iter 5, ACC! y => x (0 => 0, 0.99958 => 0.99958) a=1.004
  >>  iter 6, ACC! x => index (0 => 0, 0.99958 => 0.99958) a=1.004
  >>  iter 7, ACC! index => y (0 => 0, 0.99958 => 0.99958) a=1.004
  >>  iter 8, ACC! y => li (0 => 0, 0.99958 => 0.99958) a=1.003
  >>  iter 9, ACC! li => ci (0 => 0, 0.99958 => 0.99958) a=1.003
  >>  iter 10, ACC! ci => uri (0 => 0, 0.99958 => 0.99958) a=1.002
Example 12 attack result: {'succ': False, 'tokens': '    public static String test(String server, String baseDir, String user, String password) throws Exception {\n        FTPClient ftpClient = new FTPClient();\n        try {\n            String file = baseDir;\n            ftpClient.connect(server);\n            ftpClient.login(user, password);\n            int reply = ftpClient.getReplyCode();\n            if (!FTPReply.isPositiveCompletion(reply)) {\n                ftpClient.disconnect();\n                System.err.println("FTP server refused connection.");\n                return null;\n            }\n            ftpClient.setFileType(FTP.IMAGE_FILE_TYPE);\n            ftpClient.enterLocalPassiveMode();\n            boolean isDir = isDir(ftpClient, file);\n            if (isDir) {\n                FTPFile[] files = ftpClient.listFiles(file);\n                for (int uri = 0; uri < files.length; uri++) {\n                }\n            } else {\n                ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                if (ftpClient.retrieveFile(file, bos)) {\n                } else {\n                    throw new IOException("Unable to retrieve file:" + file);\n                }\n            }\n            return "";\n        } finally {\n            closeConnection(ftpClient);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 205, 'new_pred': 0, 'is_success': -1, 'old_uid': 'i', 'score_info': 2.3841858e-07, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'i': 'uri'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 12 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 1.32 min
  curr succ rate = 0.0
Query times in this attack:  314
All Query times:  2408
raw_tokens: ['protected', 'GVTFontFamily', 'getFontFamily', '(', 'BridgeContext', 'ctx', ',', 'ParsedURL', 'purl', ')', '{', 'String', 'purlStr', '=', 'purl', '.', 'toString', '(', ')', ';', 'Element', 'e', '=', 'getBaseElement', '(', 'ctx', ')', ';', 'SVGDocument', 'svgDoc', '=', '(', 'SVGDocument', ')', 'e', '.', 'getOwnerDocument', '(', ')', ';', 'String', 'docURL', '=', 'svgDoc', '.', 'getURL', '(', ')', ';', 'ParsedURL', 'pDocURL', '=', 'null', ';', 'if', '(', 'docURL', '!=', 'null', ')', 'pDocURL', '=', 'new', 'ParsedURL', '(', 'docURL', ')', ';', 'String', 'baseURI', '=', 'XMLBaseSupport', '.', 'getCascadedXMLBase', '(', 'e', ')', ';', 'purl', '=', 'new', 'ParsedURL', '(', 'baseURI', ',', 'purlStr', ')', ';', 'UserAgent', 'userAgent', '=', 'ctx', '.', 'getUserAgent', '(', ')', ';', 'try', '{', 'userAgent', '.', 'checkLoadExternalResource', '(', 'purl', ',', 'pDocURL', ')', ';', '}', 'catch', '(', 'SecurityException', 'ex', ')', '{', 'userAgent', '.', 'displayError', '(', 'ex', ')', ';', 'return', 'null', ';', '}', 'if', '(', 'purl', '.', 'getRef', '(', ')', '!=', 'null', ')', '{', 'Element', 'ref', '=', 'ctx', '.', 'getReferencedElement', '(', 'e', ',', 'purlStr', ')', ';', 'if', '(', '!', 'ref', '.', 'getNamespaceURI', '(', ')', '.', 'equals', '(', 'SVG_NAMESPACE_URI', ')', '||', '!', 'ref', '.', 'getLocalName', '(', ')', '.', 'equals', '(', 'SVG_FONT_TAG', ')', ')', '{', 'return', 'null', ';', '}', 'SVGDocument', 'doc', '=', '(', 'SVGDocument', ')', 'e', '.', 'getOwnerDocument', '(', ')', ';', 'SVGDocument', 'rdoc', '=', '(', 'SVGDocument', ')', 'ref', '.', 'getOwnerDocument', '(', ')', ';', 'Element', 'fontElt', '=', 'ref', ';', 'if', '(', 'doc', '!=', 'rdoc', ')', '{', 'fontElt', '=', '(', 'Element', ')', 'doc', '.', 'importNode', '(', 'ref', ',', 'true', ')', ';', 'String', 'base', '=', 'XMLBaseSupport', '.', 'getCascadedXMLBase', '(', 'ref', ')', ';', 'Element', 'g', '=', 'doc', '.', 'createElementNS', '(', 'SVG_NAMESPACE_URI', ',', 'SVG_G_TAG', ')', ';', 'g', '.', 'appendChild', '(', 'fontElt', ')', ';', 'g', '.', 'setAttributeNS', '(', 'XMLBaseSupport', '.', 'XML_NAMESPACE_URI', ',', '"', 'xml:base', '"', ',', 'base', ')', ';', 'CSSUtilities', '.', 'computeStyleAndURIs', '(', 'ref', ',', 'fontElt', ',', 'purlStr', ')', ';', '}', 'Element', 'fontFaceElt', '=', 'null', ';', 'for', '(', 'Node', 'n', '=', 'fontElt', '.', 'getFirstChild', '(', ')', ';', 'n', '!=', 'null', ';', 'n', '=', 'n', '.', 'getNextSibling', '(', ')', ')', '{', 'if', '(', '(', 'n', '.', 'getNodeType', '(', ')', '==', 'Node', '.', 'ELEMENT_NODE', ')', '&&', 'n', '.', 'getNamespaceURI', '(', ')', '.', 'equals', '(', 'SVG_NAMESPACE_URI', ')', '&&', 'n', '.', 'getLocalName', '(', ')', '.', 'equals', '(', 'SVG_FONT_FACE_TAG', ')', ')', '{', 'fontFaceElt', '=', '(', 'Element', ')', 'n', ';', 'break', ';', '}', '}', 'SVGFontFaceElementBridge', 'fontFaceBridge', ';', 'fontFaceBridge', '=', '(', 'SVGFontFaceElementBridge', ')', 'ctx', '.', 'getBridge', '(', 'SVG_NAMESPACE_URI', ',', 'SVG_FONT_FACE_TAG', ')', ';', 'GVTFontFace', 'gff', '=', 'fontFaceBridge', '.', 'createFontFace', '(', 'ctx', ',', 'fontFaceElt', ')', ';', 'return', 'new', 'SVGFontFamily', '(', 'gff', ',', 'fontElt', ',', 'ctx', ')', ';', '}', 'try', '{', 'Font', 'font', '=', 'Font', '.', 'createFont', '(', 'Font', '.', 'TRUETYPE_FONT', ',', 'purl', '.', 'openStream', '(', ')', ')', ';', 'return', 'new', 'AWTFontFamily', '(', 'this', ',', 'font', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', '}', 'return', 'null', ';', '}']
  >>  iter 1, ACC! e => esi (0 => 0, 0.99998 => 0.99998) a=1.041
  >>  iter 2, ACC! esi => ele (0 => 0, 0.99998 => 0.99998) a=1.035
  >>  iter 3, ACC! ele => ea (0 => 0, 0.99998 => 0.99998) a=1.053
  >>  iter 4, ACC! ea => ef (0 => 0, 0.99998 => 0.99998) a=1.017
  >>  iter 5, ACC! ef => ie (0 => 0, 0.99998 => 0.99998) a=1.029
  >>  iter 6, ACC! ie => de (0 => 0, 0.99998 => 0.99998) a=1.047
  >>  iter 7, ACC! de => d (0 => 0, 0.99998 => 0.99998) a=1.035
  >>  iter 8, ACC! d => fe (0 => 0, 0.99998 => 0.99998) a=1.059
  >>  iter 9, ACC! fe => ve (0 => 0, 0.99998 => 0.99998) a=1.035
  >>  iter 10, ACC! ve => fe (0 => 0, 0.99998 => 0.99998) a=1.053
Example 13 attack result: {'succ': False, 'tokens': '    protected GVTFontFamily getFontFamily(BridgeContext ctx, ParsedURL purl) {\n        String purlStr = purl.toString();\n        Element fe = getBaseElement(ctx);\n        SVGDocument svgDoc = (SVGDocument) fe.getOwnerDocument();\n        String docURL = svgDoc.getURL();\n        ParsedURL pDocURL = null;\n        if (docURL != null) pDocURL = new ParsedURL(docURL);\n        String baseURI = XMLBaseSupport.getCascadedXMLBase(fe);\n        purl = new ParsedURL(baseURI, purlStr);\n        UserAgent userAgent = ctx.getUserAgent();\n        try {\n            userAgent.checkLoadExternalResource(purl, pDocURL);\n        } catch (SecurityException ex) {\n            userAgent.displayError(ex);\n            return null;\n        }\n        if (purl.getRef() != null) {\n            Element ref = ctx.getReferencedElement(fe, purlStr);\n            if (!ref.getNamespaceURI().equals(SVG_NAMESPACE_URI) || !ref.getLocalName().equals(SVG_FONT_TAG)) {\n                return null;\n            }\n            SVGDocument doc = (SVGDocument) fe.getOwnerDocument();\n            SVGDocument rdoc = (SVGDocument) ref.getOwnerDocument();\n            Element fontElt = ref;\n            if (doc != rdoc) {\n                fontElt = (Element) doc.importNode(ref, true);\n                String base = XMLBaseSupport.getCascadedXMLBase(ref);\n                Element g = doc.createElementNS(SVG_NAMESPACE_URI, SVG_G_TAG);\n                g.appendChild(fontElt);\n                g.setAttributeNS(XMLBaseSupport.XML_NAMESPACE_URI, "xml:base", base);\n                CSSUtilities.computeStyleAndURIs(ref, fontElt, purlStr);\n            }\n            Element fontFaceElt = null;\n            for (Node n = fontElt.getFirstChild(); n != null; n = n.getNextSibling()) {\n                if ((n.getNodeType() == Node.ELEMENT_NODE) && n.getNamespaceURI().equals(SVG_NAMESPACE_URI) && n.getLocalName().equals(SVG_FONT_FACE_TAG)) {\n                    fontFaceElt = (Element) n;\n                    break;\n                }\n            }\n            SVGFontFaceElementBridge fontFaceBridge;\n            fontFaceBridge = (SVGFontFaceElementBridge) ctx.getBridge(SVG_NAMESPACE_URI, SVG_FONT_FACE_TAG);\n            GVTFontFace gff = fontFaceBridge.createFontFace(ctx, fontFaceElt);\n            return new SVGFontFamily(gff, fontElt, ctx);\n        }\n        try {\n            Font font = Font.createFont(Font.TRUETYPE_FONT, purl.openStream());\n            return new AWTFontFamily(this, font);\n        } catch (Exception ex) {\n        }\n        return null;\n    }\n', 'raw_tokens': None, 'prog_length': 445, 'new_pred': 0, 'is_success': -1, 'old_uid': 'e', 'score_info': 2.3841858e-07, 'nb_changed_var': 1, 'nb_changed_pos': 5, 'replace_info': {'e': 'fe'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 13 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 1.51 min
  curr succ rate = 0.0
Query times in this attack:  307
All Query times:  2715
raw_tokens: ['public', 'String', 'requestPOST', '(', 'String', 'baseUrl', ',', 'Map', '<', 'String', ',', 'String', '>', 'params', ')', 'throws', 'Exception', '{', 'String', 'result', '=', '"', '"', ';', 'HttpPost', 'request', '=', 'new', 'HttpPost', '(', 'baseUrl', ')', ';', 'HttpEntity', 'entity', '=', 'null', ';', 'if', '(', 'params', '!=', 'null', '&&', '!', 'params', '.', 'isEmpty', '(', ')', ')', '{', 'List', '<', 'NameValuePair', '>', 'postParams', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'List', '<', 'String', '>', 'keys', '=', 'new', 'ArrayList', '<', 'String', '>', '(', 'params', '.', 'keySet', '(', ')', ')', ';', 'for', '(', 'String', 'key', ':', 'keys', ')', '{', 'postParams', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', 'key', ',', 'params', '.', 'get', '(', 'key', ')', ')', ')', ';', '}', 'entity', '=', 'new', 'UrlEncodedFormEntity', '(', 'postParams', ',', '"', 'utf-8', '"', ')', ';', 'request', '.', 'setEntity', '(', 'entity', ')', ';', '}', 'HttpResponse', 'res', '=', 'client', '.', 'execute', '(', 'request', ')', ';', 'if', '(', 'res', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', '==', 'HttpStatus', '.', 'SC_OK', ')', '{', 'entity', '=', 'res', '.', 'getEntity', '(', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'entity', '.', 'getContent', '(', ')', ')', ')', ';', 'StringBuffer', 'content', '=', 'new', 'StringBuffer', '(', ')', ';', 'String', 'read', '=', '"', '"', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'content', '.', 'append', '(', 'read', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'JSONObject', 'rObj', '=', 'new', 'JSONObject', '(', 'content', '.', 'toString', '(', ')', ')', ';', 'result', '=', 'rObj', '.', 'getString', '(', '"', 'msg', '"', ')', ';', '}', 'else', 'result', '=', '"', '请求失败了";', '', '', 'entity', '.', 'consumeContent', '(', ')', ';', 'client', '.', 'getConnectionManager', '(', ')', '.', 'shutdown', '(', ')', ';', 'request', '=', 'null', ';', 'return', 'result', ';', '}']
Example 14 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'proxyMediaServlet', '(', 'String', 'url', ',', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'resp', ')', '{', 'try', '{', 'URL', 'u', '=', 'new', 'URL', '(', '"', 'http://mediaserver:8080/sagex', '"', '+', 'url', ')', ';', 'log', '.', 'debug', '(', '"', 'Proxy', 'Media:', '', '"', '+', 'u', '.', 'toString', '(', ')', ')', ';', 'URLConnection', 'c', '=', 'u', '.', 'openConnection', '(', ')', ';', 'c', '.', 'setRequestProperty', '(', '"', 'User-Agent', '"', ',', '"', 'Mozilla/5.0', '(X11;', 'U;', 'Linux', 'i686;', 'en-US;', 'rv:1.9.0.1)', 'Gecko/2008072820', 'Firefox/3.0.1', '"', ')', ';', 'OutputStream', 'os', '=', 'resp', '.', 'getOutputStream', '(', ')', ';', 'IOUtils', '.', 'copy', '(', 'c', '.', 'getInputStream', '(', ')', ',', 'os', ')', ';', 'os', '.', 'flush', '(', ')', ';', 'resp', '.', 'flushBuffer', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'error', '(', '"', 'Failed', 'to', 'get', 'url:', '', '"', '+', 'url', ',', 't', ')', ';', 'try', '{', 'resp', '.', 'sendError', '(', '500', ',', 't', '.', 'getMessage', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}']
  >>  iter 1, REJ. url => ssl (1 => 1, 0.99988 => 0.99988) a=0.995
  >>  iter 2, REJ. url => server (1 => 1, 0.99988 => 0.99988) a=0.995
  >>  iter 3, REJ. url => link (1 => 1, 0.99988 => 0.99988) a=0.995
  >>  iter 4, REJ. url => ssl (1 => 1, 0.99988 => 0.99988) a=0.995
  >>  iter 5, REJ. url => control (1 => 1, 0.99988 => 0.99988) a=0.995
  >>  iter 6, REJ. url => position (1 => 1, 0.99988 => 0.99988) a=0.993
  >>  iter 7, REJ. url => database (1 => 1, 0.99988 => 0.99988) a=0.995
  >>  iter 8, REJ. url => position (1 => 1, 0.99988 => 0.99988) a=0.995
  >>  iter 9, REJ. url => service (1 => 1, 0.99988 => 0.99988) a=0.995
  >>  iter 10, REJ. url => user (1 => 1, 0.99988 => 0.99988) a=0.993
Example 15 attack result: {'succ': False, 'tokens': '    private void proxyMediaServlet(String user, HttpServletRequest req, HttpServletResponse resp) {\n        try {\n            URL u = new URL("http://mediaserver:8080/sagex" + user);\n            log.debug("Proxy Media: " + u.toString());\n            URLConnection c = u.openConnection();\n            c.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008072820 Firefox/3.0.1");\n            OutputStream os = resp.getOutputStream();\n            IOUtils.copy(c.getInputStream(), os);\n            os.flush();\n            resp.flushBuffer();\n        } catch (Throwable t) {\n            log.error("Failed to get url: " + user, t);\n            try {\n                resp.sendError(500, t.getMessage());\n            } catch (IOException e) {\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 145, 'new_pred': 1, 'is_success': -1, 'old_uid': '', 'score_info': 8.649731e-07, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 15 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 1.68 min
  curr succ rate = 0.0
Query times in this attack:  309
All Query times:  3024
raw_tokens: ['public', 'static', 'void', 'extractZipFile', '(', 'String', 'filename', ')', '{', 'try', '{', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'ZipInputStream', 'zipinputstream', '=', 'null', ';', 'ZipEntry', 'zipentry', ';', 'zipinputstream', '=', 'new', 'ZipInputStream', '(', 'new', 'FileInputStream', '(', 'filename', ')', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', 'while', '(', 'zipentry', '!=', 'null', ')', '{', 'String', 'entryName', '=', 'zipentry', '.', 'getName', '(', ')', ';', 'int', 'n', ';', 'FileOutputStream', 'fileoutputstream', ';', 'File', 'newFile', '=', 'new', 'File', '(', 'entryName', ')', ';', 'String', 'directory', '=', 'newFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'directory', '==', 'null', ')', '{', 'if', '(', 'newFile', '.', 'isDirectory', '(', ')', ')', 'break', ';', '}', 'fileoutputstream', '=', 'new', 'FileOutputStream', '(', 'entryName', ')', ';', 'while', '(', '(', 'n', '=', 'zipinputstream', '.', 'read', '(', 'buf', ',', '0', ',', '1024', ')', ')', '>', '-', '1', ')', 'fileoutputstream', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', 'fileoutputstream', '.', 'close', '(', ')', ';', 'zipinputstream', '.', 'closeEntry', '(', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', '}', 'zipinputstream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 16 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'actualizarDivisionActual', '(', 'division', 'div', ')', '{', 'int', 'intResult', '=', '0', ';', 'String', 'sql', '=', '"', 'UPDATE', 'divisionxTorneo', '', '"', '+', '"', '', 'SET', 'tipoTorneo_idTipoTorneo', '=', '', '"', '+', 'div', '.', 'getidTipoTorneo', '(', ')', '+', '"', '', ',', 'nombreDivision', '=', "'", '"', '+', 'div', '.', 'getnombreDivision', '(', ')', '+', '"', "',", '', '"', '+', '"', '', 'descripcion', '=', "'", '"', '+', 'div', '.', 'getDescripcion', '(', ')', '+', '"', "',", 'tipoDesempate', '=', '', '"', '+', 'div', '.', 'getDesempate', '(', ')', '+', '"', ',', '', '"', '+', '"', '', 'numFechas', '=', '', '"', '+', 'div', '.', 'getnumFechas', '(', ')', '+', '"', '', ',', 'ptosxbye', '=', '', '"', '+', 'div', '.', 'getPtosxBye', '(', ')', '+', '"', '', 'WHERE', 'idDivisionxTorneo', '=', '', '"', '+', 'div', '.', 'getidDivision', '(', ')', ';', 'try', '{', 'connection', '=', 'conexionBD', '.', 'getConnection', '(', ')', ';', 'connection', '.', 'setAutoCommit', '(', 'false', ')', ';', 'ps', '=', 'connection', '.', 'prepareStatement', '(', 'sql', ')', ';', 'intResult', '=', 'ps', '.', 'executeUpdate', '(', ')', ';', 'connection', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', 'try', '{', 'connection', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'exe', ')', '{', 'exe', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'finally', '{', 'conexionBD', '.', 'close', '(', 'ps', ')', ';', 'conexionBD', '.', 'close', '(', 'connection', ')', ';', '}', 'return', '(', 'intResult', '>', '0', ')', ';', '}']
Example 17 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'setFavBoard', '(', 'List', '<', 'BoardObject', '>', 'list', ')', 'throws', 'NetworkException', ',', 'ContentException', '{', 'HttpClient', 'client', '=', 'HttpConfig', '.', 'newInstance', '(', ')', ';', 'HttpPost', 'post', '=', 'new', 'HttpPost', '(', 'HttpConfig', '.', 'bbsURL', '(', ')', '+', 'HttpConfig', '.', 'BBS_FAV_SETTING', ')', ';', 'List', '<', 'NameValuePair', '>', 'nvps', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'for', '(', 'BoardObject', 'board', ':', 'list', ')', 'nvps', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', 'board', '.', 'getId', '(', ')', ',', '"', 'on', '"', ')', ')', ';', 'try', '{', 'post', '.', 'setEntity', '(', 'new', 'UrlEncodedFormEntity', '(', 'nvps', ',', 'BBSBodyParseHelper', '.', 'BBS_CHARSET', ')', ')', ';', 'HttpResponse', 'response', '=', 'client', '.', 'execute', '(', 'post', ')', ';', 'HttpEntity', 'entity', '=', 'response', '.', 'getEntity', '(', ')', ';', 'if', '(', 'HTTPUtil', '.', 'isHttp200', '(', 'response', ')', '&&', 'HTTPUtil', '.', 'isXmlContentType', '(', 'response', ')', ')', '{', 'HTTPUtil', '.', 'consume', '(', 'response', '.', 'getEntity', '(', ')', ')', ';', 'return', 'true', ';', '}', 'else', '{', 'String', 'msg', '=', 'BBSBodyParseHelper', '.', 'parseFailMsg', '(', 'entity', ')', ';', 'throw', 'new', 'ContentException', '(', 'msg', ')', ';', '}', '}', 'catch', '(', 'ClientProtocolException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'throw', 'new', 'NetworkException', '(', 'e', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'throw', 'new', 'NetworkException', '(', 'e', ')', ';', '}', '}']
Example 18 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'unzipEntry', '(', 'ZipFile', 'zipfile', ',', 'ZipEntry', 'entry', ',', 'File', 'outputDir', ')', 'throws', 'IOException', '{', 'if', '(', 'entry', '.', 'isDirectory', '(', ')', ')', '{', 'createDir', '(', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ')', ';', 'return', ';', '}', 'File', 'outputFile', '=', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ';', 'if', '(', '!', 'outputFile', '.', 'getParentFile', '(', ')', '.', 'exists', '(', ')', ')', '{', 'createDir', '(', 'outputFile', '.', 'getParentFile', '(', ')', ')', ';', '}', 'BufferedInputStream', 'inputStream', '=', 'new', 'BufferedInputStream', '(', 'zipfile', '.', 'getInputStream', '(', 'entry', ')', ')', ';', 'BufferedOutputStream', 'outputStream', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outputFile', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'outputStream', ')', ';', '}', 'finally', '{', 'outputStream', '.', 'close', '(', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', '}', '}']
Example 19 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'copyFile', '(', 'final', 'File', 'inFile', ',', 'final', 'File', 'outFile', ')', '{', 'try', '{', 'FileChannel', 'ic', '=', 'new', 'FileInputStream', '(', 'inFile', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'oc', '=', 'new', 'FileOutputStream', '(', 'outFile', ')', '.', 'getChannel', '(', ')', ';', 'ic', '.', 'transferTo', '(', '0', ',', 'ic', '.', 'size', '(', ')', ',', 'oc', ')', ';', 'ic', '.', 'close', '(', ')', ';', 'oc', '.', 'close', '(', ')', ';', 'return', 'true', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'SystemUtils', '.', 'LOG', '.', 'log', '(', 'Level', '.', 'INFO', ',', '"', 'SystemUtils.copyFile()', 'Exception', 'while', 'copy', 'file', '', '"', '+', 'inFile', '.', 'getAbsolutePath', '(', ')', '+', '"', '', 'to', '', '"', '+', 'outFile', '.', 'getAbsolutePath', '(', ')', ',', 'e', ')', ';', 'return', 'false', ';', '}', '}']
Example 20 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'findTitle', '(', 'URL', 'url', ')', '{', 'HTMLEditorKit', '.', 'ParserCallback', 'callback', ';', 'try', '{', 'URLConnection', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'Reader', 'rd', '=', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ';', 'ParserDelegator', 'parser', '=', 'new', 'ParserDelegator', '(', ')', ';', 'callback', '=', 'new', 'Callback', '(', ')', ';', 'parser', '.', 'parse', '(', 'rd', ',', 'callback', ',', 'true', ')', ';', '}', 'catch', '(', 'Exception', 'exp', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'exp', ')', ';', '}', 'return', 'title', ';', '}']
  >>  iter 1, ACC! url => address (0 => 0, 0.99999 => 0.99999) a=3.190
  >>  iter 2, ACC! address => ob (0 => 0, 0.99999 => 0.99999) a=1.787
  >>  iter 3, ACC! ob => instance (0 => 0, 0.99999 => 0.99999) a=1.039
  >>  iter 4, ACC! instance => http (0 => 0, 0.99999 => 0.99999) a=1.914
  >>  iter 5, ACC! http => l (0 => 0, 0.99999 => 0.99999) a=1.491
  >>  iter 6, ACC! l => page (0 => 0, 0.99999 => 0.99999) a=1.811
  >>  iter 7, ACC! page => instance (0 => 0, 0.99999 => 0.99999) a=1.696
  >>  iter 8, ACC! instance => config (0 => 0, 0.99999 => 0.99999) a=1.114
  >>  iter 9, ACC! config => bb (0 => 0, 0.99999 => 0.99999) a=1.145
  >>  iter 10, ACC! bb => location (0 => 0, 0.99999 => 0.99999) a=1.113
Example 21 attack result: {'succ': False, 'tokens': '        private String findTitle(URL location) {\n            HTMLEditorKit.ParserCallback callback;\n            try {\n                URLConnection conn = location.openConnection();\n                Reader rd = new InputStreamReader(conn.getInputStream());\n                ParserDelegator parser = new ParserDelegator();\n                callback = new Callback();\n                parser.parse(rd, callback, true);\n            } catch (Exception exp) {\n                System.err.println(exp);\n            }\n            return title;\n        }\n', 'raw_tokens': None, 'prog_length': 84, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -3.5762787e-07, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'location'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 21 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 1.88 min
  curr succ rate = 0.0
Query times in this attack:  305
All Query times:  3329
raw_tokens: ['public', 'void', 'connect', '(', 'final', 'URLConnectAdapter', 'urlAdapter', ')', '{', 'if', '(', 'this', '.', 'connectSettings', '==', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'Connect', 'Settings', '(is', 'null)', '"', ')', ';', '}', 'final', 'HttpURLConnection', 'httpConnection', '=', '(', 'HttpURLConnection', ')', 'urlAdapter', '.', 'openConnection', '(', ')', ';', 'BufferedReader', 'in', ';', 'try', '{', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'httpConnection', '.', 'getInputStream', '(', ')', ')', ')', ';', 'final', 'StringBuilder', 'buf', '=', 'new', 'StringBuilder', '(', '200', ')', ';', 'String', 'str', ';', 'while', '(', '(', 'str', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'buf', '.', 'append', '(', 'str', ')', ';', 'buf', '.', 'append', '(', "'');", '}', 'final', 'ConnectResult', 'result', '=', 'new', 'ConnectResult', '(', 'httpConnection', '.', 'getResponseCode', '(', ')', ',', 'buf', '.', 'toString', '(', ')', ')', '', ';', 'final', 'Map', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'headerFields', '=', 'httpConnection', '.', 'getHeaderFields', '(', ')', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'entry', ':', 'headerFields', '.', 'entrySet', '(', ')', ')', '{', 'final', 'String', 'key', '=', 'entry', '.', 'getKey', '(', ')', ';', 'final', 'List', '<', 'String', '>', 'val', '=', 'entry', '.', 'getValue', '(', ')', ';', 'if', '(', '(', 'val', '!=', 'null', ')', '&&', '(', 'val', '.', 'size', '(', ')', '>', '1', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'WARN:', 'Invalid', 'header', 'value', ':', '', '"', '+', 'key', '+', '"', '', 'url=', '"', '+', 'this', '.', 'connectSettings', '.', 'getUrl', '(', ')', ')', ';', '}', 'if', '(', 'key', '!=', 'null', ')', '{', 'result', '.', 'addHeader', '(', 'key', ',', 'val', '.', 'get', '(', '0', ')', ',', 'val', ')', ';', '}', 'else', '{', 'result', '.', 'addHeader', '(', '"', 'Status', '"', ',', 'val', '.', 'get', '(', '0', ')', ',', 'val', ')', ';', '}', '}', 'this', '.', 'lastResult', '=', 'result', ';', '}', 'catch', '(', 'IOException', 'e', ')', '', '{', 'throw', 'new', 'ConnectException', '(', 'e', ')', ';', '}', '}']
Example 22 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['String', 'test', '(', ')', 'throws', 'ServerException', ',', 'RtmApiException', ',', 'IOException', '{', 'HttpClient', 'httpclient', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'URI', 'uri', ';', 'try', '{', 'uri', '=', 'new', 'URI', '(', 'this', '.', 'request', '.', 'getUrl', '(', ')', ')', ';', 'HttpPost', 'httppost', '=', 'new', 'HttpPost', '(', 'uri', ')', ';', 'HttpResponse', 'response', '=', 'httpclient', '.', 'execute', '(', 'httppost', ')', ';', 'InputStream', 'is', '=', 'response', '.', 'getEntity', '(', ')', '.', 'getContent', '(', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'BufferedReader', 'r', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'new', 'DoneHandlerInputStream', '(', 'is', ')', ')', ')', ';', 'for', '(', 'String', 'line', '=', 'r', '.', 'readLine', '(', ')', ';', 'line', '!=', 'null', ';', 'line', '=', 'r', '.', 'readLine', '(', ')', ')', '{', 'sb', '.', 'append', '(', 'line', ')', ';', '}', 'return', 'sb', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'URISyntaxException', 'e', ')', '{', 'throw', 'new', 'RtmApiException', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'catch', '(', 'ClientProtocolException', 'e', ')', '{', 'throw', 'new', 'RtmApiException', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']
Example 23 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'DBAccess', '', '(', 'String', 'pathToDb', ')', '{', 'if', '(', 'instance', '!=', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', ')', ';', '}', 'System', '.', 'setProperty', '(', '"', 'derby.system.home', '"', ',', 'pathToDb', ')', ';', 'try', '{', 'boolean', 'exists', '=', 'new', 'File', '(', 'pathToDb', ')', '.', 'exists', '(', ')', ';', 'new', 'EmbeddedDriver', '(', ')', ';', 'Properties', 'props', '=', 'new', 'Properties', '(', ')', ';', 'if', '(', 'exists', ')', '{', 'connection', '=', 'DriverManager', '.', 'getConnection', '(', 'protocol', '+', '"', 'rmpDB;', '"', ',', 'props', ')', ';', 'connection', '.', 'setAutoCommit', '(', 'true', ')', ';', 'Statement', 'statement', '=', 'connection', '.', 'createStatement', '(', ')', ';', 'try', '{', '}', 'finally', '{', 'statement', '.', 'close', '(', ')', ';', '}', '}', 'else', '{', 'connection', '=', 'DriverManager', '.', 'getConnection', '(', 'protocol', '+', '"', 'rmpDB;create=true', '"', ',', 'props', ')', ';', 'connection', '.', 'setAutoCommit', '(', 'true', ')', ';', 'URL', 'url', '=', 'Platform', '.', 'getBundle', '(', '"', 'ru.spbu.dorms.geo.rmp', '"', ')', '.', 'getResource', '(', '"', 'sql/createdb.sql', '"', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'StringBuilder', 'query', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'String', 's', '=', 'reader', '.', 'readLine', '(', ')', ';', 's', '!=', 'null', ';', 's', '=', 'reader', '.', 'readLine', '(', ')', ')', '{', 'if', '(', 'query', '.', 'length', '(', ')', '>', '0', ')', '{', 'query', '.', 'append', '(', "'');", '}', 'query', '.', 'append', '(', 's', ')', '', ';', '}', 'reader', '.', 'close', '(', ')', ';', 'Statement', 'statement', '=', 'connection', '.', 'createStatement', '(', ')', ';', 'try', '{', 'String', '[', ']', 'statements', '=', 'query', '.', 'toString', '(', ')', '.', 'split', '(', '"', ';(', '\\\\', 's)*', '"', ')', ';', 'for', '(', 'String', 's', ':', 'statements', ')', '{', 'statement', '.', 'execute', '(', 's', ')', ';', '}', '}', 'finally', '{', 'statement', '.', 'close', '(', ')', ';', '}', '}', '}', 'catch', '(', 'Exception', 'e', ')', '', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'instance', '=', 'this', ';', '}']
Example 24 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'URLConnection', 'openConnection', '(', 'String', 'string', ')', 'throws', 'ParserException', '{', 'final', 'String', 'prefix', '=', '"', 'file://localhost', '"', ';', 'String', 'resource', ';', 'URL', 'url', ';', 'StringBuffer', 'buffer', ';', 'URLConnection', 'ret', ';', 'try', '{', 'url', '=', 'new', 'URL', '(', 'fixSpaces', '(', 'string', ')', ')', ';', 'ret', '=', 'openConnection', '(', 'url', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'murle', ')', '{', 'try', '{', 'File', 'file', '=', 'new', 'File', '(', 'string', ')', ';', 'resource', '=', 'file', '.', 'getCanonicalPath', '(', ')', ';', 'buffer', '=', 'new', 'StringBuffer', '(', 'prefix', '.', 'length', '(', ')', '+', 'resource', '.', 'length', '(', ')', ')', ';', 'buffer', '.', 'append', '(', 'prefix', ')', ';', 'if', '(', '!', 'resource', '.', 'startsWith', '(', '"', '/', '"', ')', ')', 'buffer', '.', 'append', '(', '"', '/', '"', ')', ';', 'buffer', '.', 'append', '(', 'resource', ')', ';', 'url', '=', 'new', 'URL', '(', 'fixSpaces', '(', 'buffer', '.', 'toString', '(', ')', ')', ')', ';', 'ret', '=', 'openConnection', '(', 'url', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'murle2', ')', '{', 'String', 'msg', '=', '"', 'Error', 'in', 'opening', 'a', 'connection', 'to', '', '"', '+', 'string', ';', 'ParserException', 'ex', '=', 'new', 'ParserException', '(', 'msg', ',', 'murle2', ')', ';', 'throw', 'ex', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'String', 'msg', '=', '"', 'Error', 'in', 'opening', 'a', 'connection', 'to', '', '"', '+', 'string', ';', 'ParserException', 'ex', '=', 'new', 'ParserException', '(', 'msg', ',', 'ioe', ')', ';', 'throw', 'ex', ';', '}', '}', 'return', '(', 'ret', ')', ';', '}']
  >>  iter 1, ACC! in => conn (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 2, ACC! conn => In (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 3, ACC! In => init (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 4, ACC! init => In (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 5, ACC! In => init (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 6, ACC! init => pass (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 7, ACC! pass => inn (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 8, ACC! inn => plus (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 9, ACC! plus => init (0 => 0, 0.99943 => 0.99943) a=1.000
  >>  iter 10, ACC! init => as (0 => 0, 0.99943 => 0.99943) a=1.000
Example 25 attack result: {'succ': False, 'tokens': '    public URLConnection openConnection(String string) throws ParserException {\n        final String prefix = "file://localhost";\n        String resource;\n        URL url;\n        StringBuffer buffer;\n        URLConnection ret;\n        try {\n            url = new URL(fixSpaces(string));\n            ret = openConnection(url);\n        } catch (MalformedURLException murle) {\n            try {\n                File file = new File(string);\n                resource = file.getCanonicalPath();\n                buffer = new StringBuffer(prefix.length() + resource.length());\n                buffer.append(prefix);\n                if (!resource.startsWith("/")) buffer.append("/");\n                buffer.append(resource);\n                url = new URL(fixSpaces(buffer.toString()));\n                ret = openConnection(url);\n            } catch (MalformedURLException murle2) {\n                String msg = "Error in opening a connection to " + string;\n                ParserException ex = new ParserException(msg, murle2);\n                throw ex;\n            } catch (IOException ioe) {\n                String msg = "Error in opening a connection to " + string;\n                ParserException ex = new ParserException(msg, ioe);\n                throw ex;\n            }\n        }\n        return (ret);\n    }\n', 'raw_tokens': None, 'prog_length': 219, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'in': 'as'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 25 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 2.07 min
  curr succ rate = 0.0
Query times in this attack:  301
All Query times:  3630
raw_tokens: ['public', 'static', 'boolean', 'decodeFileToFile', '(', 'String', 'infile', ',', 'String', 'outfile', ')', '{', 'boolean', 'success', '=', 'false', ';', 'java', '.', 'io', '.', 'InputStream', 'in', '=', 'null', ';', 'java', '.', 'io', '.', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'Base64', '.', 'InputStream', '(', 'new', 'java', '.', 'io', '.', 'BufferedInputStream', '(', 'new', 'java', '.', 'io', '.', 'FileInputStream', '(', 'infile', ')', ')', ',', 'Base64', '.', 'DECODE', ')', ';', 'out', '=', 'new', 'java', '.', 'io', '.', 'BufferedOutputStream', '(', 'new', 'java', '.', 'io', '.', 'FileOutputStream', '(', 'outfile', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'success', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', 'try', '{', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', '}', 'return', 'success', ';', '}']
Example 26 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'extract', '(', 'CabFolder', 'cabfolder', ',', 'File', 'outputFolder', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'null', ';', 'OutputStream', 'out', '=', 'null', ';', 'File', 'file', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '2048', ']', ';', 'int', 'read', ',', 'remain', ',', 'maxread', '=', 'buffer', '.', 'length', ';', 'in', '=', 'new', 'CabFileInputStream', '(', 'cabfolder', ')', ';', 'CabEntry', '[', ']', 'cabentries', '=', 'this', '.', 'getEntries', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'cabentries', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', 'cabentries', '[', 'i', ']', '.', 'getCabFolder', '(', ')', '==', 'cabfolder', ')', '{', 'file', '=', 'new', 'File', '(', 'outputFolder', ',', 'cabentries', '[', 'i', ']', '.', 'getName', '(', ')', '.', 'replace', '(', "'\\\\'", ',', "'/'", ')', ')', ';', 'FileUtils', '.', 'createParents', '(', 'file', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'remain', '=', 'cabentries', '[', 'i', ']', '.', 'getInflatedSize', '(', ')', ';', 'while', '(', 'remain', '!=', '0', '&&', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ',', '0', ',', 'maxread', ')', ')', '!=', '-', '1', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', 'remain', '-=', 'read', ';', 'if', '(', 'buffer', '.', 'length', '>', 'remain', ')', 'maxread', '=', 'remain', ';', 'else', 'maxread', '=', 'buffer', '.', 'length', ';', '}', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 27 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'testParts', '(', ')', 'throws', 'Exception', '{', 'URL', 'url', '=', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResource', '(', '"', 'de/schlund/pfixxml/parts.xml', '"', ')', ';', 'InputSource', 'source', '=', 'new', 'InputSource', '(', 'url', '.', 'openStream', '(', ')', ')', ';', 'source', '.', 'setSystemId', '(', 'url', '.', 'toString', '(', ')', ')', ';', 'IncludePartsInfo', 'info', '=', 'IncludePartsInfoParser', '.', 'parse', '(', 'source', ')', ';', 'Map', '<', 'String', ',', 'IncludePartInfo', '>', 'parts', '=', 'info', '.', 'getParts', '(', ')', ';', 'assertEquals', '(', '3', ',', 'parts', '.', 'size', '(', ')', ')', ';', 'assertTrue', '(', 'parts', '.', 'containsKey', '(', '"', 'aaa', '"', ')', ')', ';', 'assertTrue', '(', 'parts', '.', 'containsKey', '(', '"', 'bbb', '"', ')', ')', ';', 'assertFalse', '(', 'parts', '.', 'containsKey', '(', '"', 'ccc', '"', ')', ')', ';', 'assertTrue', '(', 'parts', '.', 'containsKey', '(', '"', 'ddd', '"', ')', ')', ';', '}']
Example 28 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'generateSHA1', '(', 'final', 'String', 'data', ')', '{', 'final', 'StringBuilder', 'hash', '=', 'new', 'StringBuilder', '(', '40', ')', ';', 'try', '{', 'final', 'MessageDigest', 'sha1', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'sha1', '"', ')', ';', 'sha1', '.', 'update', '(', 'data', '.', 'getBytes', '(', ')', ')', ';', 'final', 'byte', '[', ']', 'digest', '=', 'sha1', '.', 'digest', '(', ')', ';', 'for', '(', 'byte', 'aDigest', ':', 'digest', ')', '{', 'String', 'hex', '=', 'Integer', '.', 'toHexString', '(', 'aDigest', ')', ';', 'if', '(', 'hex', '.', 'length', '(', ')', '==', '1', ')', '{', 'hex', '=', '"', '0', '"', '+', 'hex', ';', '}', 'hex', '=', 'hex', '.', 'substring', '(', 'hex', '.', 'length', '(', ')', '-', '2', ')', ';', 'hash', '.', 'append', '(', 'hex', ')', ';', '}', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', '}', 'return', 'hash', '.', 'toString', '(', ')', ';', '}']
Example 29 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copyFile', '(', 'File', 'src', ',', 'File', 'dst', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'dst', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
  >>  iter 1, ACC! read => READ (1 => 1, 0.99982 => 0.99982) a=1.002
  >>  iter 2, ACC! in => inc (1 => 1, 0.99982 => 0.99982) a=1.001
  >>  iter 3, ACC! inc => data (1 => 1, 0.99982 => 0.99982) a=1.003
  >>  iter 4, ACC! out => point (1 => 1, 0.99982 => 0.99982) a=1.001
  >>  iter 5, ACC! point => one (1 => 1, 0.99982 => 0.99982) a=1.005
  >>  iter 6, ACC! READ => Read (1 => 1, 0.99982 => 0.99982) a=1.003
  >>  iter 7, ACC! one => on (1 => 1, 0.99982 => 0.99982) a=1.003
  >>  iter 8, REJ. Read => lex (1 => 1, 0.99982 => 0.99982) a=0.999
  >>  iter 9, ACC! on => write (1 => 1, 0.99982 => 0.99982) a=1.003
  >>  iter 10, ACC! write => outer (1 => 1, 0.99982 => 0.99982) a=1.001
Example 30 attack result: {'succ': False, 'tokens': '    private void copyFile(File src, File dst) throws IOException {\n        InputStream data = new FileInputStream(src);\n        OutputStream outer = new FileOutputStream(dst);\n        byte[] buf = new byte[1024];\n        int len;\n        while ((len = data.Read(buf)) > 0) outer.outer(buf, 0, len);\n        data.close();\n        outer.close();\n    }\n', 'raw_tokens': None, 'prog_length': 84, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 6.3279003e-07, 'nb_changed_var': 3, 'nb_changed_pos': 7, 'replace_info': {'read': 'Read', 'in': 'data', 'out': 'outer'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 30 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 2.26 min
  curr succ rate = 0.0
Query times in this attack:  311
All Query times:  3941
raw_tokens: ['public', 'static', 'String', 'encodeMD5', '(', 'String', 's', ')', 'throws', 'NoSuchAlgorithmException', '{', 'MessageDigest', 'm', '=', 'null', ';', 'String', 'result', '=', 'null', ';', 'm', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'm', '.', 'update', '(', 's', '.', 'getBytes', '(', ')', ',', '0', ',', 's', '.', 'length', '(', ')', ')', ';', 'result', '=', 'new', 'BigInteger', '(', '1', ',', 'm', '.', 'digest', '(', ')', ')', '.', 'toString', '(', '16', ')', ';', 'if', '(', 'result', '.', 'length', '(', ')', '==', '31', ')', '{', 'result', '=', '"', '0', '"', '+', 'result', ';', '}', 'return', 'result', ';', '}']
Example 32 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'protected', 'void', 'parseContent', '(', 'StreamLimiter', 'streamLimiter', ',', 'LanguageEnum', 'lang', ')', 'throws', 'IOException', '{', 'File', 'tempFile', '=', 'File', '.', 'createTempFile', '(', '"', 'oss', '"', ',', '"', '.pptx', '"', ')', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fos', '=', 'new', 'FileOutputStream', '(', 'tempFile', ')', ';', 'IOUtils', '.', 'copy', '(', 'streamLimiter', '.', 'getNewInputStream', '(', ')', ',', 'fos', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'if', '(', 'fos', '!=', 'null', ')', 'IOUtils', '.', 'closeQuietly', '(', 'fos', ')', ';', 'throw', 'e', ';', '}', 'try', '{', 'XSLFSlideShow', 'pptSlideShow', '=', 'new', 'XSLFSlideShow', '(', 'tempFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'XSLFPowerPointExtractor', 'poiExtractor', '=', 'new', 'XSLFPowerPointExtractor', '(', 'pptSlideShow', ')', ';', 'CoreProperties', 'info', '=', 'poiExtractor', '.', 'getCoreProperties', '(', ')', ';', 'if', '(', 'info', '!=', 'null', ')', '{', 'addField', '(', 'ParserFieldEnum', '.', 'title', ',', 'info', '.', 'getTitle', '(', ')', ')', ';', 'addField', '(', 'ParserFieldEnum', '.', 'creator', ',', 'info', '.', 'getCreator', '(', ')', ')', ';', 'addField', '(', 'ParserFieldEnum', '.', 'subject', ',', 'info', '.', 'getSubject', '(', ')', ')', ';', 'addField', '(', 'ParserFieldEnum', '.', 'description', ',', 'info', '.', 'getDescription', '(', ')', ')', ';', 'addField', '(', 'ParserFieldEnum', '.', 'keywords', ',', 'info', '.', 'getKeywords', '(', ')', ')', ';', '}', 'String', 'content', '=', 'poiExtractor', '.', 'getText', '(', 'true', ',', 'true', ')', ';', 'addField', '(', 'ParserFieldEnum', '.', 'content', ',', 'StringUtils', '.', 'replaceConsecutiveSpaces', '(', 'content', ',', '"', '', '', '"', ')', ')', ';', 'langDetection', '(', '10000', ',', 'ParserFieldEnum', '.', 'content', ')', ';', '}', 'catch', '(', 'OpenXML4JException', 'e', ')', '{', 'throw', 'new', 'IOException', '(', 'e', ')', ';', '}', 'catch', '(', 'XmlException', 'e', ')', '{', 'throw', 'new', 'IOException', '(', 'e', ')', ';', '}', '}']
Example 33 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'handle', '(', ')', '{', 'if', '(', 'requestCounter', '==', '0', ')', '{', 'requestCounter', '++', ';', 'return', ';', '}', 'requestCounter', '++', ';', 'Iterator', 'it', '=', 'loggerTimeouts', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'String', 'host', '=', '(', 'String', ')', 'it', '.', 'next', '(', ')', ';', 'String', 'timeout', '=', '(', 'String', ')', 'loggerTimeouts', '.', 'get', '(', 'host', ')', ';', 'int', 'timeoutVal', '=', 'Integer', '.', 'parseInt', '(', 'timeout', ')', ';', 'if', '(', 'timeoutVal', '>', '0', ')', '{', 'timeoutVal', '/=', '10', ';', '}', 'int', 'timeoutMod', '=', '(', 'requestCounter', '%', 'timeoutVal', ')', ';', 'if', '(', 'timeoutMod', '==', '0', ')', '{', 'Object', 'loggerFile', '=', 'loggerFiles', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerFilenameObject', '=', 'loggerFilenames', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerDestObject', '=', 'loggerDests', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerCompressObject', '=', 'loggerCompresses', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerDayObject', '=', 'loggerDays', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerArchiveObject', '=', 'loggerArchives', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerDeleteObject', '=', 'loggerDeletes', '.', 'get', '(', 'host', ')', ';', 'boolean', 'rotateCompress', '=', 'false', ';', 'boolean', 'rotateDelete', '=', 'false', ';', 'String', 'rotateDest', '=', 'null', ';', 'String', 'logFile', '=', 'null', ';', 'String', 'rotateArchive', '=', 'null', ';', 'int', 'rotateDays', '=', '0', ';', 'if', '(', 'loggerCompressObject', '!=', 'null', '&&', '(', '(', 'String', ')', 'loggerCompressObject', ')', '.', 'equalsIgnoreCase', '(', '"', 'true', '"', ')', ')', '{', 'rotateCompress', '=', 'true', ';', '}', 'if', '(', 'loggerDeleteObject', '!=', 'null', '&&', '(', '(', 'String', ')', 'loggerDeleteObject', ')', '.', 'equalsIgnoreCase', '(', '"', 'true', '"', ')', ')', '{', 'rotateDelete', '=', 'true', ';', '}', 'if', '(', 'loggerDestObject', '!=', 'null', ')', '{', 'rotateDest', '=', '(', 'String', ')', 'loggerDestObject', ';', '}', 'if', '(', 'loggerFilenameObject', '!=', 'null', ')', '{', 'logFile', '=', '(', 'String', ')', 'loggerFilenameObject', ';', '}', 'if', '(', 'loggerArchiveObject', '!=', 'null', ')', '{', 'rotateArchive', '=', '(', 'String', ')', 'loggerArchiveObject', ';', '}', 'if', '(', 'loggerDayObject', '!=', 'null', ')', '{', 'rotateDays', '=', 'Integer', '.', 'parseInt', '(', '(', 'String', ')', 'loggerDayObject', ')', ';', '}', 'FileChannel', 'srcChannel', ',', 'destChannel', ';', 'String', 'destOutFile', '=', 'logFile', '+', '"', '.', '"', '+', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'String', 'destOutFileCompressed', '=', 'logFile', '+', '"', '.', '"', '+', 'System', '.', 'currentTimeMillis', '(', ')', '+', '"', '.gz', '"', ';', 'if', '(', 'rotateDest', '!=', 'null', ')', '{', '(', 'new', 'File', '(', 'rotateDest', ')', ')', '.', 'mkdirs', '(', ')', ';', 'if', '(', 'destOutFile', '.', 'indexOf', '(', '"', '/', '"', ')', '!=', '-', '1', ')', '{', 'destOutFile', '=', 'rotateDest', '+', '"', '/', '"', '+', 'destOutFile', '.', 'substring', '(', 'destOutFile', '.', 'lastIndexOf', '(', '"', '/', '"', ')', '+', '1', ')', ';', '}', 'if', '(', 'destOutFileCompressed', '.', 'indexOf', '(', '"', '/', '"', ')', '!=', '-', '1', ')', '{', 'destOutFileCompressed', '=', 'rotateDest', '+', '"', '/', '"', '+', 'destOutFileCompressed', '.', 'substring', '(', 'destOutFileCompressed', '.', 'lastIndexOf', '(', '"', '/', '"', ')', '+', '1', ')', ';', '}', '}', 'if', '(', 'rotateCompress', ')', '{', 'try', '{', 'GZIPOutputStream', 'out', '=', 'new', 'GZIPOutputStream', '(', 'new', 'FileOutputStream', '(', 'destOutFileCompressed', ')', ')', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'logFile', ')', ';', 'byte', 'buf', '[', ']', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'finish', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'Debug', '.', 'debug', '(', '"', 'Rotated', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "'", 'to', "'", '"', '+', 'destOutFileCompressed', '+', '"', "'", '"', ')', ';', 'buf', '=', 'null', ';', 'out', '=', 'null', ';', 'in', '=', 'null', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'Debug', '.', 'debug', '(', '"', 'Unable', 'to', 'rotate', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "':", '', '"', '+', 'e', ')', ';', '}', '}', 'else', '{', 'try', '{', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'logFile', ')', '.', 'getChannel', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'Debug', '.', 'debug', '(', '"', 'Unable', 'to', 'read', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "':", '', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', ';', '}', 'try', '{', 'destChannel', '=', 'new', 'FileOutputStream', '(', 'destOutFile', ')', '.', 'getChannel', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'Debug', '.', 'debug', '(', '"', 'Unable', 'to', 'rotate', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "'", 'to', "'", '"', '+', 'destOutFile', '+', '"', "':", '', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', ';', '}', 'try', '{', 'destChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'destChannel', '.', 'close', '(', ')', ';', 'destChannel', '=', 'null', ';', 'srcChannel', '=', 'null', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'Debug', '.', 'debug', '(', '"', 'Unable', 'to', 'copy', 'data', 'from', 'file', "'", '"', '+', 'logFile', '+', '"', "'", 'to', "'", '"', '+', 'destOutFile', '+', '"', "'", 'for', 'file', 'rotation:', '', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', ';', '}', 'Debug', '.', 'debug', '(', '"', 'Rotated', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "'", 'to', "'", '"', '+', 'destOutFile', '+', '"', "'", '"', ')', ';', '}', 'if', '(', 'rotateDelete', ')', '{', 'try', '{', '(', '(', 'PrintStream', ')', 'loggerFile', ')', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', 'new', 'File', '(', 'logFile', ')', ')', '.', 'delete', '(', ')', ';', 'loggerFiles', '.', 'remove', '(', 'host', ')', ';', 'addLogger', '(', 'host', ',', 'logFile', ')', ';', '}', 'if', '(', 'rotateDest', '!=', 'null', ')', '{', 'long', 'comparisonTime', '=', 'rotateDays', '*', '(', '60', '*', '60', '*', '24', '*', '1000', ')', ';', 'long', 'currentTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'File', 'fileList', '[', ']', '=', '(', 'new', 'File', '(', 'rotateDest', ')', ')', '.', 'listFiles', '(', ')', ';', 'DateFormat', 'format1', '=', 'new', 'SimpleDateFormat', '(', '"', 'yyyy-MM-dd', '"', ')', ';', 'java', '.', 'util', '.', 'Date', 'date', '=', 'new', 'java', '.', 'util', '.', 'Date', '(', 'currentTime', ')', ';', 'String', 'archiveFile', '=', 'format1', '.', 'format', '(', 'date', ')', '.', 'toString', '(', ')', '+', '"', '.zip', '"', ';', 'if', '(', 'rotateArchive', '!=', 'null', ')', '{', 'archiveFile', '=', 'rotateArchive', '+', '"', '/', '"', '+', 'archiveFile', ';', '(', 'new', 'File', '(', 'rotateArchive', ')', ')', '.', 'mkdirs', '(', ')', ';', '}', 'Archive', 'archive', '=', 'new', 'Archive', '(', 'archiveFile', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fileList', '.', 'length', ';', 'i', '++', ')', '{', 'String', 'currentFilename', '=', 'fileList', '[', 'i', ']', '.', 'getName', '(', ')', ';', 'long', 'timeDifference', '=', '(', 'currentTime', '-', 'fileList', '[', 'i', ']', '.', 'lastModified', '(', ')', ')', ';', 'if', '(', '(', 'rotateCompress', '&&', 'currentFilename', '.', 'endsWith', '(', '"', '.gz', '"', ')', ')', '||', '(', '!', 'rotateCompress', '&&', 'currentFilename', '.', 'indexOf', '(', 'logFile', '+', '"', '.', '"', ')', '!=', '-', '1', ')', ')', '{', 'if', '(', 'rotateDest', '!=', 'null', ')', '{', 'currentFilename', '=', 'rotateDest', '+', '"', '/', '"', '+', 'currentFilename', ';', '}', 'if', '(', 'timeDifference', '>', 'comparisonTime', ')', '{', 'archive', '.', 'addFile', '(', 'fileList', '[', 'i', ']', '.', 'getName', '(', ')', ',', 'currentFilename', ')', ';', 'fileList', '[', 'i', ']', '.', 'delete', '(', ')', ';', '}', '}', '}', 'fileList', '=', 'null', ';', 'format1', '=', 'null', ';', 'archive', '=', 'null', ';', '}', '}', '}', 'it', '=', 'null', ';', '}']
Example 34 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'unzip', '(', 'String', 'zipfile', ',', 'String', 'outputDirectory', ')', '{', 'try', '{', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'ZipInputStream', 'zipinputstream', '=', 'null', ';', 'ZipEntry', 'zipentry', ';', 'zipinputstream', '=', 'new', 'ZipInputStream', '(', 'new', 'FileInputStream', '(', 'zipfile', ')', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', 'while', '(', 'zipentry', '!=', 'null', ')', '{', 'String', 'entryName', '=', 'zipentry', '.', 'getName', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'entryname', '', '"', '+', 'entryName', ')', ';', 'int', 'n', ';', 'FileOutputStream', 'fileoutputstream', ';', 'File', 'newFile', '=', 'new', 'File', '(', 'entryName', ')', ';', 'String', 'directory', '=', 'newFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'directory', '==', 'null', ')', '{', 'if', '(', 'newFile', '.', 'isDirectory', '(', ')', ')', 'break', ';', '}', 'fileoutputstream', '=', 'new', 'FileOutputStream', '(', 'outputDirectory', '+', 'entryName', ')', ';', 'while', '(', '(', 'n', '=', 'zipinputstream', '.', 'read', '(', 'buf', ',', '0', ',', '1024', ')', ')', '>', '-', '1', ')', 'fileoutputstream', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', 'fileoutputstream', '.', 'close', '(', ')', ';', 'zipinputstream', '.', 'closeEntry', '(', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', '}', 'zipinputstream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! out => exec (1 => 1, 0.99988 => 0.99988) a=1.018
  >>  iter 2, ACC! exec => download (1 => 1, 0.99988 => 0.99988) a=1.014
  >>  iter 3, REJ. download => point (1 => 1, 0.99988 => 0.99988) a=0.989
  >>  iter 4, REJ. download => off (1 => 1, 0.99988 => 0.99988) a=0.992
  >>  iter 5, REJ. download => Out (1 => 1, 0.99988 => 0.99988) a=0.988
  >>  iter 6, REJ. download => point (1 => 1, 0.99988 => 0.99988) a=0.989
  >>  iter 7, REJ. download => sync (1 => 1, 0.99988 => 0.99988) a=0.987
  >>  iter 8, REJ. download => again (1 => 1, 0.99988 => 0.99988) a=0.992
  >>  iter 9, REJ. download => IN (1 => 1, 0.99988 => 0.99988) a=0.992
  >>  iter 10, REJ. download => IN (1 => 1, 0.99988 => 0.99988) a=0.988
Example 35 attack result: {'succ': False, 'tokens': '    public static void unzip(String zipfile, String outputDirectory) {\n        try {\n            byte[] buf = new byte[1024];\n            ZipInputStream zipinputstream = null;\n            ZipEntry zipentry;\n            zipinputstream = new ZipInputStream(new FileInputStream(zipfile));\n            zipentry = zipinputstream.getNextEntry();\n            while (zipentry != null) {\n                String entryName = zipentry.getName();\n                System.IN.println("entryname " + entryName);\n                int n;\n                FileOutputStream fileoutputstream;\n                File newFile = new File(entryName);\n                String directory = newFile.getParent();\n                if (directory == null) {\n                    if (newFile.isDirectory()) break;\n                }\n                fileoutputstream = new FileOutputStream(outputDirectory + entryName);\n                while ((n = zipinputstream.read(buf, 0, 1024)) > -1) fileoutputstream.write(buf, 0, n);\n                fileoutputstream.close();\n                zipinputstream.closeEntry();\n                zipentry = zipinputstream.getNextEntry();\n            }\n            zipinputstream.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 207, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 1.5409605e-06, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'out': 'download'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 35 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 2.46 min
  curr succ rate = 0.0
Query times in this attack:  314
All Query times:  4255
raw_tokens: ['public', 'void', 'CopyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'Exception', '{', 'FileInputStream', 'fis', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fis', '=', 'new', 'FileInputStream', '(', 'source', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'destination', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'fis', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fis', '!=', 'null', ')', '{', 'fis', '.', 'close', '(', ')', ';', '}', 'if', '(', 'fos', '!=', 'null', ')', '{', 'fos', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
Example 36 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'parse', '(', ')', '{', 'InputSource', 'urlInputStream', '=', 'null', ';', 'SAXParserFactory', 'spf', '=', 'null', ';', 'SAXParser', 'sp', '=', 'null', ';', 'HttpURLConnection', 'conn', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'this', '.', 'urlString', ')', ';', '_setProxy', '(', ')', ';', 'conn', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'urlInputStream', '=', 'new', 'InputSource', '(', 'StreamUtils', '.', 'inputStreamToReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'spf', '=', 'SAXParserFactory', '.', 'newInstance', '(', ')', ';', 'if', '(', 'spf', '!=', 'null', ')', '{', 'sp', '=', 'spf', '.', 'newSAXParser', '(', ')', ';', 'sp', '.', 'parse', '(', 'urlInputStream', ',', 'this', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'if', '(', 'conn', '!=', 'null', ')', '{', 'if', '(', 'conn', '.', 'getHeaderField', '(', '"', 'X-RateLimit-Limit', '"', ')', '!=', 'null', ')', '{', 'String', 'rateLimit', '=', 'conn', '.', 'getHeaderField', '(', '"', 'X-RateLimit-Limit', '"', ')', ';', 'String', 'rateRemaining', '=', 'conn', '.', 'getHeaderField', '(', '"', 'X-RateLimit-Remaining', '"', ')', ';', 'long', 'rateReset', '=', 'Long', '.', 'valueOf', '(', 'conn', '.', 'getHeaderField', '(', '"', 'X-RateLimit-Reset', '"', ')', ')', '*', '1000', ';', 'LOG', '.', 'warn', '(', '"', 'Possible', 'rate', 'limits?', '', 'LIMIT:', '"', '+', 'rateLimit', '+', '"', '', '', 'REMAINING:', '"', '+', 'rateRemaining', '+', '"', '', '', 'RESET:', '"', '+', 'new', 'Date', '(', 'rateReset', ')', ')', ';', '}', '}', 'e', '.', 'printStackTrace', '(', ')', ';', 'LOG', '.', 'warn', '(', '"', 'error', 'parsing', 'rss', 'feed', '"', ',', 'e', ')', ';', '}', 'finally', '{', '}', '}']
  >>  iter 1, ACC! url => Url (0 => 0, 0.99999 => 0.99999) a=1.221
  >>  iter 2, ACC! Url => f (0 => 0, 0.99999 => 0.99999) a=1.222
  >>  iter 3, ACC! f => address (0 => 0, 0.99999 => 0.99999) a=1.142
  >>  iter 4, ACC! address => api (0 => 0, 0.99999 => 0.99999) a=1.198
  >>  iter 5, ACC! api => job (0 => 0, 0.99999 => 0.99999) a=1.289
  >>  iter 6, ACC! job => reader (0 => 0, 0.99999 => 0.99999) a=1.247
  >>  iter 7, REJ. reader => service (0 => 0, 0.99999 => 0.99999) a=0.959
  >>  iter 8, REJ. reader => buffer (0 => 0, 0.99999 => 0.99999) a=0.959
  >>  iter 9, REJ. reader => ur (0 => 0, 0.99999 => 0.99999) a=0.959
  >>  iter 10, REJ. reader => location (0 => 0, 0.99999 => 0.99999) a=0.959
Example 37 attack result: {'succ': False, 'tokens': '    public void parse() {\n        InputSource urlInputStream = null;\n        SAXParserFactory spf = null;\n        SAXParser sp = null;\n        HttpURLConnection conn = null;\n        try {\n            URL location = new URL(this.urlString);\n            _setProxy();\n            conn = (HttpURLConnection) location.openConnection();\n            urlInputStream = new InputSource(StreamUtils.inputStreamToReader(conn.getInputStream()));\n            spf = SAXParserFactory.newInstance();\n            if (spf != null) {\n                sp = spf.newSAXParser();\n                sp.parse(urlInputStream, this);\n            }\n        } catch (Exception e) {\n            if (conn != null) {\n                if (conn.getHeaderField("X-RateLimit-Limit") != null) {\n                    String rateLimit = conn.getHeaderField("X-RateLimit-Limit");\n                    String rateRemaining = conn.getHeaderField("X-RateLimit-Remaining");\n                    long rateReset = Long.valueOf(conn.getHeaderField("X-RateLimit-Reset")) * 1000;\n                    LOG.warn("Possible rate limits?  LIMIT:" + rateLimit + "  REMAINING:" + rateRemaining + "  RESET:" + new Date(rateReset));\n                }\n            }\n            e.printStackTrace();\n            LOG.warn("error parsing rss feed", e);\n        } finally {\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 226, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -2.2649765e-06, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'reader'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 37 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 2.63 min
  curr succ rate = 0.0
Query times in this attack:  303
All Query times:  4558
raw_tokens: ['public', 'static', 'String', 'SHA1', '(', 'String', 'text', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'MessageDigest', 'md', ';', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'byte', '[', ']', 'sha1hash', '=', 'new', 'byte', '[', '40', ']', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'text', '.', 'length', '(', ')', ')', ';', 'sha1hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'sha1hash', ')', ';', '}']
  >>  iter 1, REJ. md => mag (0 => 0, 0.99980 => 0.99980) a=0.998
  >>  iter 2, REJ. md => pd (0 => 0, 0.99980 => 0.99980) a=0.998
  >>  iter 3, REJ. md => cmd (0 => 0, 0.99980 => 0.99980) a=0.998
  >>  iter 4, REJ. md => po (0 => 0, 0.99980 => 0.99980) a=0.998
  >>  iter 5, REJ. md => d (0 => 0, 0.99980 => 0.99980) a=0.998
  >>  iter 6, REJ. md => doc (0 => 0, 0.99980 => 0.99980) a=0.998
  >>  iter 7, REJ. md => gd (0 => 0, 0.99980 => 0.99980) a=0.995
  >>  iter 8, REJ. md =>  MD (0 => 0, 0.99980 => 0.99980) a=0.998
  >>  iter 9, REJ. md => wd (0 => 0, 0.99980 => 0.99980) a=0.998
  >>  iter 10, REJ. md => Cmd (0 => 0, 0.99980 => 0.99980) a=0.995
Example 38 attack result: {'succ': False, 'tokens': '    public static String SHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {\n        MessageDigest Cmd;\n        Cmd = MessageDigest.getInstance("SHA-1");\n        byte[] sha1hash = new byte[40];\n        Cmd.update(text.getBytes("iso-8859-1"), 0, text.length());\n        sha1hash = Cmd.digest();\n        return convertToHex(sha1hash);\n    }\n', 'raw_tokens': None, 'prog_length': 75, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -4.053116e-06, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 38 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 2.77 min
  curr succ rate = 0.0
Query times in this attack:  312
All Query times:  4870
raw_tokens: ['public', 'void', 'createPdf', '(', 'final', 'String', 'eventURI', ')', 'throws', 'IOException', ',', 'DocumentException', '{', 'createSections', '(', 'eventURI', ')', ';', 'even', '=', 'false', ';', 'final', 'Document', 'document', '=', 'new', 'Document', '(', 'Dimensions', '.', 'getDimension', '(', 'even', ',', 'Dimension', '.', 'MEDIABOX', ')', ')', ';', 'final', 'PdfWriter', 'writer', '=', 'PdfWriter', '.', 'getInstance', '(', 'document', ',', 'new', 'FileOutputStream', '(', 'MyProperties', '.', 'getOutput', '(', ')', ')', ')', ';', 'writer', '.', 'setViewerPreferences', '(', 'PdfWriter', '.', 'PageLayoutTwoColumnRight', ')', ';', 'writer', '.', 'setCropBoxSize', '(', 'Dimensions', '.', 'getDimension', '(', 'even', ',', 'Dimension', '.', 'CROPBOX', ')', ')', ';', 'writer', '.', 'setBoxSize', '(', '"', 'trim', '"', ',', 'Dimensions', '.', 'getDimension', '(', 'even', ',', 'Dimension', '.', 'TRIMBOX', ')', ')', ';', 'writer', '.', 'setBoxSize', '(', '"', 'bleed', '"', ',', 'Dimensions', '.', 'getDimension', '(', 'even', ',', 'Dimension', '.', 'BLEEDBOX', ')', ')', ';', 'final', 'EventBackgroundAndPageNumbers', 'event', '=', 'new', 'EventBackgroundAndPageNumbers', '(', ')', ';', 'writer', '.', 'setPageEvent', '(', 'event', ')', ';', 'document', '.', 'open', '(', ')', ';', 'final', 'PdfContentByte', 'content', '=', 'writer', '.', 'getDirectContent', '(', ')', ';', 'event', '.', 'setTabs', '(', 'Index', '.', 'INFO', '.', 'getTab', '(', ')', ')', ';', 'importPages', '(', 'document', ',', 'content', ',', 'new', 'PdfReader', '(', 'Index', '.', 'INFO', '.', 'getOutput', '(', ')', ')', ',', 'Index', '.', 'INFO', '.', 'getTitle', '(', ')', ')', ';', 'importPages', '(', 'document', ',', 'content', ',', 'MyProperties', '.', 'getBefore', '(', ')', ',', 'event', ')', ';', 'addAdPage', '(', 'document', ',', 'content', ')', ';', 'PdfReader', 'reader', '=', 'new', 'PdfReader', '(', 'Presentations', '.', 'INFO', '.', 'getOutput', '(', ')', ')', ';', 'String', '[', ']', 'titles', '=', '{', '"', '"', ',', '"', '"', '}', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'reader', '.', 'getNumberOfPages', '(', ')', ';', 'i', '++', ')', '{', 'titles', '=', 'index', '.', 'getSubtitle', '(', 'titles', ',', 'i', ')', ';', 'event', '.', 'setTabs', '(', 'titles', '[', '0', ']', '.', 'toLowerCase', '(', ')', ')', ';', 'addTitleLeft', '(', 'content', ',', 'Dimensions', '.', 'getTitleArea', '(', 'even', ')', ',', 'titles', '[', '0', ']', ',', 'MyFonts', '.', 'TITLE', ')', ';', 'addTitleRight', '(', 'content', ',', 'Dimensions', '.', 'getTitleArea', '(', 'even', ')', ',', 'titles', '[', '1', ']', ',', 'MyFonts', '.', 'DATE', ')', ';', 'content', '.', 'addTemplate', '(', 'writer', '.', 'getImportedPage', '(', 'reader', ',', 'i', ')', ',', 'Dimensions', '.', 'getOffsetX', '(', 'even', ')', ',', 'Dimensions', '.', 'getOffsetY', '(', 'even', ')', ')', ';', 'document', '.', 'newPage', '(', ')', ';', 'even', '=', '!', 'even', ';', '}', 'addAdPage', '(', 'document', ',', 'content', ')', ';', 'importPages', '(', 'document', ',', 'content', ',', 'MyProperties', '.', 'getAfter', '(', ')', ',', 'event', ')', ';', 'int', 'total', '=', 'writer', '.', 'getPageNumber', '(', ')', '-', '1', ';', 'event', '.', 'setNoMorePageNumbers', '(', ')', ';', 'event', '.', 'setTabs', '(', 'Schedules', '.', 'INFO', '.', 'getTab', '(', ')', ')', ';', 'reader', '=', 'new', 'PdfReader', '(', 'Schedules', '.', 'INFO', '.', 'getOutput', '(', ')', ')', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'reader', '.', 'getNumberOfPages', '(', ')', ';', 'i', '++', ')', '{', 'addTitleLeft', '(', 'content', ',', 'Dimensions', '.', 'getTitleArea', '(', 'even', ')', ',', 'Schedules', '.', 'INFO', '.', 'getTitle', '(', ')', ',', 'MyFonts', '.', 'TITLE', ')', ';', 'content', '.', 'addTemplate', '(', 'writer', '.', 'getImportedPage', '(', 'reader', ',', 'i', ')', ',', 'Dimensions', '.', 'getOffsetX', '(', 'even', ')', ',', 'Dimensions', '.', 'getOffsetY', '(', 'even', ')', ')', ';', 'document', '.', 'newPage', '(', ')', ';', 'even', '=', '!', 'even', ';', '}', 'document', '.', 'close', '(', ')', ';', 'final', 'File', 'file', '=', 'new', 'File', '(', 'MyProperties', '.', 'getOutput', '(', ')', ')', ';', 'final', 'byte', '[', ']', 'original', '=', 'new', 'byte', '[', '(', 'int', ')', 'file', '.', 'length', '(', ')', ']', ';', 'final', 'FileInputStream', 'f', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'f', '.', 'read', '(', 'original', ')', ';', 'reader', '=', 'new', 'PdfReader', '(', 'original', ')', ';', 'final', 'List', '<', 'Integer', '>', 'ranges', '=', 'new', 'ArrayList', '<', 'Integer', '>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'total', ';', 'i', '++', ')', '{', 'ranges', '.', 'add', '(', 'i', ')', ';', 'if', '(', 'i', '==', 'total', '/', '2', ')', '{', 'for', '(', 'int', 'j', '=', 'total', '+', '1', ';', 'j', '<=', 'reader', '.', 'getNumberOfPages', '(', ')', ';', 'j', '++', ')', '{', 'ranges', '.', 'add', '(', 'j', ')', ';', '}', '}', '}', 'reader', '.', 'selectPages', '(', 'ranges', ')', ';', 'final', 'PdfStamper', 'stamper', '=', 'new', 'PdfStamper', '(', 'reader', ',', 'new', 'FileOutputStream', '(', 'MyProperties', '.', 'getOutput', '(', ')', ')', ')', ';', 'stamper', '.', 'close', '(', ')', ';', '}']
Example 39 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'getHtmlPage', '(', 'URL', 'url', ')', '{', 'String', 'html', '=', 'null', ';', 'try', '{', 'BufferedReader', 'br', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openConnection', '(', ')', '.', 'getInputStream', '(', ')', ')', ')', ';', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'br', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'sb', '.', 'append', '(', 'line', ')', '.', 'append', '(', '"', '', '"', ')', ';', '}', 'br', '.', 'close', '(', ')', ';', 'html', '=', 'sb', '.', 'toString', '(', ')', '.', 'replaceAll', '(', 'HTML_FILTER_RE', ',', '"', '', '', '"', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'html', ';', '}']
Example 40 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'Scanner', 'loadSource', '(', 'String', 'country', ')', '{', 'if', '(', 'httpProxy', '!=', 'null', '&&', 'httpProxy', '.', 'isEnabled', '(', ')', ')', '{', 'System', '.', 'setProperty', '(', '"', 'proxySet', '"', ',', '"', 'true', '"', ')', ';', 'System', '.', 'setProperty', '(', '"', 'http.proxyHost', '"', ',', 'httpProxy', '.', 'getUrl', '(', ')', ')', ';', 'System', '.', 'setProperty', '(', '"', 'http.proxyPort', '"', ',', 'Integer', '.', 'toString', '(', 'httpProxy', '.', 'getPort', '(', ')', ')', ')', ';', '}', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'this', '.', 'url', '+', 'country', ')', ';', 'HttpURLConnection', 'connection', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'connection', '.', 'setRequestMethod', '(', '"', 'GET', '"', ')', ';', 'connection', '.', 'setUseCaches', '(', 'false', ')', ';', 'return', 'new', 'Scanner', '(', 'connection', '.', 'getInputStream', '(', ')', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'return', 'null', ';', '}', 'catch', '(', 'ProtocolException', 'e', ')', '{', 'return', 'null', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'return', 'null', ';', '}', '}']
  >>  iter 1, ACC! url => user (0 => 0, 0.99997 => 0.99998) a=1.009
  >>  iter 2, ACC! user => fl (0 => 0, 0.99998 => 0.99998) a=1.098
  >>  iter 3, ACC! fl => connection (0 => 0, 0.99998 => 0.99997) a=1.078
  >>  iter 4, ACC! connection => channel (0 => 0, 0.99997 => 0.99998) a=1.047
  >>  iter 5, ACC! channel => fl (0 => 0, 0.99998 => 0.99998) a=1.098
  >>  iter 6, ACC! fl => service (0 => 0, 0.99998 => 0.99998) a=1.136
  >>  iter 7, ACC! service => feed (0 => 0, 0.99998 => 0.99998) a=1.131
  >>  iter 8, ACC! feed => connection (0 => 0, 0.99998 => 0.99997) a=1.108
  >>  iter 9, ACC! connection => user (0 => 0, 0.99997 => 0.99998) a=1.047
  >>  iter 10, ACC! user => web (0 => 0, 0.99998 => 0.99997) a=1.120
Example 41 attack result: {'succ': False, 'tokens': '    protected Scanner loadSource(String country) {\n        if (httpProxy != null && httpProxy.isEnabled()) {\n            System.setProperty("proxySet", "true");\n            System.setProperty("http.proxyHost", httpProxy.getUrl());\n            System.setProperty("http.proxyPort", Integer.toString(httpProxy.getPort()));\n        }\n        try {\n            URL web = new URL(this.web + country);\n            HttpURLConnection web = (HttpURLConnection) web.openConnection();\n            web.setRequestMethod("GET");\n            web.setUseCaches(false);\n            return new Scanner(web.getInputStream());\n        } catch (MalformedURLException e) {\n            return null;\n        } catch (ProtocolException e) {\n            return null;\n        } catch (IOException e) {\n            return null;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 156, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 1.7881393e-06, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'url': 'web'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 41 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 2.95 min
  curr succ rate = 0.0
Query times in this attack:  310
All Query times:  5180
raw_tokens: ['public', 'static', 'void', 'doVersionCheck', '(', 'View', 'view', ')', '{', 'view', '.', 'showWaitCursor', '(', ')', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'jEdit', '.', 'getProperty', '(', '"', 'version-check.url', '"', ')', ')', ';', 'InputStream', 'in', '=', 'url', '.', 'openStream', '(', ')', ';', 'BufferedReader', 'bin', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'in', ')', ')', ';', 'String', 'line', ';', 'String', 'version', '=', 'null', ';', 'String', 'build', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'bin', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'line', '.', 'startsWith', '(', '"', '.version', '"', ')', ')', 'version', '=', 'line', '.', 'substring', '(', '8', ')', '.', 'trim', '(', ')', ';', 'else', 'if', '(', 'line', '.', 'startsWith', '(', '"', '.build', '"', ')', ')', 'build', '=', 'line', '.', 'substring', '(', '6', ')', '.', 'trim', '(', ')', ';', '}', 'bin', '.', 'close', '(', ')', ';', 'if', '(', 'version', '!=', 'null', '&&', 'build', '!=', 'null', ')', '{', 'if', '(', 'jEdit', '.', 'getBuild', '(', ')', '.', 'compareTo', '(', 'build', ')', '<', '0', ')', 'newVersionAvailable', '(', 'view', ',', 'version', ',', 'url', ')', ';', 'else', '{', 'GUIUtilities', '.', 'message', '(', 'view', ',', '"', 'version-check', '"', '+', '"', '.up-to-date', '"', ',', 'new', 'String', '[', '0', ']', ')', ';', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'String', '[', ']', 'args', '=', '{', 'jEdit', '.', 'getProperty', '(', '"', 'version-check.url', '"', ')', ',', 'e', '.', 'toString', '(', ')', '}', ';', 'GUIUtilities', '.', 'error', '(', 'view', ',', '"', 'read-error', '"', ',', 'args', ')', ';', '}', 'view', '.', 'hideWaitCursor', '(', ')', ';', '}']
  >>  iter 1, REJ. in => resource (0 => 0, 0.99990 => 0.99990) a=0.995
  >>  iter 2, REJ. in => inc (0 => 0, 0.99990 => 0.99990) a=0.995
  >>  iter 3, REJ. in => ini (0 => 0, 0.99990 => 0.99990) a=0.994
  >>  iter 4, REJ. in => ax (0 => 0, 0.99990 => 0.99990) a=0.995
  >>  iter 5, REJ. in => image (0 => 0, 0.99990 => 0.99990) a=0.995
  >>  iter 6, REJ. in => inc (0 => 0, 0.99990 => 0.99990) a=0.995
  >>  iter 7, REJ. in => serv (0 => 0, 0.99990 => 0.99990) a=0.995
  >>  iter 8, REJ. in => din (0 => 0, 0.99990 => 0.99990) a=0.991
  >>  iter 9, REJ. in => bin (0 => 0, 0.99990 => 0.99990) a=0.995
  >>  iter 10, REJ. in => stream (0 => 0, 0.99990 => 0.99990) a=0.991
Example 42 attack result: {'succ': False, 'tokens': '    public static void doVersionCheck(View view) {\n        view.showWaitCursor();\n        try {\n            URL url = new URL(jEdit.getProperty("version-check.url"));\n            InputStream stream = url.openStream();\n            BufferedReader bin = new BufferedReader(new InputStreamReader(stream));\n            String line;\n            String version = null;\n            String build = null;\n            while ((line = bin.readLine()) != null) {\n                if (line.startsWith(".version")) version = line.substring(8).trim(); else if (line.startsWith(".build")) build = line.substring(6).trim();\n            }\n            bin.close();\n            if (version != null && build != null) {\n                if (jEdit.getBuild().compareTo(build) < 0) newVersionAvailable(view, version, url); else {\n                    GUIUtilities.message(view, "version-check" + ".up-to-date", new String[0]);\n                }\n            }\n        } catch (IOException e) {\n            String[] args = { jEdit.getProperty("version-check.url"), e.toString() };\n            GUIUtilities.error(view, "read-error", args);\n        }\n        view.hideWaitCursor();\n    }\n', 'raw_tokens': None, 'prog_length': 249, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -1.3113022e-06, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 42 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 3.10 min
  curr succ rate = 0.0
Query times in this attack:  306
All Query times:  5486
raw_tokens: ['private', 'String', 'callBambooApi', '(', 'URL', 'theURL', ')', 'throws', 'MonitoringException', ',', 'BambooTicketNeedToBeRenewedError', '{', 'String', 'returnedValue', '=', 'null', ';', 'HttpURLConnection', 'urlConnection', '=', 'null', ';', 'BufferedReader', 'urlConnectionReader', '=', 'null', ';', 'try', '{', 'urlConnection', '=', '(', 'HttpURLConnection', ')', 'theURL', '.', 'openConnection', '(', ')', ';', 'urlConnection', '.', 'connect', '(', ')', ';', 'urlConnectionReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'urlConnection', '.', 'getInputStream', '(', ')', ')', ')', ';', 'String', 'line', '=', 'null', ';', 'StringBuffer', 'serverResponse', '=', 'new', 'StringBuffer', '(', ')', ';', 'while', '(', '(', 'line', '=', 'urlConnectionReader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'serverResponse', '.', 'append', '(', 'line', ')', ';', '}', 'returnedValue', '=', 'serverResponse', '.', 'toString', '(', ')', ';', 'if', '(', 'returnedValue', '.', 'contains', '(', '"', '<title>Bamboo', 'Setup', 'Wizard', '-', 'Atlassian', 'Bamboo</title>', '"', ')', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Your', 'Bamboo', 'server', 'installation', 'is', 'not', 'finished', '!', 'Double', 'click', 'here', 'to', 'complete', 'the', 'Bamboo', 'Setup', 'Wizard', '!', '"', ',', 'getMainPageURI', '(', ')', ')', ';', '}', 'InputSource', 'is', '=', 'new', 'InputSource', '(', 'new', 'StringReader', '(', 'serverResponse', '.', 'toString', '(', ')', ')', ')', ';', 'XPath', 'xpath', '=', 'XPathFactory', '.', 'newInstance', '(', ')', '.', 'newXPath', '(', ')', ';', 'String', 'error', '=', 'xpath', '.', 'evaluate', '(', '"', '/errors/error', '"', ',', 'is', ')', ';', 'if', '(', '!', '"', '"', '.', 'equals', '(', 'error', ')', ')', '{', 'if', '(', '"', 'User', 'not', 'authenticated', 'yet,', 'or', 'session', 'timed', 'out.', '"', '.', 'equals', '(', 'error', ')', ')', '{', 'throw', 'new', 'BambooTicketNeedToBeRenewedError', '(', ')', ';', '}', 'else', '{', 'boolean', 'isErrorOptionsRelated', '=', 'false', ';', 'URI', 'uriForNonOptionsRelatedErrors', '=', 'getMainPageURI', '(', ')', ';', 'if', '(', '"', 'Invalid', 'username', 'or', 'password.', '"', '.', 'equals', '(', 'error', ')', ')', '{', 'isErrorOptionsRelated', '=', 'true', ';', '}', 'if', '(', '"', 'The', 'remote', 'API', 'has', 'been', 'disabled.', '"', '.', 'equals', '(', 'error', ')', ')', '{', 'error', '+=', '"', '', 'Double', 'click', 'here', 'to', 'enable', 'it.', '"', ';', 'try', '{', 'synchronized', '(', 'this', '.', 'bambooProperties', ')', '{', 'uriForNonOptionsRelatedErrors', '=', 'new', 'URI', '(', 'this', '.', 'bambooProperties', '.', 'getServerBaseUrl', '(', ')', '+', '"', '/admin/configure!default.action', '"', ')', ';', '}', '}', 'catch', '(', 'URISyntaxException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}', 'throw', 'new', 'MonitoringException', '(', '"', 'Error', 'reported', 'by', 'the', 'Bamboo', 'server:', '', '"', '+', 'error', ',', 'isErrorOptionsRelated', ',', 'uriForNonOptionsRelatedErrors', ')', ';', '}', '}', '}', 'catch', '(', 'ClassCastException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'the', 'base', 'URL', 'defined', 'for', 'the', 'Bamboo', 'server', 'in', 'Options', 'is', 'not', 'an', 'http', 'URL.', '"', ',', 'true', ',', 'null', ')', ';', '}', 'catch', '(', 'UnknownHostException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'cannot', 'find', 'host', '', '"', '+', 'theURL', '.', 'getHost', '(', ')', '+', '"', '', 'on', 'the', 'network.', '"', ',', 'true', ',', 'null', ')', ';', '}', 'catch', '(', 'ConnectException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'cannot', 'connect', 'to', 'port', '', '"', '+', 'theURL', '.', 'getPort', '(', ')', '+', '"', '', 'on', 'host', '', '"', '+', 'theURL', '.', 'getHost', '(', ')', '+', '"', '.', '"', ',', 'true', ',', 'null', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'cannot', 'find', 'the', 'Bamboo', 'server', 'REST', 'api', 'using', 'the', 'base', 'URL', 'defined', 'for', 'the', 'Bamboo', 'server', 'in', 'Options.', 'Seems', 'that', 'this', 'URL', 'is', 'not', 'the', 'one', 'to', 'your', 'Bamboo', 'server', 'home', 'page...', '"', ',', 'true', ',', 'null', ')', ';', '}', 'catch', '(', 'SocketException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'network', 'error,', 'connection', 'lost.', '"', ',', 'null', ')', ';', '}', 'catch', '(', 'XPathExpressionException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'the', 'Bamboo', 'Server', 'returned', 'an', 'unexpected', 'content', 'for', 'attribute', '<error>:', '', '"', '+', 'returnedValue', ',', 'null', ')', ';', '}', 'catch', '(', 'MonitoringException', 'e', ')', '{', 'throw', 'e', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'throw', 'new', 'MonitoringException', '(', 't', ',', 'null', ')', ';', '}', 'finally', '{', 'if', '(', 'urlConnectionReader', '!=', 'null', ')', '{', 'try', '{', 'urlConnectionReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'if', '(', 'urlConnection', '!=', 'null', ')', '{', 'urlConnection', '.', 'disconnect', '(', ')', ';', '}', '}', 'return', 'returnedValue', ';', '}']
  >>  iter 1, ACC! in => again (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 2, ACC! again => din (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 3, ACC! din => n (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 4, ACC! n => into (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 5, ACC! into => f (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 6, ACC! f => ini (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 7, ACC! ini => as (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 8, ACC! as => init (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 9, ACC! init => r (0 => 0, 0.99871 => 0.99871) a=1.000
  >>  iter 10, ACC! r => s (0 => 0, 0.99871 => 0.99871) a=1.000
Example 43 attack result: {'succ': False, 'tokens': '    private String callBambooApi(URL theURL) throws MonitoringException, BambooTicketNeedToBeRenewedError {\n        String returnedValue = null;\n        HttpURLConnection urlConnection = null;\n        BufferedReader urlConnectionReader = null;\n        try {\n            urlConnection = (HttpURLConnection) theURL.openConnection();\n            urlConnection.connect();\n            urlConnectionReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));\n            String line = null;\n            StringBuffer serverResponse = new StringBuffer();\n            while ((line = urlConnectionReader.readLine()) != null) {\n                serverResponse.append(line);\n            }\n            returnedValue = serverResponse.toString();\n            if (returnedValue.contains("<title>Bamboo Setup Wizard - Atlassian Bamboo</title>")) {\n                throw new MonitoringException("Your Bamboo server installation is not finished ! Double click here to complete the Bamboo Setup Wizard !", getMainPageURI());\n            }\n            InputSource is = new InputSource(new StringReader(serverResponse.toString()));\n            XPath xpath = XPathFactory.newInstance().newXPath();\n            String error = xpath.evaluate("/errors/error", is);\n            if (!"".equals(error)) {\n                if ("User not authenticated yet, or session timed out.".equals(error)) {\n                    throw new BambooTicketNeedToBeRenewedError();\n                } else {\n                    boolean isErrorOptionsRelated = false;\n                    URI uriForNonOptionsRelatedErrors = getMainPageURI();\n                    if ("Invalid username or password.".equals(error)) {\n                        isErrorOptionsRelated = true;\n                    }\n                    if ("The remote API has been disabled.".equals(error)) {\n                        error += " Double click here to enable it.";\n                        try {\n                            synchronized (this.bambooProperties) {\n                                uriForNonOptionsRelatedErrors = new URI(this.bambooProperties.getServerBaseUrl() + "/admin/configure!default.action");\n                            }\n                        } catch (URISyntaxException e) {\n                            throw new RuntimeException(e);\n                        }\n                    }\n                    throw new MonitoringException("Error reported by the Bamboo server: " + error, isErrorOptionsRelated, uriForNonOptionsRelatedErrors);\n                }\n            }\n        } catch (ClassCastException e) {\n            throw new MonitoringException("Problem: the base URL defined for the Bamboo server in Options is not an http URL.", true, null);\n        } catch (UnknownHostException e) {\n            throw new MonitoringException("Problem: cannot find host " + theURL.getHost() + " on the network.", true, null);\n        } catch (ConnectException e) {\n            throw new MonitoringException("Problem: cannot connect to port " + theURL.getPort() + " on host " + theURL.getHost() + ".", true, null);\n        } catch (FileNotFoundException e) {\n            throw new MonitoringException("Problem: cannot find the Bamboo server REST api using the base URL defined for the Bamboo server in Options. Seems that this URL is not the one to your Bamboo server home page...", true, null);\n        } catch (SocketException e) {\n            throw new MonitoringException("Problem: network error, connection lost.", null);\n        } catch (XPathExpressionException e) {\n            throw new MonitoringException("Problem: the Bamboo Server returned an unexpected content for attribute <error>: " + returnedValue, null);\n        } catch (MonitoringException e) {\n            throw e;\n        } catch (Throwable t) {\n            throw new MonitoringException(t, null);\n        } finally {\n            if (urlConnectionReader != null) {\n                try {\n                    urlConnectionReader.close();\n                } catch (IOException e) {\n                }\n            }\n            if (urlConnection != null) {\n                urlConnection.disconnect();\n            }\n        }\n        return returnedValue;\n    }\n', 'raw_tokens': None, 'prog_length': 537, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'in': 's'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 43 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 3.29 min
  curr succ rate = 0.0
Query times in this attack:  294
All Query times:  5780
raw_tokens: ['@', 'Test', 'public', 'void', 'testCopy_readerToOutputStream_Encoding_nullIn', '(', ')', 'throws', 'Exception', '{', 'ByteArrayOutputStream', 'baout', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'OutputStream', 'out', '=', 'new', 'YellOnFlushAndCloseOutputStreamTest', '(', 'baout', ',', 'true', ',', 'true', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', '(', 'Reader', ')', 'null', ',', 'out', ',', '"', 'UTF16', '"', ')', ';', 'fail', '(', ')', ';', '}', 'catch', '(', 'NullPointerException', 'ex', ')', '{', '}', '}']
Example 44 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', 'argv', '[', ']', ')', '{', 'String', 'cp', '=', 'System', '.', 'getProperty', '(', '"', 'java.class.path', '"', ')', ';', 'String', 'sep', '=', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', ';', 'String', 'dirpath', '=', 'cp', '.', 'substring', '(', '0', ',', 'cp', '.', 'lastIndexOf', '(', 'sep', ')', ')', ';', 'String', 'jarpath', '=', 'dirpath', '+', '"', '/WiiRemoteJ.jar', '"', ';', 'if', '(', '!', 'new', 'File', '(', 'jarpath', ')', '.', 'exists', '(', ')', ')', '{', 'try', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'getting', 'WiiRemoteJ', 'file', 'from', 'remote', 'source...', '"', ')', ';', 'URL', 'wiiRemLoc', '=', 'new', 'URL', '(', '"', 'http://www.world-of-cha0s.hostrocket.com/WiiRemoteJ/WiiRemoteJ%20v1.5.zip.gz', '"', ')', ';', 'GZIPInputStream', 'input', '=', 'new', 'GZIPInputStream', '(', 'wiiRemLoc', '.', 'openStream', '(', ')', ')', ';', 'String', 'temploc', '=', 'copyInputStreamToTmpFile', '(', 'input', ',', '"', '.zip', '"', ')', ';', 'ZipInputStream', 'zipIn', '=', 'new', 'ZipInputStream', '(', 'new', 'FileInputStream', '(', 'temploc', ')', ')', ';', 'ZipEntry', 'i', '=', 'null', ';', 'while', '(', '(', 'i', '=', 'zipIn', '.', 'getNextEntry', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'i', '.', 'getName', '(', ')', '.', 'endsWith', '(', '"', 'WiiRemoteJ.jar', '"', ')', ')', '{', 'File', 'outjar', '=', 'new', 'File', '(', 'jarpath', ')', ';', 'BufferedOutputStream', 'fs', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outjar', ')', ')', ';', 'int', 'bufferSize', '=', '8192', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'bufferSize', ']', ';', 'int', 'readSize', '=', '0', ';', 'while', '(', '(', 'readSize', '=', 'zipIn', '.', 'read', '(', 'buffer', ',', '0', ',', 'bufferSize', ')', ')', '!=', '-', '1', ')', '{', 'fs', '.', 'write', '(', 'buffer', ',', '0', ',', 'readSize', ')', ';', '}', 'fs', '.', 'close', '(', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'unpacked', 'into', 'classpath.', '"', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'Boogiepants', '.', 'main', '(', 'argv', ')', ';', '}']
Example 45 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'callBambooApi', '(', 'URL', 'theURL', ')', 'throws', 'MonitoringException', ',', 'BambooTicketNeedToBeRenewedError', '{', 'String', 'returnedValue', '=', 'null', ';', 'HttpURLConnection', 'urlConnection', '=', 'null', ';', 'BufferedReader', 'urlConnectionReader', '=', 'null', ';', 'try', '{', 'urlConnection', '=', '(', 'HttpURLConnection', ')', 'theURL', '.', 'openConnection', '(', ')', ';', 'urlConnection', '.', 'connect', '(', ')', ';', 'urlConnectionReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'urlConnection', '.', 'getInputStream', '(', ')', ')', ')', ';', 'String', 'line', '=', 'null', ';', 'StringBuffer', 'serverResponse', '=', 'new', 'StringBuffer', '(', ')', ';', 'while', '(', '(', 'line', '=', 'urlConnectionReader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'serverResponse', '.', 'append', '(', 'line', ')', ';', '}', 'returnedValue', '=', 'serverResponse', '.', 'toString', '(', ')', ';', 'if', '(', 'returnedValue', '.', 'contains', '(', '"', '<title>Bamboo', 'Setup', 'Wizard', '-', 'Atlassian', 'Bamboo</title>', '"', ')', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Your', 'Bamboo', 'server', 'installation', 'is', 'not', 'finished', '!', 'Double', 'click', 'here', 'to', 'complete', 'the', 'Bamboo', 'Setup', 'Wizard', '!', '"', ',', 'getMainPageURI', '(', ')', ')', ';', '}', 'InputSource', 'is', '=', 'new', 'InputSource', '(', 'new', 'StringReader', '(', 'serverResponse', '.', 'toString', '(', ')', ')', ')', ';', 'XPath', 'xpath', '=', 'XPathFactory', '.', 'newInstance', '(', ')', '.', 'newXPath', '(', ')', ';', 'String', 'error', '=', 'xpath', '.', 'evaluate', '(', '"', '/errors/error', '"', ',', 'is', ')', ';', 'if', '(', '!', '"', '"', '.', 'equals', '(', 'error', ')', ')', '{', 'if', '(', '"', 'User', 'not', 'authenticated', 'yet,', 'or', 'session', 'timed', 'out.', '"', '.', 'equals', '(', 'error', ')', ')', '{', 'throw', 'new', 'BambooTicketNeedToBeRenewedError', '(', ')', ';', '}', 'else', '{', 'boolean', 'isErrorOptionsRelated', '=', 'false', ';', 'URI', 'uriForNonOptionsRelatedErrors', '=', 'getMainPageURI', '(', ')', ';', 'if', '(', '"', 'Invalid', 'username', 'or', 'password.', '"', '.', 'equals', '(', 'error', ')', ')', '{', 'isErrorOptionsRelated', '=', 'true', ';', '}', 'if', '(', '"', 'The', 'remote', 'API', 'has', 'been', 'disabled.', '"', '.', 'equals', '(', 'error', ')', ')', '{', 'error', '+=', '"', '', 'Double', 'click', 'here', 'to', 'enable', 'it.', '"', ';', 'try', '{', 'synchronized', '(', 'this', '.', 'bambooProperties', ')', '{', 'uriForNonOptionsRelatedErrors', '=', 'new', 'URI', '(', 'this', '.', 'bambooProperties', '.', 'getServerBaseUrl', '(', ')', '+', '"', '/admin/configure!default.action', '"', ')', ';', '}', '}', 'catch', '(', 'URISyntaxException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}', 'throw', 'new', 'MonitoringException', '(', '"', 'Error', 'reported', 'by', 'the', 'Bamboo', 'server:', '', '"', '+', 'error', ',', 'isErrorOptionsRelated', ',', 'uriForNonOptionsRelatedErrors', ')', ';', '}', '}', '}', 'catch', '(', 'ClassCastException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'the', 'base', 'URL', 'defined', 'for', 'the', 'Bamboo', 'server', 'in', 'Options', 'is', 'not', 'an', 'http', 'URL.', '"', ',', 'true', ',', 'null', ')', ';', '}', 'catch', '(', 'UnknownHostException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'cannot', 'find', 'host', '', '"', '+', 'theURL', '.', 'getHost', '(', ')', '+', '"', '', 'on', 'the', 'network.', '"', ',', 'true', ',', 'null', ')', ';', '}', 'catch', '(', 'ConnectException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'cannot', 'connect', 'to', 'port', '', '"', '+', 'theURL', '.', 'getPort', '(', ')', '+', '"', '', 'on', 'host', '', '"', '+', 'theURL', '.', 'getHost', '(', ')', '+', '"', '.', '"', ',', 'true', ',', 'null', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'cannot', 'find', 'the', 'Bamboo', 'server', 'REST', 'api', 'using', 'the', 'base', 'URL', 'defined', 'for', 'the', 'Bamboo', 'server', 'in', 'Options.', 'Seems', 'that', 'this', 'URL', 'is', 'not', 'the', 'one', 'to', 'your', 'Bamboo', 'server', 'home', 'page...', '"', ',', 'true', ',', 'null', ')', ';', '}', 'catch', '(', 'SocketException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'network', 'error,', 'connection', 'lost.', '"', ',', 'null', ')', ';', '}', 'catch', '(', 'XPathExpressionException', 'e', ')', '{', 'throw', 'new', 'MonitoringException', '(', '"', 'Problem:', 'the', 'Bamboo', 'Server', 'returned', 'an', 'unexpected', 'content', 'for', 'attribute', '<error>:', '', '"', '+', 'returnedValue', ',', 'null', ')', ';', '}', 'catch', '(', 'MonitoringException', 'e', ')', '{', 'throw', 'e', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'throw', 'new', 'MonitoringException', '(', 't', ',', 'null', ')', ';', '}', 'finally', '{', 'if', '(', 'urlConnectionReader', '!=', 'null', ')', '{', 'try', '{', 'urlConnectionReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'if', '(', 'urlConnection', '!=', 'null', ')', '{', 'urlConnection', '.', 'disconnect', '(', ')', ';', '}', '}', 'return', 'returnedValue', ';', '}']
  >>  iter 1, ACC! in => c (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 2, ACC! c => b (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 3, ACC! b => inner (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 4, ACC! inner => resource (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 5, ACC! resource => or (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 6, ACC! or => inn (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 7, ACC! inn => reader (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 8, ACC! reader => data (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 9, ACC! data => inn (0 => 0, 0.99982 => 0.99982) a=1.000
  >>  iter 10, ACC! inn => at (0 => 0, 0.99982 => 0.99982) a=1.000
Example 46 attack result: {'succ': False, 'tokens': '    private String callBambooApi(URL theURL) throws MonitoringException, BambooTicketNeedToBeRenewedError {\n        String returnedValue = null;\n        HttpURLConnection urlConnection = null;\n        BufferedReader urlConnectionReader = null;\n        try {\n            urlConnection = (HttpURLConnection) theURL.openConnection();\n            urlConnection.connect();\n            urlConnectionReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));\n            String line = null;\n            StringBuffer serverResponse = new StringBuffer();\n            while ((line = urlConnectionReader.readLine()) != null) {\n                serverResponse.append(line);\n            }\n            returnedValue = serverResponse.toString();\n            if (returnedValue.contains("<title>Bamboo Setup Wizard - Atlassian Bamboo</title>")) {\n                throw new MonitoringException("Your Bamboo server installation is not finished ! Double click here to complete the Bamboo Setup Wizard !", getMainPageURI());\n            }\n            InputSource is = new InputSource(new StringReader(serverResponse.toString()));\n            XPath xpath = XPathFactory.newInstance().newXPath();\n            String error = xpath.evaluate("/errors/error", is);\n            if (!"".equals(error)) {\n                if ("User not authenticated yet, or session timed out.".equals(error)) {\n                    throw new BambooTicketNeedToBeRenewedError();\n                } else {\n                    boolean isErrorOptionsRelated = false;\n                    URI uriForNonOptionsRelatedErrors = getMainPageURI();\n                    if ("Invalid username or password.".equals(error)) {\n                        isErrorOptionsRelated = true;\n                    }\n                    if ("The remote API has been disabled.".equals(error)) {\n                        error += " Double click here to enable it.";\n                        try {\n                            synchronized (this.bambooProperties) {\n                                uriForNonOptionsRelatedErrors = new URI(this.bambooProperties.getServerBaseUrl() + "/admin/configure!default.action");\n                            }\n                        } catch (URISyntaxException e) {\n                            throw new RuntimeException(e);\n                        }\n                    }\n                    throw new MonitoringException("Error reported by the Bamboo server: " + error, isErrorOptionsRelated, uriForNonOptionsRelatedErrors);\n                }\n            }\n        } catch (ClassCastException e) {\n            throw new MonitoringException("Problem: the base URL defined for the Bamboo server in Options is not an http URL.", true, null);\n        } catch (UnknownHostException e) {\n            throw new MonitoringException("Problem: cannot find host " + theURL.getHost() + " on the network.", true, null);\n        } catch (ConnectException e) {\n            throw new MonitoringException("Problem: cannot connect to port " + theURL.getPort() + " on host " + theURL.getHost() + ".", true, null);\n        } catch (FileNotFoundException e) {\n            throw new MonitoringException("Problem: cannot find the Bamboo server REST api using the base URL defined for the Bamboo server in Options. Seems that this URL is not the one to your Bamboo server home page...", true, null);\n        } catch (SocketException e) {\n            throw new MonitoringException("Problem: network error, connection lost.", null);\n        } catch (XPathExpressionException e) {\n            throw new MonitoringException("Problem: the Bamboo Server returned an unexpected content for attribute <error>: " + returnedValue, null);\n        } catch (MonitoringException e) {\n            throw e;\n        } catch (Throwable t) {\n            throw new MonitoringException(t, null);\n        } finally {\n            if (urlConnectionReader != null) {\n                try {\n                    urlConnectionReader.close();\n                } catch (IOException e) {\n                }\n            }\n            if (urlConnection != null) {\n                urlConnection.disconnect();\n            }\n        }\n        return returnedValue;\n    }\n', 'raw_tokens': None, 'prog_length': 537, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'in': 'at'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 46 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 3.51 min
  curr succ rate = 0.0
Query times in this attack:  310
All Query times:  6090
raw_tokens: ['public', 'static', 'InputStream', 'getPropertyFileInputStream', '(', 'String', 'propertyFileURLStr', ')', '{', 'InputStream', 'in', '=', 'null', ';', 'String', 'errmsg', '=', '"', 'Fatal', 'error:', 'Unable', 'to', 'open', 'specified', 'properties', 'file:', '', '"', '+', 'propertyFileURLStr', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'propertyFileURLStr', ')', ';', 'in', '=', 'url', '.', 'openStream', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', 'errmsg', ')', ';', '}', 'return', '(', 'in', ')', ';', '}']
Example 47 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'String', 'readContent', '(', 'URL', 'url', ',', 'int', 'width', ')', '{', 'StringBuffer', 'content', '=', 'new', 'StringBuffer', '(', '"', '"', ')', ';', 'String', 'line', '=', '"', '"', ';', 'try', '{', 'BufferedReader', 'f', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'while', '(', '(', 'line', '=', 'f', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', 'content', '.', 'append', '(', 'line', '+', '"', '', '"', ')', ';', 'f', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'if', '(', 'width', '>=', '0', ')', '{', 'String', 'width_old', '=', '"', 'width=', '\\"', 'xxx', '\\"', '"', ';', 'String', 'width_new', '=', '"', 'width=', '\\"', '"', '+', 'width', '+', '"', '\\"', '"', ';', 'int', 'v0', '=', 'content', '.', 'indexOf', '(', 'width_old', ')', ';', 'int', 'v1', '=', 'v0', '+', 'width_old', '.', 'length', '(', ')', ';', 'content', '.', 'replace', '(', 'v0', ',', 'v1', ',', 'width_new', ')', ';', '}', 'return', 'content', '.', 'toString', '(', ')', ';', '}']
Example 48 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'load', '(', ')', 'throws', 'ResourceInstantiationException', ',', 'InvalidFormatException', '{', 'if', '(', 'null', '==', 'url', ')', '{', 'throw', 'new', 'ResourceInstantiationException', '(', '"', 'URL', 'not', 'set', '(null).', '"', ')', ';', '}', 'try', '{', 'BufferedReader', 'mapReader', '=', 'new', 'BomStrippingInputStreamReader', '(', '(', 'url', ')', '.', 'openStream', '(', ')', ',', 'ENCODING', ')', ';', 'String', 'line', ';', 'MappingNode', 'node', ';', 'while', '(', 'null', '!=', '(', 'line', '=', 'mapReader', '.', 'readLine', '(', ')', ')', ')', '{', 'if', '(', '0', '!=', 'line', '.', 'trim', '(', ')', '.', 'length', '(', ')', ')', '{', 'node', '=', 'new', 'MappingNode', '(', 'line', ')', ';', 'this', '.', 'add', '(', 'node', ')', ';', '}', '}', 'mapReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'InvalidFormatException', 'ife', ')', '{', 'throw', 'new', 'InvalidFormatException', '(', 'url', ',', '"', 'on', 'load', '"', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'ResourceInstantiationException', '(', 'ioe', ')', ';', '}', '}']
  >>  iter 1, ACC! url => b (0 => 0, 0.99972 => 0.99971) a=1.086
  >>  iter 2, ACC! b => web (0 => 0, 0.99971 => 0.99971) a=1.038
  >>  iter 3, ACC! web => open (0 => 0, 0.99971 => 0.99971) a=1.058
  >>  iter 4, ACC! open => feed (0 => 0, 0.99971 => 0.99971) a=1.041
  >>  iter 5, ACC! feed => l (0 => 0, 0.99971 => 0.99971) a=1.034
  >>  iter 6, ACC! l => uri (0 => 0, 0.99971 => 0.99972) a=1.045
  >>  iter 7, ACC! uri => m (0 => 0, 0.99972 => 0.99971) a=1.077
  >>  iter 8, ACC! m => page (0 => 0, 0.99971 => 0.99969) a=1.057
  >>  iter 9, REJ. page => source (0 => 0, 0.99969 => 0.99971) a=0.988
  >>  iter 10, REJ. page => uri (0 => 0, 0.99969 => 0.99972) a=0.988
Example 49 attack result: {'succ': False, 'tokens': '    public void load() throws ResourceInstantiationException, InvalidFormatException {\n        if (null == uri) {\n            throw new ResourceInstantiationException("URL not set (null).");\n        }\n        try {\n            BufferedReader mapReader = new BomStrippingInputStreamReader((uri).openStream(), ENCODING);\n            String line;\n            MappingNode node;\n            while (null != (line = mapReader.readLine())) {\n                if (0 != line.trim().length()) {\n                    node = new MappingNode(line);\n                    this.add(node);\n                }\n            }\n            mapReader.close();\n        } catch (InvalidFormatException ife) {\n            throw new InvalidFormatException(uri, "on load");\n        } catch (IOException ioe) {\n            throw new ResourceInstantiationException(ioe);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 139, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -2.1994114e-05, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'url': 'page'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 49 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 3.68 min
  curr succ rate = 0.0
Query times in this attack:  299
All Query times:  6389
raw_tokens: ['public', 'boolean', 'deleteByQuery', '(', 'String', 'query', ',', 'int', 'coreId', ')', '{', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'solrUrl', '+', '"', '/core', '"', '+', 'coreId', '+', '"', '/update', '"', ')', ';', 'URLConnection', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setDoOutput', '(', 'true', ')', ';', 'conn', '.', 'setRequestProperty', '(', '"', 'Content-type', '"', ',', '"', 'text/xml', '"', ')', ';', 'conn', '.', 'setRequestProperty', '(', '"', 'charset', '"', ',', '"', 'utf-8', '"', ')', ';', 'OutputStreamWriter', 'wr', '=', 'new', 'OutputStreamWriter', '(', 'conn', '.', 'getOutputStream', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '******************', '"', '+', 'query', ')', ';', 'wr', '.', 'write', '(', '"', '<delete><query>', '"', '+', 'query', '+', '"', '</query></delete>', '"', ')', ';', 'wr', '.', 'flush', '(', ')', ';', 'BufferedReader', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'line', ')', ';', '}', 'wr', '.', 'close', '(', ')', ';', 'rd', '.', 'close', '(', ')', ';', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setDoOutput', '(', 'true', ')', ';', 'conn', '.', 'setRequestProperty', '(', '"', 'Content-type', '"', ',', '"', 'text/xml', '"', ')', ';', 'conn', '.', 'setRequestProperty', '(', '"', 'charset', '"', ',', '"', 'utf-8', '"', ')', ';', 'wr', '=', 'new', 'OutputStreamWriter', '(', 'conn', '.', 'getOutputStream', '(', ')', ')', ';', 'wr', '.', 'write', '(', '"', '<commit/>', '"', ')', ';', 'wr', '.', 'flush', '(', ')', ';', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'line', ')', ';', '}', 'wr', '.', 'close', '(', ')', ';', 'rd', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'false', ';', '}', 'return', 'true', ';', '}']
  >>  iter 1, ACC! url => download (1 => 1, 0.93197 => 0.93566) a=1.150
  >>  iter 2, ACC! download => proxy (1 => 1, 0.93566 => 0.94341) a=1.326
  >>  iter 3, ACC! proxy => buffer (1 => 1, 0.94341 => 0.94340) a=1.508
  >>  iter 4, ACC! buffer => email (1 => 1, 0.94340 => 0.95726) a=1.382
  >>  iter 5, ACC! email => uri (1 => 1, 0.95726 => 0.94160) a=1.997
  >>  iter 6, ACC! uri => ssl (1 => 1, 0.94160 => 0.94839) a=1.461
  >>  iter 7, ACC! ssl => stream (1 => 1, 0.94839 => 0.93439) a=1.654
  >>  iter 8, ACC! stream => feed (1 => 1, 0.93439 => 0.95268) a=1.301
  >>  iter 9, ACC! feed => www (1 => 1, 0.95268 => 0.93789) a=1.803
  >>  iter 10, ACC! www => user (1 => 1, 0.93789 => 0.94117) a=1.374
Example 50 attack result: {'succ': False, 'tokens': '    public boolean deleteByQuery(String query, int coreId) {\n        try {\n            URL user = new URL(solrUrl + "/core" + coreId + "/update");\n            URLConnection conn = user.openConnection();\n            conn.setDoOutput(true);\n            conn.setRequestProperty("Content-type", "text/xml");\n            conn.setRequestProperty("charset", "utf-8");\n            OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());\n            System.out.println("******************" + query);\n            wr.write("<delete><query>" + query + "</query></delete>");\n            wr.flush();\n            BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String line;\n            while ((line = rd.readLine()) != null) {\n                System.out.println(line);\n            }\n            wr.close();\n            rd.close();\n            conn = user.openConnection();\n            conn.setDoOutput(true);\n            conn.setRequestProperty("Content-type", "text/xml");\n            conn.setRequestProperty("charset", "utf-8");\n            wr = new OutputStreamWriter(conn.getOutputStream());\n            wr.write("<commit/>");\n            wr.flush();\n            rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            while ((line = rd.readLine()) != null) {\n                System.out.println(line);\n            }\n            wr.close();\n            rd.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n        return true;\n    }\n', 'raw_tokens': None, 'prog_length': 320, 'new_pred': 1, 'is_success': -1, 'old_uid': 'url', 'score_info': 0.0032805167, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'url': 'user'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 50 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 3.85 min
  curr succ rate = 0.0
Query times in this attack:  293
All Query times:  6682
raw_tokens: ['public', 'static', 'boolean', 'copyFile', '(', 'final', 'File', 'src', ',', 'final', 'File', 'dst', ')', '{', 'boolean', 'result', '=', 'false', ';', 'FileChannel', 'inChannel', '=', 'null', ';', 'FileChannel', 'outChannel', '=', 'null', ';', 'synchronized', '(', 'FileUtil', '.', 'DATA_LOCK', ')', '{', 'try', '{', 'inChannel', '=', 'new', 'FileInputStream', '(', 'src', ')', '.', 'getChannel', '(', ')', ';', 'outChannel', '=', 'new', 'FileOutputStream', '(', 'dst', ')', '.', 'getChannel', '(', ')', ';', 'inChannel', '.', 'transferTo', '(', '0', ',', 'inChannel', '.', 'size', '(', ')', ',', 'outChannel', ')', ';', 'result', '=', 'true', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'finally', '{', 'if', '(', 'inChannel', '!=', 'null', '&&', 'inChannel', '.', 'isOpen', '(', ')', ')', '{', 'try', '{', 'inChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'if', '(', 'outChannel', '!=', 'null', '&&', 'outChannel', '.', 'isOpen', '(', ')', ')', '{', 'try', '{', 'outChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'return', 'result', ';', '}']
Example 51 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'test', '(', 'TestHarness', 'harness', ')', '{', 'harness', '.', 'checkPoint', '(', '"', 'TestOfMD4', '"', ')', ';', 'try', '{', 'Security', '.', 'addProvider', '(', 'new', 'JarsyncProvider', '(', ')', ')', ';', 'algorithm', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD4', '"', ',', '"', 'JARSYNC', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.provider', '"', ')', ';', 'throw', 'new', 'Error', '(', 'x', ')', ';', '}', 'try', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '64', ';', 'i', '++', ')', 'algorithm', '.', 'update', '(', '(', 'byte', ')', "'a'", ')', ';', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', ')', ';', 'String', 'exp', '=', '"', '52f5076fabd22680234a3fa9f9dc5732', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testSixtyFourA', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.provider', '"', ')', ';', '}', 'try', '{', 'harness', '.', 'verbose', '(', '"', 'NOTE:', 'This', 'test', 'may', 'take', 'a', 'while.', '"', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '536870913', ';', 'i', '++', ')', 'algorithm', '.', 'update', '(', '(', 'byte', ')', "'a'", ')', ';', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', ')', ';', 'String', 'exp', '=', '"', '47d01fa6657f903280232d30b98da482', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'test536870913A', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.provider', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'a', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'bde52cb31de33e46245e05fbdbd6fb24', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testA', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testA', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'abc', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'a448017aaf21d8525fc10ae87aa6729d', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testABC', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testABC', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'message', 'digest', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'd9130a8164549fe818874806e1c7014b', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testMessageDigest', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testMessageDigest', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'abcdefghijklmnopqrstuvwxyz', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'd79e1c308aa5bbcdeea8ed63df412da9', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testAlphabet', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testAlphabet', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', '043f8582f241db351ce627e153e7f0e4', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testAsciiSubset', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testAsciiSubset', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', '12345678901234567890123456789012345678901234567890123456789012345678901234567890', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'e33b4ddc9c38f2199c3e7b164fcc0536', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testEightyNumerics', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testEightyNumerics', '"', ')', ';', '}', 'try', '{', 'algorithm', '.', 'update', '(', '"', 'a', '"', '.', 'getBytes', '(', ')', ',', '0', ',', '1', ')', ';', 'clone', '=', '(', 'MessageDigest', ')', 'algorithm', '.', 'clone', '(', ')', ';', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', ')', ';', 'String', 'exp', '=', '"', 'bde52cb31de33e46245e05fbdbd6fb24', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testCloning', '#1', '"', ')', ';', 'clone', '.', 'update', '(', '"', 'bc', '"', '.', 'getBytes', '(', ')', ',', '0', ',', '2', ')', ';', 'md', '=', 'clone', '.', 'digest', '(', ')', ';', 'exp', '=', '"', 'a448017aaf21d8525fc10ae87aa6729d', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testCloning', '#2', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testCloning', '"', ')', ';', '}', '}']
Example 52 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'StringBuffer', 'xml', ';', 'String', 'tabName', ';', 'Element', 'guiElement', ';', 'setBold', '(', 'monitor', '.', 'getReading', '(', ')', ')', ';', 'setBold', '(', 'monitor', '.', 'getReadingStatus', '(', ')', ')', ';', 'monitor', '.', 'getReadingStatus', '(', ')', '.', 'setText', '(', '"', '', '', '', '', '', '', 'Working', '"', ')', ';', 'HttpMethod', 'method', '=', 'null', ';', 'xml', '=', 'new', 'StringBuffer', '(', ')', ';', 'File', 'tempfile', '=', 'new', 'File', '(', 'url', ')', ';', 'if', '(', 'tempfile', '.', 'exists', '(', ')', ')', '{', 'try', '{', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'tempfile', ')', ';', 'int', 'temp', ';', 'while', '(', '(', 'temp', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', '{', 'xml', '.', 'append', '(', '(', 'char', ')', 'temp', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Loading', 'Monitor', 'Failed,', 'error', 'while', 'reading', 'XML', 'file', 'from', 'local', 'file', '"', ')', ';', 'e', '.', 'printStackTrace', '(', 'System', '.', 'err', ')', ';', 'return', ';', '}', '}', 'else', '{', 'try', '{', 'HttpClient', 'client', '=', 'new', 'HttpClient', '(', ')', ';', 'method', '=', 'new', 'GetMethod', '(', 'url', ')', ';', 'int', 'response', '=', 'client', '.', 'executeMethod', '(', 'method', ')', ';', 'if', '(', 'response', '==', '200', ')', '{', 'InputStream', 'in', '=', 'method', '.', 'getResponseBodyAsStream', '(', ')', ';', 'int', 'temp', ';', 'while', '(', '(', 'temp', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', '{', 'xml', '.', 'append', '(', '(', 'char', ')', 'temp', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', '}', 'else', '{', 'if', '(', 'method', '!=', 'null', ')', '{', 'method', '.', 'releaseConnection', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Loading', 'Monitor', 'Failed.', 'Incorrect', 'response', 'from', 'HTTP', 'Server', '', '"', '+', 'response', ')', ';', 'return', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'if', '(', 'method', '!=', 'null', ')', '{', 'method', '.', 'releaseConnection', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Loading', 'Monitor', 'Failed,', 'error', 'while', 'reading', 'XML', 'file', 'from', 'HTTP', 'Server', '"', ')', ';', 'e', '.', 'printStackTrace', '(', 'System', '.', 'err', ')', ';', 'return', ';', '}', '}', 'setPlain', '(', 'monitor', '.', 'getReading', '(', ')', ')', ';', 'setPlain', '(', 'monitor', '.', 'getReadingStatus', '(', ')', ')', ';', 'monitor', '.', 'getReadingStatus', '(', ')', '.', 'setText', '(', '"', '', '', '', '', '', '', 'Done', '"', ')', ';', 'setBold', '(', 'monitor', '.', 'getValidating', '(', ')', ')', ';', 'setBold', '(', 'monitor', '.', 'getValidatingStatus', '(', ')', ')', ';', 'monitor', '.', 'getValidatingStatus', '(', ')', '.', 'setText', '(', '"', '', '', '', '', '', '', 'Working', '"', ')', ';', 'DocumentBuilderFactoryImpl', 'factory', '=', 'new', 'DocumentBuilderFactoryImpl', '(', ')', ';', 'try', '{', 'DocumentBuilder', 'parser', '=', 'factory', '.', 'newDocumentBuilder', '(', ')', ';', 'Document', 'document', '=', 'parser', '.', 'parse', '(', 'new', 'ByteArrayInputStream', '(', 'xml', '.', 'toString', '(', ')', '.', 'getBytes', '(', ')', ')', ')', ';', 'if', '(', 'method', '!=', 'null', ')', '{', 'method', '.', 'releaseConnection', '(', ')', ';', '}', 'Element', 'root', '=', 'document', '.', 'getDocumentElement', '(', ')', ';', 'NodeList', 'temp', '=', 'root', '.', 'getElementsByTagName', '(', '"', 'resource', '"', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'temp', '.', 'getLength', '(', ')', ';', 'j', '++', ')', '{', 'Element', 'resource', '=', '(', 'Element', ')', 'temp', '.', 'item', '(', 'j', ')', ';', 'resources', '.', 'add', '(', 'new', 'URL', '(', 'resource', '.', 'getAttribute', '(', '"', 'url', '"', ')', ')', ')', ';', '}', 'NodeList', 'connections', '=', 'root', '.', 'getElementsByTagName', '(', '"', 'jmxserver', '"', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'connections', '.', 'getLength', '(', ')', ';', 'j', '++', ')', '{', 'Element', 'connection', '=', '(', 'Element', ')', 'connections', '.', 'item', '(', 'j', ')', ';', 'String', 'name', '=', 'connection', '.', 'getAttribute', '(', '"', 'name', '"', ')', ';', 'String', 'tempUrl', '=', 'connection', '.', 'getAttribute', '(', '"', 'url', '"', ')', ';', 'if', '(', 'tempUrl', '.', 'indexOf', '(', '"', '${host}', '"', ')', '!=', '-', '1', ')', '{', 'HostDialog', 'dialog', '=', 'new', 'HostDialog', '(', 'Config', '.', 'getHosts', '(', ')', ')', ';', 'String', 'host', '=', 'dialog', '.', 'showDialog', '(', ')', ';', 'if', '(', 'host', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Host', 'can', 'not', 'be', 'null,', 'unable', 'to', 'create', 'panel.', '"', ')', ';', 'return', ';', '}', 'tempUrl', '=', 'tempUrl', '.', 'replaceAll', '(', '"', '\\\\', '$', '\\\\', '{host', '\\\\', '}', '"', ',', 'host', ')', ';', 'Config', '.', 'addHost', '(', 'host', ')', ';', '}', 'JMXServiceURL', 'jmxUrl', '=', 'new', 'JMXServiceURL', '(', 'tempUrl', ')', ';', 'JmxServerGraph', 'server', '=', 'new', 'JmxServerGraph', '(', 'name', ',', 'jmxUrl', ',', 'new', 'JmxWorker', '(', 'false', ')', ')', ';', 'servers', '.', 'put', '(', 'name', ',', 'server', ')', ';', 'NodeList', 'listeners', '=', 'connection', '.', 'getElementsByTagName', '(', '"', 'listener', '"', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'listeners', '.', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'Element', 'attribute', '=', '(', 'Element', ')', 'listeners', '.', 'item', '(', 'i', ')', ';', 'String', 'taskname', '=', 'attribute', '.', 'getAttribute', '(', '"', 'taskname', '"', ')', ';', 'MBean', 'mbean', '=', 'new', 'MBean', '(', 'attribute', '.', 'getAttribute', '(', '"', 'mbean', '"', ')', ',', 'null', ')', ';', 'String', 'filtertype', '=', 'attribute', '.', 'getAttribute', '(', '"', 'filterType', '"', ')', ';', 'TaskNotificationListener', 'listener', '=', 'new', 'TaskNotificationListener', '(', ')', ';', 'NotificationFilterSupport', 'filter', '=', 'new', 'NotificationFilterSupport', '(', ')', ';', 'if', '(', 'filtertype', '==', 'null', '||', '"', '"', '.', 'equals', '(', 'filtertype', ')', ')', '{', 'filter', '=', 'null', ';', '}', 'else', '{', 'filter', '.', 'enableType', '(', 'filtertype', ')', ';', '}', 'Task', 'task', '=', 'new', 'Task', '(', '-', '1', ',', 'Task', '.', 'LISTEN', ',', 'server', ')', ';', 'task', '.', 'setMbean', '(', 'mbean', ')', ';', 'task', '.', 'setListener', '(', 'listener', ')', ';', 'task', '.', 'setFilter', '(', 'filter', ')', ';', 'server', '.', 'getWorker', '(', ')', '.', 'addTask', '(', 'task', ')', ';', 'if', '(', 'tasks', '.', 'get', '(', 'taskname', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Task', '', '"', '+', 'taskname', '+', '"', '', 'already', 'exists.', '"', ')', ';', 'return', ';', '}', 'List', '<', 'Task', '>', 'hashTempList', '=', 'new', 'ArrayList', '<', 'Task', '>', '(', ')', ';', 'hashTempList', '.', 'add', '(', 'task', ')', ';', 'tasks', '.', 'put', '(', 'taskname', ',', 'hashTempList', ')', ';', '}', 'NodeList', 'attributes', '=', 'connection', '.', 'getElementsByTagName', '(', '"', 'attribute', '"', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'attributes', '.', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'Element', 'attribute', '=', '(', 'Element', ')', 'attributes', '.', 'item', '(', 'i', ')', ';', 'String', 'taskname', '=', 'attribute', '.', 'getAttribute', '(', '"', 'taskname', '"', ')', ';', 'MBean', 'mbean', '=', 'new', 'MBean', '(', 'attribute', '.', 'getAttribute', '(', '"', 'mbean', '"', ')', ',', 'null', ')', ';', 'String', 'attributename', '=', 'attribute', '.', 'getAttribute', '(', '"', 'attributename', '"', ')', ';', 'String', 'frequency', '=', 'attribute', '.', 'getAttribute', '(', '"', 'frequency', '"', ')', ';', 'String', 'onEvent', '=', 'attribute', '.', 'getAttribute', '(', '"', 'onEvent', '"', ')', ';', 'if', '(', 'frequency', '.', 'equalsIgnoreCase', '(', '"', 'onchange', '"', ')', ')', '{', 'TaskNotificationListener', 'listener', '=', 'new', 'TaskNotificationListener', '(', ')', ';', 'AttributeChangeNotificationFilter', 'filter', '=', 'new', 'AttributeChangeNotificationFilter', '(', ')', ';', 'filter', '.', 'enableAttribute', '(', 'attributename', ')', ';', 'Task', 'task', '=', 'new', 'Task', '(', '-', '1', ',', 'Task', '.', 'LISTEN', ',', 'server', ')', ';', 'MBeanAttribute', 'att', '=', 'new', 'MBeanAttribute', '(', 'mbean', ',', 'attributename', ')', ';', 'task', '.', 'setAttribute', '(', 'att', ')', ';', 'task', '.', 'setMbean', '(', 'mbean', ')', ';', 'task', '.', 'setListener', '(', 'listener', ')', ';', 'task', '.', 'setFilter', '(', 'filter', ')', ';', 'server', '.', 'getWorker', '(', ')', '.', 'addTask', '(', 'task', ')', ';', 'if', '(', 'tasks', '.', 'get', '(', 'taskname', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Task', '', '"', '+', 'taskname', '+', '"', '', 'already', 'exists.', '"', ')', ';', 'return', ';', '}', 'Task', 'task2', '=', 'new', 'Task', '(', '-', '1', ',', 'Task', '.', 'GET_ATTRIBUTE', ',', 'server', ')', ';', 'task2', '.', 'setAttribute', '(', 'att', ')', ';', 'task2', '.', 'setMbean', '(', 'mbean', ')', ';', 'server', '.', 'getWorker', '(', ')', '.', 'addTask', '(', 'task2', ')', ';', 'List', '<', 'Task', '>', 'hashTempList', '=', 'new', 'ArrayList', '<', 'Task', '>', '(', ')', ';', 'hashTempList', '.', 'add', '(', 'task', ')', ';', 'hashTempList', '.', 'add', '(', 'task2', ')', ';', 'tasks', '.', 'put', '(', 'taskname', ',', 'hashTempList', ')', ';', '}', 'else', '{', 'int', 'frequency2', '=', 'Integer', '.', 'parseInt', '(', 'frequency', ')', ';', 'Task', 'task', '=', 'new', 'Task', '(', 'frequency2', ',', 'Task', '.', 'GET_ATTRIBUTE', ',', 'server', ')', ';', 'MBeanAttribute', 'att', '=', 'new', 'MBeanAttribute', '(', 'mbean', ',', 'attributename', ')', ';', 'task', '.', 'setAttribute', '(', 'att', ')', ';', 'task', '.', 'setMbean', '(', 'mbean', ')', ';', 'if', '(', 'tasks', '.', 'get', '(', 'taskname', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Task', '', '"', '+', 'taskname', '+', '"', '', 'already', 'exists.', '"', ')', ';', 'return', ';', '}', 'List', '<', 'Task', '>', 'hashTempList', '=', 'new', 'ArrayList', '<', 'Task', '>', '(', ')', ';', 'hashTempList', '.', 'add', '(', 'task', ')', ';', 'tasks', '.', 'put', '(', 'taskname', ',', 'hashTempList', ')', ';', 'TaskNotificationListener', 'listener', '=', 'null', ';', 'if', '(', 'onEvent', '!=', 'null', '&&', '!', '"', '"', '.', 'equals', '(', 'onEvent', ')', ')', '{', 'Task', 'tempTask', '=', 'tasks', '.', 'get', '(', 'onEvent', ')', '.', 'get', '(', '0', ')', ';', 'if', '(', 'tempTask', '==', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'onEvent', '+', '"', '', 'was', 'not', 'found.', '"', ')', ';', 'return', ';', '}', 'else', '{', 'listener', '=', '(', 'TaskNotificationListener', ')', 'tempTask', '.', 'getListener', '(', ')', ';', '}', '}', 'if', '(', 'listener', '==', 'null', ')', '{', 'server', '.', 'getWorker', '(', ')', '.', 'addTask', '(', 'task', ')', ';', '}', 'else', '{', 'listener', '.', 'addTask', '(', 'task', ')', ';', '}', '}', '}', '}', 'NodeList', 'guiTemp', '=', 'root', '.', 'getElementsByTagName', '(', '"', 'gui', '"', ')', ';', 'guiElement', '=', '(', 'Element', ')', 'guiTemp', '.', 'item', '(', '0', ')', ';', 'tabName', '=', 'guiElement', '.', 'getAttribute', '(', '"', 'name', '"', ')', ';', 'if', '(', 'MonitorServer', '.', 'contains', '(', 'tabName', ')', ')', '{', 'JOptionPane', '.', 'showMessageDialog', '(', 'null', ',', '"', 'This', 'panel', 'is', 'already', 'open,', 'stoping', 'creating', 'of', 'panel.', '"', ',', '"', 'Panel', 'already', 'exists', '"', ',', 'JOptionPane', '.', 'ERROR_MESSAGE', ')', ';', 'return', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'monitor', '.', 'getTab', '(', ')', '.', 'getTabCount', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'monitor', '.', 'getTab', '(', ')', '.', 'getComponent', '(', 'i', ')', '.', 'equals', '(', 'monitor', ')', ')', '{', 'monitor', '.', 'getTab', '(', ')', '.', 'setTitleAt', '(', 'i', ',', 'tabName', ')', ';', 'break', ';', '}', '}', 'NodeList', 'tempBindings', '=', 'root', '.', 'getElementsByTagName', '(', '"', 'binding', '"', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'tempBindings', '.', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'Element', 'binding', '=', '(', 'Element', ')', 'tempBindings', '.', 'item', '(', 'i', ')', ';', 'String', 'guiname', '=', 'binding', '.', 'getAttribute', '(', '"', 'guiname', '"', ')', ';', 'String', 'tmethod', '=', 'binding', '.', 'getAttribute', '(', '"', 'method', '"', ')', ';', 'String', 'taskname', '=', 'binding', '.', 'getAttribute', '(', '"', 'taskname', '"', ')', ';', 'String', 'formater', '=', 'binding', '.', 'getAttribute', '(', '"', 'formater', '"', ')', ';', 'BindingContainer', 'tempBinding', ';', 'if', '(', 'formater', '==', 'null', '||', '(', 'formater', '!=', 'null', '&&', 'formater', '.', 'equals', '(', '"', '"', ')', ')', ')', '{', 'tempBinding', '=', 'new', 'BindingContainer', '(', 'guiname', ',', 'tmethod', ',', 'taskname', ')', ';', '}', 'else', '{', 'tempBinding', '=', 'new', 'BindingContainer', '(', 'guiname', ',', 'tmethod', ',', 'taskname', ',', 'formater', ')', ';', '}', 'bindings', '.', 'add', '(', 'tempBinding', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Exception', 'message:', '', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Loading', 'Monitor', 'Failed,', 'couldnt', 'parse', 'XML', 'file.', '"', ')', ';', 'e', '.', 'printStackTrace', '(', 'System', '.', 'err', ')', ';', 'return', ';', '}', 'setPlain', '(', 'monitor', '.', 'getValidating', '(', ')', ')', ';', 'setPlain', '(', 'monitor', '.', 'getValidatingStatus', '(', ')', ')', ';', 'monitor', '.', 'getValidatingStatus', '(', ')', '.', 'setText', '(', '"', '', '', '', '', '', '', 'Done', '"', ')', ';', 'setBold', '(', 'monitor', '.', 'getDownload', '(', ')', ')', ';', 'setBold', '(', 'monitor', '.', 'getDownloadStatus', '(', ')', ')', ';', 'monitor', '.', 'getDownloadStatus', '(', ')', '.', 'setText', '(', '"', '', '', '', '', '', '', 'Working', '"', ')', ';', 'List', '<', 'File', '>', 'jarFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'File', 'cacheDir', '=', 'new', 'File', '(', 'Config', '.', 'getCacheDir', '(', ')', ')', ';', 'if', '(', '!', 'cacheDir', '.', 'exists', '(', ')', ')', '{', 'cacheDir', '.', 'mkdir', '(', ')', ';', '}', 'for', '(', 'URL', 'resUrl', ':', 'resources', ')', '{', 'try', '{', 'HttpClient', 'client', '=', 'new', 'HttpClient', '(', ')', ';', 'HttpMethod', 'methodRes', '=', 'new', 'GetMethod', '(', 'resUrl', '.', 'toString', '(', ')', ')', ';', 'int', 'response', '=', 'client', '.', 'executeMethod', '(', 'methodRes', ')', ';', 'if', '(', 'response', '==', '200', ')', '{', 'int', 'index', '=', 'resUrl', '.', 'toString', '(', ')', '.', 'lastIndexOf', '(', '"', '/', '"', ')', '+', '1', ';', 'File', 'file', '=', 'new', 'File', '(', 'Config', '.', 'getCacheDir', '(', ')', '+', 'resUrl', '.', 'toString', '(', ')', '.', 'substring', '(', 'index', ')', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'InputStream', 'in', '=', 'methodRes', '.', 'getResponseBodyAsStream', '(', ')', ';', 'int', 'readTemp', '=', '0', ';', 'while', '(', '(', 'readTemp', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', '{', 'out', '.', 'write', '(', 'readTemp', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', 'file', '.', 'getName', '(', ')', '+', '"', '', 'downloaded.', '"', ')', ';', 'methodRes', '.', 'releaseConnection', '(', ')', ';', 'if', '(', 'file', '.', 'getName', '(', ')', '.', 'endsWith', '(', '"', '.jar', '"', ')', ')', '{', 'jarFiles', '.', 'add', '(', 'file', ')', ';', '}', '}', 'else', '{', 'methodRes', '.', 'releaseConnection', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Loading', 'Monitor', 'Failed.', 'Unable', 'to', 'get', 'resource', '', '"', '+', 'url', ')', ';', 'return', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Loading', 'Monitor', 'Failed,', 'error', 'while', 'reading', 'resource', 'file', 'from', 'HTTP', 'Server', '"', ')', ';', 'e', '.', 'printStackTrace', '(', 'System', '.', 'err', ')', ';', 'return', ';', '}', '}', 'URL', '[', ']', 'urls', '=', 'new', 'URL', '[', 'jarFiles', '.', 'size', '(', ')', ']', ';', 'try', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'jarFiles', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'File', 'file', '=', 'jarFiles', '.', 'get', '(', 'i', ')', ';', 'File', 'newFile', '=', 'new', 'File', '(', 'Config', '.', 'getCacheDir', '(', ')', '+', '"', '/', '"', '+', 'System', '.', 'currentTimeMillis', '(', ')', '+', 'file', '.', 'getName', '(', ')', ')', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'newFile', ')', ';', 'int', 'n', '=', '0', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', '(', 'n', '=', 'in', '.', 'read', '(', 'buf', ',', '0', ',', '1024', ')', ')', '>', '-', '1', ')', '{', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', '}', 'out', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', 'urls', '[', 'i', ']', '=', 'new', 'URL', '(', '"', 'file:', '"', '+', 'newFile', '.', 'getAbsolutePath', '(', ')', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e1', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'load', 'jar', 'files.', '"', ')', ';', 'e1', '.', 'printStackTrace', '(', ')', ';', '}', 'URLClassLoader', 'loader', '=', 'new', 'URLClassLoader', '(', 'urls', ')', ';', 'engine', '.', 'setClassLoader', '(', 'loader', ')', ';', 'setPlain', '(', 'monitor', '.', 'getDownload', '(', ')', ')', ';', 'setPlain', '(', 'monitor', '.', 'getDownloadStatus', '(', ')', ')', ';', 'monitor', '.', 'getDownloadStatus', '(', ')', '.', 'setText', '(', '"', '', '', '', '', '', '', 'Done', '"', ')', ';', 'setBold', '(', 'monitor', '.', 'getGui', '(', ')', ')', ';', 'setBold', '(', 'monitor', '.', 'getGuiStatus', '(', ')', ')', ';', 'monitor', '.', 'getGuiStatus', '(', ')', '.', 'setText', '(', '"', '', '', '', '', '', '', 'Working', '"', ')', ';', 'Container', 'container', ';', 'try', '{', 'String', 'tempXml', '=', 'xml', '.', 'toString', '(', ')', ';', 'int', 'start', '=', 'tempXml', '.', 'indexOf', '(', '"', '<gui', '"', ')', ';', 'start', '=', 'tempXml', '.', 'indexOf', '(', "'>'", ',', 'start', ')', '+', '1', ';', 'int', 'end', '=', 'tempXml', '.', 'indexOf', '(', '"', '</gui>', '"', ')', ';', 'container', '=', 'engine', '.', 'render', '(', 'new', 'StringReader', '(', 'tempXml', '.', 'substring', '(', 'start', ',', 'end', ')', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', 'System', '.', 'err', ')', ';', 'System', '.', 'err', '.', 'println', '(', '"', 'Exception', 'msg:', '', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Loading', 'Monitor', 'Failed,', 'error', 'creating', 'gui.', '"', ')', ';', 'return', ';', '}', 'for', '(', 'BindingContainer', 'bcon', ':', 'bindings', ')', '{', 'for', '(', 'Task', 'task', ':', 'tasks', '.', 'get', '(', 'bcon', '.', 'getTask', '(', ')', ')', ')', '{', 'if', '(', 'task', '!=', 'null', ')', '{', 'Object', 'comp', '=', 'engine', '.', 'find', '(', 'bcon', '.', 'getComponent', '(', ')', ')', ';', 'if', '(', 'comp', '!=', 'null', ')', '{', 'if', '(', 'task', '.', 'getTaskType', '(', ')', '==', 'Task', '.', 'LISTEN', '&&', 'task', '.', 'getFilter', '(', ')', 'instanceof', 'AttributeChangeNotificationFilter', ')', '{', 'TaskNotificationListener', 'listener', '=', '(', 'TaskNotificationListener', ')', 'task', '.', 'getListener', '(', ')', ';', 'if', '(', 'bcon', '.', 'getFormater', '(', ')', '==', 'null', ')', '{', 'listener', '.', 'addResultListener', '(', 'new', 'Binding', '(', 'comp', ',', 'bcon', '.', 'getMethod', '(', ')', ')', ')', ';', '}', 'else', '{', 'listener', '.', 'addResultListener', '(', 'new', 'Binding', '(', 'comp', ',', 'bcon', '.', 'getMethod', '(', ')', ',', 'bcon', '.', 'getFormater', '(', ')', ',', 'loader', ')', ')', ';', '}', '}', 'else', '{', 'if', '(', 'bcon', '.', 'getFormater', '(', ')', '==', 'null', ')', '{', 'task', '.', 'addResultListener', '(', 'new', 'Binding', '(', 'comp', ',', 'bcon', '.', 'getMethod', '(', ')', ')', ')', ';', '}', 'else', '{', 'task', '.', 'addResultListener', '(', 'new', 'Binding', '(', 'comp', ',', 'bcon', '.', 'getMethod', '(', ')', ',', 'bcon', '.', 'getFormater', '(', ')', ',', 'loader', ')', ')', ';', '}', '}', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Refering', 'to', 'gui', 'name,', '', '"', '+', 'bcon', '.', 'getComponent', '(', ')', '+', '"', ',', 'that', 'doesnt', 'exist.', 'Unable', 'to', 'create', 'monitor.', '"', ')', ';', 'return', ';', '}', '}', 'else', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Refering', 'to', 'task', 'name,', '', '"', '+', 'bcon', '.', 'getTask', '(', ')', '+', '"', ',', 'that', 'doesnt', 'exist.', 'Unable', 'to', 'create', 'monitor.', '"', ')', ';', 'return', ';', '}', '}', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'monitor', '.', 'getTab', '(', ')', '.', 'getTabCount', '(', ')', ';', 'i', '++', ')', '{', 'if', '(', 'monitor', '.', 'getTab', '(', ')', '.', 'getComponent', '(', 'i', ')', '.', 'equals', '(', 'monitor', ')', ')', '{', 'monitor', '.', 'getTab', '(', ')', '.', 'setComponentAt', '(', 'i', ',', 'new', 'MonitorContainerPanel', '(', 'container', ',', 'this', ')', ')', ';', 'break', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Connecting', 'to', 'server(s).', '"', ')', ';', 'Enumeration', '<', 'JmxServerGraph', '>', 'e', '=', 'servers', '.', 'elements', '(', ')', ';', 'List', '<', 'JmxWorker', '>', 'list', '=', 'new', 'ArrayList', '<', 'JmxWorker', '>', '(', ')', ';', 'while', '(', 'e', '.', 'hasMoreElements', '(', ')', ')', '{', 'JmxWorker', 'worker', '=', 'e', '.', 'nextElement', '(', ')', '.', 'getWorker', '(', ')', ';', 'worker', '.', 'setRunning', '(', 'true', ')', ';', 'worker', '.', 'start', '(', ')', ';', 'list', '.', 'add', '(', 'worker', ')', ';', '}', 'MonitorServer', '.', 'add', '(', 'tabName', ',', 'list', ')', ';', 'Config', '.', 'addUrl', '(', 'url', ')', ';', '}']
  >>  iter 1, ACC! out => base (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! base => res (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! res => o (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! o => i (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! i => bin (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! bin => aos (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! aos => again (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! again => cache (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! cache => output (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! output => gz (1 => 1, 0.99988 => 0.99988) a=1.000
Example 53 attack result: {'succ': False, 'tokens': '    public void run() {\n        StringBuffer xml;\n        String tabName;\n        Element guiElement;\n        setBold(monitor.getReading());\n        setBold(monitor.getReadingStatus());\n        monitor.getReadingStatus().setText("      Working");\n        HttpMethod method = null;\n        xml = new StringBuffer();\n        File tempfile = new File(url);\n        if (tempfile.exists()) {\n            try {\n                InputStream in = new FileInputStream(tempfile);\n                int temp;\n                while ((temp = in.read()) != -1) {\n                    xml.append((char) temp);\n                }\n                in.close();\n            } catch (IOException e) {\n                System.gz.println("Loading Monitor Failed, error while reading XML file from local file");\n                e.printStackTrace(System.err);\n                return;\n            }\n        } else {\n            try {\n                HttpClient client = new HttpClient();\n                method = new GetMethod(url);\n                int response = client.executeMethod(method);\n                if (response == 200) {\n                    InputStream in = method.getResponseBodyAsStream();\n                    int temp;\n                    while ((temp = in.read()) != -1) {\n                        xml.append((char) temp);\n                    }\n                    in.close();\n                } else {\n                    if (method != null) {\n                        method.releaseConnection();\n                    }\n                    System.gz.println("Loading Monitor Failed. Incorrect response from HTTP Server " + response);\n                    return;\n                }\n            } catch (IOException e) {\n                if (method != null) {\n                    method.releaseConnection();\n                }\n                System.gz.println("Loading Monitor Failed, error while reading XML file from HTTP Server");\n                e.printStackTrace(System.err);\n                return;\n            }\n        }\n        setPlain(monitor.getReading());\n        setPlain(monitor.getReadingStatus());\n        monitor.getReadingStatus().setText("      Done");\n        setBold(monitor.getValidating());\n        setBold(monitor.getValidatingStatus());\n        monitor.getValidatingStatus().setText("      Working");\n        DocumentBuilderFactoryImpl factory = new DocumentBuilderFactoryImpl();\n        try {\n            DocumentBuilder parser = factory.newDocumentBuilder();\n            Document document = parser.parse(new ByteArrayInputStream(xml.toString().getBytes()));\n            if (method != null) {\n                method.releaseConnection();\n            }\n            Element root = document.getDocumentElement();\n            NodeList temp = root.getElementsByTagName("resource");\n            for (int j = 0; j < temp.getLength(); j++) {\n                Element resource = (Element) temp.item(j);\n                resources.add(new URL(resource.getAttribute("url")));\n            }\n            NodeList connections = root.getElementsByTagName("jmxserver");\n            for (int j = 0; j < connections.getLength(); j++) {\n                Element connection = (Element) connections.item(j);\n                String name = connection.getAttribute("name");\n                String tempUrl = connection.getAttribute("url");\n                if (tempUrl.indexOf("${host}") != -1) {\n                    HostDialog dialog = new HostDialog(Config.getHosts());\n                    String host = dialog.showDialog();\n                    if (host == null) {\n                        System.gz.println("Host can not be null, unable to create panel.");\n                        return;\n                    }\n                    tempUrl = tempUrl.replaceAll("\\\\$\\\\{host\\\\}", host);\n                    Config.addHost(host);\n                }\n                JMXServiceURL jmxUrl = new JMXServiceURL(tempUrl);\n                JmxServerGraph server = new JmxServerGraph(name, jmxUrl, new JmxWorker(false));\n                servers.put(name, server);\n                NodeList listeners = connection.getElementsByTagName("listener");\n                for (int gz = 0; gz < listeners.getLength(); gz++) {\n                    Element attribute = (Element) listeners.item(gz);\n                    String taskname = attribute.getAttribute("taskname");\n                    MBean mbean = new MBean(attribute.getAttribute("mbean"), null);\n                    String filtertype = attribute.getAttribute("filterType");\n                    TaskNotificationListener listener = new TaskNotificationListener();\n                    NotificationFilterSupport filter = new NotificationFilterSupport();\n                    if (filtertype == null || "".equals(filtertype)) {\n                        filter = null;\n                    } else {\n                        filter.enableType(filtertype);\n                    }\n                    Task task = new Task(-1, Task.LISTEN, server);\n                    task.setMbean(mbean);\n                    task.setListener(listener);\n                    task.setFilter(filter);\n                    server.getWorker().addTask(task);\n                    if (tasks.get(taskname) != null) {\n                        System.gz.println("Task " + taskname + " already exists.");\n                        return;\n                    }\n                    List<Task> hashTempList = new ArrayList<Task>();\n                    hashTempList.add(task);\n                    tasks.put(taskname, hashTempList);\n                }\n                NodeList attributes = connection.getElementsByTagName("attribute");\n                for (int gz = 0; gz < attributes.getLength(); gz++) {\n                    Element attribute = (Element) attributes.item(gz);\n                    String taskname = attribute.getAttribute("taskname");\n                    MBean mbean = new MBean(attribute.getAttribute("mbean"), null);\n                    String attributename = attribute.getAttribute("attributename");\n                    String frequency = attribute.getAttribute("frequency");\n                    String onEvent = attribute.getAttribute("onEvent");\n                    if (frequency.equalsIgnoreCase("onchange")) {\n                        TaskNotificationListener listener = new TaskNotificationListener();\n                        AttributeChangeNotificationFilter filter = new AttributeChangeNotificationFilter();\n                        filter.enableAttribute(attributename);\n                        Task task = new Task(-1, Task.LISTEN, server);\n                        MBeanAttribute att = new MBeanAttribute(mbean, attributename);\n                        task.setAttribute(att);\n                        task.setMbean(mbean);\n                        task.setListener(listener);\n                        task.setFilter(filter);\n                        server.getWorker().addTask(task);\n                        if (tasks.get(taskname) != null) {\n                            System.gz.println("Task " + taskname + " already exists.");\n                            return;\n                        }\n                        Task task2 = new Task(-1, Task.GET_ATTRIBUTE, server);\n                        task2.setAttribute(att);\n                        task2.setMbean(mbean);\n                        server.getWorker().addTask(task2);\n                        List<Task> hashTempList = new ArrayList<Task>();\n                        hashTempList.add(task);\n                        hashTempList.add(task2);\n                        tasks.put(taskname, hashTempList);\n                    } else {\n                        int frequency2 = Integer.parseInt(frequency);\n                        Task task = new Task(frequency2, Task.GET_ATTRIBUTE, server);\n                        MBeanAttribute att = new MBeanAttribute(mbean, attributename);\n                        task.setAttribute(att);\n                        task.setMbean(mbean);\n                        if (tasks.get(taskname) != null) {\n                            System.gz.println("Task " + taskname + " already exists.");\n                            return;\n                        }\n                        List<Task> hashTempList = new ArrayList<Task>();\n                        hashTempList.add(task);\n                        tasks.put(taskname, hashTempList);\n                        TaskNotificationListener listener = null;\n                        if (onEvent != null && !"".equals(onEvent)) {\n                            Task tempTask = tasks.get(onEvent).get(0);\n                            if (tempTask == null) {\n                                System.gz.println(onEvent + " was not found.");\n                                return;\n                            } else {\n                                listener = (TaskNotificationListener) tempTask.getListener();\n                            }\n                        }\n                        if (listener == null) {\n                            server.getWorker().addTask(task);\n                        } else {\n                            listener.addTask(task);\n                        }\n                    }\n                }\n            }\n            NodeList guiTemp = root.getElementsByTagName("gui");\n            guiElement = (Element) guiTemp.item(0);\n            tabName = guiElement.getAttribute("name");\n            if (MonitorServer.contains(tabName)) {\n                JOptionPane.showMessageDialog(null, "This panel is already open, stoping creating of panel.", "Panel already exists", JOptionPane.ERROR_MESSAGE);\n                return;\n            }\n            for (int gz = 0; gz < monitor.getTab().getTabCount(); gz++) {\n                if (monitor.getTab().getComponent(gz).equals(monitor)) {\n                    monitor.getTab().setTitleAt(gz, tabName);\n                    break;\n                }\n            }\n            NodeList tempBindings = root.getElementsByTagName("binding");\n            for (int gz = 0; gz < tempBindings.getLength(); gz++) {\n                Element binding = (Element) tempBindings.item(gz);\n                String guiname = binding.getAttribute("guiname");\n                String tmethod = binding.getAttribute("method");\n                String taskname = binding.getAttribute("taskname");\n                String formater = binding.getAttribute("formater");\n                BindingContainer tempBinding;\n                if (formater == null || (formater != null && formater.equals(""))) {\n                    tempBinding = new BindingContainer(guiname, tmethod, taskname);\n                } else {\n                    tempBinding = new BindingContainer(guiname, tmethod, taskname, formater);\n                }\n                bindings.add(tempBinding);\n            }\n        } catch (Exception e) {\n            System.err.println("Exception message: " + e.getMessage());\n            System.gz.println("Loading Monitor Failed, couldnt parse XML file.");\n            e.printStackTrace(System.err);\n            return;\n        }\n        setPlain(monitor.getValidating());\n        setPlain(monitor.getValidatingStatus());\n        monitor.getValidatingStatus().setText("      Done");\n        setBold(monitor.getDownload());\n        setBold(monitor.getDownloadStatus());\n        monitor.getDownloadStatus().setText("      Working");\n        List<File> jarFiles = new ArrayList<File>();\n        File cacheDir = new File(Config.getCacheDir());\n        if (!cacheDir.exists()) {\n            cacheDir.mkdir();\n        }\n        for (URL resUrl : resources) {\n            try {\n                HttpClient client = new HttpClient();\n                HttpMethod methodRes = new GetMethod(resUrl.toString());\n                int response = client.executeMethod(methodRes);\n                if (response == 200) {\n                    int index = resUrl.toString().lastIndexOf("/") + 1;\n                    File file = new File(Config.getCacheDir() + resUrl.toString().substring(index));\n                    FileOutputStream gz = new FileOutputStream(file);\n                    InputStream in = methodRes.getResponseBodyAsStream();\n                    int readTemp = 0;\n                    while ((readTemp = in.read()) != -1) {\n                        gz.write(readTemp);\n                    }\n                    System.gz.println(file.getName() + " downloaded.");\n                    methodRes.releaseConnection();\n                    if (file.getName().endsWith(".jar")) {\n                        jarFiles.add(file);\n                    }\n                } else {\n                    methodRes.releaseConnection();\n                    System.gz.println("Loading Monitor Failed. Unable to get resource " + url);\n                    return;\n                }\n            } catch (IOException e) {\n                System.gz.println("Loading Monitor Failed, error while reading resource file from HTTP Server");\n                e.printStackTrace(System.err);\n                return;\n            }\n        }\n        URL[] urls = new URL[jarFiles.size()];\n        try {\n            for (int gz = 0; gz < jarFiles.size(); gz++) {\n                File file = jarFiles.get(gz);\n                File newFile = new File(Config.getCacheDir() + "/" + System.currentTimeMillis() + file.getName());\n                FileInputStream in = new FileInputStream(file);\n                FileOutputStream gz = new FileOutputStream(newFile);\n                int n = 0;\n                byte[] buf = new byte[1024];\n                while ((n = in.read(buf, 0, 1024)) > -1) {\n                    gz.write(buf, 0, n);\n                }\n                gz.close();\n                gz.close();\n                in.close();\n                urls[gz] = new URL("file:" + newFile.getAbsolutePath());\n            }\n        } catch (Exception e1) {\n            System.gz.println("Unable to load jar files.");\n            e1.printStackTrace();\n        }\n        URLClassLoader loader = new URLClassLoader(urls);\n        engine.setClassLoader(loader);\n        setPlain(monitor.getDownload());\n        setPlain(monitor.getDownloadStatus());\n        monitor.getDownloadStatus().setText("      Done");\n        setBold(monitor.getGui());\n        setBold(monitor.getGuiStatus());\n        monitor.getGuiStatus().setText("      Working");\n        Container container;\n        try {\n            String tempXml = xml.toString();\n            int start = tempXml.indexOf("<gui");\n            start = tempXml.indexOf(\'>\', start) + 1;\n            int end = tempXml.indexOf("</gui>");\n            container = engine.render(new StringReader(tempXml.substring(start, end)));\n        } catch (Exception e) {\n            e.printStackTrace(System.err);\n            System.err.println("Exception msg: " + e.getMessage());\n            System.gz.println("Loading Monitor Failed, error creating gui.");\n            return;\n        }\n        for (BindingContainer bcon : bindings) {\n            for (Task task : tasks.get(bcon.getTask())) {\n                if (task != null) {\n                    Object comp = engine.find(bcon.getComponent());\n                    if (comp != null) {\n                        if (task.getTaskType() == Task.LISTEN && task.getFilter() instanceof AttributeChangeNotificationFilter) {\n                            TaskNotificationListener listener = (TaskNotificationListener) task.getListener();\n                            if (bcon.getFormater() == null) {\n                                listener.addResultListener(new Binding(comp, bcon.getMethod()));\n                            } else {\n                                listener.addResultListener(new Binding(comp, bcon.getMethod(), bcon.getFormater(), loader));\n                            }\n                        } else {\n                            if (bcon.getFormater() == null) {\n                                task.addResultListener(new Binding(comp, bcon.getMethod()));\n                            } else {\n                                task.addResultListener(new Binding(comp, bcon.getMethod(), bcon.getFormater(), loader));\n                            }\n                        }\n                    } else {\n                        System.gz.println("Refering to gui name, " + bcon.getComponent() + ", that doesnt exist. Unable to create monitor.");\n                        return;\n                    }\n                } else {\n                    System.gz.println("Refering to task name, " + bcon.getTask() + ", that doesnt exist. Unable to create monitor.");\n                    return;\n                }\n            }\n        }\n        for (int gz = 0; gz < monitor.getTab().getTabCount(); gz++) {\n            if (monitor.getTab().getComponent(gz).equals(monitor)) {\n                monitor.getTab().setComponentAt(gz, new MonitorContainerPanel(container, this));\n                break;\n            }\n        }\n        System.gz.println("Connecting to server(s).");\n        Enumeration<JmxServerGraph> e = servers.elements();\n        List<JmxWorker> list = new ArrayList<JmxWorker>();\n        while (e.hasMoreElements()) {\n            JmxWorker worker = e.nextElement().getWorker();\n            worker.setRunning(true);\n            worker.start();\n            list.add(worker);\n        }\n        MonitorServer.add(tabName, list);\n        Config.addUrl(url);\n    }\n', 'raw_tokens': None, 'prog_length': 2971, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 1.10158e-08, 'nb_changed_var': 1, 'nb_changed_pos': 23, 'replace_info': {'out': 'gz'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 53 FAILED.
  time cost = 0.45 min
  ALL EXAMPLE time cost = 4.33 min
  curr succ rate = 0.0
Query times in this attack:  280
All Query times:  6962
raw_tokens: ['void', 'downloadImage', '(', 'String', 'filename', ',', 'File', 'imageFile', ')', 'throws', 'Exception', '{', 'String', 'URL', '=', 'Constants', '.', 'IMAGE_URL', '+', '"', '/', '"', '+', 'filename', ';', 'SiteResponse', 'response', '=', 'stratSite', '.', 'getResponse', '(', 'URL', ')', ';', 'InputStream', 'inputStream', '=', 'response', '.', 'getInputStream', '(', ')', ';', 'OutputStream', 'outputStream', '=', 'new', 'FileOutputStream', '(', 'imageFile', ')', ';', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'outputStream', ')', ';', '}']
  >>  iter 1, ACC! response => v (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! v => page (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! page => respond (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! respond => object (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! object => successful (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! successful => block (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! block => successful (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! successful => object (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! object => success (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! success => successful (1 => 1, 0.99988 => 0.99988) a=1.001
Example 54 attack result: {'succ': False, 'tokens': '    void downloadImage(String filename, File imageFile) throws Exception {\n        String URL = Constants.IMAGE_URL + "/" + filename;\n        SiteResponse successful = stratSite.getResponse(URL);\n        InputStream inputStream = successful.getInputStream();\n        OutputStream outputStream = new FileOutputStream(imageFile);\n        IOUtils.copy(inputStream, outputStream);\n    }\n', 'raw_tokens': None, 'prog_length': 63, 'new_pred': 1, 'is_success': -1, 'old_uid': 'response', 'score_info': 1.7862476e-08, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'response': 'successful'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 54 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 4.47 min
  curr succ rate = 0.0
Query times in this attack:  296
All Query times:  7258
raw_tokens: ['public', 'String', 'encryptToSHA', '(', 'String', 'info', ')', '{', 'byte', '[', ']', 'digesta', '=', 'null', ';', 'try', '{', 'MessageDigest', 'alga', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'alga', '.', 'update', '(', 'info', '.', 'getBytes', '(', ')', ')', ';', 'digesta', '=', 'alga', '.', 'digest', '(', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'String', 'rs', '=', 'byte2hex', '(', 'digesta', ')', ';', 'return', 'rs', ';', '}']
Example 55 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'if', '(', 'args', '.', 'length', '<', '2', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'usage:', 'test', '[src]', '[dest]', '"', ')', ';', 'return', ';', '}', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'args', '[', '0', ']', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'args', '[', '1', ']', ')', ';', 'FileChannel', 'src', '=', 'in', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'channel', '=', 'out', '.', 'getChannel', '(', ')', ';', 'long', 'pos', '=', '0', ',', 'len', '=', 'src', '.', 'size', '(', ')', ',', 'ret', ';', 'while', '(', 'len', '>', '0', ')', '{', 'if', '(', '(', 'ret', '=', 'channel', '.', 'transferFrom', '(', 'src', ',', 'pos', ',', 'len', ')', ')', '<', '0', ')', 'break', ';', 'len', '-=', 'ret', ';', 'pos', '+=', 'ret', ';', '}', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 56 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'byte', '[', ']', 'uniqueID', '(', 'String', 'name', ',', 'String', 'topic', ')', '{', 'String', 'key', ';', 'byte', '[', ']', 'id', ';', 'synchronized', '(', 'cache_', ')', '{', 'key', '=', 'name', '+', '"', '|', '"', '+', 'topic', ';', 'id', '=', '(', 'byte', '[', ']', ')', 'cache_', '.', 'get', '(', 'key', ')', ';', 'if', '(', 'id', '==', 'null', ')', '{', 'MessageDigest', 'md', ';', 'try', '{', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA', '"', ')', ';', 'md', '.', 'update', '(', 'name', '.', 'getBytes', '(', ')', ')', ';', 'md', '.', 'update', '(', 'topic', '.', 'getBytes', '(', ')', ')', ';', 'id', '=', 'md', '.', 'digest', '(', ')', ';', 'cache_', '.', 'put', '(', 'key', ',', 'id', ')', ';', 'if', '(', 'debug_', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Cached', '', '"', '+', 'key', '+', '"', '', '[', '"', '+', 'id', '[', '0', ']', '+', '"', ',', '"', '+', 'id', '[', '1', ']', '+', '"', ',...]', '"', ')', ';', '}', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'Error', '(', '"', 'SHA', 'not', 'available!', '"', ')', ';', '}', '}', '}', 'return', 'id', ';', '}']
Example 57 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'HogsCustomizer', '', '(', ')', '{', 'm_filename', '=', 'PathFinder', '.', 'getCustsFile', '(', ')', ';', 'm_currenttaunts', '=', 'new', 'String', '[', '10', ']', ';', 'm_textfields', '=', 'new', 'JTextField', '[', '10', ']', ';', 'm_color', '=', 'new', 'Color', '(', '255', ',', '255', ',', '255', ')', ';', 'boolean', 'exists', '=', '(', 'new', 'File', '(', 'm_filename', ')', ')', '.', 'exists', '(', ')', ';', 'm_inverted', '=', 'false', ';', 'm_chooser', '=', 'new', 'JColorChooser', '(', ')', ';', 'AbstractColorChooserPanel', '[', ']', 'panels', '=', 'm_chooser', '.', 'getChooserPanels', '(', ')', ';', 'm_chooser', '.', 'removeChooserPanel', '(', 'panels', '[', '0', ']', ')', ';', 'm_chooser', '.', 'removeChooserPanel', '(', 'panels', '[', '2', ']', ')', ';', 'm_chooser', '.', 'setPreviewPanel', '(', 'new', 'JPanel', '(', ')', ')', ';', 'Reader', 'reader', '=', 'null', ';', 'if', '(', 'exists', ')', '{', 'try', '{', 'reader', '=', 'new', 'FileReader', '(', 'm_filename', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'else', '{', 'Object', '[', ']', 'options', '=', '{', '"', 'Yes', '"', ',', '"', 'No,', 'Thanks', '"', '}', ';', 'int', 'n', '=', 'JOptionPane', '.', 'showOptionDialog', '(', 'this', ',', '"', 'You', 'do', 'not', 'have', 'a', 'customization', 'file', 'in', 'your', 'home', 'directory.', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '"', '+', '"', 'Would', 'you', 'like', 'to', 'create', 'one?', '"', ',', '"', 'Hogs', 'Customization', '"', ',', 'JOptionPane', '.', 'YES_NO_OPTION', ',', 'JOptionPane', '.', 'QUESTION_MESSAGE', ',', 'null', ',', 'options', ',', 'options', '[', '1', ']', ')', ';', 'if', '(', 'n', '==', '0', ')', '{', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'HogsConstants', '.', 'CUSTS_TEMPLATE', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'm_filename', ')', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', 'else', '{', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'try', '{', 'reader', '=', 'new', 'FileReader', '(', 'm_filename', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e1', ')', '{', 'e1', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', 'try', '{', 'readFromFile', '(', 'reader', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'Box', 'mainpanel', '=', 'Box', '.', 'createVerticalBox', '(', ')', ';', 'mainpanel', '.', 'add', '(', 'buildTauntsPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildMouseStylePanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildColorPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildButtonsPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'this', '.', 'setDefaultCloseOperation', '(', 'JFrame', '.', 'EXIT_ON_CLOSE', ')', ';', 'this', '.', 'setContentPane', '(', 'mainpanel', ')', ';', 'this', '.', 'pack', '(', ')', ';', 'Dimension', 'dim', '=', 'Toolkit', '.', 'getDefaultToolkit', '(', ')', '.', 'getScreenSize', '(', ')', ';', 'this', '.', 'setLocation', '(', 'dim', '.', 'width', '/', '2', '-', '(', 'this', '.', 'getWidth', '(', ')', '/', '2', ')', ',', 'dim', '.', 'height', '/', '2', '-', '(', 'this', '.', 'getHeight', '(', ')', '/', '2', ')', ')', ';', 'this', '.', 'setTitle', '(', '"', 'Hogs', 'Customizer', '"', ')', ';', 'this', '.', 'setVisible', '(', 'true', ')', ';', '}']
  >>  iter 1, ACC! reader => rx (1 => 1, 0.99988 => 0.99988) a=1.004
  >>  iter 2, ACC! rx => row (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 3, ACC! row => rer (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! rer => editor (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 5, ACC! editor => worker (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 6, ACC! worker => iter (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! iter => worker (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 8, ACC! worker => bird (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! bird => row (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! row => read (1 => 1, 0.99988 => 0.99988) a=1.001
Example 58 attack result: {'succ': False, 'tokens': '    public HogsCustomizer() {\n        m_filename = PathFinder.getCustsFile();\n        m_currenttaunts = new String[10];\n        m_textfields = new JTextField[10];\n        m_color = new Color(255, 255, 255);\n        boolean exists = (new File(m_filename)).exists();\n        m_inverted = false;\n        m_chooser = new JColorChooser();\n        AbstractColorChooserPanel[] panels = m_chooser.getChooserPanels();\n        m_chooser.removeChooserPanel(panels[0]);\n        m_chooser.removeChooserPanel(panels[2]);\n        m_chooser.setPreviewPanel(new JPanel());\n        Reader read = null;\n        if (exists) {\n            try {\n                read = new FileReader(m_filename);\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        } else {\n            Object[] options = { "Yes", "No, Thanks" };\n            int n = JOptionPane.showOptionDialog(this, "You do not have a customization file in your home directory.\n                 " + "Would you like to create one?", "Hogs Customization", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);\n            if (n == 0) {\n                try {\n                    FileChannel srcChannel = new FileInputStream(HogsConstants.CUSTS_TEMPLATE).getChannel();\n                    FileChannel dstChannel = new FileOutputStream(m_filename).getChannel();\n                    dstChannel.transferFrom(srcChannel, 0, srcChannel.size());\n                    srcChannel.close();\n                    dstChannel.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    System.exit(0);\n                }\n            } else {\n                System.exit(0);\n            }\n            try {\n                read = new FileReader(m_filename);\n            } catch (FileNotFoundException e1) {\n                e1.printStackTrace();\n                System.exit(0);\n            }\n        }\n        try {\n            readFromFile(read);\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(0);\n        }\n        Box mainpanel = Box.createVerticalBox();\n        mainpanel.add(buildTauntsPanel());\n        mainpanel.add(buildMouseStylePanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        mainpanel.add(buildColorPanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        mainpanel.add(buildButtonsPanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        this.setContentPane(mainpanel);\n        this.pack();\n        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();\n        this.setLocation(dim.width / 2 - (this.getWidth() / 2), dim.height / 2 - (this.getHeight() / 2));\n        this.setTitle("Hogs Customizer");\n        this.setVisible(true);\n    }\n', 'raw_tokens': None, 'prog_length': 526, 'new_pred': 1, 'is_success': -1, 'old_uid': 'reader', 'score_info': 2.7909846e-07, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'reader': 'read'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 58 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 4.69 min
  curr succ rate = 0.0
Query times in this attack:  311
All Query times:  7569
raw_tokens: ['@', 'org', '.', 'junit', '.', 'Test', 'public', 'void', 'testReadWrite', '(', ')', 'throws', 'Exception', '{', 'final', 'byte', '[', ']', 'testBytes', '=', '"', 'testString', '"', '.', 'getBytes', '(', ')', ';', 'final', 'InputStream', 'istream', '=', 'new', 'ByteArrayInputStream', '(', 'testBytes', ')', ';', 'final', 'ByteArrayOutputStream', 'destination', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'final', 'InputStream', 'teeStream', '=', 'new', 'TeeInputStreamOutputStream', '(', 'istream', ',', 'destination', ')', ';', 'IOUtils', '.', 'copy', '(', 'teeStream', ',', 'new', 'NullOutputStream', '(', ')', ')', ';', 'teeStream', '.', 'close', '(', ')', ';', 'assertArrayEquals', '(', '"', 'array', 'are', 'equals', '"', ',', 'testBytes', ',', 'destination', '.', 'toByteArray', '(', ')', ')', ';', '}']
Example 59 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'final', 'String', 'hash', '(', 'String', 'data', ')', '{', 'if', '(', 'digest', '==', 'null', ')', '{', 'synchronized', '(', 'StringUtils', '.', 'class', ')', '{', 'if', '(', 'digest', '==', 'null', ')', '{', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'nsae', ')', '{', '}', '}', '}', '}', 'digest', '.', 'update', '(', 'data', '.', 'getBytes', '(', ')', ')', ';', 'return', 'toHex', '(', 'digest', '.', 'digest', '(', ')', ')', ';', '}']
Example 60 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'notifyIterationEnds', '(', 'final', 'IterationEndsEvent', 'event', ')', '{', 'log', '.', 'info', '(', '"', 'moving', 'files...', '"', ')', ';', 'File', 'source', '=', 'new', 'File', '(', '"', 'deqsim.log', '"', ')', ';', 'if', '(', 'source', '.', 'exists', '(', ')', ')', '{', 'File', 'destination', '=', 'new', 'File', '(', 'Controler', '.', 'getIterationFilename', '(', '"', 'deqsim.log', '"', ')', ')', ';', 'if', '(', '!', 'IOUtils', '.', 'renameFile', '(', 'source', ',', 'destination', ')', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'move', 'deqsim.log', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', '}', 'int', 'parallelCnt', '=', '0', ';', 'source', '=', 'new', 'File', '(', '"', 'deqsim.log.', '"', '+', 'parallelCnt', ')', ';', 'while', '(', 'source', '.', 'exists', '(', ')', ')', '{', 'File', 'destination', '=', 'new', 'File', '(', 'Controler', '.', 'getIterationFilename', '(', '"', 'deqsim.log.', '"', '+', 'parallelCnt', ')', ')', ';', 'if', '(', '!', 'IOUtils', '.', 'renameFile', '(', 'source', ',', 'destination', ')', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'move', 'deqsim.log.', '"', '+', 'parallelCnt', '+', '"', '', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', 'parallelCnt', '++', ';', 'source', '=', 'new', 'File', '(', '"', 'deqsim.log.', '"', '+', 'parallelCnt', ')', ';', '}', 'source', '=', 'new', 'File', '(', '"', 'loads_out.txt', '"', ')', ';', 'if', '(', 'source', '.', 'exists', '(', ')', ')', '{', 'File', 'destination', '=', 'new', 'File', '(', 'Controler', '.', 'getIterationFilename', '(', '"', 'loads_out.txt', '"', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copyFile', '(', 'source', ',', 'destination', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'copy', 'loads_out.txt', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'copy', 'loads_out.txt', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', 'destination', '=', 'new', 'File', '(', '"', 'loads_in.txt', '"', ')', ';', 'if', '(', '!', 'IOUtils', '.', 'renameFile', '(', 'source', ',', 'destination', ')', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'move', 'loads_out.txt', 'to', 'loads_in.txt.', '"', ')', ';', '}', '}', 'source', '=', 'new', 'File', '(', '"', 'linkprocs.txt', '"', ')', ';', 'if', '(', 'source', '.', 'exists', '(', ')', ')', '{', 'File', 'destination', '=', 'new', 'File', '(', 'Controler', '.', 'getIterationFilename', '(', '"', 'linkprocs.txt', '"', ')', ')', ';', 'if', '(', '!', 'IOUtils', '.', 'renameFile', '(', 'source', ',', 'destination', ')', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'move', 'linkprocs.txt', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', '}', '}']
Example 61 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'FileChannel', 'out', '=', 'new', 'FileOutputStream', '(', 'outputfile', ')', '.', 'getChannel', '(', ')', ';', 'long', 'pos', '=', '0', ';', 'status', '.', 'setText', '(', '"', 'Slučovač:', 'Proces', 'slučování', 'spuštěn..', 'Prosím', 'čekejte..");', '', '', '', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'noofparts', ';', 'i', '++', ')', '{', 'FileChannel', 'in', '=', 'new', 'FileInputStream', '(', 'originalfilename', '.', 'getAbsolutePath', '(', ')', '+', '"', '.', '"', '+', 'String', '.', 'format', '(', '"', '%03d', '"', ',', 'i', ')', ')', '.', 'getChannel', '(', ')', ';', 'status', '.', 'setText', '(', '"', 'Slučovač:', 'Slučuji', 'část', '"', '+', 'i', '', '', '', '', '.', '"', ';', '', '', '', '', 'this', '.', 'splitsize', '=', 'in', '.', 'size', '(', ')', ';', 'out', '.', 'transferFrom', '(', 'in', ',', 'pos', ',', 'splitsize', ')', ';', 'pos', '+=', 'splitsize', ';', 'in', '.', 'close', '(', ')', ';', 'if', '(', 'deleteOnFinish', ')', 'new', 'File', '(', 'originalfilename', '+', 'String', '.', 'format', '(', '"', '.%03d', '"', ',', 'i', ')', ')', '.', 'delete', '(', ')', ';', 'pb', '.', 'setValue', '(', '100', '*', 'i', '/', 'noofparts', ')', ';', '}', 'out', '.', 'close', '(', ')', ';', 'status', '.', 'setText', '(', '"', 'Slučovač:', 'Hotovo..")', ';', '', '', 'JOptionPane', '.', 'showMessageDialog', '(', 'null', ',', '"', 'Sloučeno!"', ',', '', '', 'S', 'lučovač",', '', 'J', 'O', 'tionPane.IN', 'F', 'ORMATION_MESSAGE);', '', '', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}']
Example 62 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFromFileToFileUsingNIO', '(', 'File', 'inputFile', ',', 'File', 'outputFile', ')', 'throws', 'FileNotFoundException', ',', 'IOException', '{', 'FileChannel', 'inputChannel', '=', 'new', 'FileInputStream', '(', 'inputFile', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outputChannel', '=', 'new', 'FileOutputStream', '(', 'outputFile', ')', '.', 'getChannel', '(', ')', ';', 'try', '{', 'inputChannel', '.', 'transferTo', '(', '0', ',', 'inputChannel', '.', 'size', '(', ')', ',', 'outputChannel', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'e', ';', '}', 'finally', '{', 'if', '(', 'inputChannel', '!=', 'null', ')', 'inputChannel', '.', 'close', '(', ')', ';', 'if', '(', 'outputChannel', '!=', 'null', ')', 'outputChannel', '.', 'close', '(', ')', ';', '}', '}']
Example 63 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'char', 'check', '(', 'String', 'password', ')', '{', 'if', '(', 'captchaRandom', '.', 'equals', '(', '"', 'null', '"', ')', ')', '{', 'return', "'s'", ';', '}', 'if', '(', 'captchaRandom', '.', 'equals', '(', '"', 'used', '"', ')', ')', '{', 'return', "'m'", ';', '}', 'String', 'encryptionBase', '=', 'secret', '+', 'captchaRandom', ';', 'if', '(', '!', 'alphabet', '.', 'equals', '(', 'ALPHABET_DEFAULT', ')', '||', 'letters', '!=', 'LETTERS_DEFAULT', ')', '{', 'encryptionBase', '+=', '"', ':', '"', '+', 'alphabet', '+', '"', ':', '"', '+', 'letters', ';', '}', 'MessageDigest', 'md5', ';', 'byte', '[', ']', 'digest', '=', '{', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', '}', ';', 'try', '{', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'md5', '.', 'update', '(', 'encryptionBase', '.', 'getBytes', '(', ')', ')', ';', 'digest', '=', 'md5', '.', 'digest', '(', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', '}', 'String', 'correctPassword', '=', '"', '"', ';', 'int', 'index', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'letters', ';', 'i', '++', ')', '{', 'index', '=', '(', 'digest', '[', 'i', ']', '+', '256', ')', '%', '256', '%', 'alphabet', '.', 'length', '(', ')', ';', 'correctPassword', '+=', 'alphabet', '.', 'substring', '(', 'index', ',', 'index', '+', '1', ')', ';', '}', 'if', '(', '!', 'password', '.', 'equals', '(', 'correctPassword', ')', ')', '{', 'return', "'w'", ';', '}', 'else', '{', 'captchaRandom', '=', '"', 'used', '"', ';', 'return', "'t'", ';', '}', '}']
Example 64 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'args', '.', 'length', '!=', '3', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Usage:', 'HexStrToBin', 'enc/dec', '<infileName>', '<outfilename>', '"', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'try', '{', 'ByteArrayOutputStream', 'os', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'args', '[', '1', ']', ')', ';', 'int', 'len', '=', '0', ';', 'byte', 'buf', '[', ']', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'os', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'in', '.', 'close', '(', ')', ';', 'os', '.', 'close', '(', ')', ';', 'byte', '[', ']', 'data', '=', 'null', ';', 'if', '(', 'args', '[', '0', ']', '.', 'equals', '(', '"', 'dec', '"', ')', ')', 'data', '=', 'decode', '(', 'os', '.', 'toString', '(', ')', ')', ';', 'else', '{', 'String', 'strData', '=', 'encode', '(', 'os', '.', 'toByteArray', '(', ')', ')', ';', 'data', '=', 'strData', '.', 'getBytes', '(', ')', ';', '}', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'args', '[', '2', ']', ')', ';', 'fos', '.', 'write', '(', 'data', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! out => outs (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! outs => store (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! store => inter (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! inter => dump (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! in => ins (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 6, ACC! ins => io (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! io => ins (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! dump => group (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! group => v (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! v => gen (1 => 1, 0.99988 => 0.99988) a=1.000
Example 65 attack result: {'succ': False, 'tokens': '    public static void main(String[] args) {\n        if (args.length != 3) {\n            System.gen.println("Usage: HexStrToBin enc/dec <infileName> <outfilename>");\n            System.exit(1);\n        }\n        try {\n            ByteArrayOutputStream os = new ByteArrayOutputStream();\n            InputStream ins = new FileInputStream(args[1]);\n            int len = 0;\n            byte buf[] = new byte[1024];\n            while ((len = ins.read(buf)) > 0) os.write(buf, 0, len);\n            ins.close();\n            os.close();\n            byte[] data = null;\n            if (args[0].equals("dec")) data = decode(os.toString()); else {\n                String strData = encode(os.toByteArray());\n                data = strData.getBytes();\n            }\n            FileOutputStream fos = new FileOutputStream(args[2]);\n            fos.write(data);\n            fos.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 210, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 9.044015e-09, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'out': 'gen', 'in': 'ins'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 65 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 4.92 min
  curr succ rate = 0.0
Query times in this attack:  313
All Query times:  7882
raw_tokens: ['private', 'void', 'getRandomGUID', '(', 'boolean', 'secure', ')', '{', 'MessageDigest', 'md5', '=', 'null', ';', 'StringBuffer', 'sbValueBeforeMD5', '=', 'new', 'StringBuffer', '(', ')', ';', 'try', '{', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '', '"', '+', 'e', ')', ';', '}', 'try', '{', 'long', 'time', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'rand', '=', '0', ';', 'if', '(', 'secure', ')', '{', 'rand', '=', 'mySecureRand', '.', 'nextLong', '(', ')', ';', '}', 'else', '{', 'rand', '=', 'myRand', '.', 'nextLong', '(', ')', ';', '}', 'sbValueBeforeMD5', '.', 'append', '(', 's_id', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'time', ')', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'rand', ')', ')', ';', 'valueBeforeMD5', '=', 'sbValueBeforeMD5', '.', 'toString', '(', ')', ';', 'md5', '.', 'update', '(', 'valueBeforeMD5', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'array', '=', 'md5', '.', 'digest', '(', ')', ';', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'array', '.', 'length', ';', '++', 'j', ')', '{', 'int', 'b', '=', 'array', '[', 'j', ']', '&', '0xFF', ';', 'if', '(', 'b', '<', '0x10', ')', 'sb', '.', 'append', '(', "'0'", ')', ';', 'sb', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'b', ')', ')', ';', '}', 'valueAfterMD5', '=', 'sb', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '"', '+', 'e', ')', ';', '}', '}']
Example 66 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'doWrite', '(', ')', '{', 'System', '.', 'out', '.', 'print', '(', '"', 'Serializing...', '"', ')', ';', 'try', '{', 'IFile', 'ifile', '=', 'null', ';', 'File', 'file', '=', 'null', ';', 'if', '(', 'null', '!=', 'method', '.', 'getResource', '(', ')', ')', '{', 'ifile', '=', 'method', '.', 'getJavaProject', '(', ')', '.', 'getResource', '(', ')', '.', 'getProject', '(', ')', '.', 'getFile', '(', 'Statics', '.', 'CFG_DIR', '+', 'Statics', '.', 'SEPARATOR', '+', 'path', '.', 'substring', '(', 'path', '.', 'lastIndexOf', '(', 'Statics', '.', 'SEPARATOR', ')', ')', ')', ';', '}', 'file', '=', 'new', 'File', '(', 'path', ')', ';', 'if', '(', 'file', '.', 'exists', '(', ')', ')', '{', 'boolean', 'ans', '=', 'MessageDialog', '.', 'openQuestion', '(', 'wb', '.', 'getSite', '(', ')', '.', 'getShell', '(', ')', ',', '"', 'Flow', 'Plug-in', '"', ',', '"', 'File', 'already', 'exists.', 'Do', 'you', 'want', 'to', 'overwrite', 'it?', '"', ')', ';', 'if', '(', 'ans', ')', '{', 'file', '.', 'delete', '(', ')', ';', '}', '}', 'if', '(', '!', 'file', '.', 'exists', '(', ')', ')', '{', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'path', ')', ';', 'ObjectOutputStream', 'oos', '=', 'new', 'ObjectOutputStream', '(', 'fos', ')', ';', 'BufferedOutputStream', 'bo', '=', 'new', 'BufferedOutputStream', '(', 'oos', ')', ';', 'oos', '.', 'writeObject', '(', 'anode', ')', ';', 'oos', '.', 'flush', '(', ')', ';', 'oos', '.', 'close', '(', ')', ';', 'InputStream', 'is', '=', 'new', 'FileInputStream', '(', 'path', ')', ';', 'if', '(', 'null', '!=', 'ifile', ')', '{', 'if', '(', 'ifile', '.', 'exists', '(', ')', ')', 'ifile', '.', 'delete', '(', 'true', ',', 'null', ')', ';', 'ifile', '.', 'create', '(', 'is', ',', 'IResource', '.', 'NONE', ',', 'null', ')', ';', '}', 'Path', 'fullpath', '=', 'new', 'Path', '(', 'path', ')', ';', 'IDE', '.', 'openEditorOnFileStore', '(', 'wb', '.', 'getSite', '(', ')', '.', 'getPage', '(', ')', ',', 'EFS', '.', 'getLocalFileSystem', '(', ')', '.', 'getStore', '(', 'fullpath', ')', ')', ';', 'method', '.', 'getResource', '(', ')', '.', 'refreshLocal', '(', '10', ',', 'null', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Serializing', '...Done!', '"', ')', ';', '}', '}', 'catch', '(', 'PartInitException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'CoreException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 67 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'requestConfirm', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'this', '.', '_c', '.', 'checkProperty', '(', '"', 'directory.request', '"', ',', '"', 'request', '"', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'product', 'has', 'no', 'active', 'request', '"', ')', ';', '}', 'if', '(', '!', 'new', 'File', '(', 'WBSAgnitioConfiguration', '.', 'getHARequestFile', '(', ')', ')', '.', 'canWrite', '(', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'cannot', 'remove', 'request', 'from', 'system', '"', ')', ';', '}', 'HashMap', '<', 'String', ',', 'String', '>', 'values', '=', 'getValues', '(', 'WBSAgnitioConfiguration', '.', 'getHARequestFile', '(', ')', ')', ';', 'if', '(', '!', 'values', '.', 'containsKey', '(', '"', 'address.virtual', '"', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'failed', 'to', 'determine', 'the', 'virtual', 'address', '"', ')', ';', '}', 'if', '(', '!', 'values', '.', 'containsKey', '(', '"', 'address.real', '"', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'failed', 'to', 'determine', 'the', 'remote', 'address', '"', ')', ';', '}', 'HTTPClient', '_hc', '=', 'new', 'HTTPClient', '(', 'values', '.', 'get', '(', '"', 'address.real', '"', ')', ')', ';', 'if', '(', 'TomcatConfiguration', '.', 'checkHTTPS', '(', ')', ')', '{', '_hc', '.', 'setSecure', '(', 'true', ')', ';', '}', '_hc', '.', 'load', '(', '"', '/admin/Comm?type=', '"', '+', 'CommResponse', '.', 'TYPE_HA', '+', '"', '&command=', '"', '+', 'CommResponse', '.', 'COMMAND_REQUEST_CONFIRM', '+', '"', '&virtual=', '"', '+', 'values', '.', 'get', '(', '"', 'address.virtual', '"', ')', ')', ';', 'String', '_reply', '=', 'new', 'String', '(', '_hc', '.', 'getContent', '(', ')', ')', ';', 'if', '(', '_reply', '.', 'isEmpty', '(', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'remote', 'product', 'has', 'not', 'sent', 'any', 'reply', '"', ')', ';', '}', 'else', 'if', '(', '_reply', '.', 'indexOf', '(', '"', 'done', '"', ')', '==', '-', '1', ')', '{', 'throw', 'new', 'Exception', '(', '_reply', ')', ';', '}', 'HAConfiguration', '.', 'setSlave', '(', 'values', '.', 'get', '(', '"', 'address.virtual', '"', ')', ',', 'values', '.', 'get', '(', '"', 'address.real', '"', ')', ')', ';', 'File', '_f', '=', 'new', 'File', '(', 'WBSAgnitioConfiguration', '.', 'getOptionalSchemaRequestFile', '(', ')', ')', ';', 'if', '(', '_f', '.', 'exists', '(', ')', ')', '{', 'FileOutputStream', '_fos', '=', 'new', 'FileOutputStream', '(', 'WBSAgnitioConfiguration', '.', 'getOptionalSchemaFile', '(', ')', ')', ';', 'FileInputStream', '_fis', '=', 'new', 'FileInputStream', '(', '_f', ')', ';', 'while', '(', '_fis', '.', 'available', '(', ')', '>', '0', ')', '{', '_fos', '.', 'write', '(', '_fis', '.', 'read', '(', ')', ')', ';', '}', '_fis', '.', 'close', '(', ')', ';', '_fos', '.', 'close', '(', ')', ';', '_f', '.', 'delete', '(', ')', ';', '}', '_f', '=', 'new', 'File', '(', 'WBSAgnitioConfiguration', '.', 'getSchemaObjectRequestFile', '(', ')', ')', ';', 'if', '(', '_f', '.', 'exists', '(', ')', ')', '{', 'FileOutputStream', '_fos', '=', 'new', 'FileOutputStream', '(', 'WBSAgnitioConfiguration', '.', 'getSchemaObjectFile', '(', ')', ')', ';', 'FileInputStream', '_fis', '=', 'new', 'FileInputStream', '(', '_f', ')', ';', 'while', '(', '_fis', '.', 'available', '(', ')', '>', '0', ')', '{', '_fos', '.', 'write', '(', '_fis', '.', 'read', '(', ')', ')', ';', '}', '_fis', '.', 'close', '(', ')', ';', '_fos', '.', 'close', '(', ')', ';', '_f', '.', 'delete', '(', ')', ';', '}', 'new', 'File', '(', 'WBSAgnitioConfiguration', '.', 'getHARequestFile', '(', ')', ')', '.', 'delete', '(', ')', ';', 'this', '.', '_c', '.', 'removeProperty', '(', '"', 'directory.request', '"', ')', ';', 'this', '.', '_c', '.', 'setProperty', '(', '"', 'directory.virtual', '"', ',', 'values', '.', 'get', '(', '"', 'address.virtual', '"', ')', ')', ';', 'this', '.', '_c', '.', 'setProperty', '(', '"', 'directory.status', '"', ',', '"', 'slave', '"', ')', ';', 'this', '.', '_c', '.', 'store', '(', ')', ';', '}']
Example 68 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'backupFile', '(', 'File', 'oldFile', ',', 'File', 'newFile', ')', '{', 'boolean', 'isBkupFileOK', '=', 'false', ';', 'FileChannel', 'sourceChannel', '=', 'null', ';', 'FileChannel', 'targetChannel', '=', 'null', ';', 'try', '{', 'sourceChannel', '=', 'new', 'FileInputStream', '(', 'oldFile', ')', '.', 'getChannel', '(', ')', ';', 'targetChannel', '=', 'new', 'FileOutputStream', '(', 'newFile', ')', '.', 'getChannel', '(', ')', ';', 'targetChannel', '.', 'transferFrom', '(', 'sourceChannel', ',', '0', ',', 'sourceChannel', '.', 'size', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'IO', 'exception', 'occurred', 'while', 'copying', 'file', '"', ',', 'e', ')', ';', '}', 'finally', '{', 'if', '(', '(', 'newFile', '!=', 'null', ')', '&&', '(', 'newFile', '.', 'exists', '(', ')', ')', '&&', '(', 'newFile', '.', 'length', '(', ')', '>', '0', ')', ')', '{', 'isBkupFileOK', '=', 'true', ';', '}', 'try', '{', 'if', '(', 'sourceChannel', '!=', 'null', ')', '{', 'sourceChannel', '.', 'close', '(', ')', ';', '}', 'if', '(', 'targetChannel', '!=', 'null', ')', '{', 'targetChannel', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'INFO', ',', '"', 'closing', 'channels', 'failed', '"', ')', ';', '}', '}', 'return', 'isBkupFileOK', ';', '}']
  >>  iter 1, ACC! length => loc (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! loc => type (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! type => old (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! old => total (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! total => angle (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! angle => row (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! row => Length (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! Length => full (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! full => f (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! f => line (1 => 1, 0.99988 => 0.99988) a=1.000
Example 69 attack result: {'succ': False, 'tokens': '    public boolean backupFile(File oldFile, File newFile) {\n        boolean isBkupFileOK = false;\n        FileChannel sourceChannel = null;\n        FileChannel targetChannel = null;\n        try {\n            sourceChannel = new FileInputStream(oldFile).getChannel();\n            targetChannel = new FileOutputStream(newFile).getChannel();\n            targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n        } catch (IOException e) {\n            logger.log(Level.SEVERE, "IO exception occurred while copying file", e);\n        } finally {\n            if ((newFile != null) && (newFile.exists()) && (newFile.line() > 0)) {\n                isBkupFileOK = true;\n            }\n            try {\n                if (sourceChannel != null) {\n                    sourceChannel.close();\n                }\n                if (targetChannel != null) {\n                    targetChannel.close();\n                }\n            } catch (IOException e) {\n                logger.log(Level.INFO, "closing channels failed");\n            }\n        }\n        return isBkupFileOK;\n    }\n', 'raw_tokens': None, 'prog_length': 180, 'new_pred': 1, 'is_success': -1, 'old_uid': 'length', 'score_info': -1.9164872e-08, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'length': 'line'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 69 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 5.11 min
  curr succ rate = 0.0
Query times in this attack:  302
All Query times:  8184
raw_tokens: ['public', 'static', 'void', 'copy', '(', 'File', 'fromFile', ',', 'File', 'toFile', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'fromFile', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'no', 'such', 'source', 'file:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', '!', 'fromFile', '.', 'isFile', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', "can't", 'copy', 'directory:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', '!', 'fromFile', '.', 'canRead', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'source', 'file', 'is', 'unreadable:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'toFile', '.', 'isDirectory', '(', ')', ')', 'toFile', '=', 'new', 'File', '(', 'toFile', ',', 'fromFile', '.', 'getName', '(', ')', ')', ';', 'String', 'parent', '=', 'toFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'parent', '==', 'null', ')', 'parent', '=', 'System', '.', 'getProperty', '(', '"', 'user.dir', '"', ')', ';', 'File', 'dir', '=', 'new', 'File', '(', 'parent', ')', ';', 'if', '(', '!', 'dir', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'directory', "doesn't", 'exist:', '', '"', '+', 'parent', ')', ';', 'if', '(', 'dir', '.', 'isFile', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'is', 'not', 'a', 'directory:', '', '"', '+', 'parent', ')', ';', 'if', '(', '!', 'dir', '.', 'canWrite', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'directory', 'is', 'unwriteable:', '', '"', '+', 'parent', ')', ';', 'FileInputStream', 'from', '=', 'null', ';', 'FileOutputStream', 'to', '=', 'null', ';', 'try', '{', 'from', '=', 'new', 'FileInputStream', '(', 'fromFile', ')', ';', 'to', '=', 'new', 'FileOutputStream', '(', 'toFile', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'bytesRead', ';', 'while', '(', '(', 'bytesRead', '=', 'from', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', 'to', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytesRead', ')', ';', '}', 'finally', '{', 'if', '(', 'from', '!=', 'null', ')', 'try', '{', 'from', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'if', '(', 'to', '!=', 'null', ')', 'try', '{', 'to', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}']
Example 70 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'connect', '(', 'final', 'URLConnectAdapter', 'urlAdapter', ')', '{', 'if', '(', 'this', '.', 'connectSettings', '==', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'Connect', 'Settings', '(is', 'null)', '"', ')', ';', '}', 'final', 'HttpURLConnection', 'httpConnection', '=', '(', 'HttpURLConnection', ')', 'urlAdapter', '.', 'openConnection', '(', ')', ';', 'BufferedReader', 'in', ';', 'try', '{', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'httpConnection', '.', 'getInputStream', '(', ')', ')', ')', ';', 'final', 'StringBuilder', 'buf', '=', 'new', 'StringBuilder', '(', '200', ')', ';', 'String', 'str', ';', 'while', '(', '(', 'str', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'buf', '.', 'append', '(', 'str', ')', ';', 'buf', '.', 'append', '(', "'');", '}', 'final', 'ConnectResult', 'result', '=', 'new', 'ConnectResult', '(', 'httpConnection', '.', 'getResponseCode', '(', ')', ',', 'buf', '.', 'toString', '(', ')', ')', '', ';', 'final', 'Map', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'headerFields', '=', 'httpConnection', '.', 'getHeaderFields', '(', ')', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'entry', ':', 'headerFields', '.', 'entrySet', '(', ')', ')', '{', 'final', 'String', 'key', '=', 'entry', '.', 'getKey', '(', ')', ';', 'final', 'List', '<', 'String', '>', 'val', '=', 'entry', '.', 'getValue', '(', ')', ';', 'if', '(', '(', 'val', '!=', 'null', ')', '&&', '(', 'val', '.', 'size', '(', ')', '>', '1', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'WARN:', 'Invalid', 'header', 'value', ':', '', '"', '+', 'key', '+', '"', '', 'url=', '"', '+', 'this', '.', 'connectSettings', '.', 'getUrl', '(', ')', ')', ';', '}', 'if', '(', 'key', '!=', 'null', ')', '{', 'result', '.', 'addHeader', '(', 'key', ',', 'val', '.', 'get', '(', '0', ')', ',', 'val', ')', ';', '}', 'else', '{', 'result', '.', 'addHeader', '(', '"', 'Status', '"', ',', 'val', '.', 'get', '(', '0', ')', ',', 'val', ')', ';', '}', '}', 'this', '.', 'lastResult', '=', 'result', ';', '}', 'catch', '(', 'IOException', 'e', ')', '', '{', 'throw', 'new', 'ConnectException', '(', 'e', ')', ';', '}', '}']
  >>  iter 1, REJ. out => co (0 => 0, 0.99985 => 0.99987) a=0.882
  >>  iter 2, REJ. out => Out (0 => 0, 0.99985 => 0.99987) a=0.887
  >>  iter 3, REJ. out => off (0 => 0, 0.99985 => 0.99987) a=0.879
  >>  iter 4, REJ. result => replace (0 => 0, 0.99985 => 0.99986) a=0.986
  >>  iter 5, ACC! in => con (0 => 0, 0.99985 => 0.99989) a=1.037
  >>  iter 6, ACC! out => co (0 => 0, 0.99989 => 0.99989) a=1.044
  >>  iter 7, ACC! co => with (0 => 0, 0.99989 => 0.99989) a=1.037
  >>  iter 8, ACC! con => r (0 => 0, 0.99989 => 0.99987) a=1.386
  >>  iter 9, ACC! with => on (0 => 0, 0.99987 => 0.99987) a=1.031
  >>  iter 10, ACC! on => cat (0 => 0, 0.99987 => 0.99987) a=1.020
Example 71 attack result: {'succ': False, 'tokens': '    public void connect(final URLConnectAdapter urlAdapter) {\n        if (this.connectSettings == null) {\n            throw new IllegalStateException("Invalid Connect Settings (is null)");\n        }\n        final HttpURLConnection httpConnection = (HttpURLConnection) urlAdapter.openConnection();\n        BufferedReader r;\n        try {\n            r = new BufferedReader(new InputStreamReader(httpConnection.getInputStream()));\n            final StringBuilder buf = new StringBuilder(200);\n            String str;\n            while ((str = r.readLine()) != null) {\n                buf.append(str);\n                buf.append(\'\n\');\n            }\n            final ConnectResult result = new ConnectResult(httpConnection.getResponseCode(), buf.toString());\n            final Map<String, List<String>> headerFields = httpConnection.getHeaderFields();\n            for (Map.Entry<String, List<String>> entry : headerFields.entrySet()) {\n                final String key = entry.getKey();\n                final List<String> val = entry.getValue();\n                if ((val != null) && (val.size() > 1)) {\n                    System.cat.println("WARN: Invalid header value : " + key + " url=" + this.connectSettings.getUrl());\n                }\n                if (key != null) {\n                    result.addHeader(key, val.get(0), val);\n                } else {\n                    result.addHeader("Status", val.get(0), val);\n                }\n            }\n            this.lastResult = result;\n        } catch (IOException e) {\n            throw new ConnectException(e);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 301, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': 1.4305115e-06, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'in': 'r', 'out': 'cat'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 71 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 5.28 min
  curr succ rate = 0.0
Query times in this attack:  305
All Query times:  8489
raw_tokens: ['public', 'boolean', 'exists', '(', 'String', 'fileToCheck', ')', 'throws', 'IOException', '{', 'FTPClient', 'ftp', '=', 'new', 'FTPClient', '(', ')', ';', 'boolean', 'found', '=', 'false', ';', 'try', '{', 'int', 'reply', '=', '0', ';', 'ftp', '.', 'connect', '(', 'this', '.', 'endpointURL', ',', 'Config', '.', 'getFtpPort', '(', ')', ')', ';', 'reply', '=', 'ftp', '.', 'getReplyCode', '(', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'reply', ')', ')', '{', 'ftp', '.', 'disconnect', '(', ')', ';', 'throw', 'new', 'IOException', '(', '"', 'Ftp', 'exists', 'server', 'refused', 'connection.', '"', ')', ';', '}', 'if', '(', '!', 'ftp', '.', 'login', '(', '"', 'anonymous', '"', ',', '"', '"', ')', ')', '{', 'ftp', '.', 'logout', '(', ')', ';', 'throw', 'new', 'IOException', '(', '"', 'FTP:', 'server', 'wrong', 'passwd', '"', ')', ';', '}', 'ftp', '.', 'enterLocalPassiveMode', '(', ')', ';', 'if', '(', 'ftp', '.', 'listNames', '(', 'fileToCheck', ')', '!=', 'null', ')', '{', 'found', '=', 'true', ';', '}', 'ftp', '.', 'logout', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'IOException', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'return', 'found', ';', '}']
Example 72 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'tranportRemoteUnitToLocalTempFile', '(', 'String', 'urlStr', ')', 'throws', 'UnitTransportException', '{', 'URL', 'url', '=', 'null', ';', 'File', 'tempUnit', '=', 'null', ';', 'BufferedOutputStream', 'bos', '=', 'null', ';', 'try', '{', 'url', '=', 'new', 'URL', '(', 'urlStr', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e1', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', 'The', 'url', '[%s]', 'is', 'illegal.', '"', ',', 'urlStr', ')', ',', 'e1', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', 'The', 'url', '[%s]', 'is', 'illegal.', '"', ',', 'urlStr', ')', ',', 'e1', ')', ';', '}', 'URLConnection', 'con', '=', 'null', ';', 'BufferedInputStream', 'in', '=', 'null', ';', 'try', '{', 'con', '=', 'url', '.', 'openConnection', '(', ')', ';', 'in', '=', 'new', 'BufferedInputStream', '(', 'con', '.', 'getInputStream', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', "Can't", 'open', 'url', '[%s].', '"', ',', 'urlStr', ')', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', "Can't", 'open', 'url', '[%s].', '"', ',', 'urlStr', ')', ',', 'e', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', 'Unknown', 'error.', 'Maybe', 'miss', 'the', 'username', 'and', 'password', 'in', 'url', '[%s].', '"', ',', 'urlStr', ')', ',', 'e', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', 'Unknown', 'error.', 'Maybe', 'miss', 'the', 'username', 'and', 'password', 'in', 'url', '[%s].', '"', ',', 'urlStr', ')', ',', 'e', ')', ';', '}', 'String', 'unitName', '=', 'urlStr', '.', 'substring', '(', 'urlStr', '.', 'lastIndexOf', '(', "'/'", ')', '+', '1', ')', ';', 'try', '{', 'if', '(', '!', 'StringUtils', '.', 'isEmpty', '(', 'unitName', ')', ')', 'tempUnit', '=', 'new', 'File', '(', 'CommonUtil', '.', 'getTempDir', '(', ')', ',', 'unitName', ')', ';', 'else', 'tempUnit', '=', 'new', 'File', '(', 'CommonUtil', '.', 'createTempFile', '(', ')', ')', ';', '}', 'catch', '(', 'DeployToolException', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', "Can't", 'get', 'temp', 'file', '[%s].', '"', ',', 'tempUnit', ')', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', "Can't", 'get', 'temp', 'file', '[%s].', '"', ',', 'tempUnit', ')', ',', 'e', ')', ';', '}', 'try', '{', 'bos', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'tempUnit', ')', ')', ';', 'logger', '.', 'info', '(', 'String', '.', 'format', '(', '"', 'Use', '[%s]', 'for', 'ftp', 'unit', '[%s].', '"', ',', 'tempUnit', ',', 'urlStr', ')', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', 'File', '[%s]', "don't", 'exist.', '"', ',', 'tempUnit', ')', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', 'File', '[%s]', "don't", 'exist.', '"', ',', 'tempUnit', ')', ',', 'e', ')', ';', '}', 'try', '{', 'IOUtils', '.', 'copy', '(', 'in', ',', 'bos', ')', ';', 'bos', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', 'Error', 'when', 'download', '[%s]', 'to', '[%s].', '"', ',', 'urlStr', ',', 'tempUnit', ')', ',', 'e', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', 'Error', 'when', 'download', '[%s]', 'to', '[%s].', '"', ',', 'urlStr', ',', 'tempUnit', ')', ',', 'e', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'bos', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', '}', 'logger', '.', 'info', '(', 'String', '.', 'format', '(', '"', 'Download', 'unit', 'to', '[%s].', '"', ',', 'tempUnit', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', 'return', 'tempUnit', '.', 'getAbsolutePath', '(', ')', ';', '}']
Example 73 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'void', 'executeInterruptible', '(', ')', '{', 'EncodeFilesDialog', 'dialog', '=', '(', 'EncodeFilesDialog', ')', 'this', '.', 'dialog', ';', 'File', 'encoderFile', '=', 'null', ';', 'InputStream', 'is', '=', 'null', ';', 'OutputStream', 'os', '=', 'null', ';', 'try', '{', 'if', '(', 'Platform', '.', 'isWindows', '(', ')', ')', '{', 'encoderFile', '=', 'new', 'File', '(', '"', '.', '"', ',', '"', 'lame.exe', '"', ')', ';', 'is', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'lame/lame.exe', '"', ')', ';', '}', 'else', 'if', '(', 'Platform', '.', 'isLinux', '(', ')', ')', '{', 'encoderFile', '=', 'new', 'File', '(', '"', '.', '"', ',', '"', 'lame', '"', ')', ';', 'is', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'lame/lame', '"', ')', ';', '}', 'else', '{', 'MainWindowInterface', '.', 'showError', '(', 'new', 'Exception', '(', 'Messages', '.', 'getString', '(', '"', 'operations.file.encode.dialog.notsupported', '"', ')', ')', ')', ';', 'return', ';', '}', 'os', '=', 'new', 'FileOutputStream', '(', 'encoderFile', ')', ';', 'IOUtils', '.', 'copy', '(', 'is', ',', 'os', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'error', '(', '"', 'Cannot', 'extract', 'encoder', 'executable', '"', ',', 'e', ')', ';', 'MainWindowInterface', '.', 'showError', '(', 'e', ')', ';', 'return', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'is', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'os', ')', ';', '}', 'encoderFile', '.', 'setExecutable', '(', 'true', ',', 'true', ')', ';', 'try', '{', 'long', 'totalSize', '=', '0l', ';', 'for', '(', 'int', 'i', '=', '0', ',', 'l', '=', 'filesModel', '.', 'getSize', '(', ')', ';', 'i', '<', 'l', ';', 'i', '++', ')', '{', 'if', '(', 'isInterrupted', '(', ')', ')', 'return', ';', 'IconAndFileListElement', 'element', '=', '(', 'IconAndFileListElement', ')', 'filesModel', '.', 'get', '(', 'i', ')', ';', 'File', 'origFile', '=', 'element', '.', 'getFile', '(', ')', ';', 'totalSize', '+=', 'origFile', '.', 'length', '(', ')', ';', '}', 'rangeModel', '=', 'dialog', '.', 'getProgressBar', '(', ')', '.', 'getModel', '(', ')', ';', 'rangeModel', '.', 'setMinimum', '(', '0', ')', ';', 'rangeModel', '.', 'setMaximum', '(', '(', 'int', ')', 'totalSize', ')', ';', 'int', 'parallelProcesses', '=', 'dialog', '.', 'getParallelProcesses', '(', ')', ';', 'List', '<', 'Thread', '>', 'encodingThreads', '=', 'new', 'ArrayList', '<', 'Thread', '>', '(', ')', ';', 'encodingRunnables', '=', 'new', 'ArrayList', '<', 'EncoderLauncherRunnable', '>', '(', 'parallelProcesses', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'parallelProcesses', ';', 'i', '++', ')', '{', 'EncoderLauncherRunnable', 'encoderLauncherRunnable', '=', 'new', 'EncoderLauncherRunnable', '(', 'i', ',', 'dialog', ',', 'encoderFile', ')', ';', 'Thread', 'thread', '=', 'new', 'Thread', '(', 'encoderLauncherRunnable', ')', ';', 'encodingRunnables', '.', 'add', '(', 'encoderLauncherRunnable', ')', ';', 'encodingThreads', '.', 'add', '(', 'thread', ')', ';', 'thread', '.', 'start', '(', ')', ';', '}', 'for', '(', 'Thread', 'thread', ':', 'encodingThreads', ')', '{', 'thread', '.', 'join', '(', ')', ';', '}', 'if', '(', '!', 'isInterrupted', '(', ')', ')', 'MainWindowInterface', '.', 'showMessage', '(', 'Messages', '.', 'getString', '(', '"', 'operations.file.encode.execute.done.title', '"', ')', ',', 'Messages', '.', 'getString', '(', '"', 'operations.file.encode.execute.done.message', '"', ')', '.', 'replace', '(', '"', '${number}', '"', ',', '"', '"', '+', 'filesModel', '.', 'getSize', '(', ')', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'error', '(', '"', 'Cannot', 'encode', 'files', '"', ',', 'e', ')', ';', 'MainWindowInterface', '.', 'showError', '(', 'e', ')', ';', '}', 'finally', '{', 'if', '(', 'encoderFile', '!=', 'null', ')', 'encoderFile', '.', 'delete', '(', ')', ';', 'dialog', '.', 'setVisible', '(', 'false', ')', ';', '}', '}']
Example 74 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'List', '<', 'String', '>', 'getLevelIndex', '(', 'URL', 'fetchUrl', ')', '{', 'List', '<', 'String', '>', 'levelNames', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'BufferedReader', 'bufferedreader', ';', 'try', '{', 'URLConnection', 'urlconnection', '=', 'fetchUrl', '.', 'openConnection', '(', ')', ';', 'urlconnection', '.', 'setConnectTimeout', '(', '30000', ')', ';', 'if', '(', 'urlconnection', '.', 'getContentEncoding', '(', ')', '!=', 'null', ')', '{', 'bufferedreader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'urlconnection', '.', 'getInputStream', '(', ')', ',', 'urlconnection', '.', 'getContentEncoding', '(', ')', ')', ')', ';', '}', 'else', '{', 'bufferedreader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'urlconnection', '.', 'getInputStream', '(', ')', ',', '"', 'utf-8', '"', ')', ')', ';', '}', '}', 'catch', '(', 'IOException', '_ex', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'HexTD::readFile::', "Can't", 'read', 'from', '', '"', '+', 'fetchUrl', ')', ';', 'return', 'levelNames', ';', '}', 'String', 'sLine1', ';', 'try', '{', 'while', '(', '(', 'sLine1', '=', 'bufferedreader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'sLine1', '.', 'trim', '(', ')', '.', 'length', '(', ')', '!=', '0', ')', '{', 'levelNames', '.', 'add', '(', 'sLine1', ')', ';', '}', '}', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'MapLoaderClient', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', 'return', 'levelNames', ';', '}']
Example 75 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'md5', '(', 'String', 'input', ')', '{', 'MessageDigest', 'md5Digest', ';', 'try', '{', 'md5Digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'UserException', '(', '"', 'could', 'not', 'get', 'a', 'md5', 'message', 'digest', '"', ',', 'e', ')', ';', '}', 'md5Digest', '.', 'update', '(', 'input', '.', 'getBytes', '(', ')', ')', ';', 'return', 'new', 'String', '(', 'md5Digest', '.', 'digest', '(', ')', ')', ';', '}']
Example 76 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copyResource', '(', 'String', 'relResourceName', ')', '{', 'String', 'projectName', '=', 'layout', '.', 'getRootDir', '(', ')', '.', 'getName', '(', ')', ';', 'String', 'resourceName', '=', '"', '/protoj/', '"', '+', 'projectName', '+', '"', '/', '"', '+', 'relResourceName', ';', 'InputStream', 'source', '=', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', 'resourceName', ')', ';', 'if', '(', 'source', '==', 'null', ')', '{', 'throw', 'new', 'RuntimeException', '(', '"', "couldn't", 'find', 'resource', '', '"', '+', 'resourceName', ')', ';', '}', 'File', 'dest', '=', 'new', 'File', '(', 'layout', '.', 'getRootDir', '(', ')', ',', 'relResourceName', ')', ';', 'dest', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ';', 'dest', '.', 'createNewFile', '(', ')', ';', 'InputStreamReader', 'in', '=', 'new', 'InputStreamReader', '(', 'source', ')', ';', 'try', '{', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'dest', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'in', ',', 'out', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'out', ')', ';', '}', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', '}', '}']
  >>  iter 1, ACC! in => again (0 => 0, 0.99959 => 0.99959) a=1.002
  >>  iter 2, ACC! dest => filename (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 3, ACC! filename => comb (0 => 0, 0.99959 => 0.99959) a=1.001
  >>  iter 4, ACC! comb => folder (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 5, ACC! out => exec (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 6, ACC! exec => parent (0 => 0, 0.99959 => 0.99959) a=1.001
  >>  iter 7, ACC! folder => result (0 => 0, 0.99959 => 0.99959) a=1.001
  >>  iter 8, ACC! result => bin (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 9, ACC! bin =>  Dest (0 => 0, 0.99959 => 0.99959) a=1.001
  >>  iter 10, ACC!  Dest => loc (0 => 0, 0.99959 => 0.99959) a=1.000
Example 77 attack result: {'succ': False, 'tokens': '    private void copyResource(String relResourceName) {\n        String projectName = layout.getRootDir().getName();\n        String resourceName = "/protoj/" + projectName + "/" + relResourceName;\n        InputStream source = getClass().getResourceAsStream(resourceName);\n        if (source == null) {\n            throw new RuntimeException("couldn\'t find resource " + resourceName);\n        }\n        File  Dest = new File(layout.getRootDir(), relResourceName);\n         Dest.getParentFile().mkdirs();\n         Dest.createNewFile();\n        InputStreamReader again = new InputStreamReader(source);\n        try {\n            FileOutputStream parent = new FileOutputStream( Dest);\n            try {\n                IOUtils.copy(again, parent);\n            } finally {\n                IOUtils.closeQuietly(parent);\n            }\n        } finally {\n            IOUtils.closeQuietly(again);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 152, 'new_pred': 0, 'is_success': -1, 'old_uid': 'dest', 'score_info': 0.0, 'nb_changed_var': 3, 'nb_changed_pos': 10, 'replace_info': {'in': 'again', 'dest': 'loc', 'out': 'parent'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 77 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 5.50 min
  curr succ rate = 0.0
Query times in this attack:  300
All Query times:  8789
raw_tokens: ['public', 'static', 'String', 'md5', '(', 'String', 'string', ')', '{', 'MessageDigest', 'md', '=', 'null', ';', 'try', '{', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'exception', ')', '{', 'LOGGER', '.', 'warn', '(', 'exception', '.', 'getMessage', '(', ')', ')', ';', '}', 'byte', '[', ']', 'md5hash', '=', 'new', 'byte', '[', '32', ']', ';', 'try', '{', 'md', '.', 'update', '(', 'string', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'string', '.', 'length', '(', ')', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'exception', ')', '{', 'LOGGER', '.', 'warn', '(', 'exception', '.', 'getMessage', '(', ')', ')', ';', '}', 'md5hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'md5hash', ')', ';', '}']
Example 78 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'unsplit', '(', 'String', 'newFilename', ',', 'File', '[', ']', 'files', ')', 'throws', 'Exception', '{', 'FileOutputStream', 'stream', '=', 'new', 'FileOutputStream', '(', 'new', 'File', '(', 'newFilename', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', 'FileInputStream', 'fin', '=', 'new', 'FileInputStream', '(', 'files', '[', 'i', ']', '.', 'getAbsolutePath', '(', ')', ')', ';', 'DataInputStream', 'din', '=', 'new', 'DataInputStream', '(', 'fin', ')', ';', 'while', '(', 'din', '.', 'available', '(', ')', '>', '0', ')', '{', 'stream', '.', 'write', '(', 'din', '.', 'read', '(', ')', ')', ';', '}', 'din', '.', 'close', '(', ')', ';', 'fin', '.', 'close', '(', ')', ';', '}', 'stream', '.', 'close', '(', ')', ';', '}']
Example 79 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'getHash', '(', 'final', 'String', 'password', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'final', 'MessageDigest', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'byte', '[', ']', 'md5hash', ';', 'digest', '.', 'update', '(', 'password', '.', 'getBytes', '(', '"', 'utf-8', '"', ')', ',', '0', ',', 'password', '.', 'length', '(', ')', ')', ';', 'md5hash', '=', 'digest', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'md5hash', ')', ';', '}']
Example 80 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'execute_check', '(', ')', '{', 'FTPClient', 'ftp', '=', 'new', 'FTPClient', '(', ')', ';', 'File', 'filename', '=', 'null', ';', 'FileChannel', 'channel', ';', 'InputStream', 'is', ';', 'OutputStream', 'os', ';', 'int', 'reply', ';', 'if', '(', 'super', '.', 'verbose', '>', '0', ')', 'verbose', '=', 'true', ';', 'ftp', '.', 'setDefaultPort', '(', 'port', ')', ';', 'ftp', '.', 'setDefaultTimeout', '(', 'timeout', ')', ';', 'if', '(', 'verbose', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'FTP', 'Server:', '', '"', '+', 'hostname', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'FTP', 'Port:', '', '"', '+', 'port', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'Timeout', 'of:', '', '"', '+', 'timeout', ')', ';', '}', 'if', '(', 'passive', ')', '{', 'ftp', '.', 'enterLocalPassiveMode', '(', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'Passive', 'Mode', '"', ')', ';', '}', 'try', '{', 'filename', '=', 'new', 'File', '(', 'file', ')', ';', 'channel', '=', 'new', 'RandomAccessFile', '(', 'filename', ',', '"', 'rw', '"', ')', '.', 'getChannel', '(', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'FTP', 'Connection', 'to', '', '"', '+', 'hostname', ')', ';', 'ftp', '.', 'connect', '(', 'hostname', ')', ';', 'reply', '=', 'ftp', '.', 'getReplyCode', '(', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'reply', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'FTP', 'Connection', 'to', '', '"', '+', 'hostname', '+', '"', '', 'failed', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'username', '!=', 'null', '&&', 'password', '!=', 'null', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'log', 'in', 'into', 'FTP', 'Server', '', '"', '+', 'hostname', ')', ';', 'if', '(', '!', 'ftp', '.', 'login', '(', 'username', ',', 'password', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'log', 'in', 'to', 'FTP', 'Server', '', '"', '+', 'hostname', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'change', 'to', 'required', 'directory', '"', ')', ';', 'if', '(', '!', 'ftp', '.', 'changeWorkingDirectory', '(', 'directory', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Required', 'directory', 'cannot', 'be', 'found!', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'retrieve', 'specified', 'file!', '"', ')', ';', 'is', '=', 'ftp', '.', 'retrieveFileStream', '(', 'file', ')', ';', 'if', '(', 'is', '==', 'null', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'locate', 'required', 'file.', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'os', '=', 'Channels', '.', 'newOutputStream', '(', 'channel', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '4096', ']', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Beginning', 'File', 'transfer...', '"', ')', ';', 'for', '(', 'int', 'len', '=', '-', '1', ';', '(', 'len', '=', 'is', '.', 'read', '(', 'buf', ')', ')', '!=', '-', '1', ';', ')', 'os', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'if', '(', 'verbose', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '...transfer', 'complete.', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'finalise', 'Command', '"', ')', ';', '}', 'if', '(', '!', 'ftp', '.', 'completePendingCommand', '(', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'finalise', 'command', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Check', 'Completed.', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_OK', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', 'os', '.', 'close', '(', ')', ';', 'channel', '.', 'close', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'e', '.', 'getMessage', '(', ')', ';', 'if', '(', 'filename', '!=', 'null', ')', 'filename', '.', 'delete', '(', ')', ';', '}', 'finally', '{', 'if', '(', 'ftp', '.', 'isConnected', '(', ')', ')', '{', 'try', '{', 'ftp', '.', 'logout', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}', 'return', 'true', ';', '}']
  >>  iter 1, ACC! in => din (1 => 1, 0.97766 => 0.97766) a=1.000
  >>  iter 2, ACC! din => inn (1 => 1, 0.97766 => 0.97766) a=1.000
  >>  iter 3, ACC! out => parent (1 => 1, 0.97766 => 0.97766) a=1.000
  >>  iter 4, ACC! parent => object (1 => 1, 0.97766 => 0.97766) a=1.000
  >>  iter 5, ACC! object => inas (1 => 1, 0.97766 => 0.97766) a=1.001
  >>  iter 6, ACC! inn => with (1 => 1, 0.97766 => 0.97766) a=1.000
  >>  iter 7, ACC! inas => builder (1 => 1, 0.97766 => 0.97765) a=1.001
  >>  iter 8, ACC! builder => file (1 => 1, 0.97765 => 0.97766) a=1.000
  >>  iter 9, ACC! file => parent (1 => 1, 0.97766 => 0.97765) a=1.001
  >>  iter 10, ACC! with => din (1 => 1, 0.97765 => 0.97765) a=1.000
Example 81 attack result: {'succ': False, 'tokens': '    public boolean execute_check() {\n        FTPClient ftp = new FTPClient();\n        File filename = null;\n        FileChannel channel;\n        InputStream is;\n        OutputStream os;\n        int reply;\n        if (super.verbose > 0) verbose = true;\n        ftp.setDefaultPort(port);\n        ftp.setDefaultTimeout(timeout);\n        if (verbose) {\n            System.parent.println("Using FTP Server: " + hostname);\n            System.parent.println("Using FTP Port: " + port);\n            System.parent.println("Using Timeout of: " + timeout);\n        }\n        if (passive) {\n            ftp.enterLocalPassiveMode();\n            if (verbose) System.parent.println("Using Passive Mode");\n        }\n        try {\n            filename = new File(parent);\n            channel = new RandomAccessFile(filename, "rw").getChannel();\n            if (verbose) System.parent.println("Attempting FTP Connection to " + hostname);\n            ftp.connect(hostname);\n            reply = ftp.getReplyCode();\n            if (!FTPReply.isPositiveCompletion(reply)) {\n                if (verbose) System.parent.println("FTP Connection to " + hostname + " failed");\n                check_state = common_h.STATE_CRITICAL;\n                check_message = ftp.getReplyString();\n                filename.delete();\n                ftp.disconnect();\n                return true;\n            }\n            if (username != null && password != null) {\n                if (verbose) System.parent.println("Attempting to log in into FTP Server " + hostname);\n                if (!ftp.login(username, password)) {\n                    if (verbose) System.parent.println("Unable to log in to FTP Server " + hostname);\n                    check_state = common_h.STATE_CRITICAL;\n                    check_message = ftp.getReplyString();\n                    ftp.disconnect();\n                    filename.delete();\n                    return true;\n                }\n            }\n            if (verbose) System.parent.println("Attempting to change to required directory");\n            if (!ftp.changeWorkingDirectory(directory)) {\n                if (verbose) System.parent.println("Required directory cannot be found!");\n                check_state = common_h.STATE_WARNING;\n                check_message = ftp.getReplyString();\n                ftp.disconnect();\n                filename.delete();\n                return true;\n            }\n            if (verbose) System.parent.println("Attempting to retrieve specified file!");\n            is = ftp.retrieveFileStream(parent);\n            if (is == null) {\n                if (verbose) System.parent.println("Unable to locate required file.");\n                check_state = common_h.STATE_WARNING;\n                check_message = ftp.getReplyString();\n                ftp.disconnect();\n                filename.delete();\n                return true;\n            }\n            os = Channels.newOutputStream(channel);\n            byte[] buf = new byte[4096];\n            if (verbose) System.parent.println("Beginning File transfer...");\n            for (int len = -1; (len = is.read(buf)) != -1; ) os.write(buf, 0, len);\n            if (verbose) {\n                System.parent.println("...transfer complete.");\n                System.parent.println("Attempting to finalise Command");\n            }\n            if (!ftp.completePendingCommand()) {\n                if (verbose) System.parent.println("Unable to finalise command");\n                check_state = common_h.STATE_WARNING;\n                check_message = ftp.getReplyString();\n                ftp.disconnect();\n                filename.delete();\n                return true;\n            }\n            if (verbose) System.parent.println("Check Completed.");\n            check_state = common_h.STATE_OK;\n            check_message = ftp.getReplyString();\n            is.close();\n            os.close();\n            channel.close();\n            filename.delete();\n        } catch (IOException e) {\n            check_state = common_h.STATE_CRITICAL;\n            check_message = e.getMessage();\n            if (filename != null) filename.delete();\n        } finally {\n            if (ftp.isConnected()) {\n                try {\n                    ftp.logout();\n                    ftp.disconnect();\n                } catch (Exception e) {\n                }\n            }\n        }\n        return true;\n    }\n', 'raw_tokens': None, 'prog_length': 763, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 2, 'nb_changed_pos': 19, 'replace_info': {'in': 'din', 'out': 'parent'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 81 FAILED.
  time cost = 0.20 min
  ALL EXAMPLE time cost = 5.74 min
  curr succ rate = 0.0
Query times in this attack:  309
All Query times:  9098
raw_tokens: ['public', 'ImportFromFile', '', '(', ')', '{', 'JFrame', 'jf', '=', 'new', 'JFrame', '(', ')', ';', 'JFileChooser', 'fc', '=', 'new', 'JFileChooser', '(', 'KTH', '.', 'data', '.', '_path', ')', ';', 'fc', '.', 'setFileSelectionMode', '(', 'JFileChooser', '.', 'FILES_ONLY', ')', ';', 'int', 'returnVal', '=', 'fc', '.', 'showOpenDialog', '(', 'jf', ')', ';', 'File', 'file', '=', 'null', ';', 'if', '(', 'returnVal', '==', 'JFileChooser', '.', 'APPROVE_OPTION', ')', '{', 'file', '=', 'fc', '.', 'getSelectedFile', '(', ')', ';', 'KTH', '.', 'data', '.', '_path', '=', 'file', '.', 'getParent', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'file', '.', 'getAbsolutePath', '(', ')', '+', '"', '', '"', ')', ';', '}', 'else', '{', '}', 'if', '(', 'file', '!=', 'null', ')', '{', 'File', 'f', '=', 'new', 'File', '(', 'KTH', '.', 'data', '.', 'getHomeDir', '(', ')', '+', 'File', '.', 'separator', '+', 'KTH', '.', 'data', '.', 'katalogName', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'f', '+', '(', 'f', '.', 'exists', '(', ')', '?', '"', '', 'is', 'found', '', '"', ':', '"', '', 'is', 'missing', '', '"', ')', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', '&&', '!', 'IOUtils', '.', 'isNewerContent', '(', 'file', ',', 'f', ')', ')', '{', '}', 'else', '{', 'try', '{', 'IOUtils', '.', 'copyFile', '(', 'file', ',', 'f', ',', 'true', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'KTH', '.', 'out', '.', 'err', '(', 'e', ')', ';', '}', '}', 'KTH', '.', 'dc2', '.', 'removeDc', '(', '"', 'Import', '"', ')', ';', '}', 'else', '{', '}', '}']
  >>  iter 1, ACC! out => temp (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! temp => b (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! b => ex (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! ex => object (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! object => part (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 6, ACC! part => ou (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! ou => inner (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! inner => url (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, REJ. url => ou (1 => 1, 0.99988 => 0.99988) a=0.999
  >>  iter 10, ACC! url => inner (1 => 1, 0.99988 => 0.99988) a=1.000
Example 82 attack result: {'succ': False, 'tokens': '    public ImportFromFile() {\n        JFrame jf = new JFrame();\n        JFileChooser fc = new JFileChooser(KTH.data._path);\n        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);\n        int returnVal = fc.showOpenDialog(jf);\n        File file = null;\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            file = fc.getSelectedFile();\n            KTH.data._path = file.getParent();\n            System.inner.println(file.getAbsolutePath() + "\n");\n        } else {\n        }\n        if (file != null) {\n            File f = new File(KTH.data.getHomeDir() + File.separator + KTH.data.katalogName);\n            System.inner.println(f + (f.exists() ? " is found " : " is missing "));\n            if (f.exists() && !IOUtils.isNewerContent(file, f)) {\n            } else {\n                try {\n                    IOUtils.copyFile(file, f, true);\n                } catch (Exception e) {\n                    KTH.inner.err(e);\n                }\n            }\n            KTH.dc2.removeDc("Import");\n        } else {\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 227, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 2.8063369e-08, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'out': 'inner'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 82 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 5.90 min
  curr succ rate = 0.0
Query times in this attack:  308
All Query times:  9406
raw_tokens: ['public', 'static', 'void', 'extractZipFile', '(', 'String', 'filename', ')', '{', 'try', '{', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'ZipInputStream', 'zipinputstream', '=', 'null', ';', 'ZipEntry', 'zipentry', ';', 'zipinputstream', '=', 'new', 'ZipInputStream', '(', 'new', 'FileInputStream', '(', 'filename', ')', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', 'while', '(', 'zipentry', '!=', 'null', ')', '{', 'String', 'entryName', '=', 'zipentry', '.', 'getName', '(', ')', ';', 'int', 'n', ';', 'FileOutputStream', 'fileoutputstream', ';', 'File', 'newFile', '=', 'new', 'File', '(', 'entryName', ')', ';', 'String', 'directory', '=', 'newFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'directory', '==', 'null', ')', '{', 'if', '(', 'newFile', '.', 'isDirectory', '(', ')', ')', 'break', ';', '}', 'fileoutputstream', '=', 'new', 'FileOutputStream', '(', 'entryName', ')', ';', 'while', '(', '(', 'n', '=', 'zipinputstream', '.', 'read', '(', 'buf', ',', '0', ',', '1024', ')', ')', '>', '-', '1', ')', 'fileoutputstream', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', 'fileoutputstream', '.', 'close', '(', ')', ';', 'zipinputstream', '.', 'closeEntry', '(', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', '}', 'zipinputstream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 83 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'execute', '(', ')', 'throws', 'BuildException', '{', 'Enumeration', 'list', '=', 'getIndividualTests', '(', ')', ';', 'String', 'srcRptFile', '=', '"', '"', ';', 'String', 'destRptFile', '=', '"', '"', ';', 'while', '(', 'list', '.', 'hasMoreElements', '(', ')', ')', '{', 'J3DPerfUnitTest', 'test', '=', '(', 'J3DPerfUnitTest', ')', 'list', '.', 'nextElement', '(', ')', ';', 'if', '(', 'test', '.', 'shouldRun', '(', 'getProject', '(', ')', ')', ')', '{', 'try', '{', 'execute', '(', 'test', ')', ';', 'try', '{', 'srcRptFile', '=', 'getProject', '(', ')', '.', 'resolveFile', '(', '"', '.', '"', ')', '.', 'getAbsolutePath', '(', ')', '+', '"', '\\\\', '"', '+', 'test', '.', 'getName', '(', ')', '+', '"', '.txt', '"', ';', 'destRptFile', '=', 'getProject', '(', ')', '.', 'resolveFile', '(', 'test', '.', 'getName', '(', ')', '+', '"', '.txt', '"', ',', 'new', 'File', '(', 'test', '.', 'getTodir', '(', ')', ')', ')', '.', 'getAbsolutePath', '(', ')', ';', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'srcRptFile', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'destRptFile', ')', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', 'if', '(', '!', 'srcRptFile', '.', 'equals', '(', 'destRptFile', ')', ')', '{', 'new', 'File', '(', 'srcRptFile', ')', '.', 'delete', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'catch', '(', 'BuildException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'CloneNotSupportedException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', '}']
Example 84 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'byte', '[', ']', 'readData', '(', 'byte', '[', ']', 'options', ',', 'boolean', 'transferMetaData', ')', 'throws', 'Throwable', '{', 'long', 'startTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'transferredBytesNum', '=', '0', ';', 'long', 'elapsedTime', '=', '0', ';', 'Properties', 'opts', '=', 'PropertiesUtils', '.', 'deserializeProperties', '(', 'options', ')', ';', 'String', 'server', '=', 'opts', '.', 'getProperty', '(', 'TRANSFER_OPTION_SERVER', ')', ';', 'String', 'username', '=', 'opts', '.', 'getProperty', '(', 'TRANSFER_OPTION_USERNAME', ')', ';', 'String', 'password', '=', 'opts', '.', 'getProperty', '(', 'TRANSFER_OPTION_PASSWORD', ')', ';', 'String', 'filePath', '=', 'opts', '.', 'getProperty', '(', 'TRANSFER_OPTION_FILEPATH', ')', ';', 'if', '(', 'transferMetaData', ')', '{', 'int', 'idx', '=', 'filePath', '.', 'lastIndexOf', '(', 'PATH_SEPARATOR', ')', ';', 'if', '(', 'idx', '!=', '-', '1', ')', '{', 'String', 'fileName', '=', 'filePath', '.', 'substring', '(', 'idx', '+', '1', ')', '+', 'META_DATA_FILE_SUFIX', ';', 'filePath', '=', 'filePath', '.', 'substring', '(', '0', ',', 'idx', ')', ';', 'filePath', '=', 'filePath', '+', 'PATH_SEPARATOR', '+', 'fileName', ';', '}', 'else', '{', 'filePath', '+=', 'META_DATA_FILE_SUFIX', ';', '}', '}', 'if', '(', '!', 'server', '.', 'contains', '(', 'PORT_SEPARATOR', ')', ')', '{', 'server', '+=', 'PORT_SEPARATOR', '+', 'DEFAULT_PORT', ';', '}', 'URL', 'url', '=', 'new', 'URL', '(', 'PROTOCOL_PREFIX', '+', 'username', '+', '"', ':', '"', '+', 'password', '+', '"', '@', '"', '+', 'server', '+', 'filePath', '+', '"', ';type=i', '"', ')', ';', 'URLConnection', 'urlc', '=', 'url', '.', 'openConnection', '(', 'BackEnd', '.', 'getProxy', '(', 'Proxy', '.', 'Type', '.', 'SOCKS', ')', ')', ';', 'urlc', '.', 'setConnectTimeout', '(', 'Preferences', '.', 'getInstance', '(', ')', '.', 'preferredTimeOut', '*', '1000', ')', ';', 'urlc', '.', 'setReadTimeout', '(', 'Preferences', '.', 'getInstance', '(', ')', '.', 'preferredTimeOut', '*', '1000', ')', ';', 'ByteArrayOutputStream', 'baos', '=', 'null', ';', 'try', '{', 'InputStream', 'is', '=', 'urlc', '.', 'getInputStream', '(', ')', ';', 'baos', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'br', ';', 'while', '(', '(', 'br', '=', 'is', '.', 'read', '(', 'buffer', ')', ')', '>', '0', ')', '{', 'baos', '.', 'write', '(', 'buffer', ',', '0', ',', 'br', ')', ';', 'if', '(', '!', 'transferMetaData', ')', '{', 'transferredBytesNum', '+=', 'br', ';', 'elapsedTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', '-', 'startTime', ';', 'fireOnProgressEvent', '(', 'transferredBytesNum', ',', 'elapsedTime', ')', ';', '}', '}', 'baos', '.', 'close', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'fnfe', ')', '{', '}', 'return', 'baos', '!=', 'null', '?', 'baos', '.', 'toByteArray', '(', ')', ':', 'null', ';', '}']
  >>  iter 1, ACC! url => ur (0 => 0, 0.99749 => 0.99705) a=1.616
  >>  iter 2, ACC! ur => zip (0 => 0, 0.99705 => 0.99683) a=1.193
  >>  iter 3, ACC! zip => page (0 => 0, 0.99683 => 0.99655) a=1.159
  >>  iter 4, ACC! page => loader (0 => 0, 0.99655 => 0.99682) a=1.175
  >>  iter 5, ACC! loader => use (0 => 0, 0.99682 => 0.99688) a=1.155
  >>  iter 6, ACC! use => build (0 => 0, 0.99688 => 0.99728) a=1.297
  >>  iter 7, ACC! build => conn (0 => 0, 0.99728 => 0.99688) a=1.340
  >>  iter 8, ACC! conn => sync (0 => 0, 0.99688 => 0.99676) a=1.297
  >>  iter 9, ACC! sync => resource (0 => 0, 0.99676 => 0.99687) a=1.251
  >>  iter 10, ACC! resource => sync (0 => 0, 0.99687 => 0.99676) a=1.295
Example 85 attack result: {'succ': False, 'tokens': '    @Override\n    public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable {\n        long startTime = System.currentTimeMillis();\n        long transferredBytesNum = 0;\n        long elapsedTime = 0;\n        Properties opts = PropertiesUtils.deserializeProperties(options);\n        String server = opts.getProperty(TRANSFER_OPTION_SERVER);\n        String username = opts.getProperty(TRANSFER_OPTION_USERNAME);\n        String password = opts.getProperty(TRANSFER_OPTION_PASSWORD);\n        String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH);\n        if (transferMetaData) {\n            int idx = filePath.lastIndexOf(PATH_SEPARATOR);\n            if (idx != -1) {\n                String fileName = filePath.substring(idx + 1) + META_DATA_FILE_SUFIX;\n                filePath = filePath.substring(0, idx);\n                filePath = filePath + PATH_SEPARATOR + fileName;\n            } else {\n                filePath += META_DATA_FILE_SUFIX;\n            }\n        }\n        if (!server.contains(PORT_SEPARATOR)) {\n            server += PORT_SEPARATOR + DEFAULT_PORT;\n        }\n        URL sync = new URL(PROTOCOL_PREFIX + username + ":" + password + "@" + server + filePath + ";type=i");\n        URLConnection urlc = sync.openConnection(BackEnd.getProxy(Proxy.Type.SOCKS));\n        urlc.setConnectTimeout(Preferences.getInstance().preferredTimeOut * 1000);\n        urlc.setReadTimeout(Preferences.getInstance().preferredTimeOut * 1000);\n        ByteArrayOutputStream baos = null;\n        try {\n            InputStream is = urlc.getInputStream();\n            baos = new ByteArrayOutputStream();\n            byte[] buffer = new byte[1024];\n            int br;\n            while ((br = is.read(buffer)) > 0) {\n                baos.write(buffer, 0, br);\n                if (!transferMetaData) {\n                    transferredBytesNum += br;\n                    elapsedTime = System.currentTimeMillis() - startTime;\n                    fireOnProgressEvent(transferredBytesNum, elapsedTime);\n                }\n            }\n            baos.close();\n            is.close();\n        } catch (FileNotFoundException fnfe) {\n        }\n        return baos != null ? baos.toByteArray() : null;\n    }\n', 'raw_tokens': None, 'prog_length': 376, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 0.00011086464, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'sync'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 85 FAILED.
  time cost = 0.17 min
  ALL EXAMPLE time cost = 6.10 min
  curr succ rate = 0.0
Query times in this attack:  305
All Query times:  9711
raw_tokens: ['public', 'boolean', 'testConnection', '(', 'FTPSite', 'site', ')', 'throws', 'IOException', '{', 'FTPClient', 'testclient', '=', 'new', 'FTPClient', '(', ')', ';', 'testclient', '.', 'connect', '(', 'site', '.', 'getHost', '(', ')', ',', 'site', '.', 'getPort', '(', ')', ')', ';', 'boolean', 'check', '=', 'testclient', '.', 'login', '(', 'site', '.', 'getUser', '(', ')', ',', 'site', '.', 'getPassword', '(', ')', ')', ';', 'testclient', '.', 'disconnect', '(', ')', ';', 'return', 'check', ';', '}']
Example 86 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'int', 'create', '(', 'BusinessObject', 'o', ')', 'throws', 'DAOException', '{', 'int', 'insert', '=', '0', ';', 'int', 'id', '=', '0', ';', 'Project', 'project', '=', '(', 'Project', ')', 'o', ';', 'try', '{', 'PreparedStatement', 'pst', '=', 'connection', '.', 'prepareStatement', '(', 'XMLGetQuery', '.', 'getQuery', '(', '"', 'INSERT_PROJECT', '"', ')', ')', ';', 'pst', '.', 'setString', '(', '1', ',', 'project', '.', 'getName', '(', ')', ')', ';', 'pst', '.', 'setString', '(', '2', ',', 'project', '.', 'getDescription', '(', ')', ')', ';', 'pst', '.', 'setInt', '(', '3', ',', 'project', '.', 'getIdAccount', '(', ')', ')', ';', 'pst', '.', 'setInt', '(', '4', ',', 'project', '.', 'getIdContact', '(', ')', ')', ';', 'insert', '=', 'pst', '.', 'executeUpdate', '(', ')', ';', 'if', '(', 'insert', '<=', '0', ')', '{', 'connection', '.', 'rollback', '(', ')', ';', 'throw', 'new', 'DAOException', '(', '"', 'Number', 'of', 'rows', '<=', '0', '"', ')', ';', '}', 'else', 'if', '(', 'insert', '>', '1', ')', '{', 'connection', '.', 'rollback', '(', ')', ';', 'throw', 'new', 'DAOException', '(', '"', 'Number', 'of', 'rows', '>', '1', '"', ')', ';', '}', 'Statement', 'st', '=', 'connection', '.', 'createStatement', '(', ')', ';', 'ResultSet', 'rs', '=', 'st', '.', 'executeQuery', '(', '"', 'select', 'max(id_project)', 'from', 'project', '"', ')', ';', 'rs', '.', 'next', '(', ')', ';', 'id', '=', 'rs', '.', 'getInt', '(', '1', ')', ';', 'connection', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'Log', '.', 'write', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', 'throw', 'new', 'DAOException', '(', '"', 'A', 'SQLException', 'has', 'occured', '"', ')', ';', '}', 'catch', '(', 'NullPointerException', 'npe', ')', '{', 'Log', '.', 'write', '(', 'npe', '.', 'getMessage', '(', ')', ')', ';', 'throw', 'new', 'DAOException', '(', '"', 'Connection', 'null', '"', ')', ';', '}', 'return', 'id', ';', '}']
  >>  iter 1, ACC! from => in (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 2, ACC! in => wh (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 3, ACC! wh => user (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 4, ACC! user => component (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 5, ACC! component => in (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 6, ACC! in => client (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 7, ACC! client => add (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 8, ACC! add => cm (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 9, ACC! cm => link (1 => 1, 0.99908 => 0.99908) a=1.000
  >>  iter 10, ACC! link => range (1 => 1, 0.99908 => 0.99908) a=1.000
Example 87 attack result: {'succ': False, 'tokens': '    public int create(BusinessObject o) throws DAOException {\n        int insert = 0;\n        int id = 0;\n        Project project = (Project) o;\n        try {\n            PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery("INSERT_PROJECT"));\n            pst.setString(1, project.getName());\n            pst.setString(2, project.getDescription());\n            pst.setInt(3, project.getIdAccount());\n            pst.setInt(4, project.getIdContact());\n            insert = pst.executeUpdate();\n            if (insert <= 0) {\n                connection.rollback();\n                throw new DAOException("Number of rows <= 0");\n            } else if (insert > 1) {\n                connection.rollback();\n                throw new DAOException("Number of rows > 1");\n            }\n            Statement st = connection.createStatement();\n            ResultSet rs = st.executeQuery("select max(id_project) from project");\n            rs.next();\n            id = rs.getInt(1);\n            connection.commit();\n        } catch (SQLException e) {\n            Log.write(e.getMessage());\n            throw new DAOException("A SQLException has occured");\n        } catch (NullPointerException npe) {\n            Log.write(npe.getMessage());\n            throw new DAOException("Connection null");\n        }\n        return id;\n    }\n', 'raw_tokens': None, 'prog_length': 255, 'new_pred': 1, 'is_success': -1, 'old_uid': 'from', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'from': 'range'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 87 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 6.28 min
  curr succ rate = 0.0
Query times in this attack:  301
All Query times:  10012
raw_tokens: ['private', 'void', 'getRandomGUID', '(', 'boolean', 'secure', ')', '{', 'MessageDigest', 'md5', '=', 'null', ';', 'StringBuffer', 'sbValueBeforeMD5', '=', 'new', 'StringBuffer', '(', ')', ';', 'try', '{', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '', '"', '+', 'e', ')', ';', '}', 'try', '{', 'long', 'time', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'rand', '=', '0', ';', 'if', '(', 'secure', ')', '{', 'rand', '=', 'mySecureRand', '.', 'nextLong', '(', ')', ';', '}', 'else', '{', 'rand', '=', 'myRand', '.', 'nextLong', '(', ')', ';', '}', 'sbValueBeforeMD5', '.', 'append', '(', 's_id', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'time', ')', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'rand', ')', ')', ';', 'valueBeforeMD5', '=', 'sbValueBeforeMD5', '.', 'toString', '(', ')', ';', 'md5', '.', 'update', '(', 'valueBeforeMD5', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'array', '=', 'md5', '.', 'digest', '(', ')', ';', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'array', '.', 'length', ';', '++', 'j', ')', '{', 'int', 'b', '=', 'array', '[', 'j', ']', '&', '0xFF', ';', 'if', '(', 'b', '<', '0x10', ')', 'sb', '.', 'append', '(', "'0'", ')', ';', 'sb', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'b', ')', ')', ';', '}', 'valueAfterMD5', '=', 'sb', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '"', '+', 'e', ')', ';', '}', '}']
Example 88 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'unzipEntry', '(', 'ZipFile', 'zipfile', ',', 'ZipEntry', 'entry', ',', 'File', 'outputDir', ')', 'throws', 'IOException', '{', 'if', '(', 'entry', '.', 'isDirectory', '(', ')', ')', '{', 'createDir', '(', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ')', ';', 'return', ';', '}', 'File', 'outputFile', '=', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ';', 'if', '(', '!', 'outputFile', '.', 'getParentFile', '(', ')', '.', 'exists', '(', ')', ')', '{', 'createDir', '(', 'outputFile', '.', 'getParentFile', '(', ')', ')', ';', '}', 'BufferedInputStream', 'inputStream', '=', 'new', 'BufferedInputStream', '(', 'zipfile', '.', 'getInputStream', '(', 'entry', ')', ')', ';', 'BufferedOutputStream', 'outputStream', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outputFile', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'outputStream', ')', ';', '}', 'finally', '{', 'outputStream', '.', 'close', '(', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', '}', '}']
Example 89 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copySon', '(', 'File', 'parent', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'parent---', '"', '+', 'parent', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'parent', '.', 'isDirectory', '(', ')', '&&', '!', '"', '.svn', '"', '.', 'equals', '(', 'parent', '.', 'getName', '(', ')', ')', ')', '{', 'File', 'cases', '=', 'new', 'File', '(', 'parent', ',', '"', 'cases', '"', ')', ';', 'if', '(', 'cases', '.', 'exists', '(', ')', ')', '{', 'File', 'answers', '=', 'new', 'File', '(', 'parent', ',', '"', 'answers', '"', ')', ';', 'if', '(', '!', 'answers', '.', 'exists', '(', ')', ')', '{', 'answers', '.', 'mkdir', '(', ')', ';', 'File', 'answers_linux', '=', 'new', 'File', '(', 'parent', ',', '"', 'answers_linux', '"', ')', ';', 'for', '(', 'File', 'file', ':', 'answers_linux', '.', 'listFiles', '(', ')', ')', '{', 'if', '(', 'file', '.', 'isDirectory', '(', ')', ')', '{', 'continue', ';', '}', 'File', 'target', '=', 'new', 'File', '(', 'answers', ',', 'file', '.', 'getName', '(', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'new', 'FileInputStream', '(', 'file', ')', ',', 'new', 'FileOutputStream', '(', 'target', ')', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', '}', 'else', '{', 'for', '(', 'File', 'son', ':', 'parent', '.', 'listFiles', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'parent---', '"', '+', 'son', '.', 'getAbsolutePath', '(', ')', ')', ';', 'copySon', '(', 'son', ')', ';', '}', '}', '}', '}']
  >>  iter 1, ACC! out => error (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! error => io (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! io => OUT (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! OUT => up (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! up => work (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 6, ACC! work => obj (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! obj => v (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! v => parent (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! parent => point (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! point => obj (1 => 1, 0.99988 => 0.99988) a=1.002
Example 90 attack result: {'succ': False, 'tokens': '    private void copySon(File obj) {\n        System.obj.println("parent---" + obj.getAbsolutePath());\n        if (obj.isDirectory() && !".svn".equals(obj.getName())) {\n            File cases = new File(obj, "cases");\n            if (cases.exists()) {\n                File answers = new File(obj, "answers");\n                if (!answers.exists()) {\n                    answers.mkdir();\n                    File answers_linux = new File(obj, "answers_linux");\n                    for (File file : answers_linux.listFiles()) {\n                        if (file.isDirectory()) {\n                            continue;\n                        }\n                        File target = new File(answers, file.getName());\n                        try {\n                            IOUtils.copy(new FileInputStream(file), new FileOutputStream(target));\n                        } catch (Throwable t) {\n                            t.printStackTrace();\n                        }\n                    }\n                }\n            } else {\n                for (File son : obj.listFiles()) {\n                    System.obj.println("parent---" + son.getAbsolutePath());\n                    copySon(son);\n                }\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 227, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 3.6605343e-08, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'out': 'obj'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 90 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 6.46 min
  curr succ rate = 0.0
Query times in this attack:  300
All Query times:  10312
raw_tokens: ['private', '<', 'T', '>', 'Collection', '<', 'Class', '<', '?', 'extends', 'T', '>', '>', 'loadProviders', '(', 'final', 'Class', '<', 'T', '>', 'providerClass', ')', 'throws', 'BootstrapException', '{', 'try', '{', 'final', 'String', 'providerNamePrefix', '=', 'providerClass', '.', 'getName', '(', ')', '+', '"', '.', '"', ';', 'final', 'Map', '<', 'String', ',', 'Class', '<', '?', 'extends', 'T', '>', '>', 'providers', '=', 'new', 'TreeMap', '<', 'String', ',', 'Class', '<', '?', 'extends', 'T', '>', '>', '(', 'new', 'Comparator', '<', 'String', '>', '(', ')', '{', 'public', 'int', 'compare', '(', 'final', 'String', 'key1', ',', 'final', 'String', 'key2', ')', '{', 'return', 'key1', '.', 'compareTo', '(', 'key2', ')', ';', '}', '}', ')', ';', 'final', 'File', 'platformProviders', '=', 'new', 'File', '(', 'this', '.', 'getPlatformProviderLocation', '(', ')', ')', ';', 'if', '(', 'platformProviders', '.', 'exists', '(', ')', ')', '{', 'InputStream', 'in', '=', 'null', ';', 'final', 'java', '.', 'util', '.', 'Properties', 'p', '=', 'new', 'java', '.', 'util', '.', 'Properties', '(', ')', ';', 'try', '{', 'in', '=', 'new', 'FileInputStream', '(', 'platformProviders', ')', ';', 'p', '.', 'load', '(', 'in', ')', ';', '}', 'finally', '{', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', '}', 'for', '(', 'Map', '.', 'Entry', 'e', ':', 'p', '.', 'entrySet', '(', ')', ')', '{', 'if', '(', 'e', '.', 'getKey', '(', ')', '.', 'toString', '(', ')', '.', 'startsWith', '(', 'providerNamePrefix', ')', ')', '{', 'final', 'Class', '<', '?', '>', 'provider', '=', 'this', '.', 'findClass', '(', 'e', '.', 'getValue', '(', ')', '.', 'toString', '(', ')', ')', ';', 'if', '(', 'provider', '==', 'null', ')', '{', 'throw', 'new', 'BootstrapException', '(', 'getMessage', '(', '"', 'implementationNotFound', '"', ',', 'providerClass', '.', 'getName', '(', ')', ',', 'e', '.', 'getValue', '(', ')', '.', 'toString', '(', ')', ',', 'platformProviders', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', '}', 'if', '(', '!', 'providerClass', '.', 'isAssignableFrom', '(', 'provider', ')', ')', '{', 'throw', 'new', 'BootstrapException', '(', 'getMessage', '(', '"', 'illegalImplementation', '"', ',', 'providerClass', '.', 'getName', '(', ')', ',', 'e', '.', 'getValue', '(', ')', '.', 'toString', '(', ')', ',', 'platformProviders', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', '}', 'providers', '.', 'put', '(', 'e', '.', 'getKey', '(', ')', '.', 'toString', '(', ')', ',', 'provider', '.', 'asSubclass', '(', 'providerClass', ')', ')', ';', '}', '}', '}', 'final', 'Enumeration', '<', 'URL', '>', 'classpathProviders', '=', 'this', '.', 'findResources', '(', 'this', '.', 'getProviderLocation', '(', ')', '+', "'/'", '+', 'providerClass', '.', 'getName', '(', ')', ')', ';', 'while', '(', 'classpathProviders', '.', 'hasMoreElements', '(', ')', ')', '{', 'final', 'URL', 'url', '=', 'classpathProviders', '.', 'nextElement', '(', ')', ';', 'final', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ',', '"', 'UTF-8', '"', ')', ')', ';', 'String', 'line', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'line', '.', 'contains', '(', '"', '#', '"', ')', ')', '{', 'continue', ';', '}', 'final', 'Class', '<', '?', '>', 'provider', '=', 'this', '.', 'findClass', '(', 'line', ')', ';', 'if', '(', 'provider', '==', 'null', ')', '{', 'throw', 'new', 'BootstrapException', '(', 'getMessage', '(', '"', 'implementationNotFound', '"', ',', 'providerClass', '.', 'getName', '(', ')', ',', 'line', ',', 'url', '.', 'toExternalForm', '(', ')', ')', ')', ';', '}', 'if', '(', '!', 'providerClass', '.', 'isAssignableFrom', '(', 'provider', ')', ')', '{', 'throw', 'new', 'BootstrapException', '(', 'getMessage', '(', '"', 'illegalImplementation', '"', ',', 'providerClass', '.', 'getName', '(', ')', ',', 'line', ',', 'url', '.', 'toExternalForm', '(', ')', ')', ')', ';', '}', 'providers', '.', 'put', '(', 'providerNamePrefix', '+', 'providers', '.', 'size', '(', ')', ',', 'provider', '.', 'asSubclass', '(', 'providerClass', ')', ')', ';', '}', 'reader', '.', 'close', '(', ')', ';', '}', 'return', 'providers', '.', 'values', '(', ')', ';', '}', 'catch', '(', 'final', 'IOException', 'e', ')', '{', 'throw', 'new', 'BootstrapException', '(', 'e', '.', 'getMessage', '(', ')', ',', 'e', ')', ';', '}', '}']
  >>  iter 1, ACC! url => uri (0 => 0, 0.99991 => 0.99991) a=1.076
  >>  iter 2, ACC! uri => http (0 => 0, 0.99991 => 0.99991) a=1.052
  >>  iter 3, ACC! http => server (0 => 0, 0.99991 => 0.99990) a=1.062
  >>  iter 4, ACC! server => blog (0 => 0, 0.99990 => 0.99991) a=1.034
  >>  iter 5, ACC! blog => l (0 => 0, 0.99991 => 0.99991) a=1.040
  >>  iter 6, ACC! in => nin (0 => 0, 0.99991 => 0.99991) a=1.008
  >>  iter 7, ACC! l => i (0 => 0, 0.99991 => 0.99990) a=1.035
  >>  iter 8, ACC! nin => lin (0 => 0, 0.99990 => 0.99991) a=1.010
  >>  iter 9, ACC! i => impl (0 => 0, 0.99991 => 0.99990) a=1.019
  >>  iter 10, ACC! lin => n (0 => 0, 0.99990 => 0.99990) a=1.026
Example 91 attack result: {'succ': False, 'tokens': '    private <T> Collection<Class<? extends T>> loadProviders(final Class<T> providerClass) throws BootstrapException {\n        try {\n            final String providerNamePrefix = providerClass.getName() + ".";\n            final Map<String, Class<? extends T>> providers = new TreeMap<String, Class<? extends T>>(new Comparator<String>() {\n\n                public int compare(final String key1, final String key2) {\n                    return key1.compareTo(key2);\n                }\n            });\n            final File platformProviders = new File(this.getPlatformProviderLocation());\n            if (platformProviders.exists()) {\n                InputStream n = null;\n                final java.util.Properties p = new java.util.Properties();\n                try {\n                    n = new FileInputStream(platformProviders);\n                    p.load(n);\n                } finally {\n                    if (n != null) {\n                        n.close();\n                    }\n                }\n                for (Map.Entry e : p.entrySet()) {\n                    if (e.getKey().toString().startsWith(providerNamePrefix)) {\n                        final Class<?> provider = this.findClass(e.getValue().toString());\n                        if (provider == null) {\n                            throw new BootstrapException(getMessage("implementationNotFound", providerClass.getName(), e.getValue().toString(), platformProviders.getAbsolutePath()));\n                        }\n                        if (!providerClass.isAssignableFrom(provider)) {\n                            throw new BootstrapException(getMessage("illegalImplementation", providerClass.getName(), e.getValue().toString(), platformProviders.getAbsolutePath()));\n                        }\n                        providers.put(e.getKey().toString(), provider.asSubclass(providerClass));\n                    }\n                }\n            }\n            final Enumeration<URL> classpathProviders = this.findResources(this.getProviderLocation() + \'/\' + providerClass.getName());\n            while (classpathProviders.hasMoreElements()) {\n                final URL impl = classpathProviders.nextElement();\n                final BufferedReader reader = new BufferedReader(new InputStreamReader(impl.openStream(), "UTF-8"));\n                String line = null;\n                while ((line = reader.readLine()) != null) {\n                    if (line.contains("#")) {\n                        continue;\n                    }\n                    final Class<?> provider = this.findClass(line);\n                    if (provider == null) {\n                        throw new BootstrapException(getMessage("implementationNotFound", providerClass.getName(), line, impl.toExternalForm()));\n                    }\n                    if (!providerClass.isAssignableFrom(provider)) {\n                        throw new BootstrapException(getMessage("illegalImplementation", providerClass.getName(), line, impl.toExternalForm()));\n                    }\n                    providers.put(providerNamePrefix + providers.size(), provider.asSubclass(providerClass));\n                }\n                reader.close();\n            }\n            return providers.values();\n        } catch (final IOException e) {\n            throw new BootstrapException(e.getMessage(), e);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 594, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 2, 'nb_changed_pos': 9, 'replace_info': {'url': 'impl', 'in': 'n'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 91 FAILED.
  time cost = 0.19 min
  ALL EXAMPLE time cost = 6.65 min
  curr succ rate = 0.0
Query times in this attack:  299
All Query times:  10611
raw_tokens: ['private', 'String', 'getServerData', '(', 'String', 'returnString', ')', '{', 'InputStream', 'is', '=', 'null', ';', 'String', 'result', '=', '"', '"', ';', 'ArrayList', '<', 'NameValuePair', '>', 'nameValuePairs', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'nameValuePairs', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'usuario', '"', ',', 'Login', '.', 'usuario', ')', ')', ';', 'nameValuePairs', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'amigoABorrar', '"', ',', 'amigoABorrar', '.', 'trim', '(', ')', ')', ')', ';', 'nameValuePairs', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'grupo', '"', ',', 'MisGrupos', '.', 'seleccion', '.', 'trim', '(', ')', ')', ')', ';', 'try', '{', 'HttpClient', 'httpclient', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'HttpPost', 'httppost', '=', 'new', 'HttpPost', '(', 'returnString', ')', ';', 'httppost', '.', 'setEntity', '(', 'new', 'UrlEncodedFormEntity', '(', 'nameValuePairs', ')', ')', ';', 'HttpResponse', 'response', '=', 'httpclient', '.', 'execute', '(', 'httppost', ')', ';', 'HttpEntity', 'entity', '=', 'response', '.', 'getEntity', '(', ')', ';', 'is', '=', 'entity', '.', 'getContent', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'Log', '.', 'e', '(', '"', 'AmigosPorGrupo', '"', ',', '"', 'Error', 'en', 'la', 'conexion', 'http', '', '"', '+', 'e', '.', 'toString', '(', ')', ')', ';', '}', 'try', '{', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'is', ',', '"', 'iso-8859-1', '"', ')', ',', '8', ')', ';', 'String', 'line', '=', 'reader', '.', 'readLine', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', 'result', '=', 'line', '.', 'trim', '(', ')', '.', 'toString', '(', ')', ';', 'Log', '.', 'd', '(', '"', 'AmigosPorGrupo', '"', ',', '"', 'Longitud', 'line:', '', '"', '+', 'line', '.', 'trim', '(', ')', '.', 'length', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'Log', '.', 'e', '(', '"', 'AmigosPorGrupo', '"', ',', '"', 'Error', 'converting', 'result', '', '"', '+', 'e', '.', 'toString', '(', ')', ')', ';', '}', 'Log', '.', 'd', '(', '"', 'AmigosPorGrupo', '"', ',', '"', 'Funciono', 'json', '"', '+', 'result', ')', ';', 'return', 'result', ';', '}']
  >>  iter 1, ACC! is => si (0 => 0, 0.99967 => 0.99963) a=1.489
  >>  iter 2, ACC! si => isa (0 => 0, 0.99963 => 0.99965) a=1.359
  >>  iter 3, ACC! isa => ais (0 => 0, 0.99965 => 0.99962) a=1.403
  >>  iter 4, ACC! ais => irc (0 => 0, 0.99962 => 0.99961) a=1.302
  >>  iter 5, ACC! irc => ib (0 => 0, 0.99961 => 0.99966) a=1.192
  >>  iter 6, ACC! ib => IS (0 => 0, 0.99966 => 0.99966) a=1.477
  >>  iter 7, ACC! IS => it (0 => 0, 0.99966 => 0.99964) a=1.452
  >>  iter 8, ACC! it => are (0 => 0, 0.99964 => 0.99960) a=1.376
  >>  iter 9, ACC! are => ip (0 => 0, 0.99960 => 0.99964) a=1.244
  >>  iter 10, ACC! ip => iso (0 => 0, 0.99964 => 0.99965) a=1.390
Example 92 attack result: {'succ': False, 'tokens': '    private String getServerData(String returnString) {\n        InputStream iso = null;\n        String result = "";\n        ArrayList<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();\n        nameValuePairs.add(new BasicNameValuePair("usuario", Login.usuario));\n        nameValuePairs.add(new BasicNameValuePair("amigoABorrar", amigoABorrar.trim()));\n        nameValuePairs.add(new BasicNameValuePair("grupo", MisGrupos.seleccion.trim()));\n        try {\n            HttpClient httpclient = new DefaultHttpClient();\n            HttpPost httppost = new HttpPost(returnString);\n            httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));\n            HttpResponse response = httpclient.execute(httppost);\n            HttpEntity entity = response.getEntity();\n            iso = entity.getContent();\n        } catch (Exception e) {\n            Log.e("AmigosPorGrupo", "Error en la conexion http " + e.toString());\n        }\n        try {\n            BufferedReader reader = new BufferedReader(new InputStreamReader(iso, "iso-8859-1"), 8);\n            String line = reader.readLine();\n            iso.close();\n            result = line.trim().toString();\n            Log.d("AmigosPorGrupo", "Longitud line: " + line.trim().length());\n        } catch (Exception e) {\n            Log.e("AmigosPorGrupo", "Error converting result " + e.toString());\n        }\n        Log.d("AmigosPorGrupo", "Funciono json" + result);\n        return result;\n    }\n', 'raw_tokens': None, 'prog_length': 291, 'new_pred': 0, 'is_success': -1, 'old_uid': 'is', 'score_info': -6.67572e-06, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'is': 'iso'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 92 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 6.81 min
  curr succ rate = 0.0
Query times in this attack:  292
All Query times:  10903
raw_tokens: ['private', 'void', 'folderFileChooserActionPerformed', '(', 'java', '.', 'awt', '.', 'event', '.', 'ActionEvent', 'evt', ')', '{', 'if', '(', 'evt', '.', 'getActionCommand', '(', ')', '.', 'equals', '(', 'JFileChooser', '.', 'APPROVE_SELECTION', ')', ')', '{', 'File', 'selectedFolder', '=', 'folderFileChooser', '.', 'getSelectedFile', '(', ')', ';', 'File', 'collectionCopyFile', ';', 'String', 'newDocumentName', ';', 'Document', 'newDocument', ';', 'StringBuilder', 'distinguisherReplacer', '=', 'new', 'StringBuilder', '(', ')', ';', 'int', 'matchingFilenameDistinguisher', ';', 'String', 'nextToken', ';', 'Term', 'newTerm', ';', 'String', 'userHome', ';', 'String', 'fileSeparator', ';', 'int', 'userOption', ';', 'ArrayList', '<', 'File', '>', 'folderTextFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'ArrayList', '<', 'File', '>', 'folderRejectedFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'HashSet', '<', 'File', '>', 'ignoredFiles', '=', 'new', 'HashSet', '<', 'File', '>', '(', ')', ';', 'FileNameExtensionFilter', 'textFileFilter', '=', 'new', 'FileNameExtensionFilter', '(', '"', 'Text', 'Files', '"', ',', '"', 'txt', '"', ')', ';', 'Scanner', 'tokenizer', '=', 'null', ';', 'FileChannel', 'fileSource', '=', 'null', ';', 'FileChannel', 'collectionDestination', '=', 'null', ';', 'HashMap', '<', 'String', ',', 'Integer', '>', 'termHashMap', '=', 'null', ';', 'Index', 'collectionIndex', '=', 'activeCollection', '.', 'getIndex', '(', ')', ';', 'int', 'documentTermMaxFrequency', ';', 'int', 'currentTermFrequency', ';', 'for', '(', 'File', 'folderFile', ':', 'selectedFolder', '.', 'listFiles', '(', ')', ')', 'if', '(', 'textFileFilter', '.', 'accept', '(', 'folderFile', ')', ')', 'folderTextFiles', '.', 'add', '(', 'folderFile', ')', ';', 'else', 'folderRejectedFiles', '.', 'add', '(', 'folderFile', ')', ';', 'for', '(', 'File', 'selectedFile', ':', 'folderTextFiles', ')', '{', 'newDocumentName', '=', 'selectedFile', '.', 'getName', '(', ')', ';', 'newDocument', '=', 'new', 'Document', '(', 'newDocumentName', ')', ';', 'if', '(', 'activeCollection', '.', 'containsDocument', '(', 'newDocument', ')', ')', '{', 'matchingFilenameDistinguisher', '=', '1', ';', 'newDocumentName', '=', 'newDocumentName', '.', 'concat', '(', '"', '(', '"', '+', 'matchingFilenameDistinguisher', '+', '"', ')', '"', ')', ';', 'newDocument', '.', 'setDocumentName', '(', 'newDocumentName', ')', ';', 'while', '(', 'activeCollection', '.', 'containsDocument', '(', 'newDocument', ')', ')', '{', 'matchingFilenameDistinguisher', '++', ';', 'newDocumentName', '=', 'distinguisherReplacer', '.', 'replace', '(', 'newDocumentName', '.', 'length', '(', ')', '-', '2', ',', 'newDocumentName', '.', 'length', '(', ')', '-', '1', ',', 'new', 'Integer', '(', 'matchingFilenameDistinguisher', ')', '.', 'toString', '(', ')', ')', '.', 'toString', '(', ')', ';', 'newDocument', '.', 'setDocumentName', '(', 'newDocumentName', ')', ';', '}', '}', 'termHashMap', '=', 'new', 'HashMap', '<', 'String', ',', 'Integer', '>', '(', ')', ';', 'try', '{', 'tokenizer', '=', 'new', 'Scanner', '(', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'selectedFile', ')', ')', ')', ';', 'tokenizer', '.', 'useDelimiter', '(', 'Pattern', '.', 'compile', '(', '"', '\\\\', 'p{Space}|', '\\\\', 'p{Punct}|', '\\\\', 'p{Cntrl}', '"', ')', ')', ';', 'while', '(', 'tokenizer', '.', 'hasNext', '(', ')', ')', '{', 'nextToken', '=', 'tokenizer', '.', 'next', '(', ')', '.', 'toLowerCase', '(', ')', ';', 'if', '(', '!', 'nextToken', '.', 'isEmpty', '(', ')', ')', 'if', '(', 'termHashMap', '.', 'containsKey', '(', 'nextToken', ')', ')', 'termHashMap', '.', 'put', '(', 'nextToken', ',', 'termHashMap', '.', 'get', '(', 'nextToken', ')', '+', '1', ')', ';', 'else', 'termHashMap', '.', 'put', '(', 'nextToken', ',', '1', ')', ';', '}', 'documentTermMaxFrequency', '=', '0', ';', 'for', '(', 'String', 'term', ':', 'termHashMap', '.', 'keySet', '(', ')', ')', '{', 'newTerm', '=', 'new', 'Term', '(', 'term', ')', ';', 'if', '(', '!', 'collectionIndex', '.', 'termExists', '(', 'newTerm', ')', ')', 'collectionIndex', '.', 'addTerm', '(', 'newTerm', ')', ';', 'currentTermFrequency', '=', 'termHashMap', '.', 'get', '(', 'term', ')', ';', 'if', '(', 'currentTermFrequency', '>', 'documentTermMaxFrequency', ')', 'documentTermMaxFrequency', '=', 'currentTermFrequency', ';', 'collectionIndex', '.', 'addOccurence', '(', 'newTerm', ',', 'newDocument', ',', 'currentTermFrequency', ')', ';', '}', 'newDocument', '.', 'setTermMaxFrequency', '(', 'documentTermMaxFrequency', ')', ';', 'activeCollection', '.', 'addDocument', '(', 'newDocument', ')', ';', 'userHome', '=', 'System', '.', 'getProperty', '(', '"', 'user.home', '"', ')', ';', 'fileSeparator', '=', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', ';', 'collectionCopyFile', '=', 'new', 'File', '(', 'userHome', '+', 'fileSeparator', '+', '"', 'Infrared', '"', '+', 'fileSeparator', '+', 'activeCollection', '.', 'getDocumentCollectionName', '(', ')', '+', 'fileSeparator', '+', 'newDocumentName', ')', ';', 'collectionCopyFile', '.', 'createNewFile', '(', ')', ';', 'fileSource', '=', 'new', 'FileInputStream', '(', 'selectedFile', ')', '.', 'getChannel', '(', ')', ';', 'collectionDestination', '=', 'new', 'FileOutputStream', '(', 'collectionCopyFile', ')', '.', 'getChannel', '(', ')', ';', 'collectionDestination', '.', 'transferFrom', '(', 'fileSource', ',', '0', ',', 'fileSource', '.', 'size', '(', ')', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', '+', '"', '', 'This', 'error', 'should', 'never', 'occur!', 'The', 'file', 'was', 'just', 'selected!', '"', ')', ';', 'return', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'userOption', '=', 'JOptionPane', '.', 'showConfirmDialog', '(', 'this', ',', '"', 'A', 'file', 'insertion', 'has', 'failed.', 'If', 'you', 'want', 'it', 'to', 'ignore', 'this', '"', '+', '"', 'file,', 'press', 'YES,', 'else', 'press', 'NO', 'to', 'repeat', 'the', 'insertion', '"', ',', '"', 'FileInsertionFailure', '"', ',', 'JOptionPane', '.', 'YES_NO_OPTION', ',', 'JOptionPane', '.', 'WARNING_MESSAGE', ')', ';', 'if', '(', 'userOption', '==', 'JOptionPane', '.', 'NO_OPTION', ')', '{', 'activeCollection', '.', 'removeDocument', '(', 'newDocument', ')', ';', 'for', '(', 'String', 'term', ':', 'termHashMap', '.', 'keySet', '(', ')', ')', '{', 'collectionIndex', '.', 'removeAllOccurences', '(', 'new', 'Term', '(', 'term', ')', ',', 'newDocument', ')', ';', '}', 'folderTextFiles', '.', 'add', '(', 'selectedFile', ')', ';', '}', 'else', 'ignoredFiles', '.', 'add', '(', 'selectedFile', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'tokenizer', '!=', 'null', ')', 'tokenizer', '.', 'close', '(', ')', ';', 'if', '(', 'fileSource', '!=', 'null', ')', 'fileSource', '.', 'close', '(', ')', ';', 'if', '(', 'collectionDestination', '!=', 'null', ')', 'collectionDestination', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', '}', 'if', '(', 'ignoredFiles', '.', 'size', '(', ')', '>', '0', ')', '{', 'IgnoredFilesDialog', 'ignoredFilesDialog', '=', 'new', 'IgnoredFilesDialog', '(', 'ignoredFiles', ',', 'this', ')', ';', 'ignoredFilesDialog', '.', 'setVisible', '(', 'true', ')', ';', '}', 'processWindowEvent', '(', 'new', 'WindowEvent', '(', 'this', ',', 'WindowEvent', '.', 'WINDOW_CLOSING', ')', ')', ';', '}', 'else', 'if', '(', 'evt', '.', 'getActionCommand', '(', ')', '.', 'equalsIgnoreCase', '(', 'JFileChooser', '.', 'CANCEL_SELECTION', ')', ')', 'processWindowEvent', '(', 'new', 'WindowEvent', '(', 'this', ',', 'WindowEvent', '.', 'WINDOW_CLOSING', ')', ')', ';', '}']
  >>  iter 1, ACC! length => l (0 => 0, 0.99997 => 0.99997) a=1.005
  >>  iter 2, ACC! l => count (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 3, ACC! count => with (0 => 0, 0.99997 => 0.99997) a=1.005
  >>  iter 4, ACC! with => lock (0 => 0, 0.99997 => 0.99997) a=1.005
  >>  iter 5, ACC! lock => position (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 6, ACC! position => lock (0 => 0, 0.99997 => 0.99997) a=1.005
  >>  iter 7, ACC! lock => child (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 8, ACC! child => block (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 9, ACC! block => sum (0 => 0, 0.99997 => 0.99997) a=1.005
  >>  iter 10, ACC! sum => join (0 => 0, 0.99997 => 0.99997) a=1.005
Example 93 attack result: {'succ': False, 'tokens': '    private void folderFileChooserActionPerformed(java.awt.event.ActionEvent evt) {\n        if (evt.getActionCommand().equals(JFileChooser.APPROVE_SELECTION)) {\n            File selectedFolder = folderFileChooser.getSelectedFile();\n            File collectionCopyFile;\n            String newDocumentName;\n            Document newDocument;\n            StringBuilder distinguisherReplacer = new StringBuilder();\n            int matchingFilenameDistinguisher;\n            String nextToken;\n            Term newTerm;\n            String userHome;\n            String fileSeparator;\n            int userOption;\n            ArrayList<File> folderTextFiles = new ArrayList<File>();\n            ArrayList<File> folderRejectedFiles = new ArrayList<File>();\n            HashSet<File> ignoredFiles = new HashSet<File>();\n            FileNameExtensionFilter textFileFilter = new FileNameExtensionFilter("Text Files", "txt");\n            Scanner tokenizer = null;\n            FileChannel fileSource = null;\n            FileChannel collectionDestination = null;\n            HashMap<String, Integer> termHashMap = null;\n            Index collectionIndex = activeCollection.getIndex();\n            int documentTermMaxFrequency;\n            int currentTermFrequency;\n            for (File folderFile : selectedFolder.listFiles()) if (textFileFilter.accept(folderFile)) folderTextFiles.add(folderFile); else folderRejectedFiles.add(folderFile);\n            for (File selectedFile : folderTextFiles) {\n                newDocumentName = selectedFile.getName();\n                newDocument = new Document(newDocumentName);\n                if (activeCollection.containsDocument(newDocument)) {\n                    matchingFilenameDistinguisher = 1;\n                    newDocumentName = newDocumentName.concat("(" + matchingFilenameDistinguisher + ")");\n                    newDocument.setDocumentName(newDocumentName);\n                    while (activeCollection.containsDocument(newDocument)) {\n                        matchingFilenameDistinguisher++;\n                        newDocumentName = distinguisherReplacer.replace(newDocumentName.join() - 2, newDocumentName.join() - 1, new Integer(matchingFilenameDistinguisher).toString()).toString();\n                        newDocument.setDocumentName(newDocumentName);\n                    }\n                }\n                termHashMap = new HashMap<String, Integer>();\n                try {\n                    tokenizer = new Scanner(new BufferedReader(new FileReader(selectedFile)));\n                    tokenizer.useDelimiter(Pattern.compile("\\\\p{Space}|\\\\p{Punct}|\\\\p{Cntrl}"));\n                    while (tokenizer.hasNext()) {\n                        nextToken = tokenizer.next().toLowerCase();\n                        if (!nextToken.isEmpty()) if (termHashMap.containsKey(nextToken)) termHashMap.put(nextToken, termHashMap.get(nextToken) + 1); else termHashMap.put(nextToken, 1);\n                    }\n                    documentTermMaxFrequency = 0;\n                    for (String term : termHashMap.keySet()) {\n                        newTerm = new Term(term);\n                        if (!collectionIndex.termExists(newTerm)) collectionIndex.addTerm(newTerm);\n                        currentTermFrequency = termHashMap.get(term);\n                        if (currentTermFrequency > documentTermMaxFrequency) documentTermMaxFrequency = currentTermFrequency;\n                        collectionIndex.addOccurence(newTerm, newDocument, currentTermFrequency);\n                    }\n                    newDocument.setTermMaxFrequency(documentTermMaxFrequency);\n                    activeCollection.addDocument(newDocument);\n                    userHome = System.getProperty("user.home");\n                    fileSeparator = System.getProperty("file.separator");\n                    collectionCopyFile = new File(userHome + fileSeparator + "Infrared" + fileSeparator + activeCollection.getDocumentCollectionName() + fileSeparator + newDocumentName);\n                    collectionCopyFile.createNewFile();\n                    fileSource = new FileInputStream(selectedFile).getChannel();\n                    collectionDestination = new FileOutputStream(collectionCopyFile).getChannel();\n                    collectionDestination.transferFrom(fileSource, 0, fileSource.size());\n                } catch (FileNotFoundException e) {\n                    System.err.println(e.getMessage() + " This error should never occur! The file was just selected!");\n                    return;\n                } catch (IOException e) {\n                    userOption = JOptionPane.showConfirmDialog(this, "A file insertion has failed. If you want it to ignore this" + "file, press YES, else press NO to repeat the insertion", "FileInsertionFailure", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);\n                    if (userOption == JOptionPane.NO_OPTION) {\n                        activeCollection.removeDocument(newDocument);\n                        for (String term : termHashMap.keySet()) {\n                            collectionIndex.removeAllOccurences(new Term(term), newDocument);\n                        }\n                        folderTextFiles.add(selectedFile);\n                    } else ignoredFiles.add(selectedFile);\n                } finally {\n                    try {\n                        if (tokenizer != null) tokenizer.close();\n                        if (fileSource != null) fileSource.close();\n                        if (collectionDestination != null) collectionDestination.close();\n                    } catch (IOException e) {\n                        System.err.println(e.getMessage());\n                    }\n                }\n            }\n            if (ignoredFiles.size() > 0) {\n                IgnoredFilesDialog ignoredFilesDialog = new IgnoredFilesDialog(ignoredFiles, this);\n                ignoredFilesDialog.setVisible(true);\n            }\n            processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));\n        } else if (evt.getActionCommand().equalsIgnoreCase(JFileChooser.CANCEL_SELECTION)) processWindowEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));\n    }\n', 'raw_tokens': None, 'prog_length': 879, 'new_pred': 0, 'is_success': -1, 'old_uid': 'length', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'length': 'join'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 93 FAILED.
  time cost = 0.22 min
  ALL EXAMPLE time cost = 7.04 min
  curr succ rate = 0.0
Query times in this attack:  302
All Query times:  11205
raw_tokens: ['public', 'static', 'byte', '[', ']', 'getBytes', '(', 'URL', 'url', ')', 'throws', 'IOException', '{', 'URLConnection', 'connection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'InputStream', 'in', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'int', 'contentLength', '=', 'connection', '.', 'getContentLength', '(', ')', ';', 'ByteArrayOutputStream', 'tmpOut', ';', 'if', '(', 'contentLength', '!=', '-', '1', ')', '{', 'tmpOut', '=', 'new', 'ByteArrayOutputStream', '(', 'contentLength', ')', ';', '}', 'else', '{', 'tmpOut', '=', 'new', 'ByteArrayOutputStream', '(', '16384', ')', ';', '}', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '512', ']', ';', 'while', '(', 'true', ')', '{', 'int', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ';', 'if', '(', 'len', '==', '-', '1', ')', '{', 'break', ';', '}', 'tmpOut', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'tmpOut', '.', 'close', '(', ')', ';', 'byte', '[', ']', 'array', '=', 'tmpOut', '.', 'toByteArray', '(', ')', ';', 'return', 'array', ';', '}']
Example 94 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'void', 'convertInternal', '(', 'InputStream', 'inputStream', ',', 'DocumentFormat', 'inputFormat', ',', 'OutputStream', 'outputStream', ',', 'DocumentFormat', 'outputFormat', ')', '{', 'File', 'inputFile', '=', 'null', ';', 'File', 'outputFile', '=', 'null', ';', 'try', '{', 'inputFile', '=', 'File', '.', 'createTempFile', '(', '"', 'document', '"', ',', '"', '.', '"', '+', 'inputFormat', '.', 'getFileExtension', '(', ')', ')', ';', 'OutputStream', 'inputFileStream', '=', 'null', ';', 'try', '{', 'inputFileStream', '=', 'new', 'FileOutputStream', '(', 'inputFile', ')', ';', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'inputFileStream', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'inputFileStream', ')', ';', '}', 'outputFile', '=', 'File', '.', 'createTempFile', '(', '"', 'document', '"', ',', '"', '.', '"', '+', 'outputFormat', '.', 'getFileExtension', '(', ')', ')', ';', 'convert', '(', 'inputFile', ',', 'inputFormat', ',', 'outputFile', ',', 'outputFormat', ')', ';', 'InputStream', 'outputFileStream', '=', 'null', ';', 'try', '{', 'outputFileStream', '=', 'new', 'FileInputStream', '(', 'outputFile', ')', ';', 'IOUtils', '.', 'copy', '(', 'outputFileStream', ',', 'outputStream', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'outputFileStream', ')', ';', '}', '}', 'catch', '(', 'IOException', 'ioException', ')', '{', 'throw', 'new', 'OpenOfficeException', '(', '"', 'conversion', 'failed', '"', ',', 'ioException', ')', ';', '}', 'finally', '{', 'if', '(', 'inputFile', '!=', 'null', ')', '{', 'inputFile', '.', 'delete', '(', ')', ';', '}', 'if', '(', 'outputFile', '!=', 'null', ')', '{', 'outputFile', '.', 'delete', '(', ')', ';', '}', '}', '}']
Example 95 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'buildPerMovieDiffBinary', '(', 'String', 'masterFile', ')', '{', 'try', '{', 'File', 'inFile', '=', 'new', 'File', '(', 'completePath', '+', 'fSep', '+', '"', 'SmartGRAPE', '"', '+', 'fSep', '+', 'masterFile', ')', ';', 'FileChannel', 'inC', '=', 'new', 'FileInputStream', '(', 'inFile', ')', '.', 'getChannel', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'inC', '.', 'size', '(', ')', ')', ';', 'short', 'movie1', ',', 'movie2', ';', 'int', 'count', ';', 'float', 'diffRating', ',', 'sumXY', ',', 'sumX', ',', 'sumY', ',', 'sumX2', ',', 'sumY2', ',', 'pearsonCorr', ',', 'adjustedCosineCorr', ',', 'cosineCorr', ';', 'long', 'position', ';', 'for', '(', 'long', 'i', '=', '1', ';', 'i', '<', '17770', ';', 'i', '++', ')', '{', 'File', 'outFile', '=', 'new', 'File', '(', '"', 'C:', '\\\\', 'NetflixData', '\\\\', 'download', '\\\\', 'SmartGrape', '\\\\', 'CFItemToItemStats', '\\\\', 'Movie--', '"', '+', 'i', '+', '"', '-MatrixData.txt', '"', ')', ';', 'FileChannel', 'outC', '=', 'new', 'FileOutputStream', '(', 'outFile', ',', 'true', ')', '.', 'getChannel', '(', ')', ';', 'ByteBuffer', 'buf', '=', 'ByteBuffer', '.', 'allocate', '(', '17770', '*', '44', ')', ';', 'for', '(', 'long', 'j', '=', '1', ';', 'j', '<', 'i', ';', 'j', '++', ')', '{', 'ByteBuffer', 'bbuf', '=', 'ByteBuffer', '.', 'allocate', '(', '44', ')', ';', 'position', '=', '0', ';', 'position', '+=', 'new', 'Long', '(', '17769', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '17770', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '22', ')', '.', 'longValue', '(', ')', ';', 'position', '-=', 'new', 'Long', '(', '(', '17769', '-', '(', 'j', '-', '1', ')', ')', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '(', '17770', '-', '(', 'j', '-', '1', ')', ')', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '22', ')', '.', 'longValue', '(', ')', ';', 'position', '+=', 'new', 'Long', '(', '(', 'i', '-', 'j', '-', '1', ')', '*', '44', ')', '.', 'longValue', '(', ')', ';', 'inC', '.', 'position', '(', 'position', ')', ';', 'inC', '.', 'read', '(', 'bbuf', ')', ';', 'bbuf', '.', 'flip', '(', ')', ';', 'buf', '.', 'putShort', '(', 'bbuf', '.', 'getShort', '(', ')', ')', ';', 'bbuf', '.', 'getShort', '(', ')', ';', 'buf', '.', 'putInt', '(', 'bbuf', '.', 'getInt', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', '-', 'bbuf', '.', 'getInt', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', '}', 'buf', '.', 'putShort', '(', 'new', 'Long', '(', 'i', ')', '.', 'shortValue', '(', ')', ')', ';', 'buf', '.', 'putInt', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'position', '=', '0', ';', 'position', '+=', 'new', 'Long', '(', '17769', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '17770', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '22', ')', '.', 'longValue', '(', ')', ';', 'position', '-=', 'new', 'Long', '(', '(', '17769', '-', '(', 'i', '-', '1', ')', ')', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '(', '17770', '-', '(', 'i', '-', '1', ')', ')', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '22', ')', '.', 'longValue', '(', ')', ';', 'ByteBuffer', 'remainingBuf', '=', 'inC', '.', 'map', '(', 'FileChannel', '.', 'MapMode', '.', 'READ_ONLY', ',', 'position', ',', '(', '17770', '-', 'i', ')', '*', '44', ')', ';', 'while', '(', 'remainingBuf', '.', 'hasRemaining', '(', ')', ')', '{', 'remainingBuf', '.', 'getShort', '(', ')', ';', 'buf', '.', 'putShort', '(', 'remainingBuf', '.', 'getShort', '(', ')', ')', ';', 'buf', '.', 'putInt', '(', 'remainingBuf', '.', 'getInt', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', '}', 'buf', '.', 'flip', '(', ')', ';', 'outC', '.', 'write', '(', 'buf', ')', ';', 'buf', '.', 'clear', '(', ')', ';', 'outC', '.', 'close', '(', ')', ';', '}', 'return', 'true', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'false', ';', '}', '}']
Example 96 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'myClickHandler', '(', 'View', 'view', ')', '{', 'switch', '(', 'view', '.', 'getId', '(', ')', ')', '{', 'case', 'R', '.', 'id', '.', 'ReadWebPage', ':', 'try', '{', 'textView', '.', 'setText', '(', '"', '"', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'urlText', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', ';', 'BufferedReader', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', '=', '"', '"', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'textView', '.', 'append', '(', 'line', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Nay,', 'did', 'not', 'work', '"', ')', ';', 'textView', '.', 'setText', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'break', ';', '}', '}']
  >>  iter 1, ACC! out => output (0 => 0, 0.99977 => 0.99977) a=1.001
  >>  iter 2, ACC! output => s (0 => 0, 0.99977 => 0.99977) a=1.001
  >>  iter 3, ACC! s => bin (0 => 0, 0.99977 => 0.99977) a=1.001
  >>  iter 4, ACC! bin => o (0 => 0, 0.99977 => 0.99977) a=1.002
  >>  iter 5, ACC! o => OUT (0 => 0, 0.99977 => 0.99977) a=1.001
  >>  iter 6, ACC! OUT => as (0 => 0, 0.99977 => 0.99977) a=1.001
  >>  iter 7, ACC! as => writer (0 => 0, 0.99977 => 0.99977) a=1.001
  >>  iter 8, ACC! writer => as (0 => 0, 0.99977 => 0.99977) a=1.001
  >>  iter 9, ACC! as => conn (0 => 0, 0.99977 => 0.99977) a=1.001
  >>  iter 10, ACC! conn => post (0 => 0, 0.99977 => 0.99977) a=1.000
Example 97 attack result: {'succ': False, 'tokens': '    public void myClickHandler(View view) {\n        switch(view.getId()) {\n            case R.id.ReadWebPage:\n                try {\n                    textView.setText("");\n                    URL url = new URL(urlText.getText().toString());\n                    BufferedReader rd = new BufferedReader(new InputStreamReader(url.openStream()));\n                    String line = "";\n                    while ((line = rd.readLine()) != null) {\n                        textView.append(line);\n                    }\n                } catch (Exception e) {\n                    System.post.println("Nay, did not work");\n                    textView.setText(e.getMessage());\n                }\n                break;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 131, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': -3.5762787e-07, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'out': 'post'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 97 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 7.22 min
  curr succ rate = 0.0
Query times in this attack:  303
All Query times:  11508
raw_tokens: ['public', 'void', 'requestConfirm', '(', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'this', '.', '_c', '.', 'checkProperty', '(', '"', 'directory.request', '"', ',', '"', 'request', '"', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'product', 'has', 'no', 'active', 'request', '"', ')', ';', '}', 'if', '(', '!', 'new', 'File', '(', 'WBSAgnitioConfiguration', '.', 'getHARequestFile', '(', ')', ')', '.', 'canWrite', '(', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'cannot', 'remove', 'request', 'from', 'system', '"', ')', ';', '}', 'HashMap', '<', 'String', ',', 'String', '>', 'values', '=', 'getValues', '(', 'WBSAgnitioConfiguration', '.', 'getHARequestFile', '(', ')', ')', ';', 'if', '(', '!', 'values', '.', 'containsKey', '(', '"', 'address.virtual', '"', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'failed', 'to', 'determine', 'the', 'virtual', 'address', '"', ')', ';', '}', 'if', '(', '!', 'values', '.', 'containsKey', '(', '"', 'address.real', '"', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'failed', 'to', 'determine', 'the', 'remote', 'address', '"', ')', ';', '}', 'HTTPClient', '_hc', '=', 'new', 'HTTPClient', '(', 'values', '.', 'get', '(', '"', 'address.real', '"', ')', ')', ';', 'if', '(', 'TomcatConfiguration', '.', 'checkHTTPS', '(', ')', ')', '{', '_hc', '.', 'setSecure', '(', 'true', ')', ';', '}', '_hc', '.', 'load', '(', '"', '/admin/Comm?type=', '"', '+', 'CommResponse', '.', 'TYPE_HA', '+', '"', '&command=', '"', '+', 'CommResponse', '.', 'COMMAND_REQUEST_CONFIRM', '+', '"', '&virtual=', '"', '+', 'values', '.', 'get', '(', '"', 'address.virtual', '"', ')', ')', ';', 'String', '_reply', '=', 'new', 'String', '(', '_hc', '.', 'getContent', '(', ')', ')', ';', 'if', '(', '_reply', '.', 'isEmpty', '(', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'remote', 'product', 'has', 'not', 'sent', 'any', 'reply', '"', ')', ';', '}', 'else', 'if', '(', '_reply', '.', 'indexOf', '(', '"', 'done', '"', ')', '==', '-', '1', ')', '{', 'throw', 'new', 'Exception', '(', '_reply', ')', ';', '}', 'HAConfiguration', '.', 'setSlave', '(', 'values', '.', 'get', '(', '"', 'address.virtual', '"', ')', ',', 'values', '.', 'get', '(', '"', 'address.real', '"', ')', ')', ';', 'File', '_f', '=', 'new', 'File', '(', 'WBSAgnitioConfiguration', '.', 'getOptionalSchemaRequestFile', '(', ')', ')', ';', 'if', '(', '_f', '.', 'exists', '(', ')', ')', '{', 'FileOutputStream', '_fos', '=', 'new', 'FileOutputStream', '(', 'WBSAgnitioConfiguration', '.', 'getOptionalSchemaFile', '(', ')', ')', ';', 'FileInputStream', '_fis', '=', 'new', 'FileInputStream', '(', '_f', ')', ';', 'while', '(', '_fis', '.', 'available', '(', ')', '>', '0', ')', '{', '_fos', '.', 'write', '(', '_fis', '.', 'read', '(', ')', ')', ';', '}', '_fis', '.', 'close', '(', ')', ';', '_fos', '.', 'close', '(', ')', ';', '_f', '.', 'delete', '(', ')', ';', '}', '_f', '=', 'new', 'File', '(', 'WBSAgnitioConfiguration', '.', 'getSchemaObjectRequestFile', '(', ')', ')', ';', 'if', '(', '_f', '.', 'exists', '(', ')', ')', '{', 'FileOutputStream', '_fos', '=', 'new', 'FileOutputStream', '(', 'WBSAgnitioConfiguration', '.', 'getSchemaObjectFile', '(', ')', ')', ';', 'FileInputStream', '_fis', '=', 'new', 'FileInputStream', '(', '_f', ')', ';', 'while', '(', '_fis', '.', 'available', '(', ')', '>', '0', ')', '{', '_fos', '.', 'write', '(', '_fis', '.', 'read', '(', ')', ')', ';', '}', '_fis', '.', 'close', '(', ')', ';', '_fos', '.', 'close', '(', ')', ';', '_f', '.', 'delete', '(', ')', ';', '}', 'new', 'File', '(', 'WBSAgnitioConfiguration', '.', 'getHARequestFile', '(', ')', ')', '.', 'delete', '(', ')', ';', 'this', '.', '_c', '.', 'removeProperty', '(', '"', 'directory.request', '"', ')', ';', 'this', '.', '_c', '.', 'setProperty', '(', '"', 'directory.virtual', '"', ',', 'values', '.', 'get', '(', '"', 'address.virtual', '"', ')', ')', ';', 'this', '.', '_c', '.', 'setProperty', '(', '"', 'directory.status', '"', ',', '"', 'slave', '"', ')', ';', 'this', '.', '_c', '.', 'store', '(', ')', ';', '}']
Example 98 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'unzip', '(', 'String', 'zipfile', ',', 'String', 'outputDirectory', ')', '{', 'try', '{', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'ZipInputStream', 'zipinputstream', '=', 'null', ';', 'ZipEntry', 'zipentry', ';', 'zipinputstream', '=', 'new', 'ZipInputStream', '(', 'new', 'FileInputStream', '(', 'zipfile', ')', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', 'while', '(', 'zipentry', '!=', 'null', ')', '{', 'String', 'entryName', '=', 'zipentry', '.', 'getName', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'entryname', '', '"', '+', 'entryName', ')', ';', 'int', 'n', ';', 'FileOutputStream', 'fileoutputstream', ';', 'File', 'newFile', '=', 'new', 'File', '(', 'entryName', ')', ';', 'String', 'directory', '=', 'newFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'directory', '==', 'null', ')', '{', 'if', '(', 'newFile', '.', 'isDirectory', '(', ')', ')', 'break', ';', '}', 'fileoutputstream', '=', 'new', 'FileOutputStream', '(', 'outputDirectory', '+', 'entryName', ')', ';', 'while', '(', '(', 'n', '=', 'zipinputstream', '.', 'read', '(', 'buf', ',', '0', ',', '1024', ')', ')', '>', '-', '1', ')', 'fileoutputstream', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', 'fileoutputstream', '.', 'close', '(', ')', ';', 'zipinputstream', '.', 'closeEntry', '(', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', '}', 'zipinputstream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 99 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'unsplit', '(', 'String', 'newFilename', ',', 'File', '[', ']', 'files', ')', 'throws', 'Exception', '{', 'FileOutputStream', 'stream', '=', 'new', 'FileOutputStream', '(', 'new', 'File', '(', 'newFilename', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', 'FileInputStream', 'fin', '=', 'new', 'FileInputStream', '(', 'files', '[', 'i', ']', '.', 'getAbsolutePath', '(', ')', ')', ';', 'DataInputStream', 'din', '=', 'new', 'DataInputStream', '(', 'fin', ')', ';', 'while', '(', 'din', '.', 'available', '(', ')', '>', '0', ')', '{', 'stream', '.', 'write', '(', 'din', '.', 'read', '(', ')', ')', ';', '}', 'din', '.', 'close', '(', ')', ';', 'fin', '.', 'close', '(', ')', ';', '}', 'stream', '.', 'close', '(', ')', ';', '}']
  >>  iter 1, ACC! i => uri (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 2, ACC! uri => y (0 => 0, 0.99987 => 0.99987) a=1.005
  >>  iter 3, ACC! y => xi (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 4, ACC! xi => ix (0 => 0, 0.99987 => 0.99987) a=1.004
  >>  iter 5, ACC! ix => c (0 => 0, 0.99987 => 0.99987) a=1.003
  >>  iter 6, ACC! c => me (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 7, ACC! me => j (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 8, ACC! j => bi (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 9, ACC! bi => gi (0 => 0, 0.99987 => 0.99987) a=1.003
  >>  iter 10, ACC! gi => ii (0 => 0, 0.99987 => 0.99987) a=1.002
Example 100 attack result: {'succ': False, 'tokens': '    public void unsplit(String newFilename, File[] files) throws Exception {\n        FileOutputStream stream = new FileOutputStream(new File(newFilename));\n        for (int ii = 0; ii < files.length; ii++) {\n            FileInputStream fin = new FileInputStream(files[ii].getAbsolutePath());\n            DataInputStream din = new DataInputStream(fin);\n            while (din.available() > 0) {\n                stream.write(din.read());\n            }\n            din.close();\n            fin.close();\n        }\n        stream.close();\n    }\n', 'raw_tokens': None, 'prog_length': 113, 'new_pred': 0, 'is_success': -1, 'old_uid': 'i', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'i': 'ii'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 100 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 7.39 min
  curr succ rate = 0.0
Query times in this attack:  312
All Query times:  11820
raw_tokens: ['private', 'static', 'boolean', 'CopyFile', '(', 'File', 'srcFile', ',', 'File', 'tagFile', ')', 'throws', 'IOException', '{', 'if', '(', 'srcFile', '==', 'null', '||', 'tagFile', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'int', 'length', '=', '2097152', ';', 'File', 'dirFile', '=', 'new', 'File', '(', 'getFileFolder', '(', 'tagFile', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', 'if', '(', '!', 'dirFile', '.', 'exists', '(', ')', ')', '{', 'dirFile', '.', 'mkdirs', '(', ')', ';', '}', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'srcFile', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'tagFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'FileChannel', 'inC', '=', 'in', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outC', '=', 'out', '.', 'getChannel', '(', ')', ';', 'int', 'i', '=', '0', ';', 'while', '(', 'true', ')', '{', 'if', '(', 'inC', '.', 'position', '(', ')', '==', 'inC', '.', 'size', '(', ')', ')', '{', 'inC', '.', 'close', '(', ')', ';', 'outC', '.', 'close', '(', ')', ';', 'break', ';', '}', 'if', '(', '(', 'inC', '.', 'size', '(', ')', '-', 'inC', '.', 'position', '(', ')', ')', '<', '20971520', ')', 'length', '=', '(', 'int', ')', '(', 'inC', '.', 'size', '(', ')', '-', 'inC', '.', 'position', '(', ')', ')', ';', 'else', 'length', '=', '20971520', ';', 'inC', '.', 'transferTo', '(', 'inC', '.', 'position', '(', ')', ',', 'length', ',', 'outC', ')', ';', 'inC', '.', 'position', '(', 'inC', '.', 'position', '(', ')', '+', 'length', ')', ';', 'i', '++', ';', '}', 'return', 'true', ';', '}']
  >>  iter 1, ACC! in => con (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! con => pull (1 => 1, 0.99988 => 0.99988) a=2.741
  >>  iter 3, ACC! out => up (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 4, ACC! up => Out (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! pull => socket (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 6, ACC! socket => up (1 => 1, 0.99988 => 0.99988) a=3.075
  >>  iter 7, ACC! Out => client (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! client => c (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! c => plus (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! up => err (1 => 1, 0.99988 => 0.99988) a=3.496
Example 101 attack result: {'succ': False, 'tokens': '    private static boolean CopyFile(File srcFile, File tagFile) throws IOException {\n        if (srcFile == null || tagFile == null) {\n            return false;\n        }\n        int length = 2097152;\n        File dirFile = new File(getFileFolder(tagFile.getAbsolutePath()));\n        if (!dirFile.exists()) {\n            dirFile.mkdirs();\n        }\n        FileInputStream err = new FileInputStream(srcFile);\n        FileOutputStream plus = new FileOutputStream(tagFile.getAbsolutePath());\n        FileChannel inC = err.getChannel();\n        FileChannel outC = plus.getChannel();\n        int i = 0;\n        while (true) {\n            if (inC.position() == inC.size()) {\n                inC.close();\n                outC.close();\n                break;\n            }\n            if ((inC.size() - inC.position()) < 20971520) length = (int) (inC.size() - inC.position()); else length = 20971520;\n            inC.transferTo(inC.position(), length, outC);\n            inC.position(inC.position() + length);\n            i++;\n        }\n        return true;\n    }\n', 'raw_tokens': None, 'prog_length': 225, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': -9.313226e-09, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'in': 'err', 'out': 'plus'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 101 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 7.54 min
  curr succ rate = 0.0
Query times in this attack:  292
All Query times:  12112
raw_tokens: ['public', 'boolean', 'actualizarRondaActual', '(', 'division', 'div', ')', '{', 'int', 'intResult', '=', '0', ';', 'String', 'sql', '=', '"', 'UPDATE', 'divisionxTorneo', '', '"', '+', '"', '', 'SET', 'rondaActual', '=', '', '"', '+', 'div', '.', 'getRondaActual', '(', ')', '+', '"', '', 'WHERE', 'idDivisionxTorneo', '=', '', '"', '+', 'div', '.', 'getidDivision', '(', ')', ';', 'try', '{', 'connection', '=', 'conexionBD', '.', 'getConnection', '(', ')', ';', 'connection', '.', 'setAutoCommit', '(', 'false', ')', ';', 'ps', '=', 'connection', '.', 'prepareStatement', '(', 'sql', ')', ';', 'intResult', '=', 'ps', '.', 'executeUpdate', '(', ')', ';', 'connection', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', 'try', '{', 'connection', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'exe', ')', '{', 'exe', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'finally', '{', 'conexionBD', '.', 'close', '(', 'ps', ')', ';', 'conexionBD', '.', 'close', '(', 'connection', ')', ';', '}', 'return', '(', 'intResult', '>', '0', ')', ';', '}']
Example 102 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'Image', 'getImage', '(', 'URL', 'url', ')', 'throws', 'IOException', '{', 'InputStream', 'is', '=', 'null', ';', 'try', '{', 'is', '=', 'url', '.', 'openStream', '(', ')', ';', 'Image', 'img', '=', 'getImage', '(', 'is', ')', ';', 'img', '.', 'setUrl', '(', 'url', ')', ';', 'return', 'img', ';', '}', 'finally', '{', 'if', '(', 'is', '!=', 'null', ')', '{', 'is', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 103 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copy', '(', 'File', 'fromFile', ',', 'File', 'toFile', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'fromFile', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'no', 'such', 'source', 'file:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', '!', 'fromFile', '.', 'isFile', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', "can't", 'copy', 'directory:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', '!', 'fromFile', '.', 'canRead', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'source', 'file', 'is', 'unreadable:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'toFile', '.', 'isDirectory', '(', ')', ')', 'toFile', '=', 'new', 'File', '(', 'toFile', ',', 'fromFile', '.', 'getName', '(', ')', ')', ';', 'String', 'parent', '=', 'toFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'parent', '==', 'null', ')', 'parent', '=', 'System', '.', 'getProperty', '(', '"', 'user.dir', '"', ')', ';', 'File', 'dir', '=', 'new', 'File', '(', 'parent', ')', ';', 'if', '(', '!', 'dir', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'directory', "doesn't", 'exist:', '', '"', '+', 'parent', ')', ';', 'if', '(', 'dir', '.', 'isFile', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'is', 'not', 'a', 'directory:', '', '"', '+', 'parent', ')', ';', 'if', '(', '!', 'dir', '.', 'canWrite', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'directory', 'is', 'unwriteable:', '', '"', '+', 'parent', ')', ';', 'FileInputStream', 'from', '=', 'null', ';', 'FileOutputStream', 'to', '=', 'null', ';', 'try', '{', 'from', '=', 'new', 'FileInputStream', '(', 'fromFile', ')', ';', 'to', '=', 'new', 'FileOutputStream', '(', 'toFile', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'bytesRead', ';', 'while', '(', '(', 'bytesRead', '=', 'from', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', 'to', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytesRead', ')', ';', '}', 'finally', '{', 'if', '(', 'from', '!=', 'null', ')', 'try', '{', 'from', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'if', '(', 'to', '!=', 'null', ')', 'try', '{', 'to', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}']
  >>  iter 1, ACC! buffer => border (1 => 1, 0.99988 => 0.99988) a=1.028
  >>  iter 2, ACC! read => copy (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! border => address (1 => 1, 0.99988 => 0.99988) a=1.052
  >>  iter 4, ACC! address => binary (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! binary => type (1 => 1, 0.99988 => 0.99988) a=1.052
  >>  iter 6, ACC! copy => work (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 7, ACC! work => feed (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 8, ACC! feed => ride (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 9, ACC! ride => end (1 => 1, 0.99988 => 0.99988) a=1.005
  >>  iter 10, ACC! end => parse (1 => 1, 0.99988 => 0.99988) a=1.005
Example 104 attack result: {'succ': False, 'tokens': '    public static void parse(File fromFile, File toFile) throws IOException {\n        if (!fromFile.exists()) throw new IOException("FileCopy: " + "no such source file: " + fromFile.getAbsolutePath());\n        if (!fromFile.isFile()) throw new IOException("FileCopy: " + "can\'t copy directory: " + fromFile.getAbsolutePath());\n        if (!fromFile.canRead()) throw new IOException("FileCopy: " + "source file is unreadable: " + fromFile.getAbsolutePath());\n        if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());\n        String parent = toFile.getParent();\n        if (parent == null) parent = System.getProperty("user.dir");\n        File dir = new File(parent);\n        if (!dir.exists()) throw new IOException("FileCopy: " + "destination directory doesn\'t exist: " + parent);\n        if (dir.isFile()) throw new IOException("FileCopy: " + "destination is not a directory: " + parent);\n        if (!dir.canWrite()) throw new IOException("FileCopy: " + "destination directory is unwriteable: " + parent);\n        FileInputStream from = null;\n        FileOutputStream to = null;\n        try {\n            from = new FileInputStream(fromFile);\n            to = new FileOutputStream(toFile);\n            byte[] type = new byte[4096];\n            int bytesRead;\n            while ((bytesRead = from.parse(type)) != -1) to.write(type, 0, bytesRead);\n        } finally {\n            if (from != null) try {\n                from.close();\n            } catch (IOException e) {\n            }\n            if (to != null) try {\n                to.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 344, 'new_pred': 1, 'is_success': -1, 'old_uid': 'read', 'score_info': -1.9315485e-07, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'buffer': 'type', 'read': 'parse'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 104 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 7.73 min
  curr succ rate = 0.0
Query times in this attack:  304
All Query times:  12416
raw_tokens: ['public', 'static', 'boolean', 'encodeFileToFile', '(', 'String', 'infile', ',', 'String', 'outfile', ')', '{', 'boolean', 'success', '=', 'false', ';', 'java', '.', 'io', '.', 'InputStream', 'in', '=', 'null', ';', 'java', '.', 'io', '.', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'Base64', '.', 'InputStream', '(', 'new', 'java', '.', 'io', '.', 'BufferedInputStream', '(', 'new', 'java', '.', 'io', '.', 'FileInputStream', '(', 'infile', ')', ')', ',', 'Base64', '.', 'ENCODE', ')', ';', 'out', '=', 'new', 'java', '.', 'io', '.', 'BufferedOutputStream', '(', 'new', 'java', '.', 'io', '.', 'FileOutputStream', '(', 'outfile', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'success', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', 'try', '{', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', '}', 'return', 'success', ';', '}']
Example 105 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'ImportFromFile', '', '(', ')', '{', 'JFrame', 'jf', '=', 'new', 'JFrame', '(', ')', ';', 'JFileChooser', 'fc', '=', 'new', 'JFileChooser', '(', 'KTH', '.', 'data', '.', '_path', ')', ';', 'fc', '.', 'setFileSelectionMode', '(', 'JFileChooser', '.', 'FILES_ONLY', ')', ';', 'int', 'returnVal', '=', 'fc', '.', 'showOpenDialog', '(', 'jf', ')', ';', 'File', 'file', '=', 'null', ';', 'if', '(', 'returnVal', '==', 'JFileChooser', '.', 'APPROVE_OPTION', ')', '{', 'file', '=', 'fc', '.', 'getSelectedFile', '(', ')', ';', 'KTH', '.', 'data', '.', '_path', '=', 'file', '.', 'getParent', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'file', '.', 'getAbsolutePath', '(', ')', '+', '"', '', '"', ')', ';', '}', 'else', '{', '}', 'if', '(', 'file', '!=', 'null', ')', '{', 'File', 'f', '=', 'new', 'File', '(', 'KTH', '.', 'data', '.', 'getHomeDir', '(', ')', '+', 'File', '.', 'separator', '+', 'KTH', '.', 'data', '.', 'katalogName', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'f', '+', '(', 'f', '.', 'exists', '(', ')', '?', '"', '', 'is', 'found', '', '"', ':', '"', '', 'is', 'missing', '', '"', ')', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', '&&', '!', 'IOUtils', '.', 'isNewerContent', '(', 'file', ',', 'f', ')', ')', '{', '}', 'else', '{', 'try', '{', 'IOUtils', '.', 'copyFile', '(', 'file', ',', 'f', ',', 'true', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'KTH', '.', 'out', '.', 'err', '(', 'e', ')', ';', '}', '}', 'KTH', '.', 'dc2', '.', 'removeDc', '(', '"', 'Import', '"', ')', ';', '}', 'else', '{', '}', '}']
Example 106 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'final', 'void', 'close', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'dataStream', '==', 'null', ')', 'throw', 'new', 'NullPointerException', '(', '"', 'Write', 'stream', 'is', 'null.', '"', ')', ';', 'dataStream', '.', 'flush', '(', ')', ';', 'dataStream', '.', 'close', '(', ')', ';', 'dataStream', '=', 'null', ';', 'File', 'tmpFile', '=', 'new', 'File', '(', 'packPath', '+', '"', '.tmp', '"', ')', ';', 'FileOutputStream', 'packStream', '=', 'new', 'FileOutputStream', '(', 'packPath', ')', ';', 'try', '{', 'String', 'nbFiles', '=', 'Long', '.', 'toString', '(', 'currentNbFiles', ')', '+', '"', '\\0', '"', ';', 'packStream', '.', 'write', '(', 'FLAT_PACK_HEADER', '.', 'getBytes', '(', 'Charsets', '.', 'ISO_8859_1', ')', ')', ';', 'structBufferWriter', '.', 'flush', '(', ')', ';', 'structBufferWriter', '.', 'close', '(', ')', ';', 'int', 'headerSize', '=', 'structBuffer', '.', 'size', '(', ')', '+', 'nbFiles', '.', 'length', '(', ')', ';', 'packStream', '.', 'write', '(', 'Integer', '.', 'toString', '(', 'headerSize', ')', '.', 'getBytes', '(', 'Charsets', '.', 'ISO_8859_1', ')', ')', ';', 'packStream', '.', 'write', '(', "'\\0'", ')', ';', 'packStream', '.', 'write', '(', 'nbFiles', '.', 'getBytes', '(', 'Charsets', '.', 'ISO_8859_1', ')', ')', ';', 'structBuffer', '.', 'writeTo', '(', 'packStream', ')', ';', 'structBufferWriter', '=', 'null', ';', 'structBuffer', '=', 'null', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'tmpFile', ')', ';', 'try', '{', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'FILE_COPY_BUFFER_LEN', ']', ';', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>', '0', ')', 'packStream', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', 'packStream', '.', 'flush', '(', ')', ';', 'packStream', '.', 'close', '(', ')', ';', '}', 'finally', '{', 'Utilities', '.', 'closeStream', '(', 'in', ')', ';', '}', '}', 'finally', '{', 'Utilities', '.', 'closeStream', '(', 'packStream', ')', ';', '}', 'if', '(', 'tmpFile', '.', 'isFile', '(', ')', ')', 'Utilities', '.', 'deleteFile', '(', 'tmpFile', ')', ';', 'packPath', '=', 'null', ';', 'structBuffer', '=', 'null', ';', '}']
  >>  iter 1, ACC! in => ssl (0 => 0, 0.99964 => 0.99964) a=1.001
  >>  iter 2, ACC! ssl => r (0 => 0, 0.99964 => 0.99964) a=1.000
  >>  iter 3, ACC! r => re (0 => 0, 0.99964 => 0.99964) a=1.001
  >>  iter 4, ACC! re => buffer (0 => 0, 0.99964 => 0.99964) a=1.001
  >>  iter 5, ACC! buffer => h (0 => 0, 0.99964 => 0.99963) a=1.001
  >>  iter 6, ACC! h => win (0 => 0, 0.99963 => 0.99963) a=1.001
  >>  iter 7, ACC! win => is (0 => 0, 0.99963 => 0.99964) a=1.001
  >>  iter 8, ACC! is => into (0 => 0, 0.99964 => 0.99964) a=1.002
  >>  iter 9, ACC! into => gin (0 => 0, 0.99964 => 0.99963) a=1.001
  >>  iter 10, ACC! gin => buffer (0 => 0, 0.99963 => 0.99964) a=1.001
Example 107 attack result: {'succ': False, 'tokens': '    public final void close() throws IOException {\n        if (dataStream == null) throw new NullPointerException("Write stream is null.");\n        dataStream.flush();\n        dataStream.close();\n        dataStream = null;\n        File tmpFile = new File(packPath + ".tmp");\n        FileOutputStream packStream = new FileOutputStream(packPath);\n        try {\n            String nbFiles = Long.toString(currentNbFiles) + "\\0";\n            packStream.write(FLAT_PACK_HEADER.getBytes(Charsets.ISO_8859_1));\n            structBufferWriter.flush();\n            structBufferWriter.close();\n            int headerSize = structBuffer.size() + nbFiles.length();\n            packStream.write(Integer.toString(headerSize).getBytes(Charsets.ISO_8859_1));\n            packStream.write(\'\\0\');\n            packStream.write(nbFiles.getBytes(Charsets.ISO_8859_1));\n            structBuffer.writeTo(packStream);\n            structBufferWriter = null;\n            structBuffer = null;\n            FileInputStream buffer = new FileInputStream(tmpFile);\n            try {\n                byte[] buffer = new byte[FILE_COPY_BUFFER_LEN];\n                int read;\n                while ((read = buffer.read(buffer)) > 0) packStream.write(buffer, 0, read);\n                packStream.flush();\n                packStream.close();\n            } finally {\n                Utilities.closeStream(buffer);\n            }\n        } finally {\n            Utilities.closeStream(packStream);\n        }\n        if (tmpFile.isFile()) Utilities.deleteFile(tmpFile);\n        packPath = null;\n        structBuffer = null;\n    }\n', 'raw_tokens': None, 'prog_length': 283, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': -1.1920929e-07, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'in': 'buffer'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 107 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 7.92 min
  curr succ rate = 0.0
Query times in this attack:  310
All Query times:  12726
raw_tokens: ['public', 'void', 'doGet', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ')', 'throws', 'ServletException', ',', 'IOException', '{', 'String', 'url', '=', 'request', '.', 'getParameter', '(', '"', 'proxyurl', '"', ')', ';', 'URLConnection', 'conn', '=', 'new', 'URL', '(', 'url', ')', '.', 'openConnection', '(', ')', ';', 'Reader', 'in', '=', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ',', 'response', '.', 'getCharacterEncoding', '(', ')', ')', ';', 'response', '.', 'setContentType', '(', 'conn', '.', 'getContentType', '(', ')', ')', ';', 'response', '.', 'setContentLength', '(', 'conn', '.', 'getContentLength', '(', ')', ')', ';', 'Writer', 'out', '=', 'response', '.', 'getWriter', '(', ')', ';', 'char', '[', ']', 'buf', '=', 'new', 'char', '[', '256', ']', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '!=', '-', '1', ')', '{', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'String', 'log', '=', 'request', '.', 'getParameter', '(', '"', 'logging', '"', ')', ';', 'if', '(', 'log', '!=', 'null', '&&', 'log', '.', 'toLowerCase', '(', ')', '.', 'equals', '(', '"', 'true', '"', ')', ')', 'logRequest', '(', 'request', ')', ';', '}']
  >>  iter 1, ACC! url => Url (0 => 0, 0.99998 => 0.99998) a=1.056
  >>  iter 2, REJ. Url => source (0 => 0, 0.99998 => 0.99998) a=0.917
  >>  iter 3, REJ. Url => http (0 => 0, 0.99998 => 0.99998) a=0.917
  >>  iter 4, REJ. Url => source (0 => 0, 0.99998 => 0.99998) a=0.876
  >>  iter 5, ACC! in => i (0 => 0, 0.99998 => 0.99998) a=1.769
  >>  iter 6, REJ. Url => user (0 => 0, 0.99998 => 0.99998) a=0.855
  >>  iter 7, REJ. Url => id (0 => 0, 0.99998 => 0.99998) a=0.790
  >>  iter 8, ACC! i => inside (0 => 0, 0.99998 => 0.99997) a=1.495
  >>  iter 9, ACC! inside => inner (0 => 0, 0.99997 => 0.99998) a=1.456
  >>  iter 10, REJ. Url => ssl (0 => 0, 0.99998 => 0.99998) a=0.827
Example 108 attack result: {'succ': False, 'tokens': '    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        String ssl = request.getParameter("proxyurl");\n        URLConnection conn = new URL(ssl).openConnection();\n        Reader inner = new InputStreamReader(conn.getInputStream(), response.getCharacterEncoding());\n        response.setContentType(conn.getContentType());\n        response.setContentLength(conn.getContentLength());\n        Writer out = response.getWriter();\n        char[] buf = new char[256];\n        int len;\n        while ((len = inner.read(buf)) != -1) {\n            out.write(buf, 0, len);\n        }\n        inner.close();\n        out.close();\n        String log = request.getParameter("logging");\n        if (log != null && log.toLowerCase().equals("true")) logRequest(request);\n    }\n', 'raw_tokens': None, 'prog_length': 182, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': -7.1525574e-06, 'nb_changed_var': 2, 'nb_changed_pos': 5, 'replace_info': {'url': 'Url', 'in': 'inner'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 108 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 8.06 min
  curr succ rate = 0.0
Query times in this attack:  298
All Query times:  13024
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'PrintStream', 'filesTxt', '=', 'new', 'PrintStream', '(', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', '"', 'temp/index/files.txt', '"', ')', ')', ')', ';', 'String', '[', ']', 'files', '=', 'new', 'File', '(', 'Constants', '.', 'INDEX_PATH', ')', '.', 'list', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', 'String', 'f', '=', 'files', '[', 'i', ']', ';', 'if', '(', 'f', '.', 'equals', '(', '"', 'deletable', '"', ')', '||', 'f', '.', 'startsWith', '(', '"', '.', '"', ')', ')', 'continue', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'new', 'File', '(', 'Constants', '.', 'INDEX_PATH', ',', 'f', ')', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'new', 'File', '(', 'targetDir', ',', 'f', '+', '"', '.t', '"', ')', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '16384', ']', ';', 'int', 'n', ';', 'while', '(', '(', 'n', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'filesTxt', '.', 'println', '(', 'f', ')', ';', '}', 'filesTxt', '.', 'close', '(', ')', ';', '}']
Example 109 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'String', 'readGeoJSON', '(', 'String', 'feature', ')', '{', 'StringBuffer', 'content', '=', 'new', 'StringBuffer', '(', ')', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'feature', ')', ';', 'HttpURLConnection', 'conn', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'connect', '(', ')', ';', 'BufferedReader', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'content', '.', 'append', '(', 'line', ')', ';', '}', 'conn', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'return', 'content', '.', 'toString', '(', ')', ';', '}']
  >>  iter 1, ACC! url => sl (0 => 0, 0.99868 => 0.99868) a=1.013
  >>  iter 2, ACC! sl => el (0 => 0, 0.99868 => 0.99867) a=1.012
  >>  iter 3, ACC! el => http (0 => 0, 0.99867 => 0.99868) a=1.007
  >>  iter 4, ACC! http => server (0 => 0, 0.99868 => 0.99868) a=1.012
  >>  iter 5, ACC! server => loc (0 => 0, 0.99868 => 0.99866) a=1.010
  >>  iter 6, ACC! loc => i (0 => 0, 0.99866 => 0.99867) a=1.002
  >>  iter 7, ACC! i => ssl (0 => 0, 0.99867 => 0.99870) a=1.009
  >>  iter 8, ACC! ssl => server (0 => 0, 0.99870 => 0.99868) a=1.027
  >>  iter 9, ACC! server => ob (0 => 0, 0.99868 => 0.99868) a=1.012
  >>  iter 10, ACC! ob => rl (0 => 0, 0.99868 => 0.99869) a=1.011
Example 110 attack result: {'succ': False, 'tokens': '    private static String readGeoJSON(String feature) {\n        StringBuffer content = new StringBuffer();\n        try {\n            URL rl = new URL(feature);\n            HttpURLConnection conn = (HttpURLConnection) rl.openConnection();\n            conn.connect();\n            BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String line;\n            while ((line = rd.readLine()) != null) {\n                content.append(line);\n            }\n            conn.disconnect();\n        } catch (Exception e) {\n        }\n        return content.toString();\n    }\n', 'raw_tokens': None, 'prog_length': 111, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -8.225441e-06, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'rl'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 110 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 8.22 min
  curr succ rate = 0.0
Query times in this attack:  295
All Query times:  13319
raw_tokens: ['public', 'void', 'sortArray', '(', ')', '{', 'int', 'a', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'array', '.', 'length', ';', 'i', '++', ')', '{', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'array', '.', 'length', '-', '1', ';', 'j', '++', ')', '{', 'if', '(', 'array', '[', 'j', ']', '<', 'array', '[', 'j', '+', '1', ']', ')', '{', 'a', '=', 'array', '[', 'j', ']', ';', 'array', '[', 'j', ']', '=', 'array', '[', 'j', '+', '1', ']', ';', 'array', '[', 'j', '+', '1', ']', '=', 'a', ';', '}', '}', '}', '}']
Example 111 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'String', 'uri', '=', 'args', '[', '0', ']', ';', 'Configuration', 'conf', '=', 'new', 'Configuration', '(', ')', ';', 'FileSystem', 'fs', '=', 'FileSystem', '.', 'get', '(', 'URI', '.', 'create', '(', 'uri', ')', ',', 'conf', ')', ';', 'Path', 'inputPath', '=', 'new', 'Path', '(', 'uri', ')', ';', 'CompressionCodecFactory', 'factory', '=', 'new', 'CompressionCodecFactory', '(', 'conf', ')', ';', 'CompressionCodec', 'codec', '=', 'factory', '.', 'getCodec', '(', 'inputPath', ')', ';', 'if', '(', 'codec', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'No', 'codec', 'found', 'for', '', '"', '+', 'uri', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'String', 'outputUri', '=', 'CompressionCodecFactory', '.', 'removeSuffix', '(', 'uri', ',', 'codec', '.', 'getDefaultExtension', '(', ')', ')', ';', 'InputStream', 'in', '=', 'null', ';', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'codec', '.', 'createInputStream', '(', 'fs', '.', 'open', '(', 'inputPath', ')', ')', ';', 'out', '=', 'fs', '.', 'create', '(', 'new', 'Path', '(', 'outputUri', ')', ')', ';', 'IOUtils', '.', 'copyBytes', '(', 'in', ',', 'out', ',', 'conf', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeStream', '(', 'in', ')', ';', 'IOUtils', '.', 'closeStream', '(', 'out', ')', ';', '}', '}']
Example 112 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'extract', '(', 'final', 'ZipFile', 'zf', ',', 'final', 'ZipEntry', 'zipEntry', ',', 'final', 'String', 'desDir', ',', 'final', 'int', '...', 'startDirLevel', ')', 'throws', 'IOException', '{', 'File', 'desf', '=', 'new', 'File', '(', 'desDir', ')', ';', 'if', '(', '!', 'desf', '.', 'exists', '(', ')', ')', '{', 'desf', '.', 'mkdirs', '(', ')', ';', '}', 'int', 'start', '=', '1', ';', 'if', '(', 'null', '!=', 'startDirLevel', '&&', 'startDirLevel', '.', 'length', '>', '0', ')', '{', 'start', '=', 'startDirLevel', '[', '0', ']', ';', 'if', '(', 'start', '<', '1', ')', '{', 'start', '=', '1', ';', '}', '}', 'String', 'startDir', '=', '"', '"', ';', 'String', 'zeName', '=', 'zipEntry', '.', 'getName', '(', ')', ';', 'String', 'folder', '=', 'zeName', ';', 'boolean', 'isDir', '=', 'zipEntry', '.', 'isDirectory', '(', ')', ';', 'if', '(', 'null', '!=', 'folder', ')', '{', 'String', '[', ']', 'folders', '=', 'folder', '.', 'split', '(', '"', '\\\\', '/', '"', ')', ';', 'if', '(', 'null', '!=', 'folders', '&&', 'folders', '.', 'length', '>', '0', ')', '{', 'int', 'len', '=', 'folders', '.', 'length', ';', 'if', '(', 'start', '==', '1', ')', '{', 'startDir', '=', 'zeName', ';', '}', 'else', '{', 'if', '(', 'start', '>', 'len', ')', '{', '}', 'else', '{', 'for', '(', 'int', 'i', '=', 'start', '-', '1', ';', 'i', '<', 'len', ';', 'i', '++', ')', '{', 'startDir', '+=', '"', '/', '"', '+', 'folders', '[', 'i', ']', ';', '}', 'if', '(', 'null', '!=', 'startDir', ')', '{', 'startDir', '=', 'startDir', '.', 'substring', '(', '1', ')', ';', '}', '}', '}', '}', '}', 'startDir', '=', 'StringUtils', '.', 'trim', '(', 'startDir', ')', ';', 'if', '(', 'StringUtils', '.', 'isNotEmpty', '(', 'startDir', ')', ')', '{', 'StringBuilder', 'desFileName', '=', 'new', 'StringBuilder', '(', 'desDir', ')', ';', 'if', '(', '!', 'desDir', '.', 'endsWith', '(', '"', '/', '"', ')', '&&', '!', 'startDir', '.', 'startsWith', '(', '"', '/', '"', ')', ')', '{', 'desFileName', '.', 'append', '(', '"', '/', '"', ')', ';', '}', 'desFileName', '.', 'append', '(', 'startDir', ')', ';', 'File', 'destFile', '=', 'new', 'File', '(', 'desFileName', '.', 'toString', '(', ')', ')', ';', 'if', '(', 'isDir', ')', '{', 'if', '(', '!', 'destFile', '.', 'exists', '(', ')', ')', '{', 'destFile', '.', 'mkdirs', '(', ')', ';', '}', '}', 'else', '{', 'File', 'parentDir', '=', 'new', 'File', '(', 'destFile', '.', 'getParentFile', '(', ')', '.', 'getPath', '(', ')', ')', ';', 'if', '(', '!', 'parentDir', '.', 'exists', '(', ')', ')', '{', 'parentDir', '.', 'mkdirs', '(', ')', ';', '}', 'InputStream', 'is', '=', 'zf', '.', 'getInputStream', '(', 'zipEntry', ')', ';', 'OutputStream', 'os', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', ';', 'IOUtils', '.', 'copy', '(', 'is', ',', 'os', ')', ';', 'if', '(', 'null', '!=', 'is', ')', '{', 'is', '.', 'close', '(', ')', ';', '}', 'if', '(', 'null', '!=', 'os', ')', '{', 'os', '.', 'close', '(', ')', ';', '}', '}', '}', '}']
Example 113 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'encryptPassword', '(', 'String', 'password', ')', 'throws', 'NoSuchAlgorithmException', '{', 'MessageDigest', 'encript', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'encript', '.', 'update', '(', 'password', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'b', '=', 'encript', '.', 'digest', '(', ')', ';', 'int', 'size', '=', 'b', '.', 'length', ';', 'StringBuffer', 'h', '=', 'new', 'StringBuffer', '(', 'size', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'size', ';', 'i', '++', ')', '{', 'h', '.', 'append', '(', 'b', '[', 'i', ']', ')', ';', '}', 'return', 'h', '.', 'toString', '(', ')', ';', '}']
Example 114 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'setFavBoard', '(', 'List', '<', 'BoardObject', '>', 'list', ')', 'throws', 'NetworkException', ',', 'ContentException', '{', 'HttpClient', 'client', '=', 'HttpConfig', '.', 'newInstance', '(', ')', ';', 'HttpPost', 'post', '=', 'new', 'HttpPost', '(', 'HttpConfig', '.', 'bbsURL', '(', ')', '+', 'HttpConfig', '.', 'BBS_FAV_SETTING', ')', ';', 'List', '<', 'NameValuePair', '>', 'nvps', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'for', '(', 'BoardObject', 'board', ':', 'list', ')', 'nvps', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', 'board', '.', 'getId', '(', ')', ',', '"', 'on', '"', ')', ')', ';', 'try', '{', 'post', '.', 'setEntity', '(', 'new', 'UrlEncodedFormEntity', '(', 'nvps', ',', 'BBSBodyParseHelper', '.', 'BBS_CHARSET', ')', ')', ';', 'HttpResponse', 'response', '=', 'client', '.', 'execute', '(', 'post', ')', ';', 'HttpEntity', 'entity', '=', 'response', '.', 'getEntity', '(', ')', ';', 'if', '(', 'HTTPUtil', '.', 'isHttp200', '(', 'response', ')', '&&', 'HTTPUtil', '.', 'isXmlContentType', '(', 'response', ')', ')', '{', 'HTTPUtil', '.', 'consume', '(', 'response', '.', 'getEntity', '(', ')', ')', ';', 'return', 'true', ';', '}', 'else', '{', 'String', 'msg', '=', 'BBSBodyParseHelper', '.', 'parseFailMsg', '(', 'entity', ')', ';', 'throw', 'new', 'ContentException', '(', 'msg', ')', ';', '}', '}', 'catch', '(', 'ClientProtocolException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'throw', 'new', 'NetworkException', '(', 'e', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'throw', 'new', 'NetworkException', '(', 'e', ')', ';', '}', '}']
Example 115 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'protected', 'byte', '[', ']', 'computeHash', '(', ')', '{', 'try', '{', 'final', 'MessageDigest', 'inputHash', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA', '"', ')', ';', 'inputHash', '.', 'update', '(', 'bufferFileData', '(', ')', '.', 'getBytes', '(', ')', ')', ';', 'return', 'inputHash', '.', 'digest', '(', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', 'nsae', ')', '{', 'lastException', '=', 'nsae', ';', 'return', 'new', 'byte', '[', '0', ']', ';', '}', 'catch', '(', 'final', 'IOException', 'ioe', ')', '{', 'lastException', '=', 'ioe', ';', 'return', 'new', 'byte', '[', '0', ']', ';', '}', '}']
Example 116 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'hashPassword', '(', 'String', 'plainTextPassword', ')', '{', 'MessageDigest', 'digest', '=', 'null', ';', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'digest', '.', 'reset', '(', ')', ';', 'digest', '.', 'update', '(', 'plainTextPassword', '.', 'getBytes', '(', ')', ')', ';', 'BASE64Encoder', 'enc', '=', 'new', 'BASE64Encoder', '(', ')', ';', 'return', 'enc', '.', 'encode', '(', 'digest', '.', 'digest', '(', ')', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'log', '.', 'error', '(', 'e', ')', ';', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']
  >>  iter 1, ACC! update => write (0 => 0, 0.99980 => 0.99981) a=1.000
  >>  iter 2, ACC! digest => Digcode (0 => 0, 0.99981 => 0.99981) a=1.011
  >>  iter 3, REJ. write => config (0 => 0, 0.99981 => 0.99982) a=0.987
  >>  iter 4, ACC! Digcode => diged (0 => 0, 0.99981 => 0.99981) a=1.010
  >>  iter 5, ACC! diged =>  digEST (0 => 0, 0.99981 => 0.99981) a=1.016
  >>  iter 6, ACC!  digEST =>  digested (0 => 0, 0.99981 => 0.99981) a=1.000
  >>  iter 7, ACC!  digested => modests (0 => 0, 0.99981 => 0.99981) a=1.000
  >>  iter 8, ACC! write => updated (0 => 0, 0.99981 => 0.99981) a=1.020
  >>  iter 9, ACC! modests => diged (0 => 0, 0.99981 => 0.99981) a=1.000
  >>  iter 10, ACC! updated => check (0 => 0, 0.99981 => 0.99981) a=1.034
Example 117 attack result: {'succ': False, 'tokens': '    private String hashPassword(String plainTextPassword) {\n        MessageDigest  digEST = null;\n        try {\n             digEST = MessageDigest.getInstance("SHA-1");\n             digEST.reset();\n             digEST.check(plainTextPassword.getBytes());\n            BASE64Encoder enc = new BASE64Encoder();\n            return enc.encode( digEST. digEST());\n        } catch (NoSuchAlgorithmException e) {\n            log.error(e);\n            throw new RuntimeException(e);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 86, 'new_pred': 0, 'is_success': -1, 'old_uid': 'update', 'score_info': -5.4836273e-06, 'nb_changed_var': 2, 'nb_changed_pos': 7, 'replace_info': {'update': 'check', 'digest': 'diged'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 117 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 8.43 min
  curr succ rate = 0.0
Query times in this attack:  313
All Query times:  13632
raw_tokens: ['public', 'static', 'String', 'readUrl', '(', 'String', 'urlString', ')', '{', 'try', '{', 'java', '.', 'net', '.', 'URL', 'url', '=', 'new', 'java', '.', 'net', '.', 'URL', '(', 'urlString', ')', ';', 'BufferedReader', 'br', '=', 'null', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'br', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', '}', 'StringBuffer', 'fileString', '=', 'new', 'StringBuffer', '(', ')', ';', 'while', '(', 'true', ')', '{', 'String', 'line', '=', 'br', '.', 'readLine', '(', ')', ';', 'if', '(', 'line', '==', 'null', ')', '{', 'break', ';', '}', 'fileString', '.', 'append', '(', 'line', '+', '"', '', '"', ')', ';', '}', 'return', 'fileString', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'return', 'null', ';', '}', '}']
Example 118 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'extractSOUNDFILES', '(', ')', 'throws', 'Exception', '{', 'ArrayList', '<', 'File', '>', 'soundFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'File', 'soundsFolder', '=', 'new', 'File', '(', '"', '/var/lib/asterisk/sounds/', '"', ')', ';', 'if', '(', 'soundsFolder', '.', 'exists', '(', ')', ')', '{', 'File', 'soundFiles1', '[', ']', '=', 'soundsFolder', '.', 'listFiles', '(', 'new', 'FilenameFilter', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'accept', '(', 'File', 'dir', ',', 'String', 'name', ')', '{', 'if', '(', 'NullStatus', '.', 'isNull', '(', 'name', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'name', '.', 'endsWith', '(', '"', '-sounds.jar', '"', ')', ')', '{', 'return', 'true', ';', '}', 'return', 'false', ';', '}', '}', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'soundFiles1', '.', 'length', ';', 'i', '++', ')', '{', 'soundFiles', '.', 'add', '(', 'soundFiles1', '[', 'i', ']', ')', ';', '}', '}', 'soundsFolder', '=', 'new', 'File', '(', '"', '/opt/jboss/server/default/deploy/Tobe.war/WEB-INF/lib/', '"', ')', ';', 'if', '(', 'soundsFolder', '.', 'exists', '(', ')', ')', '{', 'File', 'soundFiles1', '[', ']', '=', 'soundsFolder', '.', 'listFiles', '(', 'new', 'FilenameFilter', '(', ')', '{', '@', 'Override', 'public', 'boolean', 'accept', '(', 'File', 'dir', ',', 'String', 'name', ')', '{', 'if', '(', 'NullStatus', '.', 'isNull', '(', 'name', ')', ')', '{', 'return', 'false', ';', '}', 'if', '(', 'name', '.', 'endsWith', '(', '"', '-sounds.jar', '"', ')', ')', '{', 'return', 'true', ';', '}', 'return', 'false', ';', '}', '}', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'soundFiles1', '.', 'length', ';', 'i', '++', ')', '{', 'soundFiles', '.', 'add', '(', 'soundFiles1', '[', 'i', ']', ')', ';', '}', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'soundFiles', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'ZipFile', 'zipFile', '=', 'new', 'ZipFile', '(', 'soundFiles', '.', 'get', '(', 'i', ')', ')', ';', 'InputStream', 'inputStream', '=', 'null', ';', 'Enumeration', '<', '?', 'extends', 'ZipEntry', '>', 'oEnum', '=', 'zipFile', '.', 'entries', '(', ')', ';', 'while', '(', 'oEnum', '.', 'hasMoreElements', '(', ')', ')', '{', 'ZipEntry', 'zipEntry', '=', 'oEnum', '.', 'nextElement', '(', ')', ';', 'File', 'file', '=', 'new', 'File', '(', '"', '/var/lib/asterisk/sounds/', '"', ',', 'zipEntry', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'zipEntry', '.', 'isDirectory', '(', ')', ')', '{', 'file', '.', 'mkdirs', '(', ')', ';', '}', 'else', '{', 'inputStream', '=', 'zipFile', '.', 'getInputStream', '(', 'zipEntry', ')', ';', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'fos', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', '}', '}', '}']
Example 119 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'SHA1', '(', 'String', 'text', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'MessageDigest', 'md', ';', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'byte', '[', ']', 'sha1hash', '=', 'new', 'byte', '[', '40', ']', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'text', '.', 'length', '(', ')', ')', ';', 'sha1hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'sha1hash', ')', ';', '}']
Example 120 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'APIResponse', 'update', '(', 'Application', 'application', ')', 'throws', 'Exception', '{', 'APIResponse', 'response', '=', 'new', 'APIResponse', '(', ')', ';', 'connection', '=', '(', 'HttpURLConnection', ')', 'new', 'URL', '(', 'url', '+', '"', '/api/application/update', '"', ')', '.', 'openConnection', '(', ')', ';', 'connection', '.', 'setDoOutput', '(', 'true', ')', ';', 'connection', '.', 'setRequestMethod', '(', '"', 'PUT', '"', ')', ';', 'connection', '.', 'setRequestProperty', '(', '"', 'Content-Type', '"', ',', '"', 'application/json;', 'charset=utf-8', '"', ')', ';', 'connection', '.', 'setUseCaches', '(', 'false', ')', ';', 'connection', '.', 'setConnectTimeout', '(', 'TIMEOUT', ')', ';', 'connection', '.', 'connect', '(', ')', ';', 'marshaller', '.', 'marshal', '(', 'application', ',', 'new', 'MappedXMLStreamWriter', '(', 'new', 'MappedNamespaceConvention', '(', 'new', 'Configuration', '(', ')', ')', ',', 'new', 'OutputStreamWriter', '(', 'connection', '.', 'getOutputStream', '(', ')', ',', '"', 'utf-8', '"', ')', ')', ')', ';', 'connection', '.', 'getOutputStream', '(', ')', '.', 'flush', '(', ')', ';', 'connection', '.', 'getOutputStream', '(', ')', '.', 'close', '(', ')', ';', 'if', '(', 'connection', '.', 'getResponseCode', '(', ')', '==', 'HttpURLConnection', '.', 'HTTP_OK', ')', '{', 'JSONObject', 'obj', '=', 'new', 'JSONObject', '(', 'new', 'String', '(', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'connection', '.', 'getInputStream', '(', ')', ',', '"', 'utf-8', '"', ')', ')', '.', 'readLine', '(', ')', ')', ')', ';', 'response', '.', 'setDone', '(', 'true', ')', ';', 'response', '.', 'setMessage', '(', 'unmarshaller', '.', 'unmarshal', '(', 'new', 'MappedXMLStreamReader', '(', 'obj', ',', 'new', 'MappedNamespaceConvention', '(', 'new', 'Configuration', '(', ')', ')', ')', ')', ')', ';', 'connection', '.', 'getInputStream', '(', ')', '.', 'close', '(', ')', ';', '}', 'else', '{', 'response', '.', 'setDone', '(', 'false', ')', ';', 'response', '.', 'setMessage', '(', '"', 'Update', 'Application', 'Error', 'Code:', 'Http', '(', '"', '+', 'connection', '.', 'getResponseCode', '(', ')', '+', '"', ')', '"', ')', ';', '}', 'connection', '.', 'disconnect', '(', ')', ';', 'return', 'response', ';', '}']
Example 121 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'addTag', '(', 'String', 'tag_id', ',', 'String', 'tag_description', ',', 'String', 'tag_text', ',', 'String', 'tag_author', ',', 'String', 'application_code', ')', '{', 'String', 'so', '=', 'OctopusErrorMessages', '.', 'UNKNOWN_ERROR', ';', 'if', '(', 'tag_id', '==', 'null', '||', 'tag_id', '.', 'trim', '(', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'TAG_ID_CANT_BE_EMPTY', ';', '}', 'if', '(', 'tag_id', '.', 'trim', '(', ')', '.', 'equals', '(', 'application_code', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'TAG_ID_TOO_SHORT', ';', '}', 'if', '(', '!', 'StringUtil', '.', 'isAlphaNumerical', '(', 'StringUtil', '.', 'replace', '(', 'StringUtil', '.', 'replace', '(', 'tag_id', ',', '"', '-', '"', ',', '"', '"', ')', ',', '"', '_', '"', ',', '"', '"', ')', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'TAG_ID_MUST_BE_ALPHANUMERIC', ';', '}', 'if', '(', '!', 'tag_id', '.', 'startsWith', '(', 'application_code', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'TAG_ID_MUST_START', '+', '"', '', '', '"', '+', 'application_code', ';', '}', 'String', 'tag_exist', '=', 'exist', '(', 'tag_id', ')', ';', 'if', '(', '!', 'tag_exist', '.', 'equals', '(', 'OctopusErrorMessages', '.', 'DOESNT_ALREADY_EXIST', ')', ')', '{', 'return', 'tag_exist', ';', '}', 'if', '(', 'tag_description', '!=', 'null', '&&', '!', 'tag_description', '.', 'trim', '(', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '', '"', ',', '"', '', '', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '\\r', '"', ',', '"', '', '', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '\\t', '"', ',', '"', '', '', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '<', '"', ',', '"', '&#60;', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '>', '"', ',', '"', '&#62;', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', "'", '"', ',', '"', '&#39;', '"', ')', ';', '}', 'else', '{', 'return', 'OctopusErrorMessages', '.', 'DESCRIPTION_TEXT_EMPTY', ';', '}', 'if', '(', 'tag_text', '!=', 'null', '&&', '!', 'tag_text', '.', 'trim', '(', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '', '"', ',', '"', '', '', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '\\r', '"', ',', '"', '', '', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '\\t', '"', ',', '"', '', '', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '<', '"', ',', '"', '&#60;', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '>', '"', ',', '"', '&#62;', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', "'", '"', ',', '"', '&#39;', '"', ')', ';', '}', 'else', '{', 'return', 'OctopusErrorMessages', '.', 'TRANSLATION_TEXT_EMPTY', ';', '}', 'if', '(', 'tag_author', '==', 'null', '||', 'tag_author', '.', 'trim', '(', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'MAIN_PARAMETER_EMPTY', ';', '}', 'DBConnection', 'theConnection', '=', 'null', ';', 'try', '{', 'theConnection', '=', 'DBServiceManager', '.', 'allocateConnection', '(', ')', ';', 'theConnection', '.', 'setAutoCommit', '(', 'false', ')', ';', 'String', 'query', '=', '"', 'INSERT', 'INTO', 'tr_tag', '(tr_tag_id,tr_tag_applicationid,tr_tag_info,tr_tag_creationdate)', '', '"', ';', 'query', '+=', '"', 'VALUES', "(?,?,'", '"', '+', 'tag_description', '+', '"', "',getdate())", '"', ';', 'PreparedStatement', 'state', '=', 'theConnection', '.', 'prepareStatement', '(', 'query', ')', ';', 'state', '.', 'setString', '(', '1', ',', 'tag_id', ')', ';', 'state', '.', 'setString', '(', '2', ',', 'application_code', ')', ';', 'state', '.', 'executeUpdate', '(', ')', ';', 'String', 'query2', '=', '"', 'INSERT', 'INTO', 'tr_translation', '(tr_translation_trtagid,', 'tr_translation_language,', 'tr_translation_text,', 'tr_translation_version,', 'tr_translation_lud,', 'tr_translation_lun', ')', '', '"', ';', 'query2', '+=', '"', "VALUES(?,'", '"', '+', 'OctopusApplication', '.', 'MASTER_LANGUAGE', '+', '"', "','", '"', '+', 'tag_text', '+', '"', "',0,getdate(),?)", '"', ';', 'PreparedStatement', 'state2', '=', 'theConnection', '.', 'prepareStatement', '(', 'query2', ')', ';', 'state2', '.', 'setString', '(', '1', ',', 'tag_id', ')', ';', 'state2', '.', 'setString', '(', '2', ',', 'tag_author', ')', ';', 'state2', '.', 'executeUpdate', '(', ')', ';', 'theConnection', '.', 'commit', '(', ')', ';', 'so', '=', 'OctopusErrorMessages', '.', 'ACTION_DONE', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'try', '{', 'theConnection', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', '}', 'so', '=', 'OctopusErrorMessages', '.', 'ERROR_DATABASE', ';', '}', 'finally', '{', 'if', '(', 'theConnection', '!=', 'null', ')', '{', 'try', '{', 'theConnection', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', '}', 'theConnection', '.', 'release', '(', ')', ';', '}', '}', 'return', 'so', ';', '}']
Example 122 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'filtering', 'zgps...', '"', ')', ';', 'final', 'Config', 'config', '=', 'Gbl', '.', 'createConfig', '(', 'args', ')', ';', 'final', 'String', 'CONFIG_MODULE', '=', '"', 'GPSFilterZGPS', '"', ';', 'File', 'sourceFileSelectedStages', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'sourceFileSelectedStages', '"', ')', ')', ';', 'File', 'sourceFileZGPS', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'sourceFileZGPS', '"', ')', ')', ';', 'File', 'targetFile', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'targetFile', '"', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'reading', 'selected', 'stages...', '"', ')', ';', 'FilterZGPSSelectedStages', 'selectedStages', '=', 'new', 'FilterZGPSSelectedStages', '(', ')', ';', 'selectedStages', '.', 'createSelectedStages', '(', 'sourceFileSelectedStages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Done.', '', '"', '+', 'selectedStages', '.', 'getSelectedStages', '(', ')', '.', 'size', '(', ')', '+', '"', '', 'stages', 'were', 'stored', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'reading', 'and', 'writing', 'zgps...', '"', ')', ';', 'try', '{', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'new', 'FileInputStream', '(', 'sourceFileZGPS', ')', ')', ')', ';', 'BufferedWriter', 'out', '=', 'new', 'BufferedWriter', '(', 'new', 'FileWriter', '(', 'targetFile', ')', ')', ';', 'out', '.', 'write', '(', 'in', '.', 'readLine', '(', ')', ')', ';', 'out', '.', 'newLine', '(', ')', ';', 'String', 'lineFromInputFile', ';', 'while', '(', '(', 'lineFromInputFile', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', '[', ']', 'entries', '=', 'lineFromInputFile', '.', 'split', '(', '"', '\\t', '"', ')', ';', 'if', '(', 'selectedStages', '.', 'containsStage', '(', 'Integer', '.', 'parseInt', '(', 'entries', '[', '0', ']', ')', ',', 'Integer', '.', 'parseInt', '(', 'entries', '[', '1', ']', ')', ',', 'Integer', '.', 'parseInt', '(', 'entries', '[', '2', ']', ')', ')', ')', '{', 'out', '.', 'write', '(', 'lineFromInputFile', ')', ';', 'out', '.', 'newLine', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', '}', '}', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Could', 'not', 'find', 'source', 'file', 'for', 'selected', 'stages.', '"', ')', ';', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'IO', 'Exception', 'while', 'reading', 'or', 'writing', 'zgps.', '"', ')', ';', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Done.', '"', ')', ';', '}']
Example 123 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Test', '@', 'JUnitHttpServer', '(', 'port', '=', '10342', ',', 'https', '=', 'false', ',', 'webapps', '=', '{', '@', 'Webapp', '(', 'context', '=', '"', '/fmpm', '"', ',', 'path', '=', '"', 'src/test/resources/test-webapp', '"', ')', '}', ')', 'public', 'void', 'testTestServlet', '(', ')', 'throws', 'Exception', '{', 'TestServlet', '.', 'reset', '(', ')', ';', 'HttpClient', 'client', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'HttpEntity', 'entity', '=', 'new', 'StringEntity', '(', 'xml', ')', ';', 'HttpPost', 'method', '=', 'new', 'HttpPost', '(', '"', 'http://localhost:10342/fmpm/restful/NotificationMessageRelay', '"', ')', ';', 'method', '.', 'setEntity', '(', 'entity', ')', ';', 'HttpResponse', 'response', '=', 'client', '.', 'execute', '(', 'method', ')', ';', 'assertEquals', '(', '200', ',', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ')', ';', 'assertEquals', '(', 'xml', ',', 'TestServlet', '.', 'getPosted', '(', ')', ')', ';', '}']
Example 124 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'getRandomGUID', '(', 'boolean', 'secure', ')', '{', 'MessageDigest', 'md5', '=', 'null', ';', 'StringBuffer', 'sbValueBeforeMD5', '=', 'new', 'StringBuffer', '(', ')', ';', 'try', '{', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '', '"', '+', 'e', ')', ';', '}', 'try', '{', 'long', 'time', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'rand', '=', '0', ';', 'if', '(', 'secure', ')', '{', 'rand', '=', 'mySecureRand', '.', 'nextLong', '(', ')', ';', '}', 'else', '{', 'rand', '=', 'myRand', '.', 'nextLong', '(', ')', ';', '}', 'sbValueBeforeMD5', '.', 'append', '(', 's_id', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'time', ')', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'rand', ')', ')', ';', 'valueBeforeMD5', '=', 'sbValueBeforeMD5', '.', 'toString', '(', ')', ';', 'md5', '.', 'update', '(', 'valueBeforeMD5', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'array', '=', 'md5', '.', 'digest', '(', ')', ';', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'array', '.', 'length', ';', '++', 'j', ')', '{', 'int', 'b', '=', 'array', '[', 'j', ']', '&', '0xFF', ';', 'if', '(', 'b', '<', '0x10', ')', 'sb', '.', 'append', '(', "'0'", ')', ';', 'sb', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'b', ')', ')', ';', '}', 'valueAfterMD5', '=', 'sb', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '"', '+', 'e', ')', ';', '}', '}']
  >>  iter 1, ACC! out => app (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 2, ACC! app => init (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 3, ACC! init => at (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 4, ACC! at => can (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 5, ACC! can => about (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 6, ACC! about => ex (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 7, ACC! ex => option (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 8, ACC! option => inner (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 9, ACC! inner => ico (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 10, ACC! ico => gin (1 => 1, 0.99975 => 0.99975) a=1.000
Example 125 attack result: {'succ': False, 'tokens': '    private void getRandomGUID(boolean secure) {\n        MessageDigest md5 = null;\n        StringBuffer sbValueBeforeMD5 = new StringBuffer();\n        try {\n            md5 = MessageDigest.getInstance("MD5");\n        } catch (NoSuchAlgorithmException e) {\n            System.gin.println("Error: " + e);\n        }\n        try {\n            long time = System.currentTimeMillis();\n            long rand = 0;\n            if (secure) {\n                rand = mySecureRand.nextLong();\n            } else {\n                rand = myRand.nextLong();\n            }\n            sbValueBeforeMD5.append(s_id);\n            sbValueBeforeMD5.append(":");\n            sbValueBeforeMD5.append(Long.toString(time));\n            sbValueBeforeMD5.append(":");\n            sbValueBeforeMD5.append(Long.toString(rand));\n            valueBeforeMD5 = sbValueBeforeMD5.toString();\n            md5.update(valueBeforeMD5.getBytes());\n            byte[] array = md5.digest();\n            StringBuffer sb = new StringBuffer();\n            for (int j = 0; j < array.length; ++j) {\n                int b = array[j] & 0xFF;\n                if (b < 0x10) sb.append(\'0\');\n                sb.append(Integer.toHexString(b));\n            }\n            valueAfterMD5 = sb.toString();\n        } catch (Exception e) {\n            System.gin.println("Error:" + e);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 266, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 1.1350494e-09, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'out': 'gin'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 125 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 8.68 min
  curr succ rate = 0.0
Query times in this attack:  312
All Query times:  13944
raw_tokens: ['private', 'void', 'open', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'in', '!=', 'null', ')', 'return', ';', 'try', '{', 'con', '=', 'url', '.', 'openConnection', '(', ')', ';', 'in', '=', 'con', '.', 'getInputStream', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'if', '(', 'cached', '.', 'exists', '(', ')', ')', '{', 'LOG', '.', 'fine', '(', '"', 'Falling', 'back', 'to', 'cached', 'copy', 'of', 'wiki', 'file', '', '"', '+', 'url', ')', ';', 'in', '=', 'new', 'FileInputStream', '(', 'cached', ')', ';', 'con', '=', 'null', ';', 'return', ';', '}', 'throw', 'e', ';', '}', 'try', '{', 'tmp', '=', 'new', 'File', '(', 'cached', '.', 'getAbsolutePath', '(', ')', '+', '"', '.tmp', '"', ')', ';', 'tmp', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'tmp', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'LOG', '.', 'fine', '(', '"', "can't", 'write', 'cached', 'copy', 'of', 'wiki', 'file', '', '"', '+', 'url', ')', ';', '}', '}']
Example 126 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'execute', '(', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'res', ',', 'HttpServlet', 'parent', ')', 'throws', 'Exception', '{', 'String', 'path', '=', 'req', '.', 'getParameter', '(', '"', 'path', '"', ')', ';', 'path', '=', 'URLDecoder', '.', 'decode', '(', 'path', ',', '"', 'UTF-8', '"', ')', ';', 'String', 'name', '=', 'req', '.', 'getParameter', '(', '"', 'name', '"', ')', ';', 'name', '=', 'new', 'String', '(', 'name', '.', 'getBytes', '(', ')', ',', '"', 'UTF-8', '"', ')', ';', 'String', 'contentType', '=', 'req', '.', 'getParameter', '(', '"', 'contentType', '"', ')', ';', 'if', '(', 'path', '==', 'null', ')', '{', 'NullPointerException', 'e', '=', 'new', 'NullPointerException', '(', '"', 'The', 'path', 'attribute', 'cannot', 'be', 'retrieved.', '"', ')', ';', 'LOG', '.', 'error', '(', 'e', ')', ';', 'throw', 'e', ';', '}', 'URL', 'url', '=', 'new', 'URL', '(', 'path', ')', ';', 'InputStream', 'inStream', '=', 'null', ';', 'try', '{', 'inStream', '=', 'URLUtils', '.', 'getFileContent', '(', 'url', ',', 'req', '.', 'getSession', '(', ')', '.', 'getId', '(', ')', ')', ';', 'res', '.', 'setContentType', '(', 'contentType', ')', ';', 'res', '.', 'addHeader', '(', '"', 'Content-Disposition', '"', ',', '"', 'attachment;filename=', '\\"', '"', '+', 'name', '+', '"', '\\"', '"', ')', ';', 'ServletOutputStream', 'out', '=', 'res', '.', 'getOutputStream', '(', ')', ';', 'IOUtils', '.', 'copy', '(', 'inStream', ',', 'out', ')', ';', 'res', '.', 'flushBuffer', '(', ')', ';', '}', 'finally', '{', 'if', '(', 'inStream', '!=', 'null', ')', '{', 'inStream', '.', 'close', '(', ')', ';', '}', '}', '}']
  >>  iter 1, ACC! out => plain (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! plain => f (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! url => server (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! server => uu (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! f => io (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! io => plain (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! plain => inner (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! inner => inc (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! uu => URL (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! URL => server (1 => 1, 0.99988 => 0.99988) a=1.001
Example 127 attack result: {'succ': False, 'tokens': '    public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception {\n        String path = req.getParameter("path");\n        path = URLDecoder.decode(path, "UTF-8");\n        String name = req.getParameter("name");\n        name = new String(name.getBytes(), "UTF-8");\n        String contentType = req.getParameter("contentType");\n        if (path == null) {\n            NullPointerException e = new NullPointerException("The path attribute cannot be retrieved.");\n            LOG.error(e);\n            throw e;\n        }\n        server server = new server(path);\n        InputStream inStream = null;\n        try {\n            inStream = URLUtils.getFileContent(server, req.getSession().getId());\n            res.setContentType(contentType);\n            res.addHeader("Content-Disposition", "attachment;filename=\\"" + name + "\\"");\n            ServletOutputStream inc = res.getOutputStream();\n            IOUtils.copy(inStream, inc);\n            res.flushBuffer();\n        } finally {\n            if (inStream != null) {\n                inStream.close();\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 215, 'new_pred': 1, 'is_success': -1, 'old_uid': 'url', 'score_info': -9.712676e-08, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'out': 'inc', 'url': 'server'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 127 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 8.84 min
  curr succ rate = 0.0
Query times in this attack:  287
All Query times:  14231
raw_tokens: ['private', 'static', 'void', 'generateSQLUpgradeFile', '(', 'String', 'milestoneDefFileName', ',', 'String', 'sqlDirectoryName', ',', 'String', 'fromMilestone', ',', 'String', 'destMilestone', ',', 'String', 'destFileName', ')', 'throws', 'Exception', '{', 'File', 'milestoneDefFile', '=', 'new', 'File', '(', 'milestoneDefFileName', ')', ';', 'if', '(', '!', 'milestoneDefFile', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'does', 'not', 'exists', '"', ')', ';', '}', 'if', '(', '!', 'milestoneDefFile', '.', 'isFile', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'not', 'a', 'file', '"', ')', ';', '}', 'if', '(', '!', 'milestoneDefFile', '.', 'canRead', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'not', 'readable', '"', ')', ';', '}', 'File', 'sqlDirectory', '=', 'new', 'File', '(', 'sqlDirectoryName', ')', ';', 'if', '(', '!', 'sqlDirectory', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'does', 'not', 'exists', '"', ')', ';', '}', 'if', '(', '!', 'sqlDirectory', '.', 'isDirectory', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'not', 'a', 'directory', '"', ')', ';', '}', 'if', '(', '!', 'sqlDirectory', '.', 'canRead', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'not', 'readable', '"', ')', ';', '}', 'File', 'destFile', '=', 'new', 'File', '(', 'destFileName', ')', ';', 'if', '(', 'destFile', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'write', 'to', '[', '"', '+', 'destFileName', '+', '"', ']', ':', 'already', 'exists', '"', ')', ';', '}', 'destFile', '.', 'createNewFile', '(', ')', ';', 'SqlUpgradeXmlParser', 'parser', '=', 'SqlUpgradeXmlParser', '.', 'newParser', '(', ')', ';', 'FileInputStream', 'milestoneDefFIS', '=', 'null', ';', 'try', '{', 'milestoneDefFIS', '=', 'new', 'FileInputStream', '(', 'milestoneDefFile', ')', ';', 'parser', '.', 'parse', '(', 'milestoneDefFIS', ')', ';', '}', 'catch', '(', 'XMLParseException', 'e', ')', '{', 'printXmlError', '(', 'e', ',', 'milestoneDefFileName', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'milestoneDefFIS', '!=', 'null', ')', 'milestoneDefFIS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '_logger', '.', 'warn', '(', '"', 'Exception', 'caught', 'when', 'closing', 'inputstream', '', '"', ',', 'e', ')', ';', '}', '}', 'int', 'fromMilestoneIdx', '=', 'parser', '.', 'getMilestoneIndex', '(', 'fromMilestone', ')', ';', 'int', 'toMilestoneIdx', '=', 'parser', '.', 'getMilestoneIndex', '(', 'destMilestone', ')', ';', 'if', '(', 'fromMilestoneIdx', '<', '0', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'from', 'milestone', '[', '"', '+', 'fromMilestone', '+', '"', ']', ':', 'does', 'not', 'exist', '.', '(Exisiting', 'milestones', '', '"', '+', 'parser', '.', 'listMilestones', '(', ')', '+', '"', ')', '"', ')', ';', '}', 'if', '(', 'toMilestoneIdx', '<', '0', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'to', 'milestone', '[', '"', '+', 'destMilestone', '+', '"', ']', ':', 'does', 'not', 'exist', '.', '(Exisiting', 'milestones', '', '"', '+', 'parser', '.', 'listMilestones', '(', ')', '+', '"', ')', '"', ')', ';', '}', 'if', '(', 'fromMilestoneIdx', '==', 'toMilestoneIdx', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'to', 'the', 'same', 'milestone', '"', ')', ';', '}', 'List', '<', 'String', '>', 'files', '=', 'parser', '.', 'getFilesForMilestones', '(', 'fromMilestoneIdx', ',', 'toMilestoneIdx', ')', ';', 'List', '<', 'String', '>', 'views', '=', 'parser', '.', 'getViewsForMilestones', '(', 'fromMilestoneIdx', ',', 'toMilestoneIdx', ')', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fos', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', ';', 'for', '(', 'Iterator', '<', 'String', '>', 'it', '=', 'files', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'appendFileToOutputStream', '(', 'fos', ',', 'sqlDirectory', ',', 'it', '.', 'next', '(', ')', ')', ';', '}', 'for', '(', 'Iterator', '<', 'String', '>', 'it', '=', 'views', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'appendFileToOutputStream', '(', 'fos', ',', 'sqlDirectory', ',', 'it', '.', 'next', '(', ')', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'fos', '.', 'close', '(', ')', ';', 'destFile', '.', 'delete', '(', ')', ';', 'throw', 'e', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fos', '!=', 'null', ')', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '_logger', '.', 'warn', '(', '"', 'Exception', 'caught', 'when', 'closing', 'outputstream', '', '"', ',', 'e', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'An', 'SQL', 'update', 'file', 'has', 'been', 'generated', 'to', '', '"', '+', 'destFileName', '+', '"', '.', '"', ')', ';', '}']
  >>  iter 1, ACC! fos => fOS (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! fOS => dfoes (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! dfoes => xoos (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! xoos => bis (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! bis => fops (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! fops => fOS (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! fOS => foos (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! foos => xoes (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! xoes => afos (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! afos => foes (1 => 1, 0.99988 => 0.99988) a=1.000
Example 128 attack result: {'succ': False, 'tokens': '    private static void generateSQLUpgradeFile(String milestoneDefFileName, String sqlDirectoryName, String fromMilestone, String destMilestone, String destFileName) throws Exception {\n        File milestoneDefFile = new File(milestoneDefFileName);\n        if (!milestoneDefFile.exists()) {\n            throw new IllegalArgumentException("Cannot read [" + milestoneDefFileName + "] : does not exists");\n        }\n        if (!milestoneDefFile.isFile()) {\n            throw new IllegalArgumentException("Cannot read [" + milestoneDefFileName + "] : not a file");\n        }\n        if (!milestoneDefFile.canRead()) {\n            throw new IllegalArgumentException("Cannot read [" + milestoneDefFileName + "] : not readable");\n        }\n        File sqlDirectory = new File(sqlDirectoryName);\n        if (!sqlDirectory.exists()) {\n            throw new IllegalArgumentException("Cannot read [" + sqlDirectoryName + "] : does not exists");\n        }\n        if (!sqlDirectory.isDirectory()) {\n            throw new IllegalArgumentException("Cannot read [" + sqlDirectoryName + "] : not a directory");\n        }\n        if (!sqlDirectory.canRead()) {\n            throw new IllegalArgumentException("Cannot read [" + sqlDirectoryName + "] : not readable");\n        }\n        File destFile = new File(destFileName);\n        if (destFile.exists()) {\n            throw new IllegalArgumentException("Cannot write to [" + destFileName + "] : already exists");\n        }\n        destFile.createNewFile();\n        SqlUpgradeXmlParser parser = SqlUpgradeXmlParser.newParser();\n        FileInputStream milestoneDefFIS = null;\n        try {\n            milestoneDefFIS = new FileInputStream(milestoneDefFile);\n            parser.parse(milestoneDefFIS);\n        } catch (XMLParseException e) {\n            printXmlError(e, milestoneDefFileName);\n        } finally {\n            try {\n                if (milestoneDefFIS != null) milestoneDefFIS.close();\n            } catch (Exception e) {\n                _logger.warn("Exception caught when closing inputstream ", e);\n            }\n        }\n        int fromMilestoneIdx = parser.getMilestoneIndex(fromMilestone);\n        int toMilestoneIdx = parser.getMilestoneIndex(destMilestone);\n        if (fromMilestoneIdx < 0) {\n            throw new IllegalArgumentException("Cannot upgrade from milestone [" + fromMilestone + "] : does not exist . (Exisiting milestones " + parser.listMilestones() + ")");\n        }\n        if (toMilestoneIdx < 0) {\n            throw new IllegalArgumentException("Cannot upgrade to milestone [" + destMilestone + "] : does not exist . (Exisiting milestones " + parser.listMilestones() + ")");\n        }\n        if (fromMilestoneIdx == toMilestoneIdx) {\n            throw new IllegalArgumentException("Cannot upgrade to the same milestone");\n        }\n        List<String> files = parser.getFilesForMilestones(fromMilestoneIdx, toMilestoneIdx);\n        List<String> views = parser.getViewsForMilestones(fromMilestoneIdx, toMilestoneIdx);\n        FileOutputStream foes = null;\n        try {\n            foes = new FileOutputStream(destFile);\n            for (Iterator<String> it = files.iterator(); it.hasNext(); ) {\n                appendFileToOutputStream(foes, sqlDirectory, it.next());\n            }\n            for (Iterator<String> it = views.iterator(); it.hasNext(); ) {\n                appendFileToOutputStream(foes, sqlDirectory, it.next());\n            }\n        } catch (Exception e) {\n            foes.close();\n            destFile.delete();\n            throw e;\n        } finally {\n            try {\n                if (foes != null) foes.close();\n            } catch (Exception e) {\n                _logger.warn("Exception caught when closing outputstream ", e);\n            }\n        }\n        System.out.println("An SQL update file has been generated to " + destFileName + ".");\n    }\n', 'raw_tokens': None, 'prog_length': 616, 'new_pred': 1, 'is_success': -1, 'old_uid': 'fos', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 7, 'replace_info': {'fos': 'foes'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 128 FAILED.
  time cost = 0.17 min
  ALL EXAMPLE time cost = 9.02 min
  curr succ rate = 0.0
Query times in this attack:  243
All Query times:  14474
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'from', ',', 'File', 'to', ')', 'throws', 'IOException', '{', 'FileInputStream', 'in', '=', 'null', ';', 'FileOutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'FileInputStream', '(', 'from', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'to', ')', ';', 'byte', '[', ']', 'bytes', '=', 'new', 'byte', '[', '1024', '*', '4', ']', ';', 'int', 'len', '=', '0', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'bytes', ')', ')', '>=', '0', ')', 'out', '.', 'write', '(', 'bytes', ',', '0', ',', 'len', ')', ';', '}', 'finally', '{', 'Streams', '.', 'closeQuietly', '(', 'in', ')', ';', 'Streams', '.', 'closeQuietly', '(', 'out', ')', ';', '}', '}']
Example 129 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'AudioInputStream', 'getAudioInputStream', '(', 'URL', 'url', ')', 'throws', 'UnsupportedAudioFileException', ',', 'IOException', '{', 'if', '(', 'TDebug', '.', 'TraceAudioFileReader', ')', '{', 'TDebug', '.', 'out', '(', '"', 'TAudioFileReader.getAudioInputStream(URL):', 'begin', '"', ')', ';', '}', 'long', 'lFileLengthInBytes', '=', 'AudioSystem', '.', 'NOT_SPECIFIED', ';', 'InputStream', 'inputStream', '=', 'url', '.', 'openStream', '(', ')', ';', 'AudioInputStream', 'audioInputStream', '=', 'null', ';', 'try', '{', 'audioInputStream', '=', 'getAudioInputStream', '(', 'inputStream', ',', 'lFileLengthInBytes', ')', ';', '}', 'catch', '(', 'UnsupportedAudioFileException', 'e', ')', '{', 'inputStream', '.', 'close', '(', ')', ';', 'throw', 'e', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'inputStream', '.', 'close', '(', ')', ';', 'throw', 'e', ';', '}', 'if', '(', 'TDebug', '.', 'TraceAudioFileReader', ')', '{', 'TDebug', '.', 'out', '(', '"', 'TAudioFileReader.getAudioInputStream(URL):', 'end', '"', ')', ';', '}', 'return', 'audioInputStream', ';', '}']
Example 130 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'Map', '<', 'String', ',', 'String', '>', 'getMetadata', '(', 'WebFileObject', 'fo', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'fo', '.', 'wfs', '.', 'getRootURL', '(', ')', '.', 'getProtocol', '(', ')', '.', 'equals', '(', '"', 'ftp', '"', ')', ')', '{', 'String', 'realName', '=', 'fo', '.', 'pathname', ';', 'boolean', 'exists', ';', 'URL', 'ur', '=', 'new', 'URL', '(', 'fo', '.', 'wfs', '.', 'getRootURL', '(', ')', ',', 'realName', ')', ';', 'HttpURLConnection', 'connect', '=', '(', 'HttpURLConnection', ')', 'ur', '.', 'openConnection', '(', ')', ';', 'connect', '.', 'setRequestMethod', '(', '"', 'HEAD', '"', ')', ';', 'HttpURLConnection', '.', 'setFollowRedirects', '(', 'false', ')', ';', 'connect', '.', 'connect', '(', ')', ';', 'HttpURLConnection', '.', 'setFollowRedirects', '(', 'true', ')', ';', 'if', '(', 'connect', '.', 'getResponseCode', '(', ')', '==', '303', ')', '{', 'String', 'surl', '=', 'connect', '.', 'getHeaderField', '(', '"', 'Location', '"', ')', ';', 'if', '(', 'surl', '.', 'startsWith', '(', 'fo', '.', 'wfs', '.', 'root', '.', 'toString', '(', ')', ')', ')', '{', 'realName', '=', 'surl', '.', 'substring', '(', 'fo', '.', 'wfs', '.', 'root', '.', 'toString', '(', ')', '.', 'length', '(', ')', ')', ';', '}', 'connect', '.', 'disconnect', '(', ')', ';', 'ur', '=', 'new', 'URL', '(', 'fo', '.', 'wfs', '.', 'getRootURL', '(', ')', ',', 'realName', ')', ';', 'connect', '=', '(', 'HttpURLConnection', ')', 'ur', '.', 'openConnection', '(', ')', ';', 'connect', '.', 'setRequestMethod', '(', '"', 'HEAD', '"', ')', ';', 'connect', '.', 'connect', '(', ')', ';', '}', 'exists', '=', 'connect', '.', 'getResponseCode', '(', ')', '!=', '404', ';', 'Map', '<', 'String', ',', 'String', '>', 'result', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'Map', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'fields', '=', 'connect', '.', 'getHeaderFields', '(', ')', ';', 'for', '(', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'e', ':', 'fields', '.', 'entrySet', '(', ')', ')', '{', 'String', 'key', '=', 'e', '.', 'getKey', '(', ')', ';', 'List', '<', 'String', '>', 'value', '=', 'e', '.', 'getValue', '(', ')', ';', 'result', '.', 'put', '(', 'key', ',', 'value', '.', 'get', '(', '0', ')', ')', ';', '}', 'result', '.', 'put', '(', 'META_EXIST', ',', 'String', '.', 'valueOf', '(', 'exists', ')', ')', ';', 'connect', '.', 'disconnect', '(', ')', ';', 'return', 'result', ';', '}', 'else', '{', 'Map', '<', 'String', ',', 'String', '>', 'result', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'fo', '.', 'wfs', '.', 'getRootURL', '(', ')', ',', 'fo', '.', 'pathname', ')', ';', 'URLConnection', 'urlc', '=', 'url', '.', 'openConnection', '(', ')', ';', 'try', '{', 'urlc', '.', 'connect', '(', ')', ';', 'urlc', '.', 'getInputStream', '(', ')', '.', 'close', '(', ')', ';', 'result', '.', 'put', '(', 'META_EXIST', ',', '"', 'true', '"', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'result', '.', 'put', '(', 'META_EXIST', ',', '"', 'false', '"', ')', ';', '}', 'return', 'result', ';', '}', '}']
Example 131 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'copyFile', '(', 'File', 'in', ',', 'File', 'out', ')', 'throws', 'Exception', '{', 'FileChannel', 'sourceChannel', '=', 'new', 'FileInputStream', '(', 'in', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'destinationChannel', '=', 'new', 'FileOutputStream', '(', 'out', ')', '.', 'getChannel', '(', ')', ';', 'sourceChannel', '.', 'transferTo', '(', '0', ',', 'sourceChannel', '.', 'size', '(', ')', ',', 'destinationChannel', ')', ';', 'sourceChannel', '.', 'close', '(', ')', ';', 'destinationChannel', '.', 'close', '(', ')', ';', '}']
Example 132 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'loadURL', '(', 'URL', 'url', ')', '{', 'String', 'retVal', '=', '"', '"', ';', 'try', '{', 'InputStream', 'inputStream', '=', 'url', '.', 'openStream', '(', ')', ';', 'BufferedReader', 'bufferedReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'inputStream', ')', ')', ';', 'String', 'line', '=', 'bufferedReader', '.', 'readLine', '(', ')', ';', 'retVal', '+=', 'line', '+', '"', '', '"', ';', 'while', '(', 'line', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'line', ')', ';', 'line', '=', 'bufferedReader', '.', 'readLine', '(', ')', ';', 'if', '(', 'line', '!=', 'null', ')', 'retVal', '+=', 'line', '+', '"', '', '"', ';', '}', 'bufferedReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'return', 'retVal', ';', '}']
  >>  iter 1, ACC! url => this (0 => 0, 0.99955 => 0.99955) a=1.050
  >>  iter 2, ACC! this => external (0 => 0, 0.99955 => 0.99957) a=1.056
  >>  iter 3, ACC! external => jar (0 => 0, 0.99957 => 0.99957) a=1.095
  >>  iter 4, ACC! jar => URL (0 => 0, 0.99957 => 0.99956) a=1.095
  >>  iter 5, ACC! URL => web (0 => 0, 0.99956 => 0.99956) a=1.068
  >>  iter 6, ACC! web => element (0 => 0, 0.99956 => 0.99958) a=1.088
  >>  iter 7, ACC! element => rl (0 => 0, 0.99958 => 0.99955) a=1.138
  >>  iter 8, ACC! rl => web (0 => 0, 0.99955 => 0.99956) a=1.029
  >>  iter 9, ACC! web => image (0 => 0, 0.99956 => 0.99957) a=1.092
  >>  iter 10, ACC! image => job (0 => 0, 0.99957 => 0.99959) a=1.114
Example 134 attack result: {'succ': False, 'tokens': '    public String loadURL(job job) {\n        String retVal = "";\n        try {\n            InputStream inputStream = job.openStream();\n            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n            String line = bufferedReader.readLine();\n            retVal += line + "\n";\n            while (line != null) {\n                System.out.println(line);\n                line = bufferedReader.readLine();\n                if (line != null) retVal += line + "\n";\n            }\n            bufferedReader.close();\n        } catch (MalformedURLException e) {\n            e.printStackTrace();\n            retVal = e.getMessage();\n        } catch (IOException e) {\n            e.printStackTrace();\n            retVal = e.getMessage();\n        } catch (Exception e) {\n            e.printStackTrace();\n            retVal = e.getMessage();\n        }\n        return retVal;\n    }\n', 'raw_tokens': None, 'prog_length': 168, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -1.5616417e-05, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'job'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 134 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 9.24 min
  curr succ rate = 0.0
Query times in this attack:  302
All Query times:  14776
raw_tokens: ['private', 'String', 'sendQuery', '(', 'String', 'query', ')', '{', 'File', 'xmlServerResponse', '=', 'null', ';', 'String', 'serverResponse', '=', '"', '"', ';', 'try', '{', 'long', 'start', '=', 'Calendar', '.', 'getInstance', '(', ')', '.', 'getTimeInMillis', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '++++++++++++++++++++++++++++++++++++++++++++++++++++', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', '', 'consulta', 'de', 'busqueda', '->', '', '"', '+', 'query', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'query', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', '=', '"', '"', ';', 'while', '(', '(', 'line', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'serverResponse', '+=', 'line', ';', '}', 'long', 'ahora', '=', '(', 'Calendar', '.', 'getInstance', '(', ')', '.', 'getTimeInMillis', '(', ')', '-', 'start', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'Tiempo', 'transcurrido', 'en', 'la', 'consulta', '(en', 'milesimas)', '->', '', '"', '+', 'ahora', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '++++++++++++++++++++++++++++++++++++++++++++++++++++', '"', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'serverResponse', ';', '}']
  >>  iter 1, ACC! line => buffer (1 => 1, 0.97877 => 0.97847) a=1.025
  >>  iter 2, ACC! url => view (1 => 1, 0.97847 => 0.97873) a=1.003
  >>  iter 3, ACC! view => server (1 => 1, 0.97873 => 0.97866) a=1.020
  >>  iter 4, ACC! buffer => lc (1 => 1, 0.97866 => 0.97863) a=1.009
  >>  iter 5, ACC! server => address (1 => 1, 0.97863 => 0.97899) a=1.020
  >>  iter 6, ACC! lc => cl (1 => 1, 0.97899 => 0.97897) a=1.004
  >>  iter 7, ACC! cl => view (1 => 1, 0.97897 => 0.97889) a=1.008
  >>  iter 8, ACC! view => error (1 => 1, 0.97889 => 0.97894) a=1.008
  >>  iter 9, ACC! address => browser (1 => 1, 0.97894 => 0.97857) a=1.039
  >>  iter 10, ACC! browser => URL (1 => 1, 0.97857 => 0.97822) a=1.022
Example 135 attack result: {'succ': False, 'tokens': '    private String sendQuery(String query) {\n        File xmlServerResponse = null;\n        String serverResponse = "";\n        try {\n            long start = Calendar.getInstance().getTimeInMillis();\n            System.out.println("\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++");\n            System.out.println("    consulta de busqueda -> " + query);\n            URL URL = new URL(query);\n            BufferedReader in = new BufferedReader(new InputStreamReader(URL.openStream()));\n            String error = "";\n            while ((error = in.readLine()) != null) {\n                serverResponse += error;\n            }\n            long ahora = (Calendar.getInstance().getTimeInMillis() - start);\n            System.out.println(" Tiempo transcurrido en la consulta (en milesimas) -> " + ahora);\n            System.out.println("++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return serverResponse;\n    }\n', 'raw_tokens': None, 'prog_length': 169, 'new_pred': 1, 'is_success': -1, 'old_uid': 'url', 'score_info': -0.00034845248, 'nb_changed_var': 2, 'nb_changed_pos': 5, 'replace_info': {'line': 'error', 'url': 'URL'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 135 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 9.38 min
  curr succ rate = 0.0
Query times in this attack:  293
All Query times:  15069
raw_tokens: ['public', 'boolean', 'copyStoredTileTo', '(', 'File', 'targetFileName', ',', 'int', 'x', ',', 'int', 'y', ',', 'int', 'zoom', ',', 'MapSource', 'tileSource', ')', 'throws', 'IOException', '{', 'File', 'sourceFile', '=', 'getTileFile', '(', 'x', ',', 'y', ',', 'zoom', ',', 'tileSource', ')', ';', 'if', '(', '!', 'sourceFile', '.', 'exists', '(', ')', ')', 'return', 'false', ';', 'FileInputStream', 'fis', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'long', 'sourceBytes', '=', '0', ';', 'long', 'writtenBytes', '=', '0', ';', 'try', '{', 'fis', '=', 'new', 'FileInputStream', '(', 'sourceFile', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'targetFileName', ')', ';', 'FileChannel', 'source', '=', 'fis', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'destination', '=', 'fos', '.', 'getChannel', '(', ')', ';', 'sourceBytes', '=', 'source', '.', 'size', '(', ')', ';', 'writtenBytes', '=', 'destination', '.', 'transferFrom', '(', 'source', ',', '0', ',', 'sourceBytes', ')', ';', '}', 'finally', '{', 'Utilities', '.', 'closeStream', '(', 'fis', ')', ';', 'Utilities', '.', 'closeStream', '(', 'fos', ')', ';', '}', 'if', '(', 'writtenBytes', '!=', 'sourceBytes', ')', 'throw', 'new', 'IOException', '(', '"', 'Target', "file's", 'size', 'is', 'not', 'equal', 'to', 'the', 'source', "file's", 'size!', '"', ')', ';', 'return', 'true', ';', '}']
Example 136 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'URLConnection', 'getServletConnection', '(', 'String', 'strServlet_name', ')', 'throws', 'MalformedURLException', ',', 'IOException', '{', 'URL', 'urlServlet', '=', 'null', ';', 'if', '(', 'strServlet_name', '==', 'null', ')', '{', 'urlServlet', '=', 'm_Url', ';', '}', 'else', '{', 'urlServlet', '=', 'new', 'URL', '(', 'm_Url', ',', 'strServlet_name', ')', ';', '}', 'URLConnection', 'connection', '=', 'urlServlet', '.', 'openConnection', '(', ')', ';', 'connection', '.', 'setConnectTimeout', '(', '180000', ')', ';', 'connection', '.', 'setDoInput', '(', 'true', ')', ';', 'connection', '.', 'setDoOutput', '(', 'true', ')', ';', 'connection', '.', 'setUseCaches', '(', 'false', ')', ';', 'connection', '.', 'setRequestProperty', '(', '"', 'Content-Type', '"', ',', '"', 'application/x-java-serialized-object', '"', ')', ';', 'if', '(', 'm_strJsessionid', '!=', 'null', ')', '{', 'connection', '.', 'setRequestProperty', '(', '"', 'Cookie', '"', ',', 'm_strJsessionid', ')', ';', '}', 'return', 'connection', ';', '}']
Example 137 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copy', '(', 'File', 'from', ',', 'File', 'to', ')', 'throws', 'FileNotFoundException', ',', 'IOException', '{', 'FileReader', 'in', ';', 'in', '=', 'new', 'FileReader', '(', 'from', ')', ';', 'FileWriter', 'out', '=', 'new', 'FileWriter', '(', 'to', ')', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', 'out', '.', 'write', '(', 'c', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
  >>  iter 1, ACC! in => pin (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! out => copy (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, SUCC! pin => url (1 => 0, 0.99988 => 0.00002) a=1.000
Example 138 attack result: {'succ': True, 'tokens': '    private void copy(File from, File to) throws FileNotFoundException, IOException {\n        FileReader url;\n        url = new FileReader(from);\n        FileWriter copy = new FileWriter(to);\n        int c;\n        while ((c = url.read()) != -1) copy.write(c);\n        url.close();\n        copy.close();\n    }\n', 'raw_tokens': ['private', 'void', 'copy', '(', 'File', 'from', ',', 'File', 'to', ')', 'throws', 'FileNotFoundException', ',', 'IOException', '{', 'FileReader', 'url', ';', 'url', '=', 'new', 'FileReader', '(', 'from', ')', ';', 'FileWriter', 'copy', '=', 'new', 'FileWriter', '(', 'to', ')', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'url', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', 'copy', '.', 'write', '(', 'c', ')', ';', 'url', '.', 'close', '(', ')', ';', 'copy', '.', 'close', '(', ')', ';', '}'], 'prog_length': 73, 'new_pred': 0, 'is_success': 1, 'old_uid': 'in', 'score_info': -0.99986064, 'nb_changed_var': 2, 'nb_changed_pos': 7, 'replace_info': {'in': 'url', 'out': 'copy'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 138 SUCCEEDED!
  time cost = 0.05 min
  ALL EXAMPLE time cost = 9.46 min
  curr succ rate = 0.0196078431372549
Query times in this attack:  98
All Query times:  15167
raw_tokens: ['public', 'void', 'CopyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'Exception', '{', 'FileInputStream', 'fis', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fis', '=', 'new', 'FileInputStream', '(', 'source', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'destination', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'fis', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fis', '!=', 'null', ')', '{', 'fis', '.', 'close', '(', ')', ';', '}', 'if', '(', 'fos', '!=', 'null', ')', '{', 'fos', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
  >>  iter 1, ACC! source => reader (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! reader => in (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! in => config (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! config => comp (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! comp => exec (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 6, ACC! exec => object (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 7, ACC! object => proxy (1 => 1, 0.99988 => 0.99988) a=1.003
  >>  iter 8, ACC! proxy => cp (1 => 1, 0.99988 => 0.99988) a=1.003
  >>  iter 9, ACC! cp => status (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 10, ACC! status => project (1 => 1, 0.99988 => 0.99988) a=1.003
Example 139 attack result: {'succ': False, 'tokens': '    public void CopyFile(File project, File destination) throws Exception {\n        FileInputStream fis = null;\n        FileOutputStream fos = null;\n        try {\n            fis = new FileInputStream(project);\n            fos = new FileOutputStream(destination);\n            byte[] buffer = new byte[4096];\n            int read;\n            while ((read = fis.read(buffer)) != -1) {\n                fos.write(buffer, 0, read);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (fis != null) {\n                    fis.close();\n                }\n                if (fos != null) {\n                    fos.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 146, 'new_pred': 1, 'is_success': -1, 'old_uid': 'source', 'score_info': -7.485505e-08, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'source': 'project'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 139 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 9.61 min
  curr succ rate = 0.019230769230769232
Query times in this attack:  305
All Query times:  15472
raw_tokens: ['public', 'void', 'actionPerformed', '(', 'ActionEvent', 'e', ')', '{', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', '"', 'http://mailsomething.sf.net/helppages.xml', '"', ')', ';', 'try', '{', 'File', 'file', '=', 'File', '.', 'createTempFile', '(', '"', 'temp', '"', ',', '"', 'xml', '"', ')', ';', 'InputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'url', '.', 'openStream', '(', ')', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'n', ';', 'while', '(', '(', 'n', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'module', '.', 'merge', '(', 'file', ')', ';', '}', 'catch', '(', 'IOException', 'f', ')', '{', '}', '}', 'catch', '(', 'MalformedURLException', 'f', ')', '{', '}', '}']
Example 140 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'InputStream', 'getResourceAsStream', '(', 'String', 'resName', ',', 'Class', '<', '?', '>', 'clazz', ')', '{', 'URL', 'url', '=', 'getResource', '(', 'resName', ',', 'clazz', ')', ';', 'try', '{', 'return', '(', 'url', '!=', 'null', ')', '?', 'url', '.', 'openStream', '(', ')', ':', 'null', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'return', 'null', ';', '}', '}']
Example 141 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'IOException', '{', 'FileChannel', 'in', '=', 'null', ';', 'FileChannel', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'FileInputStream', '(', 'source', ')', '.', 'getChannel', '(', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'destination', ')', '.', 'getChannel', '(', ')', ';', 'long', 'size', '=', 'in', '.', 'size', '(', ')', ';', 'MappedByteBuffer', 'buffer', '=', 'in', '.', 'map', '(', 'FileChannel', '.', 'MapMode', '.', 'READ_ONLY', ',', '0', ',', 'size', ')', ';', 'out', '.', 'write', '(', 'buffer', ')', ';', '}', 'finally', '{', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', 'if', '(', 'out', '!=', 'null', ')', '{', 'out', '.', 'close', '(', ')', ';', '}', '}', '}']
  >>  iter 1, ACC! in => m (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 2, ACC! m => as (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 3, ACC! as => IN (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 4, ACC! IN => nin (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 5, ACC! nin => file (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 6, ACC! file => inc (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 7, ACC! inc => init (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 8, ACC! init => ac (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 9, ACC! ac => reader (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 10, ACC! reader => resource (0 => 0, 0.99997 => 0.99997) a=1.004
Example 142 attack result: {'succ': False, 'tokens': '    public static void copyFile(File source, File destination) throws IOException {\n        FileChannel resource = null;\n        FileChannel out = null;\n        try {\n            resource = new FileInputStream(source).getChannel();\n            out = new FileOutputStream(destination).getChannel();\n            long size = resource.size();\n            MappedByteBuffer buffer = resource.map(FileChannel.MapMode.READ_ONLY, 0, size);\n            out.write(buffer);\n        } finally {\n            if (resource != null) {\n                resource.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 117, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 6, 'replace_info': {'in': 'resource'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 142 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 9.77 min
  curr succ rate = 0.018867924528301886
Query times in this attack:  291
All Query times:  15763
raw_tokens: ['private', 'static', 'void', 'readAndRewrite', '(', 'File', 'inFile', ',', 'File', 'outFile', ')', 'throws', 'IOException', '{', 'ImageInputStream', 'iis', '=', 'ImageIO', '.', 'createImageInputStream', '(', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'inFile', ')', ')', ')', ';', 'DcmParser', 'dcmParser', '=', 'DcmParserFactory', '.', 'getInstance', '(', ')', '.', 'newDcmParser', '(', 'iis', ')', ';', 'Dataset', 'ds', '=', 'DcmObjectFactory', '.', 'getInstance', '(', ')', '.', 'newDataset', '(', ')', ';', 'dcmParser', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'dcmParser', '.', 'parseDcmFile', '(', 'null', ',', 'Tags', '.', 'PixelData', ')', ';', 'PixelDataReader', 'pdReader', '=', 'pdFact', '.', 'newReader', '(', 'ds', ',', 'iis', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'reading', '', '"', '+', 'inFile', '+', '"', '...', '"', ')', ';', 'pdReader', '.', 'readPixelData', '(', 'false', ')', ';', 'ImageOutputStream', 'out', '=', 'ImageIO', '.', 'createImageOutputStream', '(', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outFile', ')', ')', ')', ';', 'DcmEncodeParam', 'dcmEncParam', '=', 'DcmEncodeParam', '.', 'IVR_LE', ';', 'ds', '.', 'writeDataset', '(', 'out', ',', 'dcmEncParam', ')', ';', 'ds', '.', 'writeHeader', '(', 'out', ',', 'dcmEncParam', ',', 'Tags', '.', 'PixelData', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ',', 'dcmParser', '.', 'getReadLength', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'writing', '', '"', '+', 'outFile', '+', '"', '...', '"', ')', ';', 'PixelDataWriter', 'pdWriter', '=', 'pdFact', '.', 'newWriter', '(', 'pdReader', '.', 'getPixelDataArray', '(', ')', ',', 'false', ',', 'ds', ',', 'out', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'pdWriter', '.', 'writePixelData', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'done!', '"', ')', ';', '}']
Example 143 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'DocumentDialog', '', '(', 'Frame', 'frame', ',', 'String', 'title', ',', 'String', 'document', ')', '{', 'setTitle', '(', 'title', ')', ';', 'textArea', '=', 'new', 'JTextArea', '(', ')', ';', 'textPane', '=', 'new', 'StdScrollPane', '(', 'textArea', ',', 'StdScrollPane', '.', 'VERTICAL_SCROLLBAR_AS_NEEDED', ',', 'StdScrollPane', '.', 'HORIZONTAL_SCROLLBAR_AS_NEEDED', ')', ';', 'textArea', '.', 'setEditable', '(', 'false', ')', ';', 'getContentPane', '(', ')', '.', 'add', '(', 'textPane', ')', ';', 'URL', 'url', '=', 'DocumentDialog', '.', 'class', '.', 'getClassLoader', '(', ')', '.', 'getResource', '(', 'document', ')', ';', 'try', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ',', '"', 'UTF-8', '"', ')', ')', ';', 'String', 'buildNumber', '=', 'MessageBundle', '.', 'getBuildNumber', '(', ')', ';', 'String', 'releaseNumber', '=', 'MessageBundle', '.', 'getReleaseNumber', '(', ')', ';', 'String', 'tmp', ';', 'while', '(', '(', 'tmp', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'tmp', '=', 'tmp', '.', 'replace', '(', '"', '${build_number}', '"', ',', 'buildNumber', ')', ';', 'tmp', '=', 'tmp', '.', 'replace', '(', '"', '${release_number}', '"', ',', 'releaseNumber', ')', ';', 'sb', '.', 'append', '(', 'tmp', '+', '"', '', '"', ')', ';', '}', 'textArea', '.', 'setText', '(', 'sb', '.', 'toString', '(', ')', ')', ';', 'textArea', '.', 'setCaretPosition', '(', '0', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, REJ. in => conn (0 => 0, 0.99817 => 0.99852) a=0.879
  >>  iter 2, REJ. in => gin (0 => 0, 0.99817 => 0.99846) a=0.879
  >>  iter 3, REJ. in => pull (0 => 0, 0.99817 => 0.99850) a=0.948
  >>  iter 4, REJ. in => ln (0 => 0, 0.99817 => 0.99839) a=0.948
  >>  iter 5, REJ. in => din (0 => 0, 0.99817 => 0.99848) a=0.948
  >>  iter 6, REJ. in => lock (0 => 0, 0.99817 => 0.99857) a=0.948
  >>  iter 7, REJ. in => image (0 => 0, 0.99817 => 0.99851) a=0.948
  >>  iter 8, REJ. in => ini (0 => 0, 0.99817 => 0.99827) a=0.948
  >>  iter 9, REJ. in => l (0 => 0, 0.99817 => 0.99849) a=0.948
  >>  iter 10, REJ. in => conn (0 => 0, 0.99817 => 0.99852) a=0.948
Example 144 attack result: {'succ': False, 'tokens': '    public DocumentDialog(Frame frame, String title, String document) {\n        setTitle(title);\n        textArea = new JTextArea();\n        textPane = new StdScrollPane(textArea, StdScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, StdScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n        textArea.setEditable(false);\n        getContentPane().add(textPane);\n        URL url = DocumentDialog.class.getClassLoader().getResource(document);\n        try {\n            StringBuilder sb = new StringBuilder();\n            BufferedReader conn = new BufferedReader(new InputStreamReader(url.openStream(), "UTF-8"));\n            String buildNumber = MessageBundle.getBuildNumber();\n            String releaseNumber = MessageBundle.getReleaseNumber();\n            String tmp;\n            while ((tmp = conn.readLine()) != null) {\n                tmp = tmp.replace("${build_number}", buildNumber);\n                tmp = tmp.replace("${release_number}", releaseNumber);\n                sb.append(tmp + "\n");\n            }\n            textArea.setText(sb.toString());\n            textArea.setCaretPosition(0);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 212, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -0.00035244226, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 144 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 9.94 min
  curr succ rate = 0.018518518518518517
Query times in this attack:  299
All Query times:  16062
raw_tokens: ['public', 'void', 'elimina', '(', 'Pedido', 'pe', ')', 'throws', 'errorSQL', ',', 'errorConexionBD', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'GestorPedido.elimina()', '"', ')', ';', 'int', 'id', '=', 'pe', '.', 'getId', '(', ')', ';', 'String', 'sql', ';', 'Statement', 'stmt', '=', 'null', ';', 'try', '{', 'gd', '.', 'begin', '(', ')', ';', 'sql', '=', '"', 'DELETE', 'FROM', 'pedido', 'WHERE', 'id=', '"', '+', 'id', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Ejecutando:', '', '"', '+', 'sql', ')', ';', 'stmt', '=', 'gd', '.', 'getConexion', '(', ')', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', 'sql', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'executeUpdate', '"', ')', ';', 'gd', '.', 'commit', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'commit', '"', ')', ';', 'stmt', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'gd', '.', 'rollback', '(', ')', ';', 'throw', 'new', 'errorSQL', '(', 'e', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'errorConexionBD', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Error', 'en', 'GestorPedido.elimina():', '', '"', '+', 'e', ')', ';', '}', 'catch', '(', 'errorSQL', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Error', 'en', 'GestorPedido.elimina():', '', '"', '+', 'e', ')', ';', '}', '}']
Example 145 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'parse', '(', 'URL', 'url', ',', 'String', 'description', ',', 'boolean', 'qualifiersOnTarget', ')', 'throws', 'org', '.', 'xml', '.', 'sax', '.', 'SAXException', ',', 'java', '.', 'io', '.', 'IOException', '{', 'this', '.', 'qualifiersOnTarget', '=', 'qualifiersOnTarget', ';', 'model', '=', 'new', 'Model', '(', 'description', ')', ';', 'if', '(', 'roughMode', ')', 'model', '.', 'setRoughMode', '(', 'true', ')', ';', 'DOMParser', 'parser', '=', 'new', 'DOMParser', '(', ')', ';', 'parser', '.', 'setFeature', '(', '"', 'http://xml.org/sax/features/validation', '"', ',', 'false', ')', ';', 'parser', '.', 'setFeature', '(', '"', 'http://apache.org/xml/features/nonvalidating/load-external-dtd', '"', ',', 'false', ')', ';', 'parser', '.', 'parse', '(', 'new', 'InputSource', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'Document', 'doc', '=', 'parser', '.', 'getDocument', '(', ')', ';', 'Element', 'documentEl', '=', 'doc', '.', 'getDocumentElement', '(', ')', ';', 'Element', 'contentEl', '=', 'demandChildElement', '(', 'documentEl', ',', '"', 'XMI.content', '"', ')', ';', 'adapter', '=', 'Adapter', '.', 'getAdapter', '(', 'documentEl', ')', ';', 'parsePackage', '(', 'contentEl', ')', ';', 'if', '(', '!', 'packagePath', '.', 'isEmpty', '(', ')', ')', 'throw', 'new', 'IllegalArgumentException', '(', ')', ';', 'packagePath', '=', 'null', ';', 'for', '(', 'Iterator', 'i', '=', 'generalizations', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', 'parseGeneralization', '(', '(', 'Element', ')', 'i', '.', 'next', '(', ')', ')', ';', 'generalizations', '=', 'null', ';', 'for', '(', 'Iterator', 'i', '=', 'associations', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'Element', 'assoel', '=', '(', 'Element', ')', 'i', '.', 'next', '(', ')', ';', 'parseAssociation', '(', 'assoel', ',', '(', 'ModelClass', ')', '(', 'associations', '.', 'get', '(', 'assoel', ')', ')', ')', ';', '}', 'associations', '=', 'null', ';', 'for', '(', 'Iterator', 'i', '=', 'classElements', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', 'elaborate', '(', '(', 'ModelClass', ')', '(', 'i', '.', 'next', '(', ')', ')', ')', ';', 'classElements', '=', 'null', ';', 'if', '(', 'roughMode', ')', 'model', '.', 'determineAllSupertypes', '(', ')', ';', 'else', 'model', '.', 'flatten', '(', ')', ';', 'url', '=', 'null', ';', '}']
  >>  iter 1, ACC! url => loc (0 => 0, 0.99989 => 0.99996) a=1.889
  >>  iter 2, ACC! loc => connection (0 => 0, 0.99996 => 0.99996) a=5.654
  >>  iter 3, ACC! connection => el (0 => 0, 0.99996 => 0.99997) a=5.024
  >>  iter 4, ACC! el => ssl (0 => 0, 0.99997 => 0.99996) a=6.002
  >>  iter 5, ACC! ssl => loader (0 => 0, 0.99996 => 0.99996) a=5.881
  >>  iter 6, ACC! loader => remote (0 => 0, 0.99996 => 0.99996) a=5.881
  >>  iter 7, ACC! remote => service (0 => 0, 0.99996 => 0.99996) a=5.785
  >>  iter 8, ACC! service => rule (0 => 0, 0.99996 => 0.99996) a=5.265
  >>  iter 9, ACC! rule => loc (0 => 0, 0.99996 => 0.99996) a=5.461
  >>  iter 10, ACC! loc => http (0 => 0, 0.99996 => 0.99991) a=5.654
Example 146 attack result: {'succ': False, 'tokens': '    private void parse(URL http, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException {\n        this.qualifiersOnTarget = qualifiersOnTarget;\n        model = new Model(description);\n        if (roughMode) model.setRoughMode(true);\n        DOMParser parser = new DOMParser();\n        parser.setFeature("http://xml.org/sax/features/validation", false);\n        parser.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);\n        parser.parse(new InputSource(http.openStream()));\n        Document doc = parser.getDocument();\n        Element documentEl = doc.getDocumentElement();\n        Element contentEl = demandChildElement(documentEl, "XMI.content");\n        adapter = Adapter.getAdapter(documentEl);\n        parsePackage(contentEl);\n        if (!packagePath.isEmpty()) throw new IllegalArgumentException();\n        packagePath = null;\n        for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next());\n        generalizations = null;\n        for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) {\n            Element assoel = (Element) i.next();\n            parseAssociation(assoel, (ModelClass) (associations.get(assoel)));\n        }\n        associations = null;\n        for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()));\n        classElements = null;\n        if (roughMode) model.determineAllSupertypes(); else model.flatten();\n        http = null;\n    }\n', 'raw_tokens': None, 'prog_length': 314, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 5.3167343e-05, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'url': 'http'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 146 FAILED.
  time cost = 0.17 min
  ALL EXAMPLE time cost = 10.13 min
  curr succ rate = 0.01818181818181818
Query times in this attack:  307
All Query times:  16369
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'String', 'in', '=', '"', '/Users/laemmel/svn/shared-svn/projects/120multiDestPeds/floor_plan/boundaries.shp', '"', ';', 'String', 'out', '=', '"', '/Users/laemmel/svn/shared-svn/projects/120multiDestPeds/floor_plan/boundaries_closed.shp', '"', ';', 'ShapeFileReader', 'reader', '=', 'new', 'ShapeFileReader', '(', ')', ';', 'reader', '.', 'readFileAndInitialize', '(', 'in', ')', ';', 'QuadTree', '<', 'Coordinate', '>', 'quad', '=', 'new', 'QuadTree', '<', 'Coordinate', '>', '(', 'reader', '.', 'getBounds', '(', ')', '.', 'getMinX', '(', ')', ',', 'reader', '.', 'getBounds', '(', ')', '.', 'getMinY', '(', ')', ',', 'reader', '.', 'getBounds', '(', ')', '.', 'getMaxX', '(', ')', ',', 'reader', '.', 'getBounds', '(', ')', '.', 'getMaxY', '(', ')', ')', ';', 'for', '(', 'Feature', 'ft', ':', 'reader', '.', 'getFeatureSet', '(', ')', ')', '{', 'MultiLineString', 'ml', '=', '(', 'MultiLineString', ')', 'ft', '.', 'getDefaultGeometry', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ml', '.', 'getNumGeometries', '(', ')', ';', 'i', '++', ')', '{', 'LineString', 'ls', '=', '(', 'LineString', ')', 'ml', '.', 'getGeometryN', '(', 'i', ')', ';', 'Point', 'start', '=', 'ls', '.', 'getStartPoint', '(', ')', ';', 'checkIt', '(', 'start', ',', 'quad', ')', ';', 'Point', 'end', '=', 'ls', '.', 'getEndPoint', '(', ')', ';', 'checkIt', '(', 'end', ',', 'quad', ')', ';', '}', '}', 'ShapeFileWriter', '.', 'writeGeometries', '(', 'reader', '.', 'getFeatureSet', '(', ')', ',', 'out', ')', ';', '}']
Example 147 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'GGLicenses', 'getLicensesInfo', '(', ')', 'throws', 'IllegalStateException', ',', 'GGException', ',', 'Exception', '{', 'List', '<', 'NameValuePair', '>', 'qparams', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'qparams', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'method', '"', ',', '"', 'gg.photos.licenses.getInfo', '"', ')', ')', ';', 'qparams', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'key', '"', ',', 'this', '.', 'key', ')', ')', ';', 'String', 'url', '=', 'REST_URL', '+', '"', '?', '"', '+', 'URLEncodedUtils', '.', 'format', '(', 'qparams', ',', '"', 'UTF-8', '"', ')', ';', 'URI', 'uri', '=', 'new', 'URI', '(', 'url', ')', ';', 'HttpGet', 'httpget', '=', 'new', 'HttpGet', '(', 'uri', ')', ';', 'HttpResponse', 'response', '=', 'httpClient', '.', 'execute', '(', 'httpget', ')', ';', 'int', 'status', '=', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ';', 'errorCheck', '(', 'response', ',', 'status', ')', ';', 'InputStream', 'content', '=', 'response', '.', 'getEntity', '(', ')', '.', 'getContent', '(', ')', ';', 'GGLicenses', 'licenses', '=', 'JAXB', '.', 'unmarshal', '(', 'content', ',', 'GGLicenses', '.', 'class', ')', ';', 'return', 'licenses', ';', '}']
  >>  iter 1, ACC! key => row (0 => 0, 0.99997 => 0.99997) a=1.026
  >>  iter 2, ACC! row => ip (0 => 0, 0.99997 => 0.99997) a=1.015
  >>  iter 3, ACC! ip => fee (0 => 0, 0.99997 => 0.99997) a=1.022
  >>  iter 4, ACC! fee => phrase (0 => 0, 0.99997 => 0.99997) a=1.019
  >>  iter 5, ACC! phrase => kid (0 => 0, 0.99997 => 0.99997) a=1.011
  >>  iter 6, ACC! kid => op (0 => 0, 0.99997 => 0.99997) a=1.034
  >>  iter 7, ACC! op => patch (0 => 0, 0.99997 => 0.99997) a=1.011
  >>  iter 8, ACC! patch => entry (0 => 0, 0.99997 => 0.99997) a=1.007
  >>  iter 9, ACC! entry => ask (0 => 0, 0.99997 => 0.99997) a=1.022
  >>  iter 10, ACC! ask => k (0 => 0, 0.99997 => 0.99997) a=1.004
Example 148 attack result: {'succ': False, 'tokens': '    public GGLicenses getLicensesInfo() throws IllegalStateException, GGException, Exception {\n        List<NameValuePair> qparams = new ArrayList<NameValuePair>();\n        qparams.add(new BasicNameValuePair("method", "gg.photos.licenses.getInfo"));\n        qparams.add(new BasicNameValuePair("k", this.k));\n        String url = REST_URL + "?" + URLEncodedUtils.format(qparams, "UTF-8");\n        URI uri = new URI(url);\n        HttpGet httpget = new HttpGet(uri);\n        HttpResponse response = httpClient.execute(httpget);\n        int status = response.getStatusLine().getStatusCode();\n        errorCheck(response, status);\n        InputStream content = response.getEntity().getContent();\n        GGLicenses licenses = JAXB.unmarshal(content, GGLicenses.class);\n        return licenses;\n    }\n', 'raw_tokens': None, 'prog_length': 159, 'new_pred': 0, 'is_success': -1, 'old_uid': 'key', 'score_info': -4.7683716e-07, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'key': 'k'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 148 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 10.29 min
  curr succ rate = 0.017857142857142856
Query times in this attack:  298
All Query times:  16667
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'Object', 'o', '=', 'Naming', '.', 'lookup', '(', '"', 'Server', '"', ')', ';', 'IServer', 'serverStub', '=', '(', 'IServer', ')', 'o', ';', 'File', 'srcDir', '=', 'new', 'File', '(', 'args', '[', '0', ']', ')', ';', 'File', 'dstDir', '=', 'new', 'File', '(', 'args', '[', '1', ']', ')', ';', 'File', '[', ']', 'srcFiles', '=', 'srcDir', '.', 'listFiles', '(', ')', ';', 'long', 'position', '=', '0', ';', 'for', '(', 'File', 'f', ':', 'srcFiles', ')', '{', 'if', '(', 'f', '.', 'isDirectory', '(', ')', ')', 'continue', ';', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'f', ')', '.', 'getChannel', '(', ')', ';', 'String', 'fileName', '=', 'dstDir', '.', 'getAbsolutePath', '(', ')', '+', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', '+', 'f', '.', 'getName', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'fileName', ')', '.', 'getChannel', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Coping', '', '"', '+', 'fileName', ')', ';', 'ByteBuffer', 'buffer', '=', 'ByteBuffer', '.', 'allocate', '(', '65536', ')', ';', 'int', 'nr', '=', '0', ';', 'srcChannel', '.', 'position', '(', 'nr', ')', ';', 'nr', '=', 'srcChannel', '.', 'read', '(', 'buffer', ')', ';', 'while', '(', 'nr', '>', '-', '1', ')', '{', 'buffer', '.', 'flip', '(', ')', ';', 'byte', '[', ']', 'bytes', '=', 'new', 'byte', '[', 'buffer', '.', 'limit', '(', ')', ']', ';', 'buffer', '.', 'get', '(', 'bytes', ')', ';', 'position', '=', 'serverStub', '.', 'write', '(', 'bytes', ',', 'position', ')', ';', 'buffer', '.', 'clear', '(', ')', ';', 'nr', '=', 'srcChannel', '.', 'read', '(', 'buffer', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Done', '', '"', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'RemoteException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'NotBoundException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 149 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'HttpsURLConnection', 'createRequest', '(', 'String', 'feedUrl', ',', 'String', 'httpMethod', ',', 'Map', '<', 'String', ',', 'String', '>', 'headers', ')', 'throws', 'BuzzIOException', '{', 'HttpsURLConnection', 'con', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'feedUrl', ')', ';', 'con', '=', '(', 'HttpsURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'con', '.', 'setRequestMethod', '(', 'httpMethod', ')', ';', 'if', '(', 'headers', '!=', 'null', '&&', '!', 'headers', '.', 'isEmpty', '(', ')', ')', '{', 'for', '(', 'String', 'key', ':', 'headers', '.', 'keySet', '(', ')', ')', '{', 'con', '.', 'setRequestProperty', '(', 'key', ',', 'headers', '.', 'get', '(', 'key', ')', ')', ';', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'BuzzIOException', '(', 'e', ')', ';', '}', 'return', 'con', ';', '}']
Example 150 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'storeEditionFile', '(', 'InputStream', 'in', ')', 'throws', 'IOException', '{', 'String', 'datadir', '=', 'getCqPropertiesBeanSpring', '(', ')', '.', 'getDatadir', '(', ')', '+', 'File', '.', 'separator', '+', '"', 'attachments', '"', '+', 'File', '.', 'separator', ';', 'File', 'attachmentsDir', '=', 'new', 'File', '(', 'datadir', ')', ';', 'attachmentsDir', '.', 'mkdirs', '(', ')', ';', 'File', 'storedEditionFile', '=', 'File', '.', 'createTempFile', '(', '"', 'edition_import_', '"', ',', '"', '.tmp', '"', ',', 'attachmentsDir', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'storedEditionFile', ')', ';', 'IOUtils', '.', 'copyLarge', '(', 'in', ',', 'out', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'out', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', 'return', 'storedEditionFile', '.', 'getAbsolutePath', '(', ')', ';', '}']
Example 151 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'ArrayList', '<', 'Principal', '>', 'importPrincipals', '(', 'String', 'urlString', ')', '{', 'ArrayList', '<', 'Principal', '>', 'results', '=', 'new', 'ArrayList', '<', 'Principal', '>', '(', ')', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'urlString', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'StringBuffer', 'buff', '=', 'new', 'StringBuffer', '(', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'buff', '.', 'append', '(', 'line', ')', ';', 'if', '(', 'line', '.', 'equals', '(', '"', '</Principal>', '"', ')', ')', '{', 'Principal', 'principal', '=', 'ProfileParser', '.', 'parsePrincipal', '(', 'buff', '.', 'toString', '(', ')', ')', ';', 'results', '.', 'add', '(', 'principal', ')', ';', 'buff', '=', 'new', 'StringBuffer', '(', ')', ';', '}', 'else', '{', 'buff', '.', 'append', '(', 'NL', ')', ';', '}', '}', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'catch', '(', 'ParsingException', 'e', ')', '{', '}', 'return', 'results', ';', '}']
Example 152 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'populateSessionId', '(', ')', 'throws', 'IOException', ',', 'java', '.', 'net', '.', 'MalformedURLException', '{', 'String', 'general_search_url', '=', '"', 'http://agricola.nal.usda.gov/cgi-bin/Pwebrecon.cgi?', '"', '+', '"', 'DB=local&CNT=1&Search_Arg=RNAi&Search_Code=GKEY&STARTDB=AGRIDB', '"', ';', 'String', 'sidString', '=', '"', '"', ',', 'inputLine', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', '(', 'new', 'URL', '(', 'general_search_url', ')', ')', '.', 'openStream', '(', ')', ')', ')', ';', 'while', '(', '(', 'inputLine', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'inputLine', '.', 'startsWith', '(', '"', '<INPUT', 'TYPE=HIDDEN', 'NAME=PID', 'VALUE=', '"', ')', ')', '{', 'sidString', '=', '(', 'inputLine', '.', 'substring', '(', 'inputLine', '.', 'indexOf', '(', '"', 'PID', 'VALUE=', '"', ')', '+', '11', ',', 'inputLine', '.', 'indexOf', '(', '"', '>', '"', ')', '-', '1', ')', ')', ';', '}', '}', 'sessionId', '=', 'Integer', '.', 'parseInt', '(', 'sidString', '.', 'trim', '(', ')', ')', ';', '}']
Example 153 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'final', 'void', 'findSubclasses', '(', 'URL', 'location', ',', 'String', 'packageName', ',', 'Class', 'superClass', ',', 'Set', 'setOfClasses', ')', '{', 'synchronized', '(', 'results', ')', '{', 'String', 'fqcn', '=', 'searchClass', '.', 'getName', '(', ')', ';', 'List', 'knownLocations', '=', 'new', 'ArrayList', '(', ')', ';', 'knownLocations', '.', 'add', '(', 'location', ')', ';', 'for', '(', 'int', 'loc', '=', '0', ';', 'loc', '<', 'knownLocations', '.', 'size', '(', ')', ';', 'loc', '++', ')', '{', 'URL', 'url', '=', '(', 'URL', ')', 'knownLocations', '.', 'get', '(', 'loc', ')', ';', 'File', 'directory', '=', 'new', 'File', '(', 'url', '.', 'getFile', '(', ')', ')', ';', 'if', '(', 'directory', '.', 'exists', '(', ')', ')', '{', 'File', '[', ']', 'files', '=', 'directory', '.', 'listFiles', '(', 'CLASSES_ONLY', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', 'String', 'filename', '=', 'files', '[', 'i', ']', '.', 'getName', '(', ')', ';', 'String', 'classname', '=', 'filename', '.', 'substring', '(', '0', ',', 'filename', '.', 'length', '(', ')', '-', '6', ')', ';', 'try', '{', 'if', '(', '!', 'fqcn', '.', 'equals', '(', 'packageName', '+', '"', '.', '"', '+', 'classname', ')', ')', '{', 'Class', 'c', '=', 'callClassForName', '(', 'packageName', '+', '"', '.', '"', '+', 'classname', ')', ';', 'manageClass', '(', 'setOfClasses', ',', 'superClass', ',', 'c', ',', 'url', ')', ';', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'errors', '.', 'add', '(', 't', ')', ';', '}', '}', '}', 'else', '{', 'try', '{', 'JarURLConnection', 'conn', '=', '(', 'JarURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'JarFile', 'jarFile', '=', 'conn', '.', 'getJarFile', '(', ')', ';', 'Enumeration', 'e', '=', 'jarFile', '.', 'entries', '(', ')', ';', 'while', '(', 'e', '.', 'hasMoreElements', '(', ')', ')', '{', 'JarEntry', 'entry', '=', '(', 'JarEntry', ')', 'e', '.', 'nextElement', '(', ')', ';', 'String', 'entryname', '=', 'entry', '.', 'getName', '(', ')', ';', 'if', '(', '!', 'entry', '.', 'isDirectory', '(', ')', '&&', 'entryname', '.', 'endsWith', '(', '"', '.class', '"', ')', ')', '{', 'String', 'classname', '=', 'entryname', '.', 'substring', '(', '0', ',', 'entryname', '.', 'length', '(', ')', '-', '6', ')', ';', 'if', '(', 'classname', '.', 'startsWith', '(', '"', '/', '"', ')', ')', 'classname', '=', 'classname', '.', 'substring', '(', '1', ')', ';', 'classname', '=', 'classname', '.', 'replace', '(', "'/'", ',', "'.'", ')', ';', 'try', '{', 'if', '(', '!', 'fqcn', '.', 'equals', '(', 'classname', ')', ')', '{', 'Class', 'c', '=', 'callClassForName', '(', 'classname', ')', ';', 'manageClass', '(', 'setOfClasses', ',', 'superClass', ',', 'c', ',', 'url', ')', ';', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'errors', '.', 'add', '(', 't', ')', ';', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioex', ')', '{', 'errors', '.', 'add', '(', 'ioex', ')', ';', '}', '}', '}', '}', '}']
  >>  iter 1, ACC! url => source (0 => 0, 0.99997 => 0.99997) a=2.434
  >>  iter 2, ACC! source => data (0 => 0, 0.99997 => 0.99997) a=2.763
  >>  iter 3, ACC! data => feed (0 => 0, 0.99997 => 0.99997) a=2.763
  >>  iter 4, ACC! feed => URL (0 => 0, 0.99997 => 0.99997) a=2.802
  >>  iter 5, ACC! URL => f (0 => 0, 0.99997 => 0.99997) a=583.626
  >>  iter 6, ACC! f => web (0 => 0, 0.99997 => 0.99998) a=1.266
  >>  iter 7, ACC! web => base (0 => 0, 0.99998 => 0.99996) a=1.785
  >>  iter 8, ACC! base => jar (0 => 0, 0.99996 => 0.99997) a=1.040
  >>  iter 9, ACC! jar => download (0 => 0, 0.99997 => 0.99997) a=1.391
  >>  iter 10, ACC! download => Url (0 => 0, 0.99997 => 0.99997) a=632.261
Example 154 attack result: {'succ': False, 'tokens': '    private final void findSubclasses(Url location, String packageName, Class superClass, Set setOfClasses) {\n        synchronized (results) {\n            String fqcn = searchClass.getName();\n            List knownLocations = new ArrayList();\n            knownLocations.add(location);\n            for (int loc = 0; loc < knownLocations.size(); loc++) {\n                Url Url = (Url) knownLocations.get(loc);\n                File directory = new File(Url.getFile());\n                if (directory.exists()) {\n                    File[] files = directory.listFiles(CLASSES_ONLY);\n                    for (int i = 0; i < files.length; i++) {\n                        String filename = files[i].getName();\n                        String classname = filename.substring(0, filename.length() - 6);\n                        try {\n                            if (!fqcn.equals(packageName + "." + classname)) {\n                                Class c = callClassForName(packageName + "." + classname);\n                                manageClass(setOfClasses, superClass, c, Url);\n                            }\n                        } catch (Throwable t) {\n                            errors.add(t);\n                        }\n                    }\n                } else {\n                    try {\n                        JarURLConnection conn = (JarURLConnection) Url.openConnection();\n                        JarFile jarFile = conn.getJarFile();\n                        Enumeration e = jarFile.entries();\n                        while (e.hasMoreElements()) {\n                            JarEntry entry = (JarEntry) e.nextElement();\n                            String entryname = entry.getName();\n                            if (!entry.isDirectory() && entryname.endsWith(".class")) {\n                                String classname = entryname.substring(0, entryname.length() - 6);\n                                if (classname.startsWith("/")) classname = classname.substring(1);\n                                classname = classname.replace(\'/\', \'.\');\n                                try {\n                                    if (!fqcn.equals(classname)) {\n                                        Class c = callClassForName(classname);\n                                        manageClass(setOfClasses, superClass, c, Url);\n                                    }\n                                } catch (Throwable t) {\n                                    errors.add(t);\n                                }\n                            }\n                        }\n                    } catch (IOException ioex) {\n                        errors.add(ioex);\n                    }\n                }\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 423, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 2.026558e-06, 'nb_changed_var': 1, 'nb_changed_pos': 5, 'replace_info': {'url': 'Url'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 154 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 10.52 min
  curr succ rate = 0.017543859649122806
Query times in this attack:  305
All Query times:  16972
raw_tokens: ['public', 'static', 'List', '<', 'String', '>', 'getLevelIndex', '(', 'URL', 'fetchUrl', ')', '{', 'List', '<', 'String', '>', 'levelNames', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'BufferedReader', 'bufferedreader', ';', 'try', '{', 'URLConnection', 'urlconnection', '=', 'fetchUrl', '.', 'openConnection', '(', ')', ';', 'urlconnection', '.', 'setConnectTimeout', '(', '30000', ')', ';', 'if', '(', 'urlconnection', '.', 'getContentEncoding', '(', ')', '!=', 'null', ')', '{', 'bufferedreader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'urlconnection', '.', 'getInputStream', '(', ')', ',', 'urlconnection', '.', 'getContentEncoding', '(', ')', ')', ')', ';', '}', 'else', '{', 'bufferedreader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'urlconnection', '.', 'getInputStream', '(', ')', ',', '"', 'utf-8', '"', ')', ')', ';', '}', '}', 'catch', '(', 'IOException', '_ex', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'HexTD::readFile::', "Can't", 'read', 'from', '', '"', '+', 'fetchUrl', ')', ';', 'return', 'levelNames', ';', '}', 'String', 'sLine1', ';', 'try', '{', 'while', '(', '(', 'sLine1', '=', 'bufferedreader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'sLine1', '.', 'trim', '(', ')', '.', 'length', '(', ')', '!=', '0', ')', '{', 'levelNames', '.', 'add', '(', 'sLine1', ')', ';', '}', '}', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'MapLoaderClient', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', 'return', 'levelNames', ';', '}']
Example 155 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'byte', '[', ']', 'getBytesFromURL', '(', 'URL', 'url', ')', 'throws', 'IOException', '{', 'byte', '[', ']', 'b', ';', 'URLConnection', 'con', '=', 'url', '.', 'openConnection', '(', ')', ';', 'int', 'size', '=', 'con', '.', 'getContentLength', '(', ')', ';', 'InputStream', 's', '=', 'con', '.', 'getInputStream', '(', ')', ';', 'try', '{', 'if', '(', 'size', '<=', '0', ')', 'b', '=', 'IOUtil', '.', 'getBytesFromStream', '(', 's', ')', ';', 'else', '{', 'b', '=', 'new', 'byte', '[', 'size', ']', ';', 'int', 'len', '=', '0', ';', 'do', '{', 'int', 'n', '=', 's', '.', 'read', '(', 'b', ',', 'len', ',', 'size', '-', 'len', ')', ';', 'if', '(', 'n', '<', '0', ')', 'throw', 'new', 'IOException', '(', '"', 'the', 'stream', 'was', 'closed:', '', '"', '+', 'url', '.', 'toString', '(', ')', ')', ';', 'len', '+=', 'n', ';', '}', 'while', '(', 'len', '<', 'size', ')', ';', '}', '}', 'finally', '{', 's', '.', 'close', '(', ')', ';', '}', 'return', 'b', ';', '}']
Example 156 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'try', '{', 'FTPClient', 'c', '=', 'new', 'FTPClient', '(', ')', ';', 'c', '.', 'configure', '(', 'ftpConfig', ')', ';', 'logger', '.', 'debug', '(', '"', 'Trying', 'to', 'connect', '"', ')', ';', 'c', '.', 'connect', '(', '"', '127.0.0.1', '"', ',', '21211', ')', ';', 'logger', '.', 'debug', '(', '"', 'Connected', '"', ')', ';', 'c', '.', 'setSoTimeout', '(', '5000', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'c', '.', 'getReplyCode', '(', ')', ')', ')', '{', 'logger', '.', 'debug', '(', '"', 'Houston,', 'we', 'have', 'a', 'problem.', 'D/C', '"', ')', ';', 'c', '.', 'disconnect', '(', ')', ';', 'throw', 'new', 'Exception', '(', ')', ';', '}', 'if', '(', 'c', '.', 'login', '(', '"', 'drftpd', '"', ',', '"', 'drftpd', '"', ')', ')', '{', 'logger', '.', 'debug', '(', '"', 'Logged-in,', 'now', 'waiting', '5', 'secs', 'and', 'kill', 'the', 'thread.', '"', ')', ';', '_sc', '.', 'addSuccess', '(', ')', ';', 'Thread', '.', 'sleep', '(', '5000', ')', ';', 'c', '.', 'disconnect', '(', ')', ';', '}', 'else', '{', 'logger', '.', 'debug', '(', '"', 'Login', 'failed,', 'D/C!', '"', ')', ';', 'throw', 'new', 'Exception', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'logger', '.', 'debug', '(', 'e', ',', 'e', ')', ';', '_sc', '.', 'addFailure', '(', ')', ';', '}', 'logger', '.', 'debug', '(', '"', 'exiting', '"', ')', ';', '}']
  >>  iter 1, ACC! c => cr (0 => 0, 0.99957 => 0.99957) a=1.008
  >>  iter 2, ACC! cr => e (0 => 0, 0.99957 => 0.99957) a=1.008
  >>  iter 3, ACC! e => xc (0 => 0, 0.99957 => 0.99957) a=1.009
  >>  iter 4, ACC! xc => oc (0 => 0, 0.99957 => 0.99957) a=1.007
  >>  iter 5, ACC! oc => lc (0 => 0, 0.99957 => 0.99957) a=1.013
  >>  iter 6, ACC! lc => cl (0 => 0, 0.99957 => 0.99957) a=1.009
  >>  iter 7, ACC! cl => esc (0 => 0, 0.99957 => 0.99957) a=1.013
  >>  iter 8, ACC! esc => uc (0 => 0, 0.99957 => 0.99957) a=1.016
  >>  iter 9, ACC! uc => exc (0 => 0, 0.99957 => 0.99957) a=1.011
  >>  iter 10, ACC! exc => ic (0 => 0, 0.99957 => 0.99957) a=1.009
Example 157 attack result: {'succ': False, 'tokens': '    public void run() {\n        try {\n            FTPClient ic = new FTPClient();\n            ic.configure(ftpConfig);\n            logger.debug("Trying to connect");\n            ic.connect("127.0.0.1", 21211);\n            logger.debug("Connected");\n            ic.setSoTimeout(5000);\n            if (!FTPReply.isPositiveCompletion(ic.getReplyCode())) {\n                logger.debug("Houston, we have a problem. D/C");\n                ic.disconnect();\n                throw new Exception();\n            }\n            if (ic.login("drftpd", "drftpd")) {\n                logger.debug("Logged-in, now waiting 5 secs and kill the thread.");\n                _sc.addSuccess();\n                Thread.sleep(5000);\n                ic.disconnect();\n            } else {\n                logger.debug("Login failed, D/C!");\n                throw new Exception();\n            }\n        } catch (Exception ic) {\n            logger.debug(ic, ic);\n            _sc.addFailure();\n        }\n        logger.debug("exiting");\n    }\n', 'raw_tokens': None, 'prog_length': 192, 'new_pred': 0, 'is_success': -1, 'old_uid': 'c', 'score_info': -1.5497208e-06, 'nb_changed_var': 1, 'nb_changed_pos': 8, 'replace_info': {'c': 'ic'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 157 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 10.70 min
  curr succ rate = 0.017241379310344827
Query times in this attack:  302
All Query times:  17274
raw_tokens: ['public', 'static', 'void', 'bubbleSort', '(', 'int', '[', ']', 'polje', ')', '{', 'boolean', 'swapped', ';', 'int', 'temp', ';', 'int', 'n', '=', 'polje', '.', 'length', ';', 'do', '{', 'swapped', '=', 'false', ';', 'n', '--', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'n', '-', '1', ';', 'i', '++', ')', '{', 'if', '(', 'polje', '[', 'i', ']', '>', 'polje', '[', 'i', '+', '1', ']', ')', '{', 'temp', '=', 'polje', '[', 'i', ']', ';', 'polje', '[', 'i', ']', '=', 'polje', '[', 'i', '+', '1', ']', ';', 'polje', '[', 'i', '+', '1', ']', '=', 'temp', ';', 'swapped', '=', 'true', ';', '}', '}', '}', 'while', '(', 'swapped', ')', ';', '}']
  >>  iter 1, REJ. i => ji (0 => 0, 0.99486 => 0.99512) a=0.970
  >>  iter 2, REJ. i => n (0 => 0, 0.99486 => 0.99512) a=0.970
  >>  iter 3, REJ. i => xi (0 => 0, 0.99486 => 0.99517) a=0.986
  >>  iter 4, REJ. i => id (0 => 0, 0.99486 => 0.99522) a=0.986
  >>  iter 5, REJ. i => ti (0 => 0, 0.99486 => 0.99518) a=0.970
  >>  iter 6, REJ. i => oi (0 => 0, 0.99486 => 0.99515) a=0.977
  >>  iter 7, REJ. i => oi (0 => 0, 0.99486 => 0.99515) a=0.986
  >>  iter 8, REJ. i => it (0 => 0, 0.99486 => 0.99512) a=0.977
  >>  iter 9, REJ. i => index (0 => 0, 0.99486 => 0.99505) a=0.986
  >>  iter 10, REJ. i => p (0 => 0, 0.99486 => 0.99515) a=0.986
Example 158 attack result: {'succ': False, 'tokens': '    public static void bubbleSort(int[] polje) {\n        boolean swapped;\n        int temp;\n        int n = polje.length;\n        do {\n            swapped = false;\n            n--;\n            for (int p = 0; p < n - 1; p++) {\n                if (polje[p] > polje[p + 1]) {\n                    temp = polje[p];\n                    polje[p] = polje[p + 1];\n                    polje[p + 1] = temp;\n                    swapped = true;\n                }\n            }\n        } while (swapped);\n    }\n', 'raw_tokens': None, 'prog_length': 106, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -0.00028383732, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 158 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 10.85 min
  curr succ rate = 0.01694915254237288
Query times in this attack:  312
All Query times:  17586
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'checkupdates', '.', 'BetaST', '.', 'setText', '(', '"', '"', ')', ';', 'checkupdates', '.', 'stableST', '.', 'setText', '(', '"', '"', ')', ';', 'String', '[', ']', 's', '=', 'new', 'String', '[', '7', ']', ';', 'int', 'i', '=', '0', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', '"', 'http://memorize-words.sourceforge.net/latest.txt', '"', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'str', ';', 'while', '(', '(', '(', 'str', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '&&', '(', 'i', '<', '7', ')', ')', '{', 's', '[', 'i', ']', '=', 'str', ';', 'i', '++', ';', '}', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'if', '(', 'i', '<', '5', ')', '{', 'checkupdates', '.', 'CheckBT', '.', 'setEnabled', '(', 'true', ')', ';', 'return', ';', '}', 'boolean', 'updated', '=', 'false', ';', 'if', '(', '(', 'MF', '.', 'CurVersion', '<', 'Integer', '.', 'parseInt', '(', 's', '[', '0', ']', ')', ')', '&&', '(', 'checkupdates', '.', 'BetaCHK', '.', 'isSelected', '(', ')', ')', ')', '{', 'checkupdates', '.', 'BetaST', '.', 'setText', '(', '"', '<HTML>A', 'newer', 'BETA', 'version', '(<b>', '"', '+', 's', '[', '4', ']', '+', '"', '</b>)', 'is', 'available', 'at<BR>', '<a', "href=''>", '"', '+', 's', '[', '2', ']', '+', '"', '</a></HTML>', '"', ')', ';', 'updated', '=', 'true', ';', 'checkupdates', '.', 'hasBeta', '=', 'true', ';', 'checkupdates', '.', 'BetaURL', '=', 's', '[', '2', ']', ';', '}', 'else', 'checkupdates', '.', 'BetaST', '.', 'setText', '(', '"', '"', ')', ';', 'if', '(', '(', 'MF', '.', 'CurVersion', '<', 'Integer', '.', 'parseInt', '(', 's', '[', '1', ']', ')', ')', '&&', '(', 'checkupdates', '.', 'StableCHK', '.', 'isSelected', '(', ')', ')', ')', '{', 'checkupdates', '.', 'stableST', '.', 'setText', '(', '"', '<HTML>A', 'newer', 'STABLE', 'version', '(<b>', '"', '+', 's', '[', '5', ']', '+', '"', '</b>)', 'is', 'available', 'at<BR>', '<a', "href=''>", '"', '+', 's', '[', '3', ']', '+', '"', '</a></HTML>', '"', ')', ';', 'updated', '=', 'true', ';', 'checkupdates', '.', 'hasStable', '=', 'true', ';', 'checkupdates', '.', 'StableURL', '=', 's', '[', '3', ']', ';', '}', 'else', 'checkupdates', '.', 'stableST', '.', 'setText', '(', '"', '"', ')', ';', 'if', '(', 'updated', ')', 'checkupdates', '.', 'setVisible', '(', 'true', ')', ';', 'checkupdates', '.', 'CheckBT', '.', 'setEnabled', '(', 'true', ')', ';', '}']
Example 159 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'byte', '[', ']', 'encode', '(', 'String', 'cryptPassword', ',', 'byte', '[', ']', 'credentials', ',', 'byte', '[', ']', 'salt', ')', '{', 'try', '{', 'MessageDigest', 'digester', '=', 'MessageDigest', '.', 'getInstance', '(', 'DIGEST', ')', ';', 'SecureRandom', 'random', '=', 'SecureRandom', '.', 'getInstance', '(', 'RANDOM', ')', ';', 'digester', '.', 'reset', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'digester', '.', 'update', '(', 'salt', ')', ';', 'digester', '.', 'update', '(', 'cryptPassword', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', '}', 'byte', '[', ']', 'hash', '=', 'digester', '.', 'digest', '(', ')', ';', 'random', '.', 'setSeed', '(', 'hash', ')', ';', 'int', 'maxKeySize', '=', 'Cipher', '.', 'getMaxAllowedKeyLength', '(', 'CIPHER', ')', ';', 'KeyGenerator', 'generator', '=', 'KeyGenerator', '.', 'getInstance', '(', 'CIPHER', ')', ';', 'generator', '.', 'init', '(', 'maxKeySize', ',', 'random', ')', ';', 'SecretKey', 'key', '=', 'generator', '.', 'generateKey', '(', ')', ';', 'Cipher', 'cipher', '=', 'Cipher', '.', 'getInstance', '(', 'CIPHER', ')', ';', 'cipher', '.', 'init', '(', 'Cipher', '.', 'ENCRYPT_MODE', ',', 'key', ')', ';', 'byte', '[', ']', 'cipherOut', '=', 'cipher', '.', 'doFinal', '(', 'credentials', ')', ';', 'byte', '[', ']', 'ret', '=', 'new', 'byte', '[', 'salt', '.', 'length', '+', 'cipherOut', '.', 'length', ']', ';', 'System', '.', 'arraycopy', '(', 'salt', ',', '0', ',', 'ret', ',', '0', ',', 'salt', '.', 'length', ')', ';', 'System', '.', 'arraycopy', '(', 'cipherOut', ',', '0', ',', 'ret', ',', 'salt', '.', 'length', ',', 'cipherOut', '.', 'length', ')', ';', 'return', 'ret', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'StorePlugin', '.', 'getDefault', '(', ')', '.', 'log', '(', 'e', ')', ';', '}', 'return', 'new', 'byte', '[', '0', ']', ';', '}']
Example 160 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'String', 'uri', '=', 'args', '[', '0', ']', ';', 'Configuration', 'conf', '=', 'new', 'Configuration', '(', ')', ';', 'FileSystem', 'fs', '=', 'FileSystem', '.', 'get', '(', 'URI', '.', 'create', '(', 'uri', ')', ',', 'conf', ')', ';', 'Path', 'inputPath', '=', 'new', 'Path', '(', 'uri', ')', ';', 'CompressionCodecFactory', 'factory', '=', 'new', 'CompressionCodecFactory', '(', 'conf', ')', ';', 'CompressionCodec', 'codec', '=', 'factory', '.', 'getCodec', '(', 'inputPath', ')', ';', 'if', '(', 'codec', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'No', 'codec', 'found', 'for', '', '"', '+', 'uri', ')', ';', 'System', '.', 'exit', '(', '1', ')', ';', '}', 'String', 'outputUri', '=', 'CompressionCodecFactory', '.', 'removeSuffix', '(', 'uri', ',', 'codec', '.', 'getDefaultExtension', '(', ')', ')', ';', 'InputStream', 'in', '=', 'null', ';', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'codec', '.', 'createInputStream', '(', 'fs', '.', 'open', '(', 'inputPath', ')', ')', ';', 'out', '=', 'fs', '.', 'create', '(', 'new', 'Path', '(', 'outputUri', ')', ')', ';', 'IOUtils', '.', 'copyBytes', '(', 'in', ',', 'out', ',', 'conf', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeStream', '(', 'in', ')', ';', 'IOUtils', '.', 'closeStream', '(', 'out', ')', ';', '}', '}']
Example 161 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'write', '(', 'String', 'resource', ',', 'String', 'destinationPath', ')', 'throws', 'IOException', ',', 'CoreException', '{', 'OutputStream', 'output', '=', 'null', ';', 'InputStream', 'contentStream', '=', 'null', ';', 'try', '{', 'contentStream', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'resource', ')', ')', ';', 'output', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'destinationPath', ')', ')', ';', 'int', 'available', '=', 'contentStream', '.', 'available', '(', ')', ';', 'available', '=', 'available', '<=', '0', '?', 'DEFAULT_BUFFER_SIZE', ':', 'available', ';', 'int', 'chunkSize', '=', 'Math', '.', 'min', '(', 'DEFAULT_BUFFER_SIZE', ',', 'available', ')', ';', 'byte', '[', ']', 'readBuffer', '=', 'new', 'byte', '[', 'chunkSize', ']', ';', 'int', 'n', '=', 'contentStream', '.', 'read', '(', 'readBuffer', ')', ';', 'while', '(', 'n', '>', '0', ')', '{', 'output', '.', 'write', '(', 'readBuffer', ',', '0', ',', 'n', ')', ';', 'n', '=', 'contentStream', '.', 'read', '(', 'readBuffer', ')', ';', '}', '}', 'finally', '{', 'if', '(', 'contentStream', '!=', 'null', ')', '{', 'try', '{', 'contentStream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'IDEWorkbenchPlugin', '.', 'log', '(', '"', 'Error', 'closing', 'input', 'stream', 'for', 'file:', '', '"', '+', 'resource', ',', 'e', ')', ';', '}', '}', 'if', '(', 'output', '!=', 'null', ')', '{', 'output', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 162 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'DefaultMutableTreeNode', 'parseTree', '(', ')', '{', 'try', '{', 'DefaultMutableTreeNode', 'root', ';', 'URL', 'url', '=', 'RebusHelp', '.', 'class', '.', 'getResource', '(', '"', '/org/olga/rebus/gui/help/html/content.xml', '"', ')', ';', 'InputStream', 'is', '=', 'url', '.', 'openStream', '(', ')', ';', 'DocumentBuilderFactory', 'factory', '=', 'DocumentBuilderFactory', '.', 'newInstance', '(', ')', ';', 'factory', '.', 'setIgnoringComments', '(', 'true', ')', ';', 'factory', '.', 'setValidating', '(', 'false', ')', ';', 'DocumentBuilder', 'parser', '=', 'factory', '.', 'newDocumentBuilder', '(', ')', ';', 'Document', 'document', '=', 'parser', '.', 'parse', '(', 'is', ')', ';', 'NodeList', 'elements', '=', 'document', '.', 'getElementsByTagName', '(', '"', 'help', '"', ')', ';', 'Element', 'element', '=', '(', 'Element', ')', 'elements', '.', 'item', '(', '0', ')', ';', 'root', '=', 'createTreeContent', '(', 'element', ')', ';', 'is', '.', 'close', '(', ')', ';', 'return', 'root', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', 'null', ';', '}', 'catch', '(', 'ParserConfigurationException', 'e1', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'e1', '.', 'getMessage', '(', ')', ')', ';', 'return', 'null', ';', '}', 'catch', '(', 'org', '.', 'xml', '.', 'sax', '.', 'SAXException', 'e2', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'e2', '.', 'getMessage', '(', ')', ')', ';', 'return', 'null', ';', '}', '}']
Example 163 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'convert', '(', 'File', 'src', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'src', ')', ')', ';', 'DcmParser', 'p', '=', 'pfact', '.', 'newDcmParser', '(', 'in', ')', ';', 'Dataset', 'ds', '=', 'fact', '.', 'newDataset', '(', ')', ';', 'p', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'try', '{', 'FileFormat', 'format', '=', 'p', '.', 'detectFileFormat', '(', ')', ';', 'if', '(', 'format', '!=', 'FileFormat', '.', 'ACRNEMA_STREAM', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'not', 'an', 'ACRNEMA', 'stream!', '"', ')', ';', 'return', ';', '}', 'p', '.', 'parseDcmFile', '(', 'format', ',', 'Tags', '.', 'PixelData', ')', ';', 'if', '(', 'ds', '.', 'contains', '(', 'Tags', '.', 'StudyInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SeriesInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SOPInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SOPClassUID', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'contains', 'UIDs!', '"', '+', '"', '', '=>', 'probable', 'already', 'DICOM', '-', 'do', 'not', 'convert', '"', ')', ';', 'return', ';', '}', 'boolean', 'hasPixelData', '=', 'p', '.', 'getReadTag', '(', ')', '==', 'Tags', '.', 'PixelData', ';', 'boolean', 'inflate', '=', 'hasPixelData', '&&', 'ds', '.', 'getInt', '(', 'Tags', '.', 'BitsAllocated', ',', '0', ')', '==', '12', ';', 'int', 'pxlen', '=', 'p', '.', 'getReadLength', '(', ')', ';', 'if', '(', 'hasPixelData', ')', '{', 'if', '(', 'inflate', ')', '{', 'ds', '.', 'putUS', '(', 'Tags', '.', 'BitsAllocated', ',', '16', ')', ';', 'pxlen', '=', 'pxlen', '*', '4', '/', '3', ';', '}', 'if', '(', 'pxlen', '!=', '(', 'ds', '.', 'getInt', '(', 'Tags', '.', 'BitsAllocated', ',', '0', ')', '>>>', '3', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'Rows', ',', '0', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'Columns', ',', '0', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'NumberOfFrames', ',', '1', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'NumberOfSamples', ',', '1', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'mismatch', 'pixel', 'data', 'length!', '"', '+', '"', '', '=>', 'do', 'not', 'convert', '"', ')', ';', 'return', ';', '}', '}', 'ds', '.', 'putUI', '(', 'Tags', '.', 'StudyInstanceUID', ',', 'uid', '(', 'studyUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SeriesInstanceUID', ',', 'uid', '(', 'seriesUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SOPInstanceUID', ',', 'uid', '(', 'instUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SOPClassUID', ',', 'classUID', ')', ';', 'if', '(', '!', 'ds', '.', 'contains', '(', 'Tags', '.', 'NumberOfSamples', ')', ')', '{', 'ds', '.', 'putUS', '(', 'Tags', '.', 'NumberOfSamples', ',', '1', ')', ';', '}', 'if', '(', '!', 'ds', '.', 'contains', '(', 'Tags', '.', 'PhotometricInterpretation', ')', ')', '{', 'ds', '.', 'putCS', '(', 'Tags', '.', 'PhotometricInterpretation', ',', '"', 'MONOCHROME2', '"', ')', ';', '}', 'if', '(', 'fmi', ')', '{', 'ds', '.', 'setFileMetaInfo', '(', 'fact', '.', 'newFileMetaInfo', '(', 'ds', ',', 'UIDs', '.', 'ImplicitVRLittleEndian', ')', ')', ';', '}', 'OutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'dest', ')', ')', ';', 'try', '{', '}', 'finally', '{', 'ds', '.', 'writeFile', '(', 'out', ',', 'encodeParam', '(', ')', ')', ';', 'if', '(', 'hasPixelData', ')', '{', 'if', '(', '!', 'skipGroupLen', ')', '{', 'out', '.', 'write', '(', 'PXDATA_GROUPLEN', ')', ';', 'int', 'grlen', '=', 'pxlen', '+', '8', ';', 'out', '.', 'write', '(', '(', 'byte', ')', 'grlen', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '8', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '16', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '24', ')', ')', ';', '}', 'out', '.', 'write', '(', 'PXDATA_TAG', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', 'pxlen', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '8', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '16', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '24', ')', ')', ';', '}', 'if', '(', 'inflate', ')', '{', 'int', 'b2', ',', 'b3', ';', 'for', '(', ';', 'pxlen', '>', '0', ';', 'pxlen', '-=', '3', ')', '{', 'out', '.', 'write', '(', 'in', '.', 'read', '(', ')', ')', ';', 'b2', '=', 'in', '.', 'read', '(', ')', ';', 'b3', '=', 'in', '.', 'read', '(', ')', ';', 'out', '.', 'write', '(', 'b2', '&', '0x0f', ')', ';', 'out', '.', 'write', '(', 'b2', '>>', '4', '|', '(', '(', 'b3', '&', '0x0f', ')', '<<', '4', ')', ')', ';', 'out', '.', 'write', '(', 'b3', '>>', '4', ')', ';', '}', '}', 'else', '{', 'for', '(', ';', 'pxlen', '>', '0', ';', '--', 'pxlen', ')', '{', 'out', '.', 'write', '(', 'in', '.', 'read', '(', ')', ')', ';', '}', '}', 'out', '.', 'close', '(', ')', ';', '}', 'System', '.', 'out', '.', 'print', '(', "'.'", ')', ';', '}', 'finally', '{', 'in', '.', 'close', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! out => o (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! in => f (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! dest => Dest (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! o => output (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! output => obj (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! f => n (1 => 1, 0.99988 => 0.99988) a=1.010
  >>  iter 7, ACC! Dest => done (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! obj => net (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! done => sac (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! n => nin (1 => 1, 0.99988 => 0.99988) a=1.001
Example 164 attack result: {'succ': False, 'tokens': '    public void convert(File src, File sac) throws IOException {\n        InputStream nin = new BufferedInputStream(new FileInputStream(src));\n        DcmParser p = pfact.newDcmParser(nin);\n        Dataset ds = fact.newDataset();\n        p.setDcmHandler(ds.getDcmHandler());\n        try {\n            FileFormat format = p.detectFileFormat();\n            if (format != FileFormat.ACRNEMA_STREAM) {\n                System.net.println("\n" + src + ": not an ACRNEMA stream!");\n                return;\n            }\n            p.parseDcmFile(format, Tags.PixelData);\n            if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {\n                System.net.println("\n" + src + ": contains UIDs!" + " => probable already DICOM - do not convert");\n                return;\n            }\n            boolean hasPixelData = p.getReadTag() == Tags.PixelData;\n            boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;\n            int pxlen = p.getReadLength();\n            if (hasPixelData) {\n                if (inflate) {\n                    ds.putUS(Tags.BitsAllocated, 16);\n                    pxlen = pxlen * 4 / 3;\n                }\n                if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {\n                    System.net.println("\n" + src + ": mismatch pixel data length!" + " => do not convert");\n                    return;\n                }\n            }\n            ds.putUI(Tags.StudyInstanceUID, uid(studyUID));\n            ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));\n            ds.putUI(Tags.SOPInstanceUID, uid(instUID));\n            ds.putUI(Tags.SOPClassUID, classUID);\n            if (!ds.contains(Tags.NumberOfSamples)) {\n                ds.putUS(Tags.NumberOfSamples, 1);\n            }\n            if (!ds.contains(Tags.PhotometricInterpretation)) {\n                ds.putCS(Tags.PhotometricInterpretation, "MONOCHROME2");\n            }\n            if (fmi) {\n                ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));\n            }\n            OutputStream net = new BufferedOutputStream(new FileOutputStream(sac));\n            try {\n            } finally {\n                ds.writeFile(net, encodeParam());\n                if (hasPixelData) {\n                    if (!skipGroupLen) {\n                        net.write(PXDATA_GROUPLEN);\n                        int grlen = pxlen + 8;\n                        net.write((byte) grlen);\n                        net.write((byte) (grlen >> 8));\n                        net.write((byte) (grlen >> 16));\n                        net.write((byte) (grlen >> 24));\n                    }\n                    net.write(PXDATA_TAG);\n                    net.write((byte) pxlen);\n                    net.write((byte) (pxlen >> 8));\n                    net.write((byte) (pxlen >> 16));\n                    net.write((byte) (pxlen >> 24));\n                }\n                if (inflate) {\n                    int b2, b3;\n                    for (; pxlen > 0; pxlen -= 3) {\n                        net.write(nin.read());\n                        b2 = nin.read();\n                        b3 = nin.read();\n                        net.write(b2 & 0x0f);\n                        net.write(b2 >> 4 | ((b3 & 0x0f) << 4));\n                        net.write(b3 >> 4);\n                    }\n                } else {\n                    for (; pxlen > 0; --pxlen) {\n                        net.write(nin.read());\n                    }\n                }\n                net.close();\n            }\n            System.net.print(\'.\');\n        } finally {\n            nin.close();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 764, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': -6.009941e-08, 'nb_changed_var': 3, 'nb_changed_pos': 31, 'replace_info': {'out': 'net', 'in': 'nin', 'dest': 'sac'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 164 FAILED.
  time cost = 0.19 min
  ALL EXAMPLE time cost = 11.11 min
  curr succ rate = 0.016666666666666666
Query times in this attack:  306
All Query times:  17892
raw_tokens: ['public', 'synchronized', 'int', 'insertMessage', '(', 'FrostMessageObject', 'mo', ')', '{', 'AttachmentList', 'files', '=', 'mo', '.', 'getAttachmentsOfType', '(', 'Attachment', '.', 'FILE', ')', ';', 'AttachmentList', 'boards', '=', 'mo', '.', 'getAttachmentsOfType', '(', 'Attachment', '.', 'BOARD', ')', ';', 'Connection', 'conn', '=', 'AppLayerDatabase', '.', 'getInstance', '(', ')', '.', 'getPooledConnection', '(', ')', ';', 'try', '{', 'conn', '.', 'setAutoCommit', '(', 'false', ')', ';', 'PreparedStatement', 'ps', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '', '"', '+', 'getMessageTableName', '(', ')', '+', '"', '', '(', '"', '+', '"', 'primkey,messageid,inreplyto,isvalid,invalidreason,msgdatetime,msgindex,board,fromname,subject,recipient,signature,', '"', '+', '"', 'signaturestatus,publickey,isdeleted,isnew,isreplied,isjunk,isflagged,isstarred,hasfileattachment,hasboardattachment,idlinepos,idlinelen', '"', '+', '"', ')', 'VALUES', '(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)', '"', ')', ';', 'Long', 'identity', '=', 'null', ';', 'Statement', 'stmt', '=', 'AppLayerDatabase', '.', 'getInstance', '(', ')', '.', 'createStatement', '(', ')', ';', 'ResultSet', 'rs', '=', 'stmt', '.', 'executeQuery', '(', '"', 'select', "UNIQUEKEY('", '"', '+', 'getMessageTableName', '(', ')', '+', '"', "')", '"', ')', ';', 'if', '(', 'rs', '.', 'next', '(', ')', ')', '{', 'identity', '=', 'new', 'Long', '(', 'rs', '.', 'getLong', '(', '1', ')', ')', ';', '}', 'else', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'Could', 'not', 'retrieve', 'a', 'new', 'unique', 'key!', '"', ')', ';', '}', 'rs', '.', 'close', '(', ')', ';', 'stmt', '.', 'close', '(', ')', ';', 'int', 'i', '=', '1', ';', 'ps', '.', 'setLong', '(', 'i', '++', ',', 'identity', '.', 'longValue', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getMessageId', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getInReplyTo', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isValid', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getInvalidReason', '(', ')', ')', ';', 'ps', '.', 'setLong', '(', 'i', '++', ',', 'mo', '.', 'getDateAndTime', '(', ')', '.', 'getMillis', '(', ')', ')', ';', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getIndex', '(', ')', ')', ';', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getBoard', '(', ')', '.', 'getPrimaryKey', '(', ')', '.', 'intValue', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getFromName', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getSubject', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', '(', '(', 'mo', '.', 'getRecipientName', '(', ')', '!=', 'null', '&&', 'mo', '.', 'getRecipientName', '(', ')', '.', 'length', '(', ')', '==', '0', ')', '?', 'null', ':', 'mo', '.', 'getRecipientName', '(', ')', ')', ')', ';', 'if', '(', 'mo', '.', 'getSignatureV2', '(', ')', '==', 'null', '||', 'mo', '.', 'getSignatureV2', '(', ')', '.', 'length', '(', ')', '==', '0', ')', '{', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getSignatureV1', '(', ')', ')', ';', '}', 'else', '{', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getSignatureV2', '(', ')', ')', ';', '}', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getSignatureStatus', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getPublicKey', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isDeleted', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isNew', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isReplied', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isJunk', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isFlagged', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isStarred', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', '(', 'files', '.', 'size', '(', ')', '>', '0', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', '(', 'boards', '.', 'size', '(', ')', '>', '0', ')', ')', ';', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getIdLinePos', '(', ')', ')', ';', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getIdLineLen', '(', ')', ')', ';', 'int', 'inserted', ';', 'try', '{', 'inserted', '=', 'ps', '.', 'executeUpdate', '(', ')', ';', '}', 'finally', '{', 'ps', '.', 'close', '(', ')', ';', '}', 'if', '(', 'inserted', '==', '0', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'message', 'insert', 'returned', '0', '!!!', '"', ')', ';', 'throw', 'new', 'Exception', '(', '"', 'message', 'insert', 'returned', '0', '!!!', '"', ')', ';', '}', 'mo', '.', 'setMsgIdentity', '(', 'identity', '.', 'longValue', '(', ')', ')', ';', 'PreparedStatement', 'pc', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '', '"', '+', 'getContentTableName', '(', ')', '+', '"', '', '(msgref,msgcontent)', 'VALUES', '(?,?)', '"', ')', ';', 'pc', '.', 'setLong', '(', '1', ',', 'mo', '.', 'getMsgIdentity', '(', ')', ')', ';', 'pc', '.', 'setString', '(', '2', ',', 'mo', '.', 'getContent', '(', ')', ')', ';', 'try', '{', 'inserted', '=', 'pc', '.', 'executeUpdate', '(', ')', ';', '}', 'finally', '{', 'pc', '.', 'close', '(', ')', ';', '}', 'if', '(', 'inserted', '==', '0', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'message', 'content', 'insert', 'returned', '0', '!!!', '"', ')', ';', 'throw', 'new', 'Exception', '(', '"', 'message', 'content', 'insert', 'returned', '0', '!!!', '"', ')', ';', '}', 'if', '(', 'files', '.', 'size', '(', ')', '>', '0', ')', '{', 'PreparedStatement', 'p', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '', '"', '+', 'getFileAttachmentsTableName', '(', ')', '+', '"', '', '(msgref,filename,filesize,filekey)', '"', '+', '"', '', 'VALUES', '(?,?,?,?)', '"', ')', ';', 'try', '{', 'for', '(', 'Iterator', 'it', '=', 'files', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'FileAttachment', 'fa', '=', '(', 'FileAttachment', ')', 'it', '.', 'next', '(', ')', ';', 'int', 'ix', '=', '1', ';', 'p', '.', 'setLong', '(', 'ix', '++', ',', 'mo', '.', 'getMsgIdentity', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'fa', '.', 'getFilename', '(', ')', ')', ';', 'p', '.', 'setLong', '(', 'ix', '++', ',', 'fa', '.', 'getFileSize', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'fa', '.', 'getKey', '(', ')', ')', ';', 'int', 'ins', '=', 'p', '.', 'executeUpdate', '(', ')', ';', 'if', '(', 'ins', '==', '0', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'fileattachment', 'insert', 'returned', '0', '!!!', '"', ')', ';', 'throw', 'new', 'Exception', '(', '"', 'fileattachment', 'insert', 'returned', '0', '!!!', '"', ')', ';', '}', '}', '}', 'finally', '{', 'p', '.', 'close', '(', ')', ';', '}', '}', 'if', '(', 'boards', '.', 'size', '(', ')', '>', '0', ')', '{', 'PreparedStatement', 'p', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '', '"', '+', 'getBoardAttachmentsTableName', '(', ')', '+', '"', '', '(msgref,boardname,boardpublickey,boardprivatekey,boarddescription)', '"', '+', '"', '', 'VALUES', '(?,?,?,?,?)', '"', ')', ';', 'try', '{', 'for', '(', 'Iterator', 'it', '=', 'boards', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'BoardAttachment', 'ba', '=', '(', 'BoardAttachment', ')', 'it', '.', 'next', '(', ')', ';', 'Board', 'b', '=', 'ba', '.', 'getBoardObj', '(', ')', ';', 'int', 'ix', '=', '1', ';', 'p', '.', 'setLong', '(', 'ix', '++', ',', 'mo', '.', 'getMsgIdentity', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'b', '.', 'getNameLowerCase', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'b', '.', 'getPublicKey', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'b', '.', 'getPrivateKey', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'b', '.', 'getDescription', '(', ')', ')', ';', 'int', 'ins', '=', 'p', '.', 'executeUpdate', '(', ')', ';', 'if', '(', 'ins', '==', '0', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'boardattachment', 'insert', 'returned', '0', '!!!', '"', ')', ';', 'throw', 'new', 'Exception', '(', '"', 'boardattachment', 'insert', 'returned', '0', '!!!', '"', ')', ';', '}', '}', '}', 'finally', '{', 'p', '.', 'close', '(', ')', ';', '}', '}', 'conn', '.', 'commit', '(', ')', ';', 'conn', '.', 'setAutoCommit', '(', 'true', ')', ';', 'return', 'INSERT_OK', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'boolean', 'isDuplicate', ';', 'if', '(', 't', '.', 'getMessage', '(', ')', '.', 'indexOf', '(', '"', 'constraint', 'violation', '"', ')', '>', '0', '&&', 't', '.', 'getMessage', '(', ')', '.', 'indexOf', '(', '"', 'MSG_ID_UNIQUE_ONLY', '"', ')', '>', '0', ')', '{', 'isDuplicate', '=', 'true', ';', 'logger', '.', 'warning', '(', '"', 'Duplicate', 'message', 'id,', 'not', 'added', 'to', 'database', 'table:', "msgid='", '"', '+', 'mo', '.', 'getMessageId', '(', ')', '+', '"', "',", 'board=', '"', '+', 'mo', '.', 'getBoard', '(', ')', '.', 'getName', '(', ')', '+', '"', ',', "date='", '"', '+', 'mo', '.', 'getDateAndTimeString', '(', ')', '+', '"', "',", 'index=', '"', '+', 'mo', '.', 'getIndex', '(', ')', ')', ';', '}', 'else', 'if', '(', 't', '.', 'getMessage', '(', ')', '.', 'indexOf', '(', '"', 'constraint', 'violation', '"', ')', '>', '0', '&&', 't', '.', 'getMessage', '(', ')', '.', 'indexOf', '(', '"', 'MSG_UNIQUE_ONLY', '"', ')', '>', '0', ')', '{', 'isDuplicate', '=', 'true', ';', 'logger', '.', 'warning', '(', '"', 'Duplicate', 'msgdatetime,index,board,', 'not', 'added', 'to', 'database', 'table:', "msgid='", '"', '+', 'mo', '.', 'getMessageId', '(', ')', '+', '"', "',", 'board=', '"', '+', 'mo', '.', 'getBoard', '(', ')', '.', 'getName', '(', ')', '+', '"', ',', "date='", '"', '+', 'mo', '.', 'getDateAndTimeString', '(', ')', '+', '"', "',", 'index=', '"', '+', 'mo', '.', 'getIndex', '(', ')', ')', ';', '}', 'else', '{', 'isDuplicate', '=', 'false', ';', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'Exception', 'during', 'insert', 'of', 'message:', "msgid='", '"', '+', 'mo', '.', 'getMessageId', '(', ')', '+', '"', "',", 'board=', '"', '+', 'mo', '.', 'getBoard', '(', ')', '.', 'getName', '(', ')', '+', '"', ',', "date='", '"', '+', 'mo', '.', 'getDateAndTimeString', '(', ')', '+', '"', "',", 'index=', '"', '+', 'mo', '.', 'getIndex', '(', ')', ',', 't', ')', ';', 'try', '{', 'conn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't1', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'Exception', 'during', 'rollback', '"', ',', 't1', ')', ';', '}', '}', 'try', '{', 'conn', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'catch', '(', 'Throwable', 't1', ')', '{', '}', 'if', '(', 'isDuplicate', ')', '{', 'return', 'INSERT_DUPLICATE', ';', '}', 'else', '{', 'return', 'INSERT_ERROR', ';', '}', '}', 'finally', '{', 'AppLayerDatabase', '.', 'getInstance', '(', ')', '.', 'givePooledConnection', '(', 'conn', ')', ';', '}', '}']
Example 165 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'byte', '[', ']', 'computeMD5', '(', 'String', 'plainText', ')', 'throws', 'GException', '{', 'MessageDigest', 'md', '=', 'null', ';', 'try', '{', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'ex', ')', '{', 'throw', 'new', 'GException', '(', '"', 'The', 'MD5', 'hash', 'algorithm', 'is', 'not', 'available.', '"', ',', 'ex', ')', ';', '}', 'try', '{', 'md', '.', 'update', '(', 'plainText', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ex', ')', '{', 'throw', 'new', 'GException', '(', '"', 'The', 'UTF-8', 'encoding', 'is', 'not', 'supported.', '"', ',', 'ex', ')', ';', '}', 'return', 'md', '.', 'digest', '(', ')', ';', '}']
Example 166 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'execute_check', '(', ')', '{', 'FTPClient', 'ftp', '=', 'new', 'FTPClient', '(', ')', ';', 'File', 'filename', '=', 'null', ';', 'FileChannel', 'channel', ';', 'InputStream', 'is', ';', 'OutputStream', 'os', ';', 'int', 'reply', ';', 'if', '(', 'super', '.', 'verbose', '>', '0', ')', 'verbose', '=', 'true', ';', 'ftp', '.', 'setDefaultPort', '(', 'port', ')', ';', 'ftp', '.', 'setDefaultTimeout', '(', 'timeout', ')', ';', 'if', '(', 'verbose', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'FTP', 'Server:', '', '"', '+', 'hostname', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'FTP', 'Port:', '', '"', '+', 'port', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'Timeout', 'of:', '', '"', '+', 'timeout', ')', ';', '}', 'if', '(', 'passive', ')', '{', 'ftp', '.', 'enterLocalPassiveMode', '(', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'Passive', 'Mode', '"', ')', ';', '}', 'try', '{', 'filename', '=', 'new', 'File', '(', 'file', ')', ';', 'channel', '=', 'new', 'RandomAccessFile', '(', 'filename', ',', '"', 'rw', '"', ')', '.', 'getChannel', '(', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'FTP', 'Connection', 'to', '', '"', '+', 'hostname', ')', ';', 'ftp', '.', 'connect', '(', 'hostname', ')', ';', 'reply', '=', 'ftp', '.', 'getReplyCode', '(', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'reply', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'FTP', 'Connection', 'to', '', '"', '+', 'hostname', '+', '"', '', 'failed', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'username', '!=', 'null', '&&', 'password', '!=', 'null', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'log', 'in', 'into', 'FTP', 'Server', '', '"', '+', 'hostname', ')', ';', 'if', '(', '!', 'ftp', '.', 'login', '(', 'username', ',', 'password', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'log', 'in', 'to', 'FTP', 'Server', '', '"', '+', 'hostname', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'change', 'to', 'required', 'directory', '"', ')', ';', 'if', '(', '!', 'ftp', '.', 'changeWorkingDirectory', '(', 'directory', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Required', 'directory', 'cannot', 'be', 'found!', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'retrieve', 'specified', 'file!', '"', ')', ';', 'is', '=', 'ftp', '.', 'retrieveFileStream', '(', 'file', ')', ';', 'if', '(', 'is', '==', 'null', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'locate', 'required', 'file.', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'os', '=', 'Channels', '.', 'newOutputStream', '(', 'channel', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '4096', ']', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Beginning', 'File', 'transfer...', '"', ')', ';', 'for', '(', 'int', 'len', '=', '-', '1', ';', '(', 'len', '=', 'is', '.', 'read', '(', 'buf', ')', ')', '!=', '-', '1', ';', ')', 'os', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'if', '(', 'verbose', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '...transfer', 'complete.', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'finalise', 'Command', '"', ')', ';', '}', 'if', '(', '!', 'ftp', '.', 'completePendingCommand', '(', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'finalise', 'command', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Check', 'Completed.', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_OK', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', 'os', '.', 'close', '(', ')', ';', 'channel', '.', 'close', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'e', '.', 'getMessage', '(', ')', ';', 'if', '(', 'filename', '!=', 'null', ')', 'filename', '.', 'delete', '(', ')', ';', '}', 'finally', '{', 'if', '(', 'ftp', '.', 'isConnected', '(', ')', ')', '{', 'try', '{', 'ftp', '.', 'logout', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}', 'return', 'true', ';', '}']
Example 167 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'testJob', '(', ')', '{', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', '"', 'http://rickysql.gotoip3.com/mapp/admin/admin.do', '"', ')', ';', 'url', '.', 'openConnection', '(', ')', ';', 'url', '.', 'getContent', '(', ')', ';', 'System', '.', 'out', '.', 'print', '(', '"', '00', '"', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'print', '(', '"', 'Daily', 'data', 'update', 'exception:', '"', '+', 'e', ')', ';', '}', '}']
  >>  iter 1, ACC! out => doc (0 => 0, 0.99998 => 0.99998) a=1.026
  >>  iter 2, ACC! doc => user (0 => 0, 0.99998 => 0.99998) a=1.026
  >>  iter 3, ACC! user => ext (0 => 0, 0.99998 => 0.99998) a=1.037
  >>  iter 4, ACC! ext => ex (0 => 0, 0.99998 => 0.99998) a=1.005
  >>  iter 5, ACC! ex => file (0 => 0, 0.99998 => 0.99998) a=1.042
  >>  iter 6, ACC! file => o (0 => 0, 0.99998 => 0.99998) a=1.106
  >>  iter 7, ACC! o => err (0 => 0, 0.99998 => 0.99998) a=1.037
  >>  iter 8, ACC! err => cache (0 => 0, 0.99998 => 0.99998) a=1.042
  >>  iter 9, ACC! cache => dot (0 => 0, 0.99998 => 0.99998) a=1.037
  >>  iter 10, ACC! dot => again (0 => 0, 0.99998 => 0.99998) a=1.027
Example 169 attack result: {'succ': False, 'tokens': '    public void testJob() {\n        try {\n            URL url = new URL("http://rickysql.gotoip3.com/mapp/admin/admin.do");\n            url.openConnection();\n            url.getContent();\n            System.again.print("00");\n        } catch (Exception e) {\n            System.again.print("Daily data update exception:" + e);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 64, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'out': 'again'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 169 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 11.30 min
  curr succ rate = 0.01639344262295082
Query times in this attack:  302
All Query times:  18194
raw_tokens: ['private', 'final', 'Vector', '<', 'Class', '<', '?', '>', '>', 'findSubclasses', '(', 'URL', 'location', ',', 'String', 'packageName', ',', 'Class', '<', '?', '>', 'superClass', ')', '{', 'synchronized', '(', 'results', ')', '{', 'Map', '<', 'Class', '<', '?', '>', ',', 'URL', '>', 'thisResult', '=', 'new', 'TreeMap', '<', 'Class', '<', '?', '>', ',', 'URL', '>', '(', 'CLASS_COMPARATOR', ')', ';', 'Vector', '<', 'Class', '<', '?', '>', '>', 'v', '=', 'new', 'Vector', '<', 'Class', '<', '?', '>', '>', '(', ')', ';', 'String', 'fqcn', '=', 'searchClass', '.', 'getName', '(', ')', ';', 'List', '<', 'URL', '>', 'knownLocations', '=', 'new', 'ArrayList', '<', 'URL', '>', '(', ')', ';', 'knownLocations', '.', 'add', '(', 'location', ')', ';', 'for', '(', 'int', 'loc', '=', '0', ';', 'loc', '<', 'knownLocations', '.', 'size', '(', ')', ';', 'loc', '++', ')', '{', 'URL', 'url', '=', 'knownLocations', '.', 'get', '(', 'loc', ')', ';', 'File', 'directory', '=', 'new', 'File', '(', 'url', '.', 'getFile', '(', ')', ')', ';', 'if', '(', 'directory', '.', 'exists', '(', ')', ')', '{', 'String', '[', ']', 'files', '=', 'directory', '.', 'list', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', 'files', '[', 'i', ']', '.', 'endsWith', '(', '"', '.class', '"', ')', ')', '{', 'String', 'classname', '=', 'files', '[', 'i', ']', '.', 'substring', '(', '0', ',', 'files', '[', 'i', ']', '.', 'length', '(', ')', '-', '6', ')', ';', 'try', '{', 'Class', '<', '?', '>', 'c', '=', 'Class', '.', 'forName', '(', 'packageName', '+', '"', '.', '"', '+', 'classname', ')', ';', 'if', '(', 'superClass', '.', 'isAssignableFrom', '(', 'c', ')', '&&', '!', 'fqcn', '.', 'equals', '(', 'packageName', '+', '"', '.', '"', '+', 'classname', ')', ')', '{', 'thisResult', '.', 'put', '(', 'c', ',', 'url', ')', ';', '}', '}', 'catch', '(', 'ClassNotFoundException', 'cnfex', ')', '{', 'errors', '.', 'add', '(', 'cnfex', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'errors', '.', 'add', '(', 'ex', ')', ';', '}', '}', '}', '}', 'else', '{', 'try', '{', 'JarURLConnection', 'conn', '=', '(', 'JarURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'JarFile', 'jarFile', '=', 'conn', '.', 'getJarFile', '(', ')', ';', 'Enumeration', '<', 'JarEntry', '>', 'e', '=', 'jarFile', '.', 'entries', '(', ')', ';', 'while', '(', 'e', '.', 'hasMoreElements', '(', ')', ')', '{', 'JarEntry', 'entry', '=', 'e', '.', 'nextElement', '(', ')', ';', 'String', 'entryname', '=', 'entry', '.', 'getName', '(', ')', ';', 'if', '(', '!', 'entry', '.', 'isDirectory', '(', ')', '&&', 'entryname', '.', 'endsWith', '(', '"', '.class', '"', ')', ')', '{', 'String', 'classname', '=', 'entryname', '.', 'substring', '(', '0', ',', 'entryname', '.', 'length', '(', ')', '-', '6', ')', ';', 'if', '(', 'classname', '.', 'startsWith', '(', '"', '/', '"', ')', ')', 'classname', '=', 'classname', '.', 'substring', '(', '1', ')', ';', 'classname', '=', 'classname', '.', 'replace', '(', "'/'", ',', "'.'", ')', ';', 'try', '{', 'Class', 'c', '=', 'Class', '.', 'forName', '(', 'classname', ')', ';', 'if', '(', 'superClass', '.', 'isAssignableFrom', '(', 'c', ')', '&&', '!', 'fqcn', '.', 'equals', '(', 'classname', ')', ')', '{', 'thisResult', '.', 'put', '(', 'c', ',', 'url', ')', ';', '}', '}', 'catch', '(', 'ClassNotFoundException', 'cnfex', ')', '{', 'errors', '.', 'add', '(', 'cnfex', ')', ';', '}', 'catch', '(', 'NoClassDefFoundError', 'ncdfe', ')', '{', 'errors', '.', 'add', '(', 'ncdfe', ')', ';', '}', 'catch', '(', 'UnsatisfiedLinkError', 'ule', ')', '{', 'errors', '.', 'add', '(', 'ule', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', 'errors', '.', 'add', '(', 'exception', ')', ';', '}', 'catch', '(', 'Error', 'error', ')', '{', 'errors', '.', 'add', '(', 'error', ')', ';', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioex', ')', '{', 'errors', '.', 'add', '(', 'ioex', ')', ';', '}', '}', '}', 'results', '.', 'putAll', '(', 'thisResult', ')', ';', 'Iterator', '<', 'Class', '<', '?', '>', '>', 'it', '=', 'thisResult', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'v', '.', 'add', '(', 'it', '.', 'next', '(', ')', ')', ';', '}', 'return', 'v', ';', '}', '}']
Example 170 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFiles', '(', 'File', 'source', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'FileChannel', 'in', '=', 'null', ',', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'FileInputStream', '(', 'source', ')', '.', 'getChannel', '(', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'dest', ')', '.', 'getChannel', '(', ')', ';', 'long', 'size', '=', 'in', '.', 'size', '(', ')', ';', 'MappedByteBuffer', 'buf', '=', 'in', '.', 'map', '(', 'FileChannel', '.', 'MapMode', '.', 'READ_ONLY', ',', '0', ',', 'size', ')', ';', 'out', '.', 'write', '(', 'buf', ')', ';', '}', 'finally', '{', 'if', '(', 'in', '!=', 'null', ')', 'in', '.', 'close', '(', ')', ';', 'if', '(', 'out', '!=', 'null', ')', 'out', '.', 'close', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! out => bin (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! bin => outs (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 3, REJ. outs => part (1 => 1, 0.99988 => 0.99988) a=0.999
  >>  iter 4, ACC! in => err (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! err => p (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 6, ACC! outs => co (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! co => and (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 8, ACC! and => ou (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 9, ACC! p => inner (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! inner => ic (1 => 1, 0.99988 => 0.99988) a=1.002
Example 171 attack result: {'succ': False, 'tokens': '    public static void copyFiles(File source, File dest) throws IOException {\n        FileChannel ic = null, ou = null;\n        try {\n            ic = new FileInputStream(source).getChannel();\n            ou = new FileOutputStream(dest).getChannel();\n            long size = ic.size();\n            MappedByteBuffer buf = ic.map(FileChannel.MapMode.READ_ONLY, 0, size);\n            ou.write(buf);\n        } finally {\n            if (ic != null) ic.close();\n            if (ou != null) ou.close();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 112, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': -3.1111995e-08, 'nb_changed_var': 2, 'nb_changed_pos': 11, 'replace_info': {'out': 'ou', 'in': 'ic'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 171 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 11.45 min
  curr succ rate = 0.016129032258064516
Query times in this attack:  292
All Query times:  18486
raw_tokens: ['@', 'Override', 'protected', 'void', 'doGet', '(', 'HttpServletRequest', 'request', ',', 'HttpServletResponse', 'response', ')', 'throws', 'ServletException', ',', 'IOException', '{', 'long', 't0', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'String', 'id', '=', 'request', '.', 'getRequestURI', '(', ')', '.', 'split', '(', '"', '/', '"', ')', '[', '3', ']', ';', 'Song', 'song', '=', 'manager', '.', 'find', '(', 'id', ')', ';', 'if', '(', 'song', '!=', 'null', ')', '{', 'if', '(', 'song', '.', 'getArtwork', '(', ')', ')', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '"', 'song', 'has', 'embedded', 'artwork', '"', ')', ';', 'try', '{', 'AudioFile', 'af', '=', 'AudioFileIO', '.', 'read', '(', 'new', 'File', '(', 'song', '.', 'getFile', '(', ')', ')', ')', ';', 'Tag', 'tag', '=', 'af', '.', 'getTag', '(', ')', ';', 'Artwork', 'aw', '=', 'tag', '.', 'getFirstArtwork', '(', ')', ';', 'byte', '[', ']', 'bytes', '=', 'aw', '.', 'getBinaryData', '(', ')', ';', 'response', '.', 'setStatus', '(', 'HttpServletResponse', '.', 'SC_OK', ')', ';', 'response', '.', 'setContentType', '(', 'aw', '.', 'getMimeType', '(', ')', ')', ';', 'response', '.', 'getOutputStream', '(', ')', '.', 'write', '(', 'bytes', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', 'else', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '"', 'search', 'in', 'directory', '"', ')', ';', 'File', 'directory', '=', 'new', 'File', '(', 'song', '.', 'getFile', '(', ')', ')', '.', 'getParentFile', '(', ')', ';', 'File', '[', ']', 'files', '=', 'directory', '.', 'listFiles', '(', 'filter', ')', ';', 'if', '(', 'files', '!=', 'null', '&&', 'files', '.', 'length', '>', '0', ')', '{', 'File', 'file', '=', 'files', '[', '0', ']', ';', 'String', 'type', '=', 'FilenameUtils', '.', 'getExtension', '(', 'file', '.', 'getName', '(', ')', ')', '.', 'toLowerCase', '(', ')', ';', 'if', '(', 'type', '.', 'startsWith', '(', '"', 'jp', '"', ')', ')', 'type', '=', '"', 'jpeg', '"', ';', 'String', 'mime', '=', '"', 'image/', '"', '+', 'type', ';', 'response', '.', 'setStatus', '(', 'HttpServletResponse', '.', 'SC_OK', ')', ';', 'response', '.', 'setContentType', '(', 'mime', ')', ';', 'FileInputStream', 'stream', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'stream', ',', 'response', '.', 'getOutputStream', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '.', 'warn', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'stream', ')', ';', '}', '}', 'else', '{', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '"', 'image', 'not', 'found:', '', '"', '+', 'id', '+', '"', ',', 'sending', 'redirect:', '', '"', '+', 'redirect', ')', ';', 'response', '.', 'sendRedirect', '(', 'redirect', ')', ';', '}', '}', '}', 'else', '{', 'log', '.', 'info', '(', '"', 'song', 'not', 'found:', '', '"', '+', 'id', ')', ';', 'response', '.', 'setStatus', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', ')', ';', '}', 'long', 't1', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'log', '.', 'info', '(', '"', 'request:', '', '"', '+', 'id', '+', '"', '', 'duration:', '', '"', '+', '(', 't1', '-', 't0', ')', '+', '"', 'ms', '"', ')', ';', '}']
Example 172 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFiles', '(', 'File', 'src', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'if', '(', 'src', '.', 'isDirectory', '(', ')', ')', '{', 'dest', '.', 'mkdirs', '(', ')', ';', 'for', '(', 'String', 'f', ':', 'src', '.', 'list', '(', ')', ')', '{', 'String', 'df', '=', 'dest', '.', 'getPath', '(', ')', '+', 'File', '.', 'separator', '+', 'f', ';', 'String', 'sf', '=', 'src', '.', 'getPath', '(', ')', '+', 'File', '.', 'separator', '+', 'f', ';', 'copyFiles', '(', 'new', 'File', '(', 'sf', ')', ',', 'new', 'File', '(', 'df', ')', ')', ';', '}', '}', 'else', '{', 'FileInputStream', 'fin', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'FileOutputStream', 'fout', '=', 'new', 'FileOutputStream', '(', 'dest', ')', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'fin', '.', 'read', '(', ')', ')', '>=', '0', ')', 'fout', '.', 'write', '(', 'c', ')', ';', 'fin', '.', 'close', '(', ')', ';', 'fout', '.', 'close', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! f => fl (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 2, ACC! fl => fx (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! c => x (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! fx => F (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! x => b (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! F => fc (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 7, ACC! fc => folder (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! folder => sf (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 9, ACC! sf => v (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! b => cl (1 => 1, 0.99988 => 0.99988) a=1.001
Example 173 attack result: {'succ': False, 'tokens': '    public static void copyFiles(File src, File dest) throws IOException {\n        if (src.isDirectory()) {\n            dest.mkdirs();\n            for (String v : src.list()) {\n                String df = dest.getPath() + File.separator + v;\n                String v = src.getPath() + File.separator + v;\n                copyFiles(new File(v), new File(df));\n            }\n        } else {\n            FileInputStream fin = new FileInputStream(src);\n            FileOutputStream fout = new FileOutputStream(dest);\n            int cl;\n            while ((cl = fin.read()) >= 0) fout.write(cl);\n            fin.close();\n            fout.close();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 146, 'new_pred': 1, 'is_success': -1, 'old_uid': 'c', 'score_info': -1.3060344e-08, 'nb_changed_var': 2, 'nb_changed_pos': 6, 'replace_info': {'f': 'v', 'c': 'cl'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 173 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 11.62 min
  curr succ rate = 0.015873015873015872
Query times in this attack:  301
All Query times:  18787
raw_tokens: ['public', 'boolean', 'retrieveByPMID', '(', 'String', 'pmid', ')', '{', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'baseURL', '+', '"', '&id=', '"', '+', 'pmid', '.', 'trim', '(', ')', ')', ';', 'BufferedReader', 'xml', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', '=', 'null', ';', 'StringBuffer', 'title_sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'while', '(', '(', 'line', '=', 'xml', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'line', '.', 'indexOf', '(', '"', '<ArticleTitle>', '"', ')', '!=', '-', '1', ')', '{', 'title_sb', '.', 'delete', '(', '0', ',', 'title_sb', '.', 'length', '(', ')', ')', ';', 'title_sb', '.', 'append', '(', 'line', '.', 'substring', '(', 'line', '.', 'indexOf', '(', '"', '<ArticleTitle>', '"', ')', '+', '14', ',', 'line', '.', 'length', '(', ')', '-', '15', ')', ')', ';', '}', 'else', 'if', '(', 'line', '.', 'indexOf', '(', '"', '<AbstractText>', '"', ')', '!=', '-', '1', ')', '{', 'PrintWriter', 'article', '=', 'new', 'PrintWriter', '(', 'new', 'FileWriter', '(', 'new', 'File', '(', 'outputDir', '.', 'getPath', '(', ')', '+', 'File', '.', 'separatorChar', '+', 'pmid', '+', '"', '.txt', '"', ')', ')', ')', ';', 'article', '.', 'println', '(', 'title_sb', ')', ';', 'article', '.', 'println', '(', 'line', '.', 'substring', '(', 'line', '.', 'indexOf', '(', '"', '<AbstractText>', '"', ')', '+', '14', ',', 'line', '.', 'length', '(', ')', '-', '15', ')', ')', ';', 'article', '.', 'close', '(', ')', ';', 'break', ';', '}', '}', 'xml', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'false', ';', '}']
  >>  iter 1, ACC! e => err (0 => 0, 0.99365 => 0.99370) a=1.005
  >>  iter 2, ACC! err => one (0 => 0, 0.99370 => 0.99365) a=1.013
  >>  iter 3, ACC! one => ze (0 => 0, 0.99365 => 0.99372) a=1.004
  >>  iter 4, ACC! ze => ae (0 => 0, 0.99372 => 0.99368) a=1.015
  >>  iter 5, ACC! ae => ie (0 => 0, 0.99368 => 0.99368) a=1.009
  >>  iter 6, ACC! ie => type (0 => 0, 0.99368 => 0.99369) a=1.010
  >>  iter 7, ACC! type => ele (0 => 0, 0.99369 => 0.99374) a=1.012
  >>  iter 8, ACC! ele => re (0 => 0, 0.99374 => 0.99368) a=1.019
  >>  iter 9, ACC! re => p (0 => 0, 0.99368 => 0.99370) a=1.010
  >>  iter 10, ACC! p => ie (0 => 0, 0.99370 => 0.99368) a=1.012
Example 175 attack result: {'succ': False, 'tokens': '    public boolean retrieveByPMID(String pmid) {\n        try {\n            URL url = new URL(baseURL + "&id=" + pmid.trim());\n            BufferedReader xml = new BufferedReader(new InputStreamReader(url.openStream()));\n            String line = null;\n            StringBuffer title_sb = new StringBuffer();\n            while ((line = xml.readLine()) != null) {\n                if (line.indexOf("<ArticleTitle>") != -1) {\n                    title_sb.delete(0, title_sb.length());\n                    title_sb.append(line.substring(line.indexOf("<ArticleTitle>") + 14, line.length() - 15));\n                } else if (line.indexOf("<AbstractText>") != -1) {\n                    PrintWriter article = new PrintWriter(new FileWriter(new File(outputDir.getPath() + File.separatorChar + pmid + ".txt")));\n                    article.println(title_sb);\n                    article.println(line.substring(line.indexOf("<AbstractText>") + 14, line.length() - 15));\n                    article.close();\n                    break;\n                }\n            }\n            xml.close();\n        } catch (Exception ie) {\n            ie.printStackTrace();\n        }\n        return false;\n    }\n', 'raw_tokens': None, 'prog_length': 249, 'new_pred': 0, 'is_success': -1, 'old_uid': 'e', 'score_info': 1.8417835e-05, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'e': 'ie'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 175 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 11.78 min
  curr succ rate = 0.015625
Query times in this attack:  305
All Query times:  19092
raw_tokens: ['public', 'static', 'boolean', 'encodeFileToFile', '(', 'String', 'infile', ',', 'String', 'outfile', ')', '{', 'boolean', 'success', '=', 'false', ';', 'java', '.', 'io', '.', 'InputStream', 'in', '=', 'null', ';', 'java', '.', 'io', '.', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'Base64', '.', 'InputStream', '(', 'new', 'java', '.', 'io', '.', 'BufferedInputStream', '(', 'new', 'java', '.', 'io', '.', 'FileInputStream', '(', 'infile', ')', ')', ',', 'Base64', '.', 'ENCODE', ')', ';', 'out', '=', 'new', 'java', '.', 'io', '.', 'BufferedOutputStream', '(', 'new', 'java', '.', 'io', '.', 'FileOutputStream', '(', 'outfile', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'success', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', 'try', '{', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', '}', 'return', 'success', ';', '}']
  >>  iter 1, ACC! out => comment (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! comment => ext (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! ext => o (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! in => ins (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! ins => b (1 => 1, 0.99988 => 0.99988) a=1.590
  >>  iter 6, ACC! o => temp (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! b => In (1 => 1, 0.99988 => 0.99988) a=1.283
  >>  iter 8, ACC! temp => ext (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! ext => connection (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! In => plus (1 => 1, 0.99988 => 0.99988) a=12.229
Example 176 attack result: {'succ': False, 'tokens': '    public static boolean encodeFileToFile(String infile, String outfile) {\n        boolean success = false;\n        java.io.InputStream plus = null;\n        java.io.OutputStream connection = null;\n        try {\n            plus = new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(infile)), Base64.ENCODE);\n            connection = new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));\n            byte[] buffer = new byte[65536];\n            int read = -1;\n            while ((read = plus.read(buffer)) >= 0) {\n                connection.write(buffer, 0, read);\n            }\n            success = true;\n        } catch (java.io.IOException exc) {\n            exc.printStackTrace();\n        } finally {\n            try {\n                plus.close();\n            } catch (Exception exc) {\n            }\n            try {\n                connection.close();\n            } catch (Exception exc) {\n            }\n        }\n        return success;\n    }\n', 'raw_tokens': None, 'prog_length': 193, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 2.6921043e-09, 'nb_changed_var': 2, 'nb_changed_pos': 8, 'replace_info': {'out': 'connection', 'in': 'plus'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 176 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 11.94 min
  curr succ rate = 0.015384615384615385
Query times in this attack:  298
All Query times:  19390
raw_tokens: ['protected', 'void', 'EncodeRoute', '(', ')', 'throws', 'EncodeFailedException', ',', 'IOException', '{', 'File', 'storefile', '=', 'getNode', '(', ')', '.', 'getCodec', '(', ')', '.', 'PackStore', '(', 'null', ',', 'ReturnStore', ')', ';', 'DownRoute', '.', 'EncodeData', '(', 'storefile', ')', ';', 'File', 'data', '=', 'getNode', '(', ')', '.', 'getCodec', '(', ')', '.', 'PackRemoteDownload', '(', 'this', ')', ';', 'data', '=', 'PigData', '.', 'EncodeData', '(', 'data', ')', ';', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'PiggybackRouteFile', ',', 'true', ')', ';', 'FileChannel', 'foc', '=', 'fos', '.', 'getChannel', '(', ')', ';', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'data', ')', ';', 'FileChannel', 'fic', '=', 'fis', '.', 'getChannel', '(', ')', ';', 'fic', '.', 'transferTo', '(', '0', ',', 'fic', '.', 'size', '(', ')', ',', 'foc', ')', ';', 'foc', '.', 'close', '(', ')', ';', 'fic', '.', 'close', '(', ')', ';', 'UpRoute', '.', 'EncodeData', '(', 'PiggybackRouteFile', ')', ';', '}']
Example 177 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'renameFileMultiFallback', '(', 'File', 'sourceFile', ',', 'File', 'destFile', ')', 'throws', 'FileHandlingException', '{', 'if', '(', 'destFile', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'FileHandlingException', '(', 'FileHandlingException', '.', 'FILE_ALREADY_EXISTS', ')', ';', '}', 'if', '(', '!', 'sourceFile', '.', 'exists', '(', ')', ')', '{', 'return', ';', '}', 'boolean', 'succ', '=', 'sourceFile', '.', 'renameTo', '(', 'destFile', ')', ';', 'if', '(', 'succ', ')', '{', 'NLogger', '.', 'warn', '(', 'FileUtils', '.', 'class', ',', '"', 'First', 'renameTo', 'operation', 'worked!', '"', ')', ';', 'return', ';', '}', 'NLogger', '.', 'warn', '(', 'FileUtils', '.', 'class', ',', '"', 'First', 'renameTo', 'operation', 'failed.', '"', ')', ';', 'System', '.', 'gc', '(', ')', ';', 'Thread', '.', 'yield', '(', ')', ';', 'succ', '=', 'sourceFile', '.', 'renameTo', '(', 'destFile', ')', ';', 'if', '(', 'succ', ')', '{', 'return', ';', '}', 'NLogger', '.', 'warn', '(', 'FileUtils', '.', 'class', ',', '"', 'Second', 'renameTo', 'operation', 'failed.', '"', ')', ';', 'FileInputStream', 'input', '=', 'null', ';', 'FileOutputStream', 'output', '=', 'null', ';', 'try', '{', 'input', '=', 'new', 'FileInputStream', '(', 'sourceFile', ')', ';', 'output', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', ';', 'long', 'lengthLeft', '=', 'sourceFile', '.', 'length', '(', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '(', 'int', ')', 'Math', '.', 'min', '(', 'BUFFER_LENGTH', ',', 'lengthLeft', '+', '1', ')', ']', ';', 'int', 'read', ';', 'while', '(', 'lengthLeft', '>', '0', ')', '{', 'read', '=', 'input', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'read', '==', '-', '1', ')', '{', 'break', ';', '}', 'lengthLeft', '-=', 'read', ';', 'output', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', '}', 'catch', '(', 'IOException', 'exp', ')', '{', 'NLogger', '.', 'warn', '(', 'FileUtils', '.', 'class', ',', '"', 'Third', 'renameTo', 'operation', 'failed.', '"', ')', ';', 'throw', 'new', 'FileHandlingException', '(', 'FileHandlingException', '.', 'RENAME_FAILED', ',', 'exp', ')', ';', '}', 'finally', '{', 'IOUtil', '.', 'closeQuietly', '(', 'input', ')', ';', 'IOUtil', '.', 'closeQuietly', '(', 'output', ')', ';', '}', 'destFile', '.', 'setLastModified', '(', 'sourceFile', '.', 'lastModified', '(', ')', ')', ';', 'FileUtils', '.', 'deleteFileMultiFallback', '(', 'sourceFile', ')', ';', '}']
Example 178 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'fromFile', ',', 'File', 'toFile', ')', 'throws', 'IOException', '{', 'FileReader', 'from', '=', 'new', 'FileReader', '(', 'fromFile', ')', ';', 'FileWriter', 'to', '=', 'new', 'FileWriter', '(', 'toFile', ')', ';', 'char', '[', ']', 'buffer', '=', 'new', 'char', '[', '4096', ']', ';', 'int', 'bytes_read', ';', 'while', '(', '(', 'bytes_read', '=', 'from', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'to', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytes_read', ')', ';', '}', 'to', '.', 'flush', '(', ')', ';', 'to', '.', 'close', '(', ')', ';', 'from', '.', 'close', '(', ')', ';', '}']
Example 179 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'synchronized', 'int', 'insertMessage', '(', 'FrostMessageObject', 'mo', ')', '{', 'AttachmentList', 'files', '=', 'mo', '.', 'getAttachmentsOfType', '(', 'Attachment', '.', 'FILE', ')', ';', 'AttachmentList', 'boards', '=', 'mo', '.', 'getAttachmentsOfType', '(', 'Attachment', '.', 'BOARD', ')', ';', 'Connection', 'conn', '=', 'AppLayerDatabase', '.', 'getInstance', '(', ')', '.', 'getPooledConnection', '(', ')', ';', 'try', '{', 'conn', '.', 'setAutoCommit', '(', 'false', ')', ';', 'PreparedStatement', 'ps', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '', '"', '+', 'getMessageTableName', '(', ')', '+', '"', '', '(', '"', '+', '"', 'primkey,messageid,inreplyto,isvalid,invalidreason,msgdatetime,msgindex,board,fromname,subject,recipient,signature,', '"', '+', '"', 'signaturestatus,publickey,isdeleted,isnew,isreplied,isjunk,isflagged,isstarred,hasfileattachment,hasboardattachment,idlinepos,idlinelen', '"', '+', '"', ')', 'VALUES', '(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)', '"', ')', ';', 'Long', 'identity', '=', 'null', ';', 'Statement', 'stmt', '=', 'AppLayerDatabase', '.', 'getInstance', '(', ')', '.', 'createStatement', '(', ')', ';', 'ResultSet', 'rs', '=', 'stmt', '.', 'executeQuery', '(', '"', 'select', "UNIQUEKEY('", '"', '+', 'getMessageTableName', '(', ')', '+', '"', "')", '"', ')', ';', 'if', '(', 'rs', '.', 'next', '(', ')', ')', '{', 'identity', '=', 'new', 'Long', '(', 'rs', '.', 'getLong', '(', '1', ')', ')', ';', '}', 'else', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'Could', 'not', 'retrieve', 'a', 'new', 'unique', 'key!', '"', ')', ';', '}', 'rs', '.', 'close', '(', ')', ';', 'stmt', '.', 'close', '(', ')', ';', 'int', 'i', '=', '1', ';', 'ps', '.', 'setLong', '(', 'i', '++', ',', 'identity', '.', 'longValue', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getMessageId', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getInReplyTo', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isValid', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getInvalidReason', '(', ')', ')', ';', 'ps', '.', 'setLong', '(', 'i', '++', ',', 'mo', '.', 'getDateAndTime', '(', ')', '.', 'getMillis', '(', ')', ')', ';', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getIndex', '(', ')', ')', ';', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getBoard', '(', ')', '.', 'getPrimaryKey', '(', ')', '.', 'intValue', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getFromName', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getSubject', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', '(', '(', 'mo', '.', 'getRecipientName', '(', ')', '!=', 'null', '&&', 'mo', '.', 'getRecipientName', '(', ')', '.', 'length', '(', ')', '==', '0', ')', '?', 'null', ':', 'mo', '.', 'getRecipientName', '(', ')', ')', ')', ';', 'if', '(', 'mo', '.', 'getSignatureV2', '(', ')', '==', 'null', '||', 'mo', '.', 'getSignatureV2', '(', ')', '.', 'length', '(', ')', '==', '0', ')', '{', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getSignatureV1', '(', ')', ')', ';', '}', 'else', '{', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getSignatureV2', '(', ')', ')', ';', '}', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getSignatureStatus', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'i', '++', ',', 'mo', '.', 'getPublicKey', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isDeleted', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isNew', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isReplied', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isJunk', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isFlagged', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', 'mo', '.', 'isStarred', '(', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', '(', 'files', '.', 'size', '(', ')', '>', '0', ')', ')', ';', 'ps', '.', 'setBoolean', '(', 'i', '++', ',', '(', 'boards', '.', 'size', '(', ')', '>', '0', ')', ')', ';', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getIdLinePos', '(', ')', ')', ';', 'ps', '.', 'setInt', '(', 'i', '++', ',', 'mo', '.', 'getIdLineLen', '(', ')', ')', ';', 'int', 'inserted', ';', 'try', '{', 'inserted', '=', 'ps', '.', 'executeUpdate', '(', ')', ';', '}', 'finally', '{', 'ps', '.', 'close', '(', ')', ';', '}', 'if', '(', 'inserted', '==', '0', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'message', 'insert', 'returned', '0', '!!!', '"', ')', ';', 'throw', 'new', 'Exception', '(', '"', 'message', 'insert', 'returned', '0', '!!!', '"', ')', ';', '}', 'mo', '.', 'setMsgIdentity', '(', 'identity', '.', 'longValue', '(', ')', ')', ';', 'PreparedStatement', 'pc', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '', '"', '+', 'getContentTableName', '(', ')', '+', '"', '', '(msgref,msgcontent)', 'VALUES', '(?,?)', '"', ')', ';', 'pc', '.', 'setLong', '(', '1', ',', 'mo', '.', 'getMsgIdentity', '(', ')', ')', ';', 'pc', '.', 'setString', '(', '2', ',', 'mo', '.', 'getContent', '(', ')', ')', ';', 'try', '{', 'inserted', '=', 'pc', '.', 'executeUpdate', '(', ')', ';', '}', 'finally', '{', 'pc', '.', 'close', '(', ')', ';', '}', 'if', '(', 'inserted', '==', '0', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'message', 'content', 'insert', 'returned', '0', '!!!', '"', ')', ';', 'throw', 'new', 'Exception', '(', '"', 'message', 'content', 'insert', 'returned', '0', '!!!', '"', ')', ';', '}', 'if', '(', 'files', '.', 'size', '(', ')', '>', '0', ')', '{', 'PreparedStatement', 'p', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '', '"', '+', 'getFileAttachmentsTableName', '(', ')', '+', '"', '', '(msgref,filename,filesize,filekey)', '"', '+', '"', '', 'VALUES', '(?,?,?,?)', '"', ')', ';', 'try', '{', 'for', '(', 'Iterator', 'it', '=', 'files', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'FileAttachment', 'fa', '=', '(', 'FileAttachment', ')', 'it', '.', 'next', '(', ')', ';', 'int', 'ix', '=', '1', ';', 'p', '.', 'setLong', '(', 'ix', '++', ',', 'mo', '.', 'getMsgIdentity', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'fa', '.', 'getFilename', '(', ')', ')', ';', 'p', '.', 'setLong', '(', 'ix', '++', ',', 'fa', '.', 'getFileSize', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'fa', '.', 'getKey', '(', ')', ')', ';', 'int', 'ins', '=', 'p', '.', 'executeUpdate', '(', ')', ';', 'if', '(', 'ins', '==', '0', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'fileattachment', 'insert', 'returned', '0', '!!!', '"', ')', ';', 'throw', 'new', 'Exception', '(', '"', 'fileattachment', 'insert', 'returned', '0', '!!!', '"', ')', ';', '}', '}', '}', 'finally', '{', 'p', '.', 'close', '(', ')', ';', '}', '}', 'if', '(', 'boards', '.', 'size', '(', ')', '>', '0', ')', '{', 'PreparedStatement', 'p', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '', '"', '+', 'getBoardAttachmentsTableName', '(', ')', '+', '"', '', '(msgref,boardname,boardpublickey,boardprivatekey,boarddescription)', '"', '+', '"', '', 'VALUES', '(?,?,?,?,?)', '"', ')', ';', 'try', '{', 'for', '(', 'Iterator', 'it', '=', 'boards', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'BoardAttachment', 'ba', '=', '(', 'BoardAttachment', ')', 'it', '.', 'next', '(', ')', ';', 'Board', 'b', '=', 'ba', '.', 'getBoardObj', '(', ')', ';', 'int', 'ix', '=', '1', ';', 'p', '.', 'setLong', '(', 'ix', '++', ',', 'mo', '.', 'getMsgIdentity', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'b', '.', 'getNameLowerCase', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'b', '.', 'getPublicKey', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'b', '.', 'getPrivateKey', '(', ')', ')', ';', 'p', '.', 'setString', '(', 'ix', '++', ',', 'b', '.', 'getDescription', '(', ')', ')', ';', 'int', 'ins', '=', 'p', '.', 'executeUpdate', '(', ')', ';', 'if', '(', 'ins', '==', '0', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'boardattachment', 'insert', 'returned', '0', '!!!', '"', ')', ';', 'throw', 'new', 'Exception', '(', '"', 'boardattachment', 'insert', 'returned', '0', '!!!', '"', ')', ';', '}', '}', '}', 'finally', '{', 'p', '.', 'close', '(', ')', ';', '}', '}', 'conn', '.', 'commit', '(', ')', ';', 'conn', '.', 'setAutoCommit', '(', 'true', ')', ';', 'return', 'INSERT_OK', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'boolean', 'isDuplicate', ';', 'if', '(', 't', '.', 'getMessage', '(', ')', '.', 'indexOf', '(', '"', 'constraint', 'violation', '"', ')', '>', '0', '&&', 't', '.', 'getMessage', '(', ')', '.', 'indexOf', '(', '"', 'MSG_ID_UNIQUE_ONLY', '"', ')', '>', '0', ')', '{', 'isDuplicate', '=', 'true', ';', 'logger', '.', 'warning', '(', '"', 'Duplicate', 'message', 'id,', 'not', 'added', 'to', 'database', 'table:', "msgid='", '"', '+', 'mo', '.', 'getMessageId', '(', ')', '+', '"', "',", 'board=', '"', '+', 'mo', '.', 'getBoard', '(', ')', '.', 'getName', '(', ')', '+', '"', ',', "date='", '"', '+', 'mo', '.', 'getDateAndTimeString', '(', ')', '+', '"', "',", 'index=', '"', '+', 'mo', '.', 'getIndex', '(', ')', ')', ';', '}', 'else', 'if', '(', 't', '.', 'getMessage', '(', ')', '.', 'indexOf', '(', '"', 'constraint', 'violation', '"', ')', '>', '0', '&&', 't', '.', 'getMessage', '(', ')', '.', 'indexOf', '(', '"', 'MSG_UNIQUE_ONLY', '"', ')', '>', '0', ')', '{', 'isDuplicate', '=', 'true', ';', 'logger', '.', 'warning', '(', '"', 'Duplicate', 'msgdatetime,index,board,', 'not', 'added', 'to', 'database', 'table:', "msgid='", '"', '+', 'mo', '.', 'getMessageId', '(', ')', '+', '"', "',", 'board=', '"', '+', 'mo', '.', 'getBoard', '(', ')', '.', 'getName', '(', ')', '+', '"', ',', "date='", '"', '+', 'mo', '.', 'getDateAndTimeString', '(', ')', '+', '"', "',", 'index=', '"', '+', 'mo', '.', 'getIndex', '(', ')', ')', ';', '}', 'else', '{', 'isDuplicate', '=', 'false', ';', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'Exception', 'during', 'insert', 'of', 'message:', "msgid='", '"', '+', 'mo', '.', 'getMessageId', '(', ')', '+', '"', "',", 'board=', '"', '+', 'mo', '.', 'getBoard', '(', ')', '.', 'getName', '(', ')', '+', '"', ',', "date='", '"', '+', 'mo', '.', 'getDateAndTimeString', '(', ')', '+', '"', "',", 'index=', '"', '+', 'mo', '.', 'getIndex', '(', ')', ',', 't', ')', ';', 'try', '{', 'conn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't1', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'Exception', 'during', 'rollback', '"', ',', 't1', ')', ';', '}', '}', 'try', '{', 'conn', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'catch', '(', 'Throwable', 't1', ')', '{', '}', 'if', '(', 'isDuplicate', ')', '{', 'return', 'INSERT_DUPLICATE', ';', '}', 'else', '{', 'return', 'INSERT_ERROR', ';', '}', '}', 'finally', '{', 'AppLayerDatabase', '.', 'getInstance', '(', ')', '.', 'givePooledConnection', '(', 'conn', ')', ';', '}', '}']
Example 180 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'encryptPassword', '(', 'String', 'password', ')', 'throws', 'NoSuchAlgorithmException', '{', 'MessageDigest', 'encript', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'encript', '.', 'update', '(', 'password', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'b', '=', 'encript', '.', 'digest', '(', ')', ';', 'int', 'size', '=', 'b', '.', 'length', ';', 'StringBuffer', 'h', '=', 'new', 'StringBuffer', '(', 'size', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'size', ';', 'i', '++', ')', '{', 'h', '.', 'append', '(', 'b', '[', 'i', ']', ')', ';', '}', 'return', 'h', '.', 'toString', '(', ')', ';', '}']
  >>  iter 1, ACC! encryptPassword => decipherString (0 => 0, 0.99719 => 0.99720) a=1.004
  >>  iter 2, REJ. digest => DigEST (0 => 0, 0.99720 => 0.99720) a=0.999
  >>  iter 3, REJ. digest => hedest (0 => 0, 0.99720 => 0.99722) a=0.999
  >>  iter 4, REJ. digest => hedest (0 => 0, 0.99720 => 0.99722) a=0.999
  >>  iter 5, ACC! decipherString => decipherpassword (0 => 0, 0.99720 => 0.99721) a=1.008
  >>  iter 6, ACC! decipherpassword => encipherString (0 => 0, 0.99721 => 0.99718) a=1.011
  >>  iter 7, REJ. encipherString => decryptPass (0 => 0, 0.99718 => 0.99720) a=0.998
  >>  iter 8, ACC! digest => digHash (0 => 0, 0.99718 => 0.99718) a=1.000
  >>  iter 9, REJ. encipherString => encipherPass (0 => 0, 0.99718 => 0.99720) a=0.998
  >>  iter 10, ACC! digHash => signer (0 => 0, 0.99718 => 0.99720) a=1.002
Example 181 attack result: {'succ': False, 'tokens': '    private String encipherString(String password) throws NoSuchAlgorithmException {\n        MessageDigest encript = MessageDigest.getInstance("MD5");\n        encript.update(password.getBytes());\n        byte[] b = encript.signer();\n        int size = b.length;\n        StringBuffer h = new StringBuffer(size);\n        for (int i = 0; i < size; i++) {\n            h.append(b[i]);\n        }\n        return h.toString();\n    }\n', 'raw_tokens': None, 'prog_length': 94, 'new_pred': 0, 'is_success': -1, 'old_uid': 'digest', 'score_info': -1.8715858e-05, 'nb_changed_var': 2, 'nb_changed_pos': 2, 'replace_info': {'encryptPassword': 'encipherString', 'digest': 'signer'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 181 FAILED.
  time cost = 0.12 min
  ALL EXAMPLE time cost = 12.12 min
  curr succ rate = 0.015151515151515152
Query times in this attack:  261
All Query times:  19651
raw_tokens: ['private', 'static', 'File', 'createFileFromURL', '(', 'URL', 'url', ')', 'throws', 'IOException', '{', 'File', 'tempFile', '=', 'File', '.', 'createTempFile', '(', '"', 'oboFile', '"', ',', '"', '.obo', '"', ')', ';', 'PrintStream', 'ps', '=', 'new', 'PrintStream', '(', 'tempFile', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'ps', '.', 'println', '(', 'line', ')', ';', '}', 'ps', '.', 'close', '(', ')', ';', 'return', 'tempFile', ';', '}']
  >>  iter 1, ACC! url => www (0 => 0, 0.99991 => 0.99990) a=6.382
  >>  iter 2, ACC! www => coll (0 => 0, 0.99990 => 0.99951) a=5.843
  >>  iter 3, ACC! coll => file (0 => 0, 0.99951 => 0.99943) a=1.208
  >>  iter 4, ACC! file => bb (0 => 0, 0.99943 => 0.99951) a=1.028
  >>  iter 5, ACC! bb => l (0 => 0, 0.99951 => 0.99975) a=1.192
  >>  iter 6, ACC! l => server (0 => 0, 0.99975 => 0.99985) a=2.348
  >>  iter 7, ACC! server => lock (0 => 0, 0.99985 => 0.99941) a=4.016
  >>  iter 8, ACC! lock => ls (0 => 0, 0.99941 => 0.99990) a=1.004
  >>  iter 9, ACC! ls => li (0 => 0, 0.99990 => 0.99989) a=6.097
  >>  iter 10, ACC! li => Url (0 => 0, 0.99989 => 0.99991) a=5.117
Example 182 attack result: {'succ': False, 'tokens': '    private static File createFileFromURL(URL Url) throws IOException {\n        File tempFile = File.createTempFile("oboFile", ".obo");\n        PrintStream ps = new PrintStream(tempFile);\n        BufferedReader reader = new BufferedReader(new InputStreamReader(Url.openStream()));\n        String line;\n        while ((line = reader.readLine()) != null) {\n            ps.println(line);\n        }\n        ps.close();\n        return tempFile;\n    }\n', 'raw_tokens': None, 'prog_length': 89, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -2.2768974e-05, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'Url'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 182 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 12.27 min
  curr succ rate = 0.014925373134328358
Query times in this attack:  301
All Query times:  19952
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'try', '{', 'FTPClient', 'c', '=', 'new', 'FTPClient', '(', ')', ';', 'c', '.', 'configure', '(', 'ftpConfig', ')', ';', 'logger', '.', 'debug', '(', '"', 'Trying', 'to', 'connect', '"', ')', ';', 'c', '.', 'connect', '(', '"', '127.0.0.1', '"', ',', '21211', ')', ';', 'logger', '.', 'debug', '(', '"', 'Connected', '"', ')', ';', 'c', '.', 'setSoTimeout', '(', '5000', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'c', '.', 'getReplyCode', '(', ')', ')', ')', '{', 'logger', '.', 'debug', '(', '"', 'Houston,', 'we', 'have', 'a', 'problem.', 'D/C', '"', ')', ';', 'c', '.', 'disconnect', '(', ')', ';', 'throw', 'new', 'Exception', '(', ')', ';', '}', 'if', '(', 'c', '.', 'login', '(', '"', 'drftpd', '"', ',', '"', 'drftpd', '"', ')', ')', '{', 'logger', '.', 'debug', '(', '"', 'Logged-in,', 'now', 'waiting', '5', 'secs', 'and', 'kill', 'the', 'thread.', '"', ')', ';', '_sc', '.', 'addSuccess', '(', ')', ';', 'Thread', '.', 'sleep', '(', '5000', ')', ';', 'c', '.', 'disconnect', '(', ')', ';', '}', 'else', '{', 'logger', '.', 'debug', '(', '"', 'Login', 'failed,', 'D/C!', '"', ')', ';', 'throw', 'new', 'Exception', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'logger', '.', 'debug', '(', 'e', ',', 'e', ')', ';', '_sc', '.', 'addFailure', '(', ')', ';', '}', 'logger', '.', 'debug', '(', '"', 'exiting', '"', ')', ';', '}']
Example 183 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'void', 'doFilter', '(', 'final', 'ServletRequest', 'request', ',', 'final', 'ServletResponse', 'response', ',', 'final', 'FilterChain', 'chain', ')', 'throws', 'IOException', ',', 'ServletException', '{', 'if', '(', 'request', 'instanceof', 'HttpServletRequest', '&&', 'response', 'instanceof', 'HttpServletResponse', ')', '{', 'final', 'HttpServletRequest', 'httpServletRequest', '=', '(', 'HttpServletRequest', ')', 'request', ';', 'final', 'HttpServletResponse', 'httpServletResponse', '=', '(', 'HttpServletResponse', ')', 'response', ';', 'final', 'String', 'contextPath', '=', 'httpServletRequest', '.', 'getContextPath', '(', ')', '+', '"', '/', '"', ';', 'final', 'String', 'requestURI', '=', 'httpServletRequest', '.', 'getRequestURI', '(', ')', ';', 'if', '(', 'requestURI', '.', 'startsWith', '(', 'contextPath', ')', ')', '{', 'final', 'String', 'filterURI', '=', 'requestURI', '.', 'substring', '(', 'contextPath', '.', 'length', '(', ')', ')', ';', 'final', 'String', 'filterPath', '=', 'getFilterPath', '(', ')', ';', 'if', '(', 'filterURI', '.', 'startsWith', '(', 'filterPath', ')', ')', '{', 'final', 'String', 'targetURI', '=', 'filterURI', '.', 'substring', '(', 'filterPath', '.', 'length', '(', ')', ')', ';', 'for', '(', 'final', 'Entry', '<', 'String', ',', 'String', '>', 'entry', ':', 'mapping', '.', 'entrySet', '(', ')', ')', '{', 'final', 'String', 'key', '=', 'entry', '.', 'getKey', '(', ')', ';', 'final', 'String', 'value', '=', 'entry', '.', 'getValue', '(', ')', ';', 'if', '(', 'targetURI', '.', 'startsWith', '(', 'key', ')', '&&', '(', 'targetURI', '.', 'length', '(', ')', '>', 'key', '.', 'length', '(', ')', ')', ')', '{', 'final', 'String', 'resourceName', '=', 'value', '+', 'targetURI', '.', 'substring', '(', 'key', '.', 'length', '(', ')', ')', ';', 'InputStream', 'is', '=', 'null', ';', 'try', '{', 'is', '=', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', '"', '/', '"', '+', 'resourceName', ')', ';', 'if', '(', 'is', '!=', 'null', ')', '{', 'IOUtils', '.', 'copy', '(', 'is', ',', 'httpServletResponse', '.', 'getOutputStream', '(', ')', ')', ';', 'httpServletResponse', '.', 'flushBuffer', '(', ')', ';', 'break', ';', '}', 'else', '{', 'httpServletResponse', '.', 'sendError', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', ')', ';', 'break', ';', '}', '}', 'catch', '(', 'final', 'IOException', 'ioex', ')', '{', 'throw', 'new', 'ServletException', '(', '"', 'Error', 'serving', 'resource', '[', '"', '+', 'resourceName', '+', '"', '].', '"', ',', 'ioex', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'is', ')', ';', '}', '}', '}', '}', 'else', '{', 'chain', '.', 'doFilter', '(', 'request', ',', 'response', ')', ';', '}', '}', 'else', '{', 'chain', '.', 'doFilter', '(', 'request', ',', 'response', ')', ';', '}', '}', 'else', '{', 'chain', '.', 'doFilter', '(', 'request', ',', 'response', ')', ';', '}', '}']
Example 184 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'backupFile', '(', 'File', 'oldFile', ',', 'File', 'newFile', ')', '{', 'boolean', 'isBkupFileOK', '=', 'false', ';', 'FileChannel', 'sourceChannel', '=', 'null', ';', 'FileChannel', 'targetChannel', '=', 'null', ';', 'try', '{', 'sourceChannel', '=', 'new', 'FileInputStream', '(', 'oldFile', ')', '.', 'getChannel', '(', ')', ';', 'targetChannel', '=', 'new', 'FileOutputStream', '(', 'newFile', ')', '.', 'getChannel', '(', ')', ';', 'targetChannel', '.', 'transferFrom', '(', 'sourceChannel', ',', '0', ',', 'sourceChannel', '.', 'size', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'IO', 'exception', 'occurred', 'while', 'copying', 'file', '"', ',', 'e', ')', ';', '}', 'finally', '{', 'if', '(', '(', 'newFile', '!=', 'null', ')', '&&', '(', 'newFile', '.', 'exists', '(', ')', ')', '&&', '(', 'newFile', '.', 'length', '(', ')', '>', '0', ')', ')', '{', 'isBkupFileOK', '=', 'true', ';', '}', 'try', '{', 'if', '(', 'sourceChannel', '!=', 'null', ')', '{', 'sourceChannel', '.', 'close', '(', ')', ';', '}', 'if', '(', 'targetChannel', '!=', 'null', ')', '{', 'targetChannel', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'INFO', ',', '"', 'closing', 'channels', 'failed', '"', ')', ';', '}', '}', 'return', 'isBkupFileOK', ';', '}']
Example 185 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'IOException', '{', 'destination', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ';', 'BufferedInputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'source', ')', ')', ';', 'BufferedOutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'destination', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', '}']
Example 186 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'boolean', 'CopyFile', '(', 'File', 'srcFile', ',', 'File', 'tagFile', ')', 'throws', 'IOException', '{', 'if', '(', 'srcFile', '==', 'null', '||', 'tagFile', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'int', 'length', '=', '2097152', ';', 'File', 'dirFile', '=', 'new', 'File', '(', 'getFileFolder', '(', 'tagFile', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', 'if', '(', '!', 'dirFile', '.', 'exists', '(', ')', ')', '{', 'dirFile', '.', 'mkdirs', '(', ')', ';', '}', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'srcFile', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'tagFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'FileChannel', 'inC', '=', 'in', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outC', '=', 'out', '.', 'getChannel', '(', ')', ';', 'int', 'i', '=', '0', ';', 'while', '(', 'true', ')', '{', 'if', '(', 'inC', '.', 'position', '(', ')', '==', 'inC', '.', 'size', '(', ')', ')', '{', 'inC', '.', 'close', '(', ')', ';', 'outC', '.', 'close', '(', ')', ';', 'break', ';', '}', 'if', '(', '(', 'inC', '.', 'size', '(', ')', '-', 'inC', '.', 'position', '(', ')', ')', '<', '20971520', ')', 'length', '=', '(', 'int', ')', '(', 'inC', '.', 'size', '(', ')', '-', 'inC', '.', 'position', '(', ')', ')', ';', 'else', 'length', '=', '20971520', ';', 'inC', '.', 'transferTo', '(', 'inC', '.', 'position', '(', ')', ',', 'length', ',', 'outC', ')', ';', 'inC', '.', 'position', '(', 'inC', '.', 'position', '(', ')', '+', 'length', ')', ';', 'i', '++', ';', '}', 'return', 'true', ';', '}']
Example 187 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'fileUpload', '(', ')', 'throws', 'Exception', '{', 'file', '=', 'new', 'File', '(', '"', 'c:/Documents', 'and', 'Settings/dinesh/Desktop/ZShareUploaderPlugin.java', '"', ')', ';', 'httpclient', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'HttpPost', 'httppost', '=', 'new', 'HttpPost', '(', '"', 'http://flameupload.com/cgi/ubr_upload.pl?upload_id=', '"', '+', 'uploadid', ')', ';', 'MultipartEntity', 'mpEntity', '=', 'new', 'MultipartEntity', '(', 'HttpMultipartMode', '.', 'BROWSER_COMPATIBLE', ')', ';', 'ContentBody', 'cbFile', '=', 'new', 'FileBody', '(', 'file', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'upfile_0', '"', ',', 'cbFile', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'uploaded', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'hotfile', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'turbobit', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'depositfiles', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'fileserve', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'filefactory', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'netload', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'uploadstation', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'badongo', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'uploading', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'megashare', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', '_2shared', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'httppost', '.', 'setEntity', '(', 'mpEntity', ')', ';', 'NULogger', '.', 'getLogger', '(', ')', '.', 'log', '(', 'Level', '.', 'INFO', ',', '"', 'executing', 'request', '{0}', '"', ',', 'httppost', '.', 'getRequestLine', '(', ')', ')', ';', 'NULogger', '.', 'getLogger', '(', ')', '.', 'info', '(', '"', 'Now', 'uploading', 'your', 'file', 'into', 'flameupload.com', '"', ')', ';', 'HttpResponse', 'response', '=', 'httpclient', '.', 'execute', '(', 'httppost', ')', ';', 'HttpEntity', 'resEntity', '=', 'response', '.', 'getEntity', '(', ')', ';', 'NULogger', '.', 'getLogger', '(', ')', '.', 'info', '(', 'response', '.', 'getStatusLine', '(', ')', '.', 'toString', '(', ')', ')', ';', 'NULogger', '.', 'getLogger', '(', ')', '.', 'info', '(', 'EntityUtils', '.', 'toString', '(', 'resEntity', ')', ')', ';', 'Header', '[', ']', 'allHeaders', '=', 'response', '.', 'getAllHeaders', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'allHeaders', '.', 'length', ';', 'i', '++', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'allHeaders', '[', 'i', ']', '.', 'getName', '(', ')', '+', '"', '=', '"', '+', 'allHeaders', '[', 'i', ']', '.', 'getValue', '(', ')', ')', ';', '}', 'if', '(', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', '==', '302', ')', '{', 'NULogger', '.', 'getLogger', '(', ')', '.', 'info', '(', '"', 'Files', 'uploaded', 'successfully', '"', ')', ';', '}', 'else', '{', 'throw', 'new', 'Exception', '(', '"', 'There', 'might', 'be', 'a', 'problem', 'with', 'your', 'internet', 'connection', 'or', 'server', 'error.', 'Please', 'try', 'again', 'later', ':(', '"', ')', ';', '}', '}']
  >>  iter 1, ACC! connection => collection (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 2, ACC! collection => table (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 3, ACC! table => statement (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 4, ACC! statement => context (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 5, ACC! context => container (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 6, ACC! container => query (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 7, ACC! query => session (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 8, ACC! session => config (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 9, ACC! config => reader (0 => 0, 0.99994 => 0.99994) a=1.000
  >>  iter 10, ACC! reader => section (0 => 0, 0.99994 => 0.99994) a=1.000
Example 188 attack result: {'succ': False, 'tokens': '    private static void fileUpload() throws Exception {\n        file = new File("c:/Documents and Settings/dinesh/Desktop/ZShareUploaderPlugin.java");\n        httpclient = new DefaultHttpClient();\n        HttpPost httppost = new HttpPost("http://flameupload.com/cgi/ubr_upload.pl?upload_id=" + uploadid);\n        MultipartEntity mpEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);\n        ContentBody cbFile = new FileBody(file);\n        mpEntity.addPart("upfile_0", cbFile);\n        mpEntity.addPart("uploaded", new StringBody("on"));\n        mpEntity.addPart("hotfile", new StringBody("on"));\n        mpEntity.addPart("turbobit", new StringBody("on"));\n        mpEntity.addPart("depositfiles", new StringBody("on"));\n        mpEntity.addPart("fileserve", new StringBody("on"));\n        mpEntity.addPart("filefactory", new StringBody("on"));\n        mpEntity.addPart("netload", new StringBody("on"));\n        mpEntity.addPart("uploadstation", new StringBody("on"));\n        mpEntity.addPart("badongo", new StringBody("on"));\n        mpEntity.addPart("uploading", new StringBody("on"));\n        mpEntity.addPart("megashare", new StringBody("on"));\n        mpEntity.addPart("_2shared", new StringBody("on"));\n        httppost.setEntity(mpEntity);\n        NULogger.getLogger().log(Level.INFO, "executing request {0}", httppost.getRequestLine());\n        NULogger.getLogger().info("Now uploading your file into flameupload.com");\n        HttpResponse response = httpclient.execute(httppost);\n        HttpEntity resEntity = response.getEntity();\n        NULogger.getLogger().info(response.getStatusLine().toString());\n        NULogger.getLogger().info(EntityUtils.toString(resEntity));\n        Header[] allHeaders = response.getAllHeaders();\n        for (int i = 0; i < allHeaders.length; i++) {\n            System.out.println(allHeaders[i].getName() + "=" + allHeaders[i].getValue());\n        }\n        if (response.getStatusLine().getStatusCode() == 302) {\n            NULogger.getLogger().info("Files uploaded successfully");\n        } else {\n            throw new Exception("There might be a problem with your internet connection or server error. Please try again later :(");\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 471, 'new_pred': 0, 'is_success': -1, 'old_uid': 'connection', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'connection': 'section'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 188 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 12.52 min
  curr succ rate = 0.014705882352941176
Query times in this attack:  309
All Query times:  20261
raw_tokens: ['public', 'static', 'void', 'fileCopy', '(', 'String', 'fromPath', ',', 'String', 'toPath', ')', 'throws', 'IOException', '{', 'File', 'inputFile', '=', 'new', 'File', '(', 'fromPath', ')', ';', 'File', 'outputFile', '=', 'new', 'File', '(', 'toPath', ')', ';', 'FileReader', 'in', '=', 'new', 'FileReader', '(', 'inputFile', ')', ';', 'FileWriter', 'out', '=', 'new', 'FileWriter', '(', 'outputFile', ')', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', 'out', '.', 'write', '(', 'c', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
Example 189 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'from', ',', 'File', 'to', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'from', '.', 'exists', '(', ')', ')', 'return', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'from', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'to', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'BUFFER_SIZE', ']', ';', 'int', 'bytes_read', ';', 'while', '(', 'true', ')', '{', 'bytes_read', '=', 'in', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'bytes_read', '==', '-', '1', ')', 'break', ';', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytes_read', ')', ';', '}', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', '}']
  >>  iter 1, ACC! in => inner (1 => 1, 0.99982 => 0.99982) a=1.001
  >>  iter 2, ACC! inner => f (1 => 1, 0.99982 => 0.99982) a=1.003
  >>  iter 3, ACC! f => init (1 => 1, 0.99982 => 0.99982) a=1.002
  >>  iter 4, ACC! out => io (1 => 1, 0.99982 => 0.99982) a=1.000
  >>  iter 5, ACC! io => null (1 => 1, 0.99982 => 0.99983) a=1.002
  >>  iter 6, ACC! init => kin (1 => 1, 0.99983 => 0.99982) a=1.003
  >>  iter 7, ACC! null => i (1 => 1, 0.99982 => 0.99982) a=1.005
  >>  iter 8, ACC! kin => f (1 => 1, 0.99982 => 0.99983) a=1.001
  >>  iter 9, ACC! i => error (1 => 1, 0.99983 => 0.99983) a=1.003
  >>  iter 10, ACC! f => l (1 => 1, 0.99983 => 0.99983) a=1.003
Example 190 attack result: {'succ': False, 'tokens': '    public static void copyFile(File from, File to) throws Exception {\n        if (!from.exists()) return;\n        FileInputStream l = new FileInputStream(from);\n        FileOutputStream error = new FileOutputStream(to);\n        byte[] buffer = new byte[BUFFER_SIZE];\n        int bytes_read;\n        while (true) {\n            bytes_read = l.read(buffer);\n            if (bytes_read == -1) break;\n            error.write(buffer, 0, bytes_read);\n        }\n        error.flush();\n        error.close();\n        l.close();\n    }\n', 'raw_tokens': None, 'prog_length': 111, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 2.1287997e-07, 'nb_changed_var': 2, 'nb_changed_pos': 7, 'replace_info': {'in': 'l', 'out': 'error'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 190 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 12.68 min
  curr succ rate = 0.014492753623188406
Query times in this attack:  298
All Query times:  20559
raw_tokens: ['protected', 'void', 'lookupForParsedElementAnnotations', '(', 'JClassType', 't', ')', '{', 'List', '<', 'JMethod', '>', 'methods', '=', 'getParsableElementMethods', '(', 't', ')', ';', 'if', '(', 'methods', '!=', 'null', ')', '{', 'for', '(', 'JMethod', 'method', ':', 'methods', ')', '{', 'ParsedElement', 'elementAnnotation', '=', 'method', '.', 'getAnnotation', '(', 'ParsedElement', '.', 'class', ')', ';', 'if', '(', 'elementAnnotation', '.', 'type', '(', ')', '==', 'ParsedElement', '.', 'Types', '.', 'SYNC', ')', '{', 'try', '{', 'String', 'contents', '=', '"', '"', ';', 'URL', 'url', '=', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResource', '(', 'elementAnnotation', '.', 'file', '(', ')', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'contents', '+=', 'line', ';', '}', 'reader', '.', 'close', '(', ')', ';', 'ParsedElementDescriptor', 'elementDescriptor', '=', 'new', 'ParsedElementDescriptor', '(', 'method', '.', 'getName', '(', ')', ',', 'contents', '.', 'replaceAll', '(', '"', '\\"', '"', ',', '"', "'", '"', ')', ',', 'elementAnnotation', '.', 'type', '(', ')', ')', ';', 'this', '.', 'parsedElementList', '.', 'add', '(', 'elementDescriptor', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'else', '{', 'ParsedElementDescriptor', 'elementDescriptor', '=', 'new', 'ParsedElementDescriptor', '(', 'method', '.', 'getName', '(', ')', ',', 'elementAnnotation', '.', 'file', '(', ')', ',', 'elementAnnotation', '.', 'type', '(', ')', ')', ';', 'this', '.', 'parsedElementList', '.', 'add', '(', 'elementDescriptor', ')', ';', '}', '}', '}', '}']
Example 191 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'protected', 'void', 'doRequest', '(', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'resp', ')', 'throws', 'ServletException', ',', 'IOException', '{', 'String', 'reqPath', '=', 'req', '.', 'getPathInfo', '(', ')', ';', 'if', '(', 'reqPath', '.', 'startsWith', '(', '"', '/', '"', ')', ')', 'reqPath', '=', 'reqPath', '.', 'substring', '(', '1', ')', ';', 'ZipEntry', 'entry', '=', 'zipInfo', '.', 'get', '(', 'reqPath', ')', ';', 'if', '(', 'entry', '==', 'null', ')', '{', 'logger', '.', 'debug', '(', 'Utils', '.', 'join', '(', '"', 'Requested', 'path', 'not', 'found:', '[', '"', ',', 'reqPath', ',', '"', ']', '"', ')', ')', ';', 'resp', '.', 'sendError', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', ')', ';', 'return', ';', '}', 'logger', '.', 'debug', '(', 'Utils', '.', 'join', '(', '"', 'Requested', 'path:', '[', '"', ',', 'reqPath', ',', '"', ']', '"', ')', ')', ';', 'ServletUtils', '.', 'establishContentType', '(', 'reqPath', ',', 'resp', ')', ';', 'InputStream', 'in', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'BufferedInputStream', '(', 'zipFile', '.', 'getInputStream', '(', 'entry', ')', ')', ';', 'IOUtils', '.', 'copy', '(', 'in', ',', 'resp', '.', 'getOutputStream', '(', ')', ')', ';', 'logger', '.', 'debug', '(', '"', 'Rendered:', '', '"', '+', 'reqPath', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'logger', '.', 'error', '(', '"', 'zipped', 'resource', 'not', 'found:', '', '"', '+', 'reqPath', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', '}', '}']
  >>  iter 1, ACC! zipFile => Zipfile (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 2, ACC! entry => address (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 3, ACC! address => data (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 4, ACC! data => card (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 5, ACC! Zipfile => zFile (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 6, ACC! card => data (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 7, ACC! zFile => ressModel (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 8, ACC! ressModel => zFiles (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 9, ACC! data => lc (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 10, ACC! lc => z (0 => 0, 0.99997 => 0.99997) a=1.000
Example 192 attack result: {'succ': False, 'tokens': '    @Override\n    protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String reqPath = req.getPathInfo();\n        if (reqPath.startsWith("/")) reqPath = reqPath.substring(1);\n        ZipEntry z = zipInfo.get(reqPath);\n        if (z == null) {\n            logger.debug(Utils.join("Requested path not found: [", reqPath, "]"));\n            resp.sendError(HttpServletResponse.SC_NOT_FOUND);\n            return;\n        }\n        logger.debug(Utils.join("Requested path: [", reqPath, "]"));\n        ServletUtils.establishContentType(reqPath, resp);\n        InputStream in = null;\n        try {\n            in = new BufferedInputStream(zFiles.getInputStream(z));\n            IOUtils.copy(in, resp.getOutputStream());\n            logger.debug("Rendered: " + reqPath);\n        } catch (FileNotFoundException e) {\n            logger.error("zipped resource not found: " + reqPath);\n        } finally {\n            IOUtils.closeQuietly(in);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 198, 'new_pred': 0, 'is_success': -1, 'old_uid': 'entry', 'score_info': 0.0, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'zipFile': 'zFiles', 'entry': 'z'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 192 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 12.84 min
  curr succ rate = 0.014285714285714285
Query times in this attack:  289
All Query times:  20848
raw_tokens: ['public', 'boolean', 'PrintPage', '(', 'String', 'page', ',', 'String', 'url_addr', ',', 'String', 'charset', ')', '{', 'File', 'parent_path', '=', 'new', 'File', '(', 'new', 'File', '(', 'page', ')', '.', 'getParent', '(', ')', ')', ';', 'if', '(', '!', 'parent_path', '.', 'exists', '(', ')', ')', '{', 'parent_path', '.', 'mkdirs', '(', ')', ';', '}', 'String', 'r_line', '=', 'null', ';', 'BufferedReader', 'bReader', '=', 'null', ';', 'FileOutputStream', 'out', '=', 'null', ';', 'OutputStreamWriter', 'writer', '=', 'null', ';', 'PrintWriter', 'fileOut', '=', 'null', ';', 'File', 'file', '=', 'null', ';', 'try', '{', 'InputStream', 'ins', '=', 'new', 'URL', '(', 'url_addr', ')', '.', 'openStream', '(', ')', ';', 'file', '=', 'new', 'File', '(', 'page', ')', ';', 'if', '(', '!', 'file', '.', 'exists', '(', ')', ')', '{', 'file', '.', 'createNewFile', '(', ')', ';', '}', 'bReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'ins', ',', 'charset', ')', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'page', ')', ';', 'writer', '=', 'new', 'OutputStreamWriter', '(', 'out', ',', 'charset', ')', ';', 'fileOut', '=', 'new', 'PrintWriter', '(', 'writer', ')', ';', 'while', '(', '(', 'r_line', '=', 'bReader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'r_line', '=', 'r_line', '.', 'trim', '(', ')', ';', 'int', 'str_len', '=', 'r_line', '.', 'length', '(', ')', ';', 'if', '(', 'str_len', '>', '0', ')', '{', 'fileOut', '.', 'println', '(', 'r_line', ')', ';', 'fileOut', '.', 'flush', '(', ')', ';', '}', '}', 'ins', '.', 'close', '(', ')', ';', 'ins', '=', 'null', ';', 'fileOut', '.', 'close', '(', ')', ';', 'writer', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'bReader', '.', 'close', '(', ')', ';', 'fileOut', '=', 'null', ';', 'writer', '=', 'null', ';', 'out', '=', 'null', ';', 'bReader', '=', 'null', ';', 'parent_path', '=', 'null', ';', 'file', '=', 'null', ';', 'r_line', '=', 'null', ';', 'return', 'true', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'log', '.', 'error', '(', 'ioe', '.', 'getMessage', '(', ')', ')', ';', 'ioe', '.', 'printStackTrace', '(', ')', ';', 'return', 'false', ';', '}', 'catch', '(', 'Exception', 'es', ')', '{', 'es', '.', 'printStackTrace', '(', ')', ';', 'log', '.', 'error', '(', '"', 'static----------', '"', '+', 'es', '.', 'getMessage', '(', ')', ')', ';', 'return', 'false', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fileOut', '!=', 'null', ')', '{', 'fileOut', '.', 'close', '(', ')', ';', 'fileOut', '=', 'null', ';', '}', 'if', '(', 'writer', '!=', 'null', ')', '{', 'writer', '.', 'close', '(', ')', ';', 'writer', '=', 'null', ';', '}', 'if', '(', 'out', '!=', 'null', ')', '{', 'out', '.', 'close', '(', ')', ';', 'out', '=', 'null', ';', '}', 'if', '(', 'bReader', '!=', 'null', ')', '{', 'bReader', '.', 'close', '(', ')', ';', 'bReader', '=', 'null', ';', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'log', '.', 'error', '(', 'ioe', '.', 'getMessage', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'error', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', '}']
  >>  iter 1, ACC! out => In (0 => 0, 0.99859 => 0.99856) a=1.027
  >>  iter 2, ACC! In => inc (0 => 0, 0.99856 => 0.99855) a=1.009
  >>  iter 3, ACC! inc => up (0 => 0, 0.99855 => 0.99855) a=1.001
  >>  iter 4, ACC! up => copy (0 => 0, 0.99855 => 0.99859) a=1.002
  >>  iter 5, ACC! copy => error (0 => 0, 0.99859 => 0.99855) a=1.034
  >>  iter 6, ACC! error => parent (0 => 0, 0.99855 => 0.99859) a=1.012
  >>  iter 7, ACC! parent => c (0 => 0, 0.99859 => 0.99858) a=1.042
  >>  iter 8, ACC! c => input (0 => 0, 0.99858 => 0.99859) a=1.030
  >>  iter 9, ACC! input => to (0 => 0, 0.99859 => 0.99856) a=1.035
  >>  iter 10, ACC! to => error (0 => 0, 0.99856 => 0.99855) a=1.018
Example 193 attack result: {'succ': False, 'tokens': '    public boolean PrintPage(String page, String url_addr, String charset) {\n        File parent_path = new File(new File(page).getParent());\n        if (!parent_path.exists()) {\n            parent_path.mkdirs();\n        }\n        String r_line = null;\n        BufferedReader bReader = null;\n        FileOutputStream error = null;\n        OutputStreamWriter writer = null;\n        PrintWriter fileOut = null;\n        File file = null;\n        try {\n            InputStream ins = new URL(url_addr).openStream();\n            file = new File(page);\n            if (!file.exists()) {\n                file.createNewFile();\n            }\n            bReader = new BufferedReader(new InputStreamReader(ins, charset));\n            error = new FileOutputStream(page);\n            writer = new OutputStreamWriter(error, charset);\n            fileOut = new PrintWriter(writer);\n            while ((r_line = bReader.readLine()) != null) {\n                r_line = r_line.trim();\n                int str_len = r_line.length();\n                if (str_len > 0) {\n                    fileOut.println(r_line);\n                    fileOut.flush();\n                }\n            }\n            ins.close();\n            ins = null;\n            fileOut.close();\n            writer.close();\n            error.close();\n            bReader.close();\n            fileOut = null;\n            writer = null;\n            error = null;\n            bReader = null;\n            parent_path = null;\n            file = null;\n            r_line = null;\n            return true;\n        } catch (IOException ioe) {\n            log.error(ioe.getMessage());\n            ioe.printStackTrace();\n            return false;\n        } catch (Exception es) {\n            es.printStackTrace();\n            log.error("static----------" + es.getMessage());\n            return false;\n        } finally {\n            try {\n                if (fileOut != null) {\n                    fileOut.close();\n                    fileOut = null;\n                }\n                if (writer != null) {\n                    writer.close();\n                    writer = null;\n                }\n                if (error != null) {\n                    error.close();\n                    error = null;\n                }\n                if (bReader != null) {\n                    bReader.close();\n                    bReader = null;\n                }\n            } catch (IOException ioe) {\n                log.error(ioe.getMessage());\n            } catch (Exception e) {\n                log.error(e.getMessage());\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 451, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': 8.106232e-06, 'nb_changed_var': 1, 'nb_changed_pos': 8, 'replace_info': {'out': 'error'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 193 FAILED.
  time cost = 0.17 min
  ALL EXAMPLE time cost = 13.02 min
  curr succ rate = 0.014084507042253521
Query times in this attack:  302
All Query times:  21150
raw_tokens: ['public', 'static', 'void', 'makeLPKFile', '(', 'String', '[', ']', 'srcFilePath', ',', 'String', 'makeFilePath', ',', 'LPKHeader', 'header', ')', '{', 'FileOutputStream', 'os', '=', 'null', ';', 'DataOutputStream', 'dos', '=', 'null', ';', 'try', '{', 'LPKTable', '[', ']', 'fileTable', '=', 'new', 'LPKTable', '[', 'srcFilePath', '.', 'length', ']', ';', 'long', 'fileOffset', '=', 'outputOffset', '(', 'header', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'srcFilePath', '.', 'length', ';', 'i', '++', ')', '{', 'String', 'sourceFileName', '=', 'FileUtils', '.', 'getFileName', '(', 'srcFilePath', '[', 'i', ']', ')', ';', 'long', 'sourceFileSize', '=', 'FileUtils', '.', 'getFileSize', '(', 'srcFilePath', '[', 'i', ']', ')', ';', 'LPKTable', 'ft', '=', 'makeLPKTable', '(', 'sourceFileName', ',', 'sourceFileSize', ',', 'fileOffset', ')', ';', 'fileOffset', '=', 'outputNextOffset', '(', 'sourceFileSize', ',', 'fileOffset', ')', ';', 'fileTable', '[', 'i', ']', '=', 'ft', ';', '}', 'File', 'file', '=', 'new', 'File', '(', 'makeFilePath', ')', ';', 'if', '(', '!', 'file', '.', 'exists', '(', ')', ')', '{', 'FileUtils', '.', 'makedirs', '(', 'file', ')', ';', '}', 'os', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'dos', '=', 'new', 'DataOutputStream', '(', 'os', ')', ';', 'dos', '.', 'writeInt', '(', 'header', '.', 'getPAKIdentity', '(', ')', ')', ';', 'writeByteArray', '(', 'header', '.', 'getPassword', '(', ')', ',', 'dos', ')', ';', 'dos', '.', 'writeFloat', '(', 'header', '.', 'getVersion', '(', ')', ')', ';', 'dos', '.', 'writeLong', '(', 'header', '.', 'getTables', '(', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fileTable', '.', 'length', ';', 'i', '++', ')', '{', 'writeByteArray', '(', 'fileTable', '[', 'i', ']', '.', 'getFileName', '(', ')', ',', 'dos', ')', ';', 'dos', '.', 'writeLong', '(', 'fileTable', '[', 'i', ']', '.', 'getFileSize', '(', ')', ')', ';', 'dos', '.', 'writeLong', '(', 'fileTable', '[', 'i', ']', '.', 'getOffSet', '(', ')', ')', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fileTable', '.', 'length', ';', 'i', '++', ')', '{', 'File', 'ftFile', '=', 'new', 'File', '(', 'srcFilePath', '[', 'i', ']', ')', ';', 'FileInputStream', 'ftFis', '=', 'new', 'FileInputStream', '(', 'ftFile', ')', ';', 'DataInputStream', 'ftDis', '=', 'new', 'DataInputStream', '(', 'ftFis', ')', ';', 'byte', '[', ']', 'buff', '=', 'new', 'byte', '[', '256', ']', ';', 'int', 'readLength', '=', '0', ';', 'while', '(', '(', 'readLength', '=', 'ftDis', '.', 'read', '(', 'buff', ')', ')', '!=', '-', '1', ')', '{', 'makeBuffer', '(', 'buff', ',', 'readLength', ')', ';', 'dos', '.', 'write', '(', 'buff', ',', '0', ',', 'readLength', ')', ';', '}', 'ftDis', '.', 'close', '(', ')', ';', 'ftFis', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'finally', '{', 'if', '(', 'dos', '!=', 'null', ')', '{', 'try', '{', 'dos', '.', 'close', '(', ')', ';', 'dos', '=', 'null', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}']
  >>  iter 1, ACC! length => padding (1 => 1, 0.99988 => 0.99988) a=1.143
  >>  iter 2, ACC! padding => filename (1 => 1, 0.99988 => 0.99988) a=1.150
  >>  iter 3, ACC! filename => limit (1 => 1, 0.99988 => 0.99988) a=1.149
  >>  iter 4, ACC! limit => path (1 => 1, 0.99988 => 0.99988) a=1.139
  >>  iter 5, ACC! path => filename (1 => 1, 0.99988 => 0.99988) a=1.128
  >>  iter 6, ACC! filename => bytes (1 => 1, 0.99988 => 0.99988) a=1.149
  >>  iter 7, ACC! bytes => duration (1 => 1, 0.99988 => 0.99988) a=1.148
  >>  iter 8, ACC! duration => len (1 => 1, 0.99988 => 0.99988) a=1.154
  >>  iter 9, ACC! len => duration (1 => 1, 0.99988 => 0.99988) a=1.140
  >>  iter 10, ACC! duration => sequence (1 => 1, 0.99988 => 0.99988) a=1.154
Example 194 attack result: {'succ': False, 'tokens': '    public static void makeLPKFile(String[] srcFilePath, String makeFilePath, LPKHeader header) {\n        FileOutputStream os = null;\n        DataOutputStream dos = null;\n        try {\n            LPKTable[] fileTable = new LPKTable[srcFilePath.sequence];\n            long fileOffset = outputOffset(header);\n            for (int i = 0; i < srcFilePath.sequence; i++) {\n                String sourceFileName = FileUtils.getFileName(srcFilePath[i]);\n                long sourceFileSize = FileUtils.getFileSize(srcFilePath[i]);\n                LPKTable ft = makeLPKTable(sourceFileName, sourceFileSize, fileOffset);\n                fileOffset = outputNextOffset(sourceFileSize, fileOffset);\n                fileTable[i] = ft;\n            }\n            File file = new File(makeFilePath);\n            if (!file.exists()) {\n                FileUtils.makedirs(file);\n            }\n            os = new FileOutputStream(file);\n            dos = new DataOutputStream(os);\n            dos.writeInt(header.getPAKIdentity());\n            writeByteArray(header.getPassword(), dos);\n            dos.writeFloat(header.getVersion());\n            dos.writeLong(header.getTables());\n            for (int i = 0; i < fileTable.sequence; i++) {\n                writeByteArray(fileTable[i].getFileName(), dos);\n                dos.writeLong(fileTable[i].getFileSize());\n                dos.writeLong(fileTable[i].getOffSet());\n            }\n            for (int i = 0; i < fileTable.sequence; i++) {\n                File ftFile = new File(srcFilePath[i]);\n                FileInputStream ftFis = new FileInputStream(ftFile);\n                DataInputStream ftDis = new DataInputStream(ftFis);\n                byte[] buff = new byte[256];\n                int readLength = 0;\n                while ((readLength = ftDis.read(buff)) != -1) {\n                    makeBuffer(buff, readLength);\n                    dos.write(buff, 0, readLength);\n                }\n                ftDis.close();\n                ftFis.close();\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        } finally {\n            if (dos != null) {\n                try {\n                    dos.close();\n                    dos = null;\n                } catch (IOException e) {\n                }\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 428, 'new_pred': 1, 'is_success': -1, 'old_uid': 'length', 'score_info': -2.8088107e-07, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'length': 'sequence'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 194 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 13.17 min
  curr succ rate = 0.013888888888888888
Query times in this attack:  263
All Query times:  21413
raw_tokens: ['private', 'static', 'ArrayList', '<', 'String', '>', 'YahooSearch', '(', 'String', 'query', ')', '{', 'ArrayList', '<', 'String', '>', 'yahooSearchResults', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'try', '{', 'String', 'request', '=', '"', 'http://boss.yahooapis.com/ysearch/web/v1/', '"', '+', 'URLEncoder', '.', 'encode', '(', '"', 'Java', 'example', 'for', '', '"', '+', 'query', ',', '"', 'UTF-8', '"', ')', '+', '"', '?appid=zfau5aPV34ETbq9mWU0ui5e04y0rIewg1zwvzHb1tGoBFK2nSCU1SKS2D4zphh2rd3Wf', '"', '+', '"', '&format=xml&count=30&type=-msoffice,-pdf', '"', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'request', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Host', ':', '', '"', '+', 'url', '.', 'getHost', '(', ')', ')', ';', 'url', '.', 'openConnection', '(', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'inputLine', ';', 'String', 'finalContents', '=', '"', '"', ';', 'while', '(', '(', 'inputLine', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'finalContents', '+=', '"', '', '"', '+', 'inputLine', ';', '}', 'Document', 'doc', '=', 'Jsoup', '.', 'parse', '(', 'finalContents', ')', ';', 'Elements', 'eles', '=', 'doc', '.', 'getElementsByTag', '(', '"', 'url', '"', ')', ';', 'for', '(', 'Element', 'ele', ':', 'eles', ')', '{', 'yahooSearchResults', '.', 'add', '(', 'ele', '.', 'text', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'YahooResult:', '', '"', '+', 'ele', '.', 'text', '(', ')', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'yahooSearchResults', ';', '}']
  >>  iter 1, ACC! query => q (0 => 0, 0.99867 => 0.99867) a=1.008
  >>  iter 2, ACC! q => search (0 => 0, 0.99867 => 0.99867) a=1.007
  >>  iter 3, ACC! search => message (0 => 0, 0.99867 => 0.99867) a=1.006
  >>  iter 4, ACC! message => command (0 => 0, 0.99867 => 0.99867) a=1.008
  >>  iter 5, ACC! command => name (0 => 0, 0.99867 => 0.99867) a=1.008
  >>  iter 6, ACC! name => rule (0 => 0, 0.99867 => 0.99867) a=1.006
  >>  iter 7, ACC! rule => sequence (0 => 0, 0.99867 => 0.99867) a=1.007
  >>  iter 8, ACC! sequence => join (0 => 0, 0.99867 => 0.99867) a=1.001
  >>  iter 9, ACC! join => search (0 => 0, 0.99867 => 0.99867) a=1.005
  >>  iter 10, ACC! search => table (0 => 0, 0.99867 => 0.99866) a=1.004
Example 195 attack result: {'succ': False, 'tokens': '    private static ArrayList<String> YahooSearch(String table) {\n        ArrayList<String> yahooSearchResults = new ArrayList<String>();\n        try {\n            String request = "http://boss.yahooapis.com/ysearch/web/v1/" + URLEncoder.encode("Java example for " + table, "UTF-8") + "?appid=zfau5aPV34ETbq9mWU0ui5e04y0rIewg1zwvzHb1tGoBFK2nSCU1SKS2D4zphh2rd3Wf" + "&format=xml&count=30&type=-msoffice,-pdf";\n            URL url = new URL(request);\n            System.out.println("Host : " + url.getHost());\n            url.openConnection();\n            BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));\n            String inputLine;\n            String finalContents = "";\n            while ((inputLine = reader.readLine()) != null) {\n                finalContents += "\n" + inputLine;\n            }\n            Document doc = Jsoup.parse(finalContents);\n            Elements eles = doc.getElementsByTag("url");\n            for (Element ele : eles) {\n                yahooSearchResults.add(ele.text());\n                System.out.println("YahooResult: " + ele.text());\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return yahooSearchResults;\n    }\n', 'raw_tokens': None, 'prog_length': 217, 'new_pred': 0, 'is_success': -1, 'old_uid': 'query', 'score_info': 5.9604645e-06, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'query': 'table'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 195 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 13.34 min
  curr succ rate = 0.0136986301369863
Query times in this attack:  298
All Query times:  21711
raw_tokens: ['public', 'int', 'save', '(', 'String', 'newInventory', ',', 'String', 'inventoryType', ',', 'int', 'compareResult', ',', 'boolean', 'renameCorruptedFile', ')', '{', 'if', '(', 'newInventory', '==', 'null', '||', 'newInventory', '.', 'equals', '(', '"', '"', ')', ')', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', 'Category', 'log', '=', 'ThreadCategory', '.', 'getInstance', '(', 'getClass', '(', ')', ')', ';', 'try', '{', 'log', '.', 'debug', '(', 'newInventory', ')', ';', 'init', '(', 'newInventory', ')', ';', '}', 'catch', '(', 'ValidationException', 've', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'parse', 'new', 'Inventory.', '"', ')', ';', 'log', '.', 'error', '(', 've', ')', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'catch', '(', 'MarshalException', 'me', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'parse', 'new', 'Inventory.', '"', ')', ';', 'log', '.', 'error', '(', 'me', ')', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'InventoryConfiguration', 'iConfig', '=', 'InventoryConfigFactory', '.', 'getInstance', '(', ')', '.', 'getConfiguration', '(', ')', ';', 'String', 'directory_repository', '=', 'iConfig', '.', 'getFileRepository', '(', ')', ';', 'String', 'path', '=', '(', 'String', ')', 'parameters', '.', 'get', '(', '"', 'path', '"', ')', ';', 'if', '(', 'path', '==', 'null', ')', '{', 'log', '.', 'error', '(', '"', 'Parameter', "'path'", 'not', 'found.', '"', ')', ';', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'java', '.', 'sql', '.', 'Connection', 'dbConn', '=', 'null', ';', 'try', '{', 'dbConn', '=', 'DatabaseConnectionFactory', '.', 'getInstance', '(', ')', '.', 'getConnection', '(', ')', ';', 'dbConn', '.', 'setAutoCommit', '(', 'false', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'connect', 'to', 'DB', '"', ')', ';', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'catch', '(', 'Exception', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'connect', 'to', 'DB', '"', ')', ';', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'String', 'nodeDirectory_repository', '=', '"', '"', ';', 'String', 'file_repository', '=', '"', '"', ';', 'String', 'oldPathToFile', '=', '"', '"', ';', 'String', 'newPathToFile', '=', '"', '"', ';', 'boolean', 'renameFile', '=', 'false', ';', 'ResultSet', 'rs', '=', 'null', ';', 'try', '{', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'SELECT_NODEID_BY_INTERFACE', ')', ';', 'stmt', '.', 'setString', '(', '1', ',', 'ipAddress', ')', ';', 'rs', '=', 'stmt', '.', 'executeQuery', '(', ')', ';', 'while', '(', 'rs', '.', 'next', '(', ')', ')', '{', 'nodeId', '=', 'rs', '.', 'getInt', '(', '1', ')', ';', '}', 'if', '(', 'directory_repository', '.', 'endsWith', '(', '"', '/', '"', ')', '==', 'false', '&&', 'directory_repository', '.', 'endsWith', '(', 'File', '.', 'separator', ')', '==', 'false', ')', '{', 'directory_repository', '+=', 'File', '.', 'separator', ';', '}', 'nodeDirectory_repository', '=', 'directory_repository', '+', 'nodeId', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'read', 'from', 'DB', '"', ')', ';', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'rs', '=', 'null', ';', 'try', '{', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'SELECT_PATHTOFILE', ')', ';', 'stmt', '.', 'setInt', '(', '1', ',', 'nodeId', ')', ';', 'stmt', '.', 'setString', '(', '2', ',', 'inventoryType', ')', ';', 'stmt', '.', 'setString', '(', '3', ',', '"', 'A', '"', ')', ';', 'rs', '=', 'stmt', '.', 'executeQuery', '(', ')', ';', 'while', '(', 'rs', '.', 'next', '(', ')', ')', '{', 'oldPathToFile', '=', 'rs', '.', 'getString', '(', '1', ')', ';', '}', 'String', 'newDirRep', '=', 'nodeDirectory_repository', ';', 'if', '(', 'path', '.', 'startsWith', '(', '"', '/', '"', ')', '==', 'false', '&&', 'path', '.', 'startsWith', '(', 'File', '.', 'separator', ')', '==', 'false', ')', '{', 'newDirRep', '+=', 'File', '.', 'separator', ';', '}', 'long', 'time', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'Timestamp', 'currTime', '=', 'new', 'Timestamp', '(', 'time', ')', ';', 'java', '.', 'util', '.', 'Date', 'currTimeDate', '=', 'new', 'java', '.', 'util', '.', 'Date', '(', 'currTime', '.', 'getTime', '(', ')', ')', ';', 'SimpleDateFormat', 'ObjectformatDate', '=', 'new', 'SimpleDateFormat', '(', '"', 'yyyy-MM-dd', 'HH:mm:ss', '"', ')', ';', 'newPathToFile', '=', 'newDirRep', '+', 'path', '+', '"', '[', '"', '+', 'ObjectformatDate', '.', 'format', '(', 'currTimeDate', ')', '+', '"', ']', '"', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'read', 'from', 'DB', '"', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'int', 'returnValue', '=', 'InventoryMonitor', '.', 'CONFIGURATION_SAVED', ';', 'rs', '=', 'null', ';', 'int', 'found', '=', '-', '1', ';', 'try', '{', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'COUNT_NODEID_CONFIGURATION_NAME', ')', ';', 'stmt', '.', 'setInt', '(', '1', ',', 'nodeId', ')', ';', 'stmt', '.', 'setString', '(', '2', ',', 'inventoryType', ')', ';', 'rs', '=', 'stmt', '.', 'executeQuery', '(', ')', ';', 'while', '(', 'rs', '.', 'next', '(', ')', ')', '{', 'found', '=', 'rs', '.', 'getInt', '(', '1', ')', ';', '}', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'read', 'from', 'DB', '"', ')', ';', 'log', '.', 'error', '(', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'long', 'time', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'Timestamp', 'currentTime', '=', 'new', 'Timestamp', '(', 'time', ')', ';', 'if', '(', 'found', '>', '0', ')', '{', 'if', '(', 'compareResult', '==', 'InventoryMonitor', '.', 'CONFIGURATION_CHANGED', '||', 'compareResult', '==', 'InventoryMonitor', '.', 'FIRST_ACTIVE_CONFIGURATION_DOWNLOAD', ')', '{', 'try', '{', 'log', '.', 'debug', '(', '"', 'FOUND=', '"', '+', 'found', '+', '"', '', 'row/s', 'in', 'configuration,', 'UPDATE', 'it', '"', ')', ';', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'UPDATE_CONFIGURATION_TO_STATUS_N', ')', ';', 'stmt', '.', 'setInt', '(', '1', ',', 'nodeId', ')', ';', 'stmt', '.', 'setString', '(', '2', ',', 'inventoryType', ')', ';', 'stmt', '.', 'executeUpdate', '(', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'update', 'DB', '"', '+', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'try', '{', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'INSERT_IN_CONFIGURATION', ')', ';', 'stmt', '.', 'setInt', '(', '1', ',', 'nodeId', ')', ';', 'stmt', '.', 'setTimestamp', '(', '2', ',', 'currentTime', ')', ';', 'stmt', '.', 'setTimestamp', '(', '3', ',', 'currentTime', ')', ';', 'stmt', '.', 'setString', '(', '4', ',', 'inventoryType', ')', ';', 'stmt', '.', 'setString', '(', '5', ',', 'newPathToFile', ')', ';', 'stmt', '.', 'execute', '(', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'insert', 'in', 'DB', '"', ')', ';', 'log', '.', 'error', '(', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', '}', 'else', '{', 'try', '{', 'log', '.', 'debug', '(', '"', 'FOUND=', '"', '+', 'found', '+', '"', '', 'row/s', 'in', 'configuration,', 'UPDATE', 'it', '"', ')', ';', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'UPDATE_LASTPOLLTIME_PATHTOFILE', ')', ';', 'stmt', '.', 'setTimestamp', '(', '1', ',', 'currentTime', ')', ';', 'stmt', '.', 'setString', '(', '2', ',', 'newPathToFile', ')', ';', 'stmt', '.', 'setInt', '(', '3', ',', 'nodeId', ')', ';', 'stmt', '.', 'setString', '(', '4', ',', 'inventoryType', ')', ';', 'stmt', '.', 'executeUpdate', '(', ')', ';', 'renameFile', '=', 'true', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'update', 'DB', '"', ')', ';', 'log', '.', 'error', '(', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', '}', 'try', '{', 'dbConn', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'commit', 'to', 'DB', '', '"', '+', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', '}', 'else', '{', 'try', '{', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'INSERT_IN_CONFIGURATION', ')', ';', 'stmt', '.', 'setInt', '(', '1', ',', 'nodeId', ')', ';', 'stmt', '.', 'setTimestamp', '(', '2', ',', 'currentTime', ')', ';', 'stmt', '.', 'setTimestamp', '(', '3', ',', 'currentTime', ')', ';', 'stmt', '.', 'setString', '(', '4', ',', 'inventoryType', ')', ';', 'stmt', '.', 'setString', '(', '5', ',', 'newPathToFile', ')', ';', 'stmt', '.', 'execute', '(', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'insert', 'in', 'DB', '"', ')', ';', 'log', '.', 'error', '(', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', '}', 'rs', '=', 'null', ';', 'found', '=', '-', '1', ';', 'try', '{', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'COUNT_NODEID_IN_ASSET', ')', ';', 'stmt', '.', 'setInt', '(', '1', ',', 'nodeId', ')', ';', 'rs', '=', 'stmt', '.', 'executeQuery', '(', ')', ';', 'while', '(', 'rs', '.', 'next', '(', ')', ')', '{', 'found', '=', 'rs', '.', 'getInt', '(', '1', ')', ';', '}', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'write', 'into', 'DB', '"', ')', ';', 'log', '.', 'error', '(', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'time', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'currentTime', '=', 'new', 'Timestamp', '(', 'time', ')', ';', 'if', '(', 'found', '>', '0', ')', '{', 'try', '{', 'log', '.', 'debug', '(', '"', 'Found', '', '"', '+', 'found', '+', '"', '', 'rows', 'in', 'table', 'assets:', 'UPDATE', 'it', '"', ')', ';', 'Iterator', 'dbColumnIter', '=', 'asset', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'String', 'queryParam', '=', '"', '"', ';', 'int', 'counter', '=', '0', ';', 'while', '(', 'dbColumnIter', '.', 'hasNext', '(', ')', ')', '{', 'counter', '++', ';', 'String', 'currDbColumn', '=', '(', 'String', ')', 'dbColumnIter', '.', 'next', '(', ')', ';', 'String', 'dataItem', '=', '(', 'String', ')', 'asset', '.', 'get', '(', 'currDbColumn', ')', ';', 'dataItem', '=', 'dataItem', '.', 'replaceAll', '(', '"', '[', '', '\\t', ']+', '"', ',', '"', '', '', '"', ')', ';', 'queryParam', '+=', 'currDbColumn', '+', '"', "='", '"', '+', 'dataItem', '+', '"', "',", '"', ';', '}', 'if', '(', 'counter', '>', '0', ')', '{', 'String', 'updateAssets', '=', '"', 'UPDATE', 'assets', 'SET', '', '', '"', '+', 'queryParam', '+', '"', '', 'lastmodifieddate=?', 'WHERE', 'nodeID', '=?', '"', ';', 'PreparedStatement', 'stmt', '=', 'dbConn', '.', 'prepareStatement', '(', 'updateAssets', ')', ';', 'stmt', '.', 'setTimestamp', '(', '1', ',', 'currentTime', ')', ';', 'stmt', '.', 'setInt', '(', '2', ',', 'nodeId', ')', ';', 'log', '.', 'debug', '(', '"', 'UPDATEQUERY', '', '"', '+', 'updateAssets', ')', ';', 'stmt', '.', 'executeUpdate', '(', ')', ';', '}', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'update', 'DB', '"', '+', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', '}', 'else', '{', 'try', '{', 'log', '.', 'debug', '(', '"', 'row', 'not', 'found.', 'INSERT', 'into', 'assets', '"', ')', ';', 'InsertIntoAssets', '(', 'dbConn', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'insert', 'in', 'DB', '"', ')', ';', 'log', '.', 'error', '(', 's', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqle', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', '}', 'try', '{', 'dbConn', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqle', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'save', 'into', 'DB', '"', '+', 'sqle', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'sqlex', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'on', 'db.', '', '"', '+', 'sqlex', ')', ';', '}', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'try', '{', 'boolean', 'exists', '=', '(', 'new', 'File', '(', 'directory_repository', ')', ')', '.', 'exists', '(', ')', ';', 'if', '(', '!', 'exists', ')', '{', 'log', '.', 'warn', '(', '"', 'file-repository', "'", '"', '+', 'directory_repository', '+', '"', "'", 'not', 'found:', 'trying', 'to', 'create', 'it.', '"', ')', ';', 'boolean', 'success', '=', '(', 'new', 'File', '(', 'directory_repository', ')', ')', '.', 'mkdir', '(', ')', ';', 'if', '(', '!', 'success', ')', '{', 'log', '.', 'error', '(', '"', 'Directory', 'creation', 'failed', '"', ')', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'DB', '"', ')', ';', '}', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'log', '.', 'warn', '(', '"', 'file-repository', "'", '"', '+', 'directory_repository', '+', '"', "'", 'created.', '"', ')', ';', '}', 'exists', '=', '(', 'new', 'File', '(', 'nodeDirectory_repository', ')', ')', '.', 'exists', '(', ')', ';', 'if', '(', '!', 'exists', ')', '{', 'boolean', 'success', '=', '(', 'new', 'File', '(', 'nodeDirectory_repository', ')', ')', '.', 'mkdir', '(', ')', ';', 'if', '(', '!', 'success', ')', '{', 'log', '.', 'error', '(', '"', 'Node', 'Directory', "'", '"', '+', 'nodeDirectory_repository', '+', '"', "'", 'creation', 'failed.', '"', ')', ';', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'DB', '"', ')', ';', '}', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', '}', 'exists', '=', '(', 'new', 'File', '(', 'oldPathToFile', ')', ')', '.', 'exists', '(', ')', ';', 'log', '.', 'debug', '(', 'oldPathToFile', '+', '"', '', 'exists=', '"', '+', 'exists', ')', ';', 'if', '(', '!', 'exists', ')', '{', 'if', '(', 'renameCorruptedFile', ')', '{', 'log', '.', 'warn', '(', '"', 'renameCorruptedFile=true', 'and', 'old', 'configuration', "doesn't", 'exist.', '"', ')', ';', '}', 'returnValue', '=', 'InventoryMonitor', '.', 'FIRST_ACTIVE_CONFIGURATION_DOWNLOAD', ';', '}', 'if', '(', 'renameCorruptedFile', ')', '{', 'File', 'f', '=', 'new', 'File', '(', 'oldPathToFile', ')', ';', 'String', 'oldConfigurationFileDestination', '=', 'oldPathToFile', '+', '"', '_Corrupted', '"', ';', 'File', 'dest', '=', 'new', 'File', '(', 'oldConfigurationFileDestination', ')', ';', 'dest', '.', 'createNewFile', '(', ')', ';', 'f', '.', 'renameTo', '(', 'dest', ')', ';', 'FileWriter', 'fileout', '=', 'new', 'FileWriter', '(', 'newPathToFile', ')', ';', 'BufferedWriter', 'filebufwri', '=', 'new', 'BufferedWriter', '(', 'fileout', ')', ';', 'PrintWriter', 'printout', '=', 'new', 'PrintWriter', '(', 'filebufwri', ')', ';', 'printout', '.', 'println', '(', 'newInventory', ')', ';', 'printout', '.', 'close', '(', ')', ';', '}', 'else', '{', 'if', '(', 'renameFile', ')', '{', 'File', 'f', '=', 'new', 'File', '(', 'oldPathToFile', ')', ';', 'File', 'dest', '=', 'new', 'File', '(', 'newPathToFile', ')', ';', 'dest', '.', 'createNewFile', '(', ')', ';', 'f', '.', 'renameTo', '(', 'dest', ')', ';', '}', 'else', '{', 'FileWriter', 'fileout', '=', 'new', 'FileWriter', '(', 'newPathToFile', ')', ';', 'BufferedWriter', 'filebufwri', '=', 'new', 'BufferedWriter', '(', 'fileout', ')', ';', 'PrintWriter', 'printout', '=', 'new', 'PrintWriter', '(', 'filebufwri', ')', ';', 'printout', '.', 'print', '(', 'newInventory', ')', ';', 'printout', '.', 'close', '(', ')', ';', '}', '}', '}', 'catch', '(', 'IOException', 'ioex', ')', '{', 'try', '{', 'dbConn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'rollback', 'DB', '"', ')', ';', '}', 'log', '.', 'error', '(', '"', 'Failed', 'writing', 'to', 'file', "'", '"', '+', 'newPathToFile', '+', '"', "'.", '"', ')', ';', 'saveMessage', '=', '"', 'Unable', 'to', 'save', '', '"', '+', 'inventoryType', '+', '"', '', 'configuration.<br>', '"', ';', 'return', 'InventoryMonitor', '.', 'CONFIGURATION_NOT_SAVED', ';', '}', 'finally', '{', 'try', '{', 'dbConn', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'SQLException', 's', ')', '{', 'log', '.', 'error', '(', '"', 'Unable', 'to', 'close', 'connection', 'to', 'DB', '"', ')', ';', '}', '}', 'saveMessage', '=', '"', 'inventory', '', '"', '+', 'inventoryType', '+', '"', '', 'success.<br>', '"', ';', 'log', '.', 'debug', '(', '"', '"', '+', 'returnValue', ')', ';', 'return', 'returnValue', ';', '}']
Example 196 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'accessURL_Post', '(', 'String', 'url', ',', 'Map', '<', 'String', ',', 'String', '>', 'keyValue', ',', 'String', 'encoding', ')', 'throws', 'Throwable', '{', 'List', '<', 'NameValuePair', '>', 'formparams', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'keyValue', '.', 'keySet', '(', ')', ')', '{', 'formparams', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', 'key', ',', 'keyValue', '.', 'get', '(', 'key', ')', ')', ')', ';', '}', 'UrlEncodedFormEntity', 'entity', '=', 'new', 'UrlEncodedFormEntity', '(', 'formparams', ',', 'encoding', ')', ';', 'HttpPost', 'httpPost', '=', 'new', 'HttpPost', '(', 'url', ')', ';', 'httpPost', '.', 'setEntity', '(', 'entity', ')', ';', 'HttpResponse', 'response', '=', 'client', '.', 'execute', '(', 'httpPost', ')', ';', 'String', 'entuity', '=', 'EntityUtils', '.', 'toString', '(', 'response', '.', 'getEntity', '(', ')', ')', ';', 'handleHeaders', '(', 'response', '.', 'getAllHeaders', '(', ')', ')', ';', 'return', 'entuity', ';', '}']
Example 197 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'Collection', '<', 'Module', '>', 'loadModules', '(', ')', '{', 'URL', 'url', '=', 'getClass', '(', ')', '.', 'getResource', '(', '"', '/modules.xml', '"', ')', ';', 'if', '(', 'url', '==', 'null', ')', '{', 'java', '.', 'util', '.', 'logging', '.', 'Logger', '.', 'getLogger', '(', 'ModuleLoader', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'java', '.', 'util', '.', 'logging', '.', 'Level', '.', 'SEVERE', ',', '"', 'Cannot', 'find', 'modules.xml', 'file', 'in', 'classpath', '"', ')', ';', 'return', 'Collections', '.', '<', 'Module', '>', 'emptyList', '(', ')', ';', '}', 'DocumentBuilderFactory', 'fac', '=', 'DocumentBuilderFactory', '.', 'newInstance', '(', ')', ';', 'Document', 'document', '=', 'null', ';', 'InputStream', 'input', '=', 'null', ';', 'try', '{', 'input', '=', 'url', '.', 'openStream', '(', ')', ';', 'DocumentBuilder', 'bui', '=', 'fac', '.', 'newDocumentBuilder', '(', ')', ';', 'document', '=', 'bui', '.', 'parse', '(', 'url', '.', 'openStream', '(', ')', ')', ';', '}', 'catch', '(', 'SAXException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'ModuleLoader', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'ModuleLoader', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', 'catch', '(', 'ParserConfigurationException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'ModuleLoader', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', 'finally', '{', 'if', '(', 'input', '!=', 'null', ')', '{', 'try', '{', 'input', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'ModuleLoader', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', '}', '}', 'if', '(', 'document', '==', 'null', ')', '{', 'return', 'Collections', '.', '<', 'Module', '>', 'emptyList', '(', ')', ';', '}', 'List', '<', 'Module', '>', 'modules', '=', 'new', 'LinkedList', '<', 'Module', '>', '(', ')', ';', 'NodeList', 'moduleListNodes', '=', 'document', '.', 'getElementsByTagName', '(', '"', 'module-list', '"', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'moduleListNodes', '.', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'Element', 'moduleListNode', '=', '(', 'Element', ')', 'moduleListNodes', '.', 'item', '(', 'i', ')', ';', 'NodeList', 'moduleNodes', '=', 'moduleListNode', '.', 'getElementsByTagName', '(', '"', 'module', '"', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'moduleNodes', '.', 'getLength', '(', ')', ';', 'j', '++', ')', '{', 'Element', 'moduleNode', '=', '(', 'Element', ')', 'moduleNodes', '.', 'item', '(', 'j', ')', ';', 'String', 'moduleClass', '=', 'moduleNode', '.', 'getAttribute', '(', '"', 'class', '"', ')', ';', 'if', '(', 'moduleClass', '!=', 'null', ')', '{', 'instantiateModule', '(', 'moduleClass', ',', 'modules', ')', ';', '}', '}', '}', 'return', 'modules', ';', '}']
  >>  iter 1, ACC! url => object (0 => 0, 0.99998 => 0.99981) a=13.246
  >>  iter 2, ACC! object => src (0 => 0, 0.99981 => 0.99980) a=1.198
  >>  iter 3, ACC! src => loader (0 => 0, 0.99980 => 0.99980) a=1.126
  >>  iter 4, ACC! loader => object (0 => 0, 0.99980 => 0.99981) a=1.383
  >>  iter 5, ACC! object => path (0 => 0, 0.99981 => 0.99991) a=1.458
  >>  iter 6, ACC! path => service (0 => 0, 0.99991 => 0.99982) a=3.097
  >>  iter 7, ACC! service => server (0 => 0, 0.99982 => 0.99980) a=1.500
  >>  iter 8, ACC! server => zip (0 => 0, 0.99980 => 0.99987) a=1.370
  >>  iter 9, ACC! zip => proxy (0 => 0, 0.99987 => 0.99981) a=2.108
  >>  iter 10, ACC! proxy => loader (0 => 0, 0.99981 => 0.99980) a=1.421
Example 198 attack result: {'succ': False, 'tokens': '    public Collection<Module> loadModules() {\n        URL loader = getClass().getResource("/modules.xml");\n        if (loader == null) {\n            java.util.logging.Logger.getLogger(ModuleLoader.class.getName()).log(java.util.logging.Level.SEVERE, "Cannot find modules.xml file in classpath");\n            return Collections.<Module>emptyList();\n        }\n        DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance();\n        Document document = null;\n        InputStream input = null;\n        try {\n            input = loader.openStream();\n            DocumentBuilder bui = fac.newDocumentBuilder();\n            document = bui.parse(loader.openStream());\n        } catch (SAXException ex) {\n            Logger.getLogger(ModuleLoader.class.getName()).log(Level.SEVERE, null, ex);\n        } catch (IOException ex) {\n            Logger.getLogger(ModuleLoader.class.getName()).log(Level.SEVERE, null, ex);\n        } catch (ParserConfigurationException ex) {\n            Logger.getLogger(ModuleLoader.class.getName()).log(Level.SEVERE, null, ex);\n        } finally {\n            if (input != null) {\n                try {\n                    input.close();\n                } catch (IOException ex) {\n                    Logger.getLogger(ModuleLoader.class.getName()).log(Level.SEVERE, null, ex);\n                }\n            }\n        }\n        if (document == null) {\n            return Collections.<Module>emptyList();\n        }\n        List<Module> modules = new LinkedList<Module>();\n        NodeList moduleListNodes = document.getElementsByTagName("module-list");\n        for (int i = 0; i < moduleListNodes.getLength(); i++) {\n            Element moduleListNode = (Element) moduleListNodes.item(i);\n            NodeList moduleNodes = moduleListNode.getElementsByTagName("module");\n            for (int j = 0; j < moduleNodes.getLength(); j++) {\n                Element moduleNode = (Element) moduleNodes.item(j);\n                String moduleClass = moduleNode.getAttribute("class");\n                if (moduleClass != null) {\n                    instantiateModule(moduleClass, modules);\n                }\n            }\n        }\n        return modules;\n    }\n', 'raw_tokens': None, 'prog_length': 426, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 5.364418e-06, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'url': 'loader'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 198 FAILED.
  time cost = 0.17 min
  ALL EXAMPLE time cost = 13.55 min
  curr succ rate = 0.013513513513513514
Query times in this attack:  300
All Query times:  22011
raw_tokens: ['public', 'void', 'convert', '(', 'File', 'src', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'src', ')', ')', ';', 'DcmParser', 'p', '=', 'pfact', '.', 'newDcmParser', '(', 'in', ')', ';', 'Dataset', 'ds', '=', 'fact', '.', 'newDataset', '(', ')', ';', 'p', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'try', '{', 'FileFormat', 'format', '=', 'p', '.', 'detectFileFormat', '(', ')', ';', 'if', '(', 'format', '!=', 'FileFormat', '.', 'ACRNEMA_STREAM', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'not', 'an', 'ACRNEMA', 'stream!', '"', ')', ';', 'return', ';', '}', 'p', '.', 'parseDcmFile', '(', 'format', ',', 'Tags', '.', 'PixelData', ')', ';', 'if', '(', 'ds', '.', 'contains', '(', 'Tags', '.', 'StudyInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SeriesInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SOPInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SOPClassUID', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'contains', 'UIDs!', '"', '+', '"', '', '=>', 'probable', 'already', 'DICOM', '-', 'do', 'not', 'convert', '"', ')', ';', 'return', ';', '}', 'boolean', 'hasPixelData', '=', 'p', '.', 'getReadTag', '(', ')', '==', 'Tags', '.', 'PixelData', ';', 'boolean', 'inflate', '=', 'hasPixelData', '&&', 'ds', '.', 'getInt', '(', 'Tags', '.', 'BitsAllocated', ',', '0', ')', '==', '12', ';', 'int', 'pxlen', '=', 'p', '.', 'getReadLength', '(', ')', ';', 'if', '(', 'hasPixelData', ')', '{', 'if', '(', 'inflate', ')', '{', 'ds', '.', 'putUS', '(', 'Tags', '.', 'BitsAllocated', ',', '16', ')', ';', 'pxlen', '=', 'pxlen', '*', '4', '/', '3', ';', '}', 'if', '(', 'pxlen', '!=', '(', 'ds', '.', 'getInt', '(', 'Tags', '.', 'BitsAllocated', ',', '0', ')', '>>>', '3', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'Rows', ',', '0', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'Columns', ',', '0', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'NumberOfFrames', ',', '1', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'NumberOfSamples', ',', '1', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'mismatch', 'pixel', 'data', 'length!', '"', '+', '"', '', '=>', 'do', 'not', 'convert', '"', ')', ';', 'return', ';', '}', '}', 'ds', '.', 'putUI', '(', 'Tags', '.', 'StudyInstanceUID', ',', 'uid', '(', 'studyUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SeriesInstanceUID', ',', 'uid', '(', 'seriesUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SOPInstanceUID', ',', 'uid', '(', 'instUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SOPClassUID', ',', 'classUID', ')', ';', 'if', '(', '!', 'ds', '.', 'contains', '(', 'Tags', '.', 'NumberOfSamples', ')', ')', '{', 'ds', '.', 'putUS', '(', 'Tags', '.', 'NumberOfSamples', ',', '1', ')', ';', '}', 'if', '(', '!', 'ds', '.', 'contains', '(', 'Tags', '.', 'PhotometricInterpretation', ')', ')', '{', 'ds', '.', 'putCS', '(', 'Tags', '.', 'PhotometricInterpretation', ',', '"', 'MONOCHROME2', '"', ')', ';', '}', 'if', '(', 'fmi', ')', '{', 'ds', '.', 'setFileMetaInfo', '(', 'fact', '.', 'newFileMetaInfo', '(', 'ds', ',', 'UIDs', '.', 'ImplicitVRLittleEndian', ')', ')', ';', '}', 'OutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'dest', ')', ')', ';', 'try', '{', '}', 'finally', '{', 'ds', '.', 'writeFile', '(', 'out', ',', 'encodeParam', '(', ')', ')', ';', 'if', '(', 'hasPixelData', ')', '{', 'if', '(', '!', 'skipGroupLen', ')', '{', 'out', '.', 'write', '(', 'PXDATA_GROUPLEN', ')', ';', 'int', 'grlen', '=', 'pxlen', '+', '8', ';', 'out', '.', 'write', '(', '(', 'byte', ')', 'grlen', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '8', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '16', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '24', ')', ')', ';', '}', 'out', '.', 'write', '(', 'PXDATA_TAG', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', 'pxlen', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '8', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '16', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '24', ')', ')', ';', '}', 'if', '(', 'inflate', ')', '{', 'int', 'b2', ',', 'b3', ';', 'for', '(', ';', 'pxlen', '>', '0', ';', 'pxlen', '-=', '3', ')', '{', 'out', '.', 'write', '(', 'in', '.', 'read', '(', ')', ')', ';', 'b2', '=', 'in', '.', 'read', '(', ')', ';', 'b3', '=', 'in', '.', 'read', '(', ')', ';', 'out', '.', 'write', '(', 'b2', '&', '0x0f', ')', ';', 'out', '.', 'write', '(', 'b2', '>>', '4', '|', '(', '(', 'b3', '&', '0x0f', ')', '<<', '4', ')', ')', ';', 'out', '.', 'write', '(', 'b3', '>>', '4', ')', ';', '}', '}', 'else', '{', 'for', '(', ';', 'pxlen', '>', '0', ';', '--', 'pxlen', ')', '{', 'out', '.', 'write', '(', 'in', '.', 'read', '(', ')', ')', ';', '}', '}', 'out', '.', 'close', '(', ')', ';', '}', 'System', '.', 'out', '.', 'print', '(', "'.'", ')', ';', '}', 'finally', '{', 'in', '.', 'close', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! in => din (0 => 0, 0.99993 => 0.99993) a=1.002
  >>  iter 2, ACC! din => as (0 => 0, 0.99993 => 0.99993) a=1.003
  >>  iter 3, ACC! as => data (0 => 0, 0.99993 => 0.99993) a=1.003
  >>  iter 4, ACC! data => init (0 => 0, 0.99993 => 0.99993) a=1.002
  >>  iter 5, ACC! init => inn (0 => 0, 0.99993 => 0.99993) a=1.003
  >>  iter 6, ACC! inn => ini (0 => 0, 0.99993 => 0.99993) a=1.002
  >>  iter 7, ACC! ini => file (0 => 0, 0.99993 => 0.99993) a=1.003
  >>  iter 8, ACC! file => lin (0 => 0, 0.99993 => 0.99993) a=1.003
  >>  iter 9, ACC! lin => inner (0 => 0, 0.99993 => 0.99993) a=1.003
  >>  iter 10, ACC! inner => gin (0 => 0, 0.99993 => 0.99993) a=1.002
Example 199 attack result: {'succ': False, 'tokens': '    public void convert(File src, File dest) throws IOException {\n        InputStream gin = new BufferedInputStream(new FileInputStream(src));\n        DcmParser p = pfact.newDcmParser(gin);\n        Dataset ds = fact.newDataset();\n        p.setDcmHandler(ds.getDcmHandler());\n        try {\n            FileFormat format = p.detectFileFormat();\n            if (format != FileFormat.ACRNEMA_STREAM) {\n                System.out.println("\n" + src + ": not an ACRNEMA stream!");\n                return;\n            }\n            p.parseDcmFile(format, Tags.PixelData);\n            if (ds.contains(Tags.StudyInstanceUID) || ds.contains(Tags.SeriesInstanceUID) || ds.contains(Tags.SOPInstanceUID) || ds.contains(Tags.SOPClassUID)) {\n                System.out.println("\n" + src + ": contains UIDs!" + " => probable already DICOM - do not convert");\n                return;\n            }\n            boolean hasPixelData = p.getReadTag() == Tags.PixelData;\n            boolean inflate = hasPixelData && ds.getInt(Tags.BitsAllocated, 0) == 12;\n            int pxlen = p.getReadLength();\n            if (hasPixelData) {\n                if (inflate) {\n                    ds.putUS(Tags.BitsAllocated, 16);\n                    pxlen = pxlen * 4 / 3;\n                }\n                if (pxlen != (ds.getInt(Tags.BitsAllocated, 0) >>> 3) * ds.getInt(Tags.Rows, 0) * ds.getInt(Tags.Columns, 0) * ds.getInt(Tags.NumberOfFrames, 1) * ds.getInt(Tags.NumberOfSamples, 1)) {\n                    System.out.println("\n" + src + ": mismatch pixel data length!" + " => do not convert");\n                    return;\n                }\n            }\n            ds.putUI(Tags.StudyInstanceUID, uid(studyUID));\n            ds.putUI(Tags.SeriesInstanceUID, uid(seriesUID));\n            ds.putUI(Tags.SOPInstanceUID, uid(instUID));\n            ds.putUI(Tags.SOPClassUID, classUID);\n            if (!ds.contains(Tags.NumberOfSamples)) {\n                ds.putUS(Tags.NumberOfSamples, 1);\n            }\n            if (!ds.contains(Tags.PhotometricInterpretation)) {\n                ds.putCS(Tags.PhotometricInterpretation, "MONOCHROME2");\n            }\n            if (fmi) {\n                ds.setFileMetaInfo(fact.newFileMetaInfo(ds, UIDs.ImplicitVRLittleEndian));\n            }\n            OutputStream out = new BufferedOutputStream(new FileOutputStream(dest));\n            try {\n            } finally {\n                ds.writeFile(out, encodeParam());\n                if (hasPixelData) {\n                    if (!skipGroupLen) {\n                        out.write(PXDATA_GROUPLEN);\n                        int grlen = pxlen + 8;\n                        out.write((byte) grlen);\n                        out.write((byte) (grlen >> 8));\n                        out.write((byte) (grlen >> 16));\n                        out.write((byte) (grlen >> 24));\n                    }\n                    out.write(PXDATA_TAG);\n                    out.write((byte) pxlen);\n                    out.write((byte) (pxlen >> 8));\n                    out.write((byte) (pxlen >> 16));\n                    out.write((byte) (pxlen >> 24));\n                }\n                if (inflate) {\n                    int b2, b3;\n                    for (; pxlen > 0; pxlen -= 3) {\n                        out.write(gin.read());\n                        b2 = gin.read();\n                        b3 = gin.read();\n                        out.write(b2 & 0x0f);\n                        out.write(b2 >> 4 | ((b3 & 0x0f) << 4));\n                        out.write(b3 >> 4);\n                    }\n                } else {\n                    for (; pxlen > 0; --pxlen) {\n                        out.write(gin.read());\n                    }\n                }\n                out.close();\n            }\n            System.out.print(\'.\');\n        } finally {\n            gin.close();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 764, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 7, 'replace_info': {'in': 'gin'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 199 FAILED.
  time cost = 0.20 min
  ALL EXAMPLE time cost = 13.76 min
  curr succ rate = 0.013333333333333334
Query times in this attack:  289
All Query times:  22300
raw_tokens: ['public', 'RepositoryHandler', '', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'args', '.', 'length', '<', '2', ')', 'return', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'param', '1:', '', '"', '+', 'args', '[', '0', ']', '+', '"', '\\r', '', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'param', '2:', '', '"', '+', 'args', '[', '1', ']', '+', '"', '\\r', '', '"', ')', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'args', '[', '0', ']', ')', ';', 'HttpURLConnection', 'connection', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'connection', '.', 'setFollowRedirects', '(', 'true', ')', ';', 'connection', '.', 'connect', '(', ')', ';', 'BufferedInputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'connection', '.', 'getInputStream', '(', ')', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'args', '[', '1', ']', ')', ';', 'int', 'c', '=', '-', '1', ';', 'while', '(', '(', 'c', '=', 'in', '.', 'read', '(', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'c', ')', ';', '}', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Error:', '', '"', '+', 'e', '+', '"', '\\r', '', '"', ')', ';', '}', '}']
  >>  iter 1, REJ. url => resources (0 => 0, 0.99994 => 0.99995) a=0.917
  >>  iter 2, REJ. url => page (0 => 0, 0.99994 => 0.99995) a=0.923
  >>  iter 3, REJ. url => http (0 => 0, 0.99994 => 0.99995) a=0.917
  >>  iter 4, REJ. url => b (0 => 0, 0.99994 => 0.99995) a=0.917
  >>  iter 5, REJ. url => resource (0 => 0, 0.99994 => 0.99994) a=0.923
  >>  iter 6, REJ. url => service (0 => 0, 0.99994 => 0.99995) a=0.892
  >>  iter 7, REJ. url => org (0 => 0, 0.99994 => 0.99995) a=0.923
  >>  iter 8, REJ. url => str (0 => 0, 0.99994 => 0.99995) a=0.923
  >>  iter 9, REJ. url => object (0 => 0, 0.99994 => 0.99994) a=0.923
  >>  iter 10, REJ. url => event (0 => 0, 0.99994 => 0.99994) a=0.917
Example 200 attack result: {'succ': False, 'tokens': '    public RepositoryHandler(String[] args) {\n        if (args.length < 2) return;\n        System.out.println("param 1: " + args[0] + "\\r\n");\n        System.out.println("param 2: " + args[1] + "\\r\n");\n        try {\n            URL event = new URL(args[0]);\n            HttpURLConnection connection = (HttpURLConnection) event.openConnection();\n            connection.setFollowRedirects(true);\n            connection.connect();\n            BufferedInputStream in = new BufferedInputStream(connection.getInputStream());\n            FileOutputStream out = new FileOutputStream(args[1]);\n            int c = -1;\n            while ((c = in.read()) >= 0) {\n                out.write(c);\n            }\n            out.close();\n            in.close();\n        } catch (Exception e) {\n            System.err.println("Error: " + e + "\\r\n");\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 194, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -9.536743e-06, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 200 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 13.91 min
  curr succ rate = 0.013157894736842105
Query times in this attack:  309
All Query times:  22609
raw_tokens: ['public', 'void', 'elimina', '(', 'Pedido', 'pe', ')', 'throws', 'errorSQL', ',', 'errorConexionBD', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'GestorPedido.elimina()', '"', ')', ';', 'int', 'id', '=', 'pe', '.', 'getId', '(', ')', ';', 'String', 'sql', ';', 'Statement', 'stmt', '=', 'null', ';', 'try', '{', 'gd', '.', 'begin', '(', ')', ';', 'sql', '=', '"', 'DELETE', 'FROM', 'pedido', 'WHERE', 'id=', '"', '+', 'id', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Ejecutando:', '', '"', '+', 'sql', ')', ';', 'stmt', '=', 'gd', '.', 'getConexion', '(', ')', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', 'sql', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'executeUpdate', '"', ')', ';', 'gd', '.', 'commit', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'commit', '"', ')', ';', 'stmt', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'gd', '.', 'rollback', '(', ')', ';', 'throw', 'new', 'errorSQL', '(', 'e', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'errorConexionBD', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Error', 'en', 'GestorPedido.elimina():', '', '"', '+', 'e', ')', ';', '}', 'catch', '(', 'errorSQL', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Error', 'en', 'GestorPedido.elimina():', '', '"', '+', 'e', ')', ';', '}', '}']
Example 201 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'ClassifiedCandidate', 'postToClassifiedCandidate', '(', 'ClassifiedCandidate', 'cand', ',', 'RawCandidateMatched', 'basic', ')', 'throws', 'BookKeeprCommunicationException', '{', 'try', '{', 'synchronized', '(', 'httpClient', ')', '{', 'HttpPost', 'req', '=', 'new', 'HttpPost', '(', 'remoteHost', '.', 'getUrl', '(', ')', '+', '"', '/cand/', '"', '+', 'Long', '.', 'toHexString', '(', 'cand', '.', 'getId', '(', ')', ')', ')', ';', 'req', '.', 'setHeader', '(', '"', 'Accept-Encoding', '"', ',', '"', 'gzip', '"', ')', ';', 'ByteArrayOutputStream', 'out', '=', 'new', 'ByteArrayOutputStream', '(', '1024', ')', ';', 'XMLWriter', '.', 'write', '(', 'out', ',', 'basic', ')', ';', 'ByteArrayInputStream', 'in2', '=', 'new', 'ByteArrayInputStream', '(', 'out', '.', 'toByteArray', '(', ')', ')', ';', 'req', '.', 'setEntity', '(', 'new', 'InputStreamEntity', '(', 'in2', ',', '-', '1', ')', ')', ';', 'HttpResponse', 'resp', '=', 'httpClient', '.', 'execute', '(', 'req', ')', ';', 'if', '(', 'resp', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', '==', 'HttpStatus', '.', 'SC_OK', ')', '{', 'try', '{', 'InputStream', 'in', '=', 'resp', '.', 'getEntity', '(', ')', '.', 'getContent', '(', ')', ';', 'Header', 'hdr', '=', 'resp', '.', 'getFirstHeader', '(', '"', 'Content-Encoding', '"', ')', ';', 'String', 'enc', '=', '"', '"', ';', 'if', '(', 'hdr', '!=', 'null', ')', '{', 'enc', '=', 'resp', '.', 'getFirstHeader', '(', '"', 'Content-Encoding', '"', ')', '.', 'getValue', '(', ')', ';', '}', 'if', '(', 'enc', '.', 'equals', '(', '"', 'gzip', '"', ')', ')', '{', 'in', '=', 'new', 'GZIPInputStream', '(', 'in', ')', ';', '}', 'XMLAble', 'xmlable', '=', 'XMLReader', '.', 'read', '(', 'in', ')', ';', 'in', '.', 'close', '(', ')', ';', 'if', '(', 'xmlable', 'instanceof', 'ClassifiedCandidate', ')', '{', 'ClassifiedCandidate', 'p', '=', '(', 'ClassifiedCandidate', ')', 'xmlable', ';', 'return', 'p', ';', '}', 'else', '{', 'resp', '.', 'getEntity', '(', ')', '.', 'consumeContent', '(', ')', ';', 'throw', 'new', 'BookKeeprCommunicationException', '(', '"', 'BookKeepr', 'returned', 'the', 'wrong', 'thing', 'for', 'ClassifiedCandidate', '"', ')', ';', '}', '}', 'catch', '(', 'SAXException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'BookKeeprConnection', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'WARNING', ',', '"', 'Got', 'a', 'malformed', 'message', 'from', 'the', 'bookkeepr', '"', ',', 'ex', ')', ';', 'throw', 'new', 'BookKeeprCommunicationException', '(', 'ex', ')', ';', '}', '}', 'else', '{', 'throw', 'new', 'BookKeeprCommunicationException', '(', '"', 'Got', 'a', '', '"', '+', 'resp', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', '+', '"', '', 'from', 'the', 'BookKeepr', '"', ')', ';', '}', '}', '}', 'catch', '(', 'HttpException', 'ex', ')', '{', 'throw', 'new', 'BookKeeprCommunicationException', '(', 'ex', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'throw', 'new', 'BookKeeprCommunicationException', '(', 'ex', ')', ';', '}', 'catch', '(', 'URISyntaxException', 'ex', ')', '{', 'throw', 'new', 'BookKeeprCommunicationException', '(', 'ex', ')', ';', '}', '}']
Example 202 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'ImportFromFile', '', '(', ')', '{', 'JFrame', 'jf', '=', 'new', 'JFrame', '(', ')', ';', 'JFileChooser', 'fc', '=', 'new', 'JFileChooser', '(', 'KTH', '.', 'data', '.', '_path', ')', ';', 'fc', '.', 'setFileSelectionMode', '(', 'JFileChooser', '.', 'FILES_ONLY', ')', ';', 'int', 'returnVal', '=', 'fc', '.', 'showOpenDialog', '(', 'jf', ')', ';', 'File', 'file', '=', 'null', ';', 'if', '(', 'returnVal', '==', 'JFileChooser', '.', 'APPROVE_OPTION', ')', '{', 'file', '=', 'fc', '.', 'getSelectedFile', '(', ')', ';', 'KTH', '.', 'data', '.', '_path', '=', 'file', '.', 'getParent', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'file', '.', 'getAbsolutePath', '(', ')', '+', '"', '', '"', ')', ';', '}', 'else', '{', '}', 'if', '(', 'file', '!=', 'null', ')', '{', 'File', 'f', '=', 'new', 'File', '(', 'KTH', '.', 'data', '.', 'getHomeDir', '(', ')', '+', 'File', '.', 'separator', '+', 'KTH', '.', 'data', '.', 'katalogName', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'f', '+', '(', 'f', '.', 'exists', '(', ')', '?', '"', '', 'is', 'found', '', '"', ':', '"', '', 'is', 'missing', '', '"', ')', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', '&&', '!', 'IOUtils', '.', 'isNewerContent', '(', 'file', ',', 'f', ')', ')', '{', '}', 'else', '{', 'try', '{', 'IOUtils', '.', 'copyFile', '(', 'file', ',', 'f', ',', 'true', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'KTH', '.', 'out', '.', 'err', '(', 'e', ')', ';', '}', '}', 'KTH', '.', 'dc2', '.', 'removeDc', '(', '"', 'Import', '"', ')', ';', '}', 'else', '{', '}', '}']
  >>  iter 1, ACC! f => rf (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 2, ACC! rf => p (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 3, ACC! p => l (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! l => aff (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! aff => form (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! form => bf (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! bf => self (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! self => c (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! c => aff (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! aff => file (1 => 1, 0.99988 => 0.99988) a=1.000
Example 203 attack result: {'succ': False, 'tokens': '    public ImportFromFile() {\n        JFrame jf = new JFrame();\n        JFileChooser fc = new JFileChooser(KTH.data._path);\n        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);\n        int returnVal = fc.showOpenDialog(jf);\n        File file = null;\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            file = fc.getSelectedFile();\n            KTH.data._path = file.getParent();\n            System.out.println(file.getAbsolutePath() + "\n");\n        } else {\n        }\n        if (file != null) {\n            File file = new File(KTH.data.getHomeDir() + File.separator + KTH.data.katalogName);\n            System.out.println(file + (file.exists() ? " is found " : " is missing "));\n            if (file.exists() && !IOUtils.isNewerContent(file, file)) {\n            } else {\n                try {\n                    IOUtils.copyFile(file, file, true);\n                } catch (Exception e) {\n                    KTH.out.err(e);\n                }\n            }\n            KTH.dc2.removeDc("Import");\n        } else {\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 227, 'new_pred': 1, 'is_success': -1, 'old_uid': 'f', 'score_info': 7.203198e-09, 'nb_changed_var': 1, 'nb_changed_pos': 6, 'replace_info': {'f': 'file'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 203 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 14.10 min
  curr succ rate = 0.012987012987012988
Query times in this attack:  312
All Query times:  22921
raw_tokens: ['public', 'DocumentDialog', '', '(', 'Frame', 'frame', ',', 'String', 'title', ',', 'String', 'document', ')', '{', 'setTitle', '(', 'title', ')', ';', 'textArea', '=', 'new', 'JTextArea', '(', ')', ';', 'textPane', '=', 'new', 'StdScrollPane', '(', 'textArea', ',', 'StdScrollPane', '.', 'VERTICAL_SCROLLBAR_AS_NEEDED', ',', 'StdScrollPane', '.', 'HORIZONTAL_SCROLLBAR_AS_NEEDED', ')', ';', 'textArea', '.', 'setEditable', '(', 'false', ')', ';', 'getContentPane', '(', ')', '.', 'add', '(', 'textPane', ')', ';', 'URL', 'url', '=', 'DocumentDialog', '.', 'class', '.', 'getClassLoader', '(', ')', '.', 'getResource', '(', 'document', ')', ';', 'try', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ',', '"', 'UTF-8', '"', ')', ')', ';', 'String', 'buildNumber', '=', 'MessageBundle', '.', 'getBuildNumber', '(', ')', ';', 'String', 'releaseNumber', '=', 'MessageBundle', '.', 'getReleaseNumber', '(', ')', ';', 'String', 'tmp', ';', 'while', '(', '(', 'tmp', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'tmp', '=', 'tmp', '.', 'replace', '(', '"', '${build_number}', '"', ',', 'buildNumber', ')', ';', 'tmp', '=', 'tmp', '.', 'replace', '(', '"', '${release_number}', '"', ',', 'releaseNumber', ')', ';', 'sb', '.', 'append', '(', 'tmp', '+', '"', '', '"', ')', ';', '}', 'textArea', '.', 'setText', '(', 'sb', '.', 'toString', '(', ')', ')', ';', 'textArea', '.', 'setCaretPosition', '(', '0', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, SUCC! url => file (1 => 0, 0.97979 => 0.33120) a=1.000
Example 204 attack result: {'succ': True, 'tokens': '    public DocumentDialog(Frame frame, String title, String document) {\n        setTitle(title);\n        textArea = new JTextArea();\n        textPane = new StdScrollPane(textArea, StdScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, StdScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n        textArea.setEditable(false);\n        getContentPane().add(textPane);\n        URL file = DocumentDialog.class.getClassLoader().getResource(document);\n        try {\n            StringBuilder sb = new StringBuilder();\n            BufferedReader in = new BufferedReader(new InputStreamReader(file.openStream(), "UTF-8"));\n            String buildNumber = MessageBundle.getBuildNumber();\n            String releaseNumber = MessageBundle.getReleaseNumber();\n            String tmp;\n            while ((tmp = in.readLine()) != null) {\n                tmp = tmp.replace("${build_number}", buildNumber);\n                tmp = tmp.replace("${release_number}", releaseNumber);\n                sb.append(tmp + "\n");\n            }\n            textArea.setText(sb.toString());\n            textArea.setCaretPosition(0);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': ['public', 'DocumentDialog', '', '(', 'Frame', 'frame', ',', 'String', 'title', ',', 'String', 'document', ')', '{', 'setTitle', '(', 'title', ')', ';', 'textArea', '=', 'new', 'JTextArea', '(', ')', ';', 'textPane', '=', 'new', 'StdScrollPane', '(', 'textArea', ',', 'StdScrollPane', '.', 'VERTICAL_SCROLLBAR_AS_NEEDED', ',', 'StdScrollPane', '.', 'HORIZONTAL_SCROLLBAR_AS_NEEDED', ')', ';', 'textArea', '.', 'setEditable', '(', 'false', ')', ';', 'getContentPane', '(', ')', '.', 'add', '(', 'textPane', ')', ';', 'URL', 'file', '=', 'DocumentDialog', '.', 'class', '.', 'getClassLoader', '(', ')', '.', 'getResource', '(', 'document', ')', ';', 'try', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'file', '.', 'openStream', '(', ')', ',', '"', 'UTF-8', '"', ')', ')', ';', 'String', 'buildNumber', '=', 'MessageBundle', '.', 'getBuildNumber', '(', ')', ';', 'String', 'releaseNumber', '=', 'MessageBundle', '.', 'getReleaseNumber', '(', ')', ';', 'String', 'tmp', ';', 'while', '(', '(', 'tmp', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'tmp', '=', 'tmp', '.', 'replace', '(', '"', '${build_number}', '"', ',', 'buildNumber', ')', ';', 'tmp', '=', 'tmp', '.', 'replace', '(', '"', '${release_number}', '"', ',', 'releaseNumber', ')', ';', 'sb', '.', 'append', '(', 'tmp', '+', '"', '', '"', ')', ';', '}', 'textArea', '.', 'setText', '(', 'sb', '.', 'toString', '(', ')', ')', ';', 'textArea', '.', 'setCaretPosition', '(', '0', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}'], 'prog_length': 212, 'new_pred': 0, 'is_success': 1, 'old_uid': 'url', 'score_info': -0.64859223, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'file'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 204 SUCCEEDED!
  time cost = 0.02 min
  ALL EXAMPLE time cost = 14.13 min
  curr succ rate = 0.02564102564102564
Query times in this attack:  32
All Query times:  22953
raw_tokens: ['@', 'Override', 'public', 'void', 'runTask', '(', 'HashMap', 'pjobParameters', ')', 'throws', 'Exception', '{', 'if', '(', 'hasRequiredResources', '(', 'isSubTask', '(', ')', ')', ')', '{', 'File', 'lfileSource', '=', 'new', 'File', '(', 'getSource', '(', ')', ')', ';', 'File', 'lfileTarget', '=', 'new', 'File', '(', 'getTarget', '(', ')', ')', ';', 'FileChannel', 'lfisInput', '=', 'null', ';', 'FileChannel', 'lfosOutput', '=', 'null', ';', 'try', '{', 'int', 'mbCount', '=', '64', ';', 'boolean', 'lblnDone', '=', 'false', ';', 'while', '(', '!', 'lblnDone', ')', '{', 'lfisInput', '=', 'new', 'FileInputStream', '(', 'lfileSource', ')', '.', 'getChannel', '(', ')', ';', 'lfosOutput', '=', 'new', 'FileOutputStream', '(', 'lfileTarget', ')', '.', 'getChannel', '(', ')', ';', 'try', '{', 'int', 'maxCount', '=', '(', 'mbCount', '*', '1024', '*', '1024', ')', '-', '(', '32', '*', '1024', ')', ';', 'long', 'size', '=', 'lfisInput', '.', 'size', '(', ')', ';', 'long', 'position', '=', '0', ';', 'while', '(', 'position', '<', 'size', ')', '{', 'position', '+=', 'lfisInput', '.', 'transferTo', '(', 'position', ',', 'maxCount', ',', 'lfosOutput', ')', ';', '}', 'lblnDone', '=', 'true', ';', '}', 'catch', '(', 'IOException', 'lioXcp', ')', '{', 'getLog', '(', ')', '.', 'warn', '(', 'lioXcp', ')', ';', 'if', '(', 'lioXcp', '.', 'getMessage', '(', ')', '.', 'contains', '(', '"', 'Insufficient', 'system', 'resources', 'exist', 'to', 'complete', 'the', 'requested', 'servic', '"', ')', ')', '{', 'mbCount', '--', ';', 'getLog', '(', ')', '.', 'debug', '(', '"', 'Dropped', 'resource', 'count', 'down', 'to', '[', '"', '+', 'mbCount', '+', '"', ']', '"', ')', ';', 'if', '(', 'mbCount', '==', '0', ')', '{', 'lblnDone', '=', 'true', ';', '}', 'if', '(', 'lfisInput', '!=', 'null', ')', '{', 'lfisInput', '.', 'close', '(', ')', ';', '}', 'if', '(', 'lfosOutput', '!=', 'null', ')', '{', 'lfosOutput', '.', 'close', '(', ')', ';', '}', '}', 'else', '{', 'throw', 'lioXcp', ';', '}', '}', '}', '}', 'finally', '{', 'if', '(', 'lfisInput', '!=', 'null', ')', '{', 'lfisInput', '.', 'close', '(', ')', ';', '}', 'if', '(', 'lfosOutput', '!=', 'null', ')', '{', 'lfosOutput', '.', 'close', '(', ')', ';', '}', '}', '}', '}']
Example 205 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'tranportRemoteUnitToLocalTempFile', '(', 'String', 'urlStr', ')', 'throws', 'UnitTransportException', '{', 'URL', 'url', '=', 'null', ';', 'File', 'tempUnit', '=', 'null', ';', 'BufferedOutputStream', 'bos', '=', 'null', ';', 'try', '{', 'url', '=', 'new', 'URL', '(', 'urlStr', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e1', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', 'The', 'url', '[%s]', 'is', 'illegal.', '"', ',', 'urlStr', ')', ',', 'e1', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', 'The', 'url', '[%s]', 'is', 'illegal.', '"', ',', 'urlStr', ')', ',', 'e1', ')', ';', '}', 'URLConnection', 'con', '=', 'null', ';', 'BufferedInputStream', 'in', '=', 'null', ';', 'try', '{', 'con', '=', 'url', '.', 'openConnection', '(', ')', ';', 'in', '=', 'new', 'BufferedInputStream', '(', 'con', '.', 'getInputStream', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', "Can't", 'open', 'url', '[%s].', '"', ',', 'urlStr', ')', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', "Can't", 'open', 'url', '[%s].', '"', ',', 'urlStr', ')', ',', 'e', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', 'Unknown', 'error.', 'Maybe', 'miss', 'the', 'username', 'and', 'password', 'in', 'url', '[%s].', '"', ',', 'urlStr', ')', ',', 'e', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', 'Unknown', 'error.', 'Maybe', 'miss', 'the', 'username', 'and', 'password', 'in', 'url', '[%s].', '"', ',', 'urlStr', ')', ',', 'e', ')', ';', '}', 'String', 'unitName', '=', 'urlStr', '.', 'substring', '(', 'urlStr', '.', 'lastIndexOf', '(', "'/'", ')', '+', '1', ')', ';', 'try', '{', 'if', '(', '!', 'StringUtils', '.', 'isEmpty', '(', 'unitName', ')', ')', 'tempUnit', '=', 'new', 'File', '(', 'CommonUtil', '.', 'getTempDir', '(', ')', ',', 'unitName', ')', ';', 'else', 'tempUnit', '=', 'new', 'File', '(', 'CommonUtil', '.', 'createTempFile', '(', ')', ')', ';', '}', 'catch', '(', 'DeployToolException', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', "Can't", 'get', 'temp', 'file', '[%s].', '"', ',', 'tempUnit', ')', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', "Can't", 'get', 'temp', 'file', '[%s].', '"', ',', 'tempUnit', ')', ',', 'e', ')', ';', '}', 'try', '{', 'bos', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'tempUnit', ')', ')', ';', 'logger', '.', 'info', '(', 'String', '.', 'format', '(', '"', 'Use', '[%s]', 'for', 'ftp', 'unit', '[%s].', '"', ',', 'tempUnit', ',', 'urlStr', ')', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', 'File', '[%s]', "don't", 'exist.', '"', ',', 'tempUnit', ')', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', 'File', '[%s]', "don't", 'exist.', '"', ',', 'tempUnit', ')', ',', 'e', ')', ';', '}', 'try', '{', 'IOUtils', '.', 'copy', '(', 'in', ',', 'bos', ')', ';', 'bos', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'error', '(', 'String', '.', 'format', '(', '"', 'Error', 'when', 'download', '[%s]', 'to', '[%s].', '"', ',', 'urlStr', ',', 'tempUnit', ')', ',', 'e', ')', ';', 'throw', 'new', 'UnitTransportException', '(', 'String', '.', 'format', '(', '"', 'Error', 'when', 'download', '[%s]', 'to', '[%s].', '"', ',', 'urlStr', ',', 'tempUnit', ')', ',', 'e', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'bos', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', '}', 'logger', '.', 'info', '(', 'String', '.', 'format', '(', '"', 'Download', 'unit', 'to', '[%s].', '"', ',', 'tempUnit', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', 'return', 'tempUnit', '.', 'getAbsolutePath', '(', ')', ';', '}']
Example 206 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'String', 'in', '=', '"', '/Users/laemmel/svn/shared-svn/projects/120multiDestPeds/floor_plan/boundaries.shp', '"', ';', 'String', 'out', '=', '"', '/Users/laemmel/svn/shared-svn/projects/120multiDestPeds/floor_plan/boundaries_closed.shp', '"', ';', 'ShapeFileReader', 'reader', '=', 'new', 'ShapeFileReader', '(', ')', ';', 'reader', '.', 'readFileAndInitialize', '(', 'in', ')', ';', 'QuadTree', '<', 'Coordinate', '>', 'quad', '=', 'new', 'QuadTree', '<', 'Coordinate', '>', '(', 'reader', '.', 'getBounds', '(', ')', '.', 'getMinX', '(', ')', ',', 'reader', '.', 'getBounds', '(', ')', '.', 'getMinY', '(', ')', ',', 'reader', '.', 'getBounds', '(', ')', '.', 'getMaxX', '(', ')', ',', 'reader', '.', 'getBounds', '(', ')', '.', 'getMaxY', '(', ')', ')', ';', 'for', '(', 'Feature', 'ft', ':', 'reader', '.', 'getFeatureSet', '(', ')', ')', '{', 'MultiLineString', 'ml', '=', '(', 'MultiLineString', ')', 'ft', '.', 'getDefaultGeometry', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ml', '.', 'getNumGeometries', '(', ')', ';', 'i', '++', ')', '{', 'LineString', 'ls', '=', '(', 'LineString', ')', 'ml', '.', 'getGeometryN', '(', 'i', ')', ';', 'Point', 'start', '=', 'ls', '.', 'getStartPoint', '(', ')', ';', 'checkIt', '(', 'start', ',', 'quad', ')', ';', 'Point', 'end', '=', 'ls', '.', 'getEndPoint', '(', ')', ';', 'checkIt', '(', 'end', ',', 'quad', ')', ';', '}', '}', 'ShapeFileWriter', '.', 'writeGeometries', '(', 'reader', '.', 'getFeatureSet', '(', ')', ',', 'out', ')', ';', '}']
Example 207 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'open', '(', ')', '{', 'if', '(', 'null', '==', '_uu', ')', '{', 'try', '{', 'if', '(', 'null', '==', 'url', ')', 'return', 'false', ';', 'else', '{', 'if', '(', 'null', '!=', 'this', '.', 'query', ')', 'this', '.', 'url', '=', 'constructQuery', '(', 'url', ',', 'this', '.', 'query', ')', ';', '_uu', '=', 'url', '.', 'openConnection', '(', ')', ';', '_uu', '.', 'setAllowUserInteraction', '(', 'false', ')', ';', '_uu', '.', 'setDoInput', '(', 'true', ')', ';', 'if', '(', 'null', '!=', 'super', '.', '_loc', ')', '{', 'try', '{', '_uu', '.', 'setRequestProperty', '(', '"', 'Accept-Language', '"', ',', 'jsGet_locale', '(', ')', ')', ';', '}', 'catch', '(', 'JavaScriptException', 'jsx', ')', '{', '}', '}', 'encoding', '=', '_uu', '.', 'getContentEncoding', '(', ')', ';', 'bytesize', '=', '_uu', '.', 'getContentLength', '(', ')', ';', 'mimetype', '=', '_uu', '.', 'getContentType', '(', ')', ';', 'serviceDate', '=', '_uu', '.', 'getDate', '(', ')', ';', 'contentExpires', '=', '_uu', '.', 'getExpiration', '(', ')', ';', 'contentLastmod', '=', '_uu', '.', 'getLastModified', '(', ')', ';', 'return', 'true', ';', '}', '}', 'catch', '(', 'Exception', 'exc', ')', '{', 'close', '(', ')', ';', 'return', 'false', ';', '}', '}', 'else', 'return', 'true', ';', '}']
Example 208 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'fileUpload', '(', ')', 'throws', 'Exception', '{', 'file', '=', 'new', 'File', '(', '"', 'c:/Documents', 'and', 'Settings/dinesh/Desktop/ZShareUploaderPlugin.java', '"', ')', ';', 'httpclient', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'HttpPost', 'httppost', '=', 'new', 'HttpPost', '(', '"', 'http://flameupload.com/cgi/ubr_upload.pl?upload_id=', '"', '+', 'uploadid', ')', ';', 'MultipartEntity', 'mpEntity', '=', 'new', 'MultipartEntity', '(', 'HttpMultipartMode', '.', 'BROWSER_COMPATIBLE', ')', ';', 'ContentBody', 'cbFile', '=', 'new', 'FileBody', '(', 'file', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'upfile_0', '"', ',', 'cbFile', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'uploaded', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'hotfile', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'turbobit', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'depositfiles', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'fileserve', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'filefactory', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'netload', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'uploadstation', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'badongo', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'uploading', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', 'megashare', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'mpEntity', '.', 'addPart', '(', '"', '_2shared', '"', ',', 'new', 'StringBody', '(', '"', 'on', '"', ')', ')', ';', 'httppost', '.', 'setEntity', '(', 'mpEntity', ')', ';', 'NULogger', '.', 'getLogger', '(', ')', '.', 'log', '(', 'Level', '.', 'INFO', ',', '"', 'executing', 'request', '{0}', '"', ',', 'httppost', '.', 'getRequestLine', '(', ')', ')', ';', 'NULogger', '.', 'getLogger', '(', ')', '.', 'info', '(', '"', 'Now', 'uploading', 'your', 'file', 'into', 'flameupload.com', '"', ')', ';', 'HttpResponse', 'response', '=', 'httpclient', '.', 'execute', '(', 'httppost', ')', ';', 'HttpEntity', 'resEntity', '=', 'response', '.', 'getEntity', '(', ')', ';', 'NULogger', '.', 'getLogger', '(', ')', '.', 'info', '(', 'response', '.', 'getStatusLine', '(', ')', '.', 'toString', '(', ')', ')', ';', 'NULogger', '.', 'getLogger', '(', ')', '.', 'info', '(', 'EntityUtils', '.', 'toString', '(', 'resEntity', ')', ')', ';', 'Header', '[', ']', 'allHeaders', '=', 'response', '.', 'getAllHeaders', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'allHeaders', '.', 'length', ';', 'i', '++', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'allHeaders', '[', 'i', ']', '.', 'getName', '(', ')', '+', '"', '=', '"', '+', 'allHeaders', '[', 'i', ']', '.', 'getValue', '(', ')', ')', ';', '}', 'if', '(', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', '==', '302', ')', '{', 'NULogger', '.', 'getLogger', '(', ')', '.', 'info', '(', '"', 'Files', 'uploaded', 'successfully', '"', ')', ';', '}', 'else', '{', 'throw', 'new', 'Exception', '(', '"', 'There', 'might', 'be', 'a', 'problem', 'with', 'your', 'internet', 'connection', 'or', 'server', 'error.', 'Please', 'try', 'again', 'later', ':(', '"', ')', ';', '}', '}']
  >>  iter 1, ACC! out => cli (0 => 0, 0.99998 => 0.99998) a=1.006
  >>  iter 2, ACC! cli => server (0 => 0, 0.99998 => 0.99998) a=1.006
  >>  iter 3, ACC! server => err (0 => 0, 0.99998 => 0.99998) a=1.006
  >>  iter 4, ACC! err => output (0 => 0, 0.99998 => 0.99998) a=1.006
  >>  iter 5, ACC! output => step (0 => 0, 0.99998 => 0.99998) a=1.006
  >>  iter 6, ACC! step => re (0 => 0, 0.99998 => 0.99998) a=1.006
  >>  iter 7, ACC! re => post (0 => 0, 0.99998 => 0.99998) a=1.006
  >>  iter 8, ACC! post => inter (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 9, ACC! inter => cache (0 => 0, 0.99998 => 0.99998) a=1.006
  >>  iter 10, ACC! cache => store (0 => 0, 0.99998 => 0.99998) a=1.000
Example 209 attack result: {'succ': False, 'tokens': '    private static void fileUpload() throws Exception {\n        file = new File("c:/Documents and Settings/dinesh/Desktop/ZShareUploaderPlugin.java");\n        httpclient = new DefaultHttpClient();\n        HttpPost httppost = new HttpPost("http://flameupload.com/cgi/ubr_upload.pl?upload_id=" + uploadid);\n        MultipartEntity mpEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);\n        ContentBody cbFile = new FileBody(file);\n        mpEntity.addPart("upfile_0", cbFile);\n        mpEntity.addPart("uploaded", new StringBody("on"));\n        mpEntity.addPart("hotfile", new StringBody("on"));\n        mpEntity.addPart("turbobit", new StringBody("on"));\n        mpEntity.addPart("depositfiles", new StringBody("on"));\n        mpEntity.addPart("fileserve", new StringBody("on"));\n        mpEntity.addPart("filefactory", new StringBody("on"));\n        mpEntity.addPart("netload", new StringBody("on"));\n        mpEntity.addPart("uploadstation", new StringBody("on"));\n        mpEntity.addPart("badongo", new StringBody("on"));\n        mpEntity.addPart("uploading", new StringBody("on"));\n        mpEntity.addPart("megashare", new StringBody("on"));\n        mpEntity.addPart("_2shared", new StringBody("on"));\n        httppost.setEntity(mpEntity);\n        NULogger.getLogger().log(Level.INFO, "executing request {0}", httppost.getRequestLine());\n        NULogger.getLogger().info("Now uploading your file into flameupload.com");\n        HttpResponse response = httpclient.execute(httppost);\n        HttpEntity resEntity = response.getEntity();\n        NULogger.getLogger().info(response.getStatusLine().toString());\n        NULogger.getLogger().info(EntityUtils.toString(resEntity));\n        Header[] allHeaders = response.getAllHeaders();\n        for (int i = 0; i < allHeaders.length; i++) {\n            System.store.println(allHeaders[i].getName() + "=" + allHeaders[i].getValue());\n        }\n        if (response.getStatusLine().getStatusCode() == 302) {\n            NULogger.getLogger().info("Files uploaded successfully");\n        } else {\n            throw new Exception("There might be a problem with your internet connection or server error. Please try again later :(");\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 471, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': -1.1920929e-07, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'out': 'store'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 209 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 14.35 min
  curr succ rate = 0.02531645569620253
Query times in this attack:  308
All Query times:  23261
raw_tokens: ['public', 'static', 'String', 'generateHexadecimalCodedString', '(', 'String', 'stringToBeCoded', ')', '{', 'MessageDigest', 'digest', ';', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'return', 'null', ';', '}', 'digest', '.', 'update', '(', 'stringToBeCoded', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'hashedKey', '=', 'digest', '.', 'digest', '(', ')', ';', 'final', 'int', 'radix', '=', '16', ';', 'String', 'result', '=', '"', '"', ';', 'for', '(', 'byte', 'b', ':', 'hashedKey', ')', '{', 'int', 'unsignedByte', '=', 'b', '+', '128', ';', 'result', '+=', 'Integer', '.', 'toString', '(', 'unsignedByte', ',', 'radix', ')', ';', '}', 'return', 'result', ';', '}']
Example 210 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'RobotList', '<', 'Enemy', '>', 'sort_decr_Enemy', '(', 'RobotList', '<', 'Enemy', '>', 'list', ',', 'String', 'field', ')', '{', 'int', 'length', '=', 'list', '.', 'size', '(', ')', ';', 'Index_value', '[', ']', 'enemy_dist', '=', 'new', 'Index_value', '[', 'length', ']', ';', 'if', '(', 'field', '.', 'equals', '(', '"', '"', ')', '||', 'field', '.', 'equals', '(', '"', 'location', '"', ')', ')', '{', 'Location', 'cur_loc', '=', 'this', '.', 'getLocation', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', '{', 'enemy_dist', '[', 'i', ']', '=', 'new', 'Index_value', '(', 'i', ',', 'distance', '(', 'cur_loc', ',', 'list', '.', 'get', '(', 'i', ')', '.', 'location', ')', ')', ';', '}', '}', 'else', 'if', '(', 'field', '.', 'equals', '(', '"', 'health', '"', ')', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', '{', 'enemy_dist', '[', 'i', ']', '=', 'new', 'Index_value', '(', 'i', ',', 'list', '.', 'get', '(', 'i', ')', '.', 'health', ')', ';', '}', '}', 'else', '{', 'say', '(', '"', 'impossible', 'to', 'sort', 'list', '-', 'nothing', 'modified', '"', ')', ';', 'return', 'list', ';', '}', 'boolean', 'permut', ';', 'do', '{', 'permut', '=', 'false', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', '-', '1', ';', 'i', '++', ')', '{', 'if', '(', 'enemy_dist', '[', 'i', ']', '.', 'value', '<', 'enemy_dist', '[', 'i', '+', '1', ']', '.', 'value', ')', '{', 'Index_value', 'a', '=', 'enemy_dist', '[', 'i', ']', ';', 'enemy_dist', '[', 'i', ']', '=', 'enemy_dist', '[', 'i', '+', '1', ']', ';', 'enemy_dist', '[', 'i', '+', '1', ']', '=', 'a', ';', 'permut', '=', 'true', ';', '}', '}', '}', 'while', '(', 'permut', ')', ';', 'RobotList', '<', 'Enemy', '>', 'new_enemy_list', '=', 'new', 'RobotList', '<', 'Enemy', '>', '(', 'Enemy', '.', 'class', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'length', ';', 'i', '++', ')', '{', 'new_enemy_list', '.', 'addLast', '(', 'list', '.', 'get', '(', 'enemy_dist', '[', 'i', ']', '.', 'index', ')', ')', ';', '}', 'return', 'new_enemy_list', ';', '}']
Example 211 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'MetaService', '', '(', ')', '{', 'super', '(', ')', ';', 'URL', 'url', '=', 'this', '.', 'getClass', '(', ')', '.', 'getResource', '(', 'Resource', ')', ';', 'if', '(', 'null', '!=', 'url', ')', '{', 'this', '.', 'location', '=', 'url', ';', 'String', 'value', '=', 'null', ';', 'try', '{', 'InputStream', 'in', '=', 'url', '.', 'openStream', '(', ')', ';', 'try', '{', 'value', '=', '(', 'new', 'java', '.', 'io', '.', 'DataInputStream', '(', 'in', ')', '.', 'readLine', '(', ')', ')', ';', 'if', '(', 'null', '!=', 'value', ')', '{', 'value', '=', 'value', '.', 'trim', '(', ')', ';', 'if', '(', '1', '>', 'value', '.', 'length', '(', ')', ')', 'value', '=', 'null', ';', '}', '}', 'finally', '{', 'in', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'this', '.', 'value', '=', 'value', ';', '}', 'else', '{', 'this', '.', 'location', '=', 'null', ';', 'this', '.', 'value', '=', 'null', ';', '}', '}']
Example 212 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'ChannelIF', 'addChannel', '(', 'String', 'url', ')', 'throws', 'Exception', '{', 'ChannelIF', 'channel', '=', 'null', ';', 'try', '{', 'channel', '=', 'FeedParser', '.', 'parse', '(', 'new', 'ChannelBuilder', '(', ')', ',', 'url', ')', ';', 'if', '(', 'channel', '.', 'getLocation', '(', ')', '==', 'null', ')', 'channel', '.', 'setLocation', '(', 'new', 'URL', '(', 'url', ')', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', 'InputStream', 'is', '=', 'new', 'URL', '(', 'url', ')', '.', 'openStream', '(', ')', ';', 'InputStreamReader', 'reader', '=', 'new', 'InputStreamReader', '(', 'is', ')', ';', 'channel', '=', 'FeedParser', '.', 'parse', '(', 'new', 'ChannelBuilder', '(', ')', ',', 'reader', ')', ';', 'reader', '.', 'close', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', 'if', '(', 'channel', '.', 'getLocation', '(', ')', '==', 'null', ')', 'channel', '.', 'setLocation', '(', 'new', 'URL', '(', 'url', ')', ')', ';', '}', 'DAOChannel', '.', 'addChannel', '(', 'channel', ')', ';', 'DAOFavicon', '.', 'addFaviconForChannel', '(', 'channel', ')', ';', 'return', 'channel', ';', '}']
Example 213 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'readAndRewrite', '(', 'File', 'inFile', ',', 'File', 'outFile', ')', 'throws', 'IOException', '{', 'ImageInputStream', 'iis', '=', 'ImageIO', '.', 'createImageInputStream', '(', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'inFile', ')', ')', ')', ';', 'DcmParser', 'dcmParser', '=', 'DcmParserFactory', '.', 'getInstance', '(', ')', '.', 'newDcmParser', '(', 'iis', ')', ';', 'Dataset', 'ds', '=', 'DcmObjectFactory', '.', 'getInstance', '(', ')', '.', 'newDataset', '(', ')', ';', 'dcmParser', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'dcmParser', '.', 'parseDcmFile', '(', 'null', ',', 'Tags', '.', 'PixelData', ')', ';', 'PixelDataReader', 'pdReader', '=', 'pdFact', '.', 'newReader', '(', 'ds', ',', 'iis', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'reading', '', '"', '+', 'inFile', '+', '"', '...', '"', ')', ';', 'pdReader', '.', 'readPixelData', '(', 'false', ')', ';', 'ImageOutputStream', 'out', '=', 'ImageIO', '.', 'createImageOutputStream', '(', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outFile', ')', ')', ')', ';', 'DcmEncodeParam', 'dcmEncParam', '=', 'DcmEncodeParam', '.', 'IVR_LE', ';', 'ds', '.', 'writeDataset', '(', 'out', ',', 'dcmEncParam', ')', ';', 'ds', '.', 'writeHeader', '(', 'out', ',', 'dcmEncParam', ',', 'Tags', '.', 'PixelData', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ',', 'dcmParser', '.', 'getReadLength', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'writing', '', '"', '+', 'outFile', '+', '"', '...', '"', ')', ';', 'PixelDataWriter', 'pdWriter', '=', 'pdFact', '.', 'newWriter', '(', 'pdReader', '.', 'getPixelDataArray', '(', ')', ',', 'false', ',', 'ds', ',', 'out', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'pdWriter', '.', 'writePixelData', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'done!', '"', ')', ';', '}']
  >>  iter 1, SUCC! out => url (1 => 0, 0.99988 => 0.00003) a=1.000
Example 214 attack result: {'succ': True, 'tokens': '    private static void readAndRewrite(File inFile, File outFile) throws IOException {\n        ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));\n        DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);\n        Dataset ds = DcmObjectFactory.getInstance().newDataset();\n        dcmParser.setDcmHandler(ds.getDcmHandler());\n        dcmParser.parseDcmFile(null, Tags.PixelData);\n        PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        System.url.println("reading " + inFile + "...");\n        pdReader.readPixelData(false);\n        ImageOutputStream url = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));\n        DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;\n        ds.writeDataset(url, dcmEncParam);\n        ds.writeHeader(url, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());\n        System.url.println("writing " + outFile + "...");\n        PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, url, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        pdWriter.writePixelData();\n        url.flush();\n        url.close();\n        System.url.println("done!");\n    }\n', 'raw_tokens': ['private', 'static', 'void', 'readAndRewrite', '(', 'File', 'inFile', ',', 'File', 'outFile', ')', 'throws', 'IOException', '{', 'ImageInputStream', 'iis', '=', 'ImageIO', '.', 'createImageInputStream', '(', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'inFile', ')', ')', ')', ';', 'DcmParser', 'dcmParser', '=', 'DcmParserFactory', '.', 'getInstance', '(', ')', '.', 'newDcmParser', '(', 'iis', ')', ';', 'Dataset', 'ds', '=', 'DcmObjectFactory', '.', 'getInstance', '(', ')', '.', 'newDataset', '(', ')', ';', 'dcmParser', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'dcmParser', '.', 'parseDcmFile', '(', 'null', ',', 'Tags', '.', 'PixelData', ')', ';', 'PixelDataReader', 'pdReader', '=', 'pdFact', '.', 'newReader', '(', 'ds', ',', 'iis', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'System', '.', 'url', '.', 'println', '(', '"', 'reading', '', '"', '+', 'inFile', '+', '"', '...', '"', ')', ';', 'pdReader', '.', 'readPixelData', '(', 'false', ')', ';', 'ImageOutputStream', 'url', '=', 'ImageIO', '.', 'createImageOutputStream', '(', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outFile', ')', ')', ')', ';', 'DcmEncodeParam', 'dcmEncParam', '=', 'DcmEncodeParam', '.', 'IVR_LE', ';', 'ds', '.', 'writeDataset', '(', 'url', ',', 'dcmEncParam', ')', ';', 'ds', '.', 'writeHeader', '(', 'url', ',', 'dcmEncParam', ',', 'Tags', '.', 'PixelData', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ',', 'dcmParser', '.', 'getReadLength', '(', ')', ')', ';', 'System', '.', 'url', '.', 'println', '(', '"', 'writing', '', '"', '+', 'outFile', '+', '"', '...', '"', ')', ';', 'PixelDataWriter', 'pdWriter', '=', 'pdFact', '.', 'newWriter', '(', 'pdReader', '.', 'getPixelDataArray', '(', ')', ',', 'false', ',', 'ds', ',', 'url', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'pdWriter', '.', 'writePixelData', '(', ')', ';', 'url', '.', 'flush', '(', ')', ';', 'url', '.', 'close', '(', ')', ';', 'System', '.', 'url', '.', 'println', '(', '"', 'done!', '"', ')', ';', '}'], 'prog_length': 271, 'new_pred': 0, 'is_success': 1, 'old_uid': 'out', 'score_info': -0.9998575, 'nb_changed_var': 1, 'nb_changed_pos': 9, 'replace_info': {'out': 'url'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 214 SUCCEEDED!
  time cost = 0.02 min
  ALL EXAMPLE time cost = 14.43 min
  curr succ rate = 0.0375
Query times in this attack:  40
All Query times:  23301
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'String', 'file1', ',', 'String', 'file2', ')', '{', 'File', 'filedata1', '=', 'new', 'java', '.', 'io', '.', 'File', '(', 'file1', ')', ';', 'if', '(', 'filedata1', '.', 'exists', '(', ')', ')', '{', 'try', '{', 'BufferedOutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'file2', ')', ')', ';', 'BufferedInputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'file1', ')', ')', ';', 'try', '{', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', '{', 'out', '.', 'write', '(', 'read', ')', ';', '}', 'out', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex1', ')', '{', 'ex1', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
Example 215 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'createOutputStructure', '(', 'String', 'templatePath', ')', 'throws', 'InterruptedException', '{', 'try', '{', 'templatePath', '=', 'new', 'File', '(', 'templatePath', ')', '.', 'getCanonicalPath', '(', ')', ';', 'templatePath', '=', 'templatePath', '.', 'replace', '(', "'\\\\'", ',', "'/'", ')', ';', 'File', 'file', '=', 'null', ';', 'Paths', 'paths', '=', '(', 'Paths', ')', 'GragGenerator', '.', 'getObjectsFromTree', '(', 'Paths', '.', 'class', ')', '.', 'get', '(', '0', ')', ';', 'Config', 'config', '=', '(', 'Config', ')', 'GragGenerator', '.', 'getObjectsFromTree', '(', 'Config', '.', 'class', ')', '.', 'get', '(', '0', ')', ';', 'DirectoryIterator', 'iterator', '=', 'new', 'DirectoryIterator', '(', 'templatePath', ',', 'true', ',', 'true', ')', ';', 'while', '(', '(', 'file', '=', 'iterator', '.', 'getNext', '(', ')', ')', '!=', 'null', ')', '{', 'boolean', 'copyFile', '=', 'false', ';', 'String', 'fullFilename', '=', 'file', '.', 'getCanonicalPath', '(', ')', ';', 'int', 'lastDirPos', '=', 'fullFilename', '.', 'lastIndexOf', '(', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', ')', ';', 'if', '(', 'CVS_DIR', '.', 'equals', '(', 'file', '.', 'getCanonicalPath', '(', ')', '.', 'substring', '(', 'fullFilename', '.', 'length', '(', ')', '-', 'CVS_DIR', '.', 'length', '(', ')', ',', 'fullFilename', '.', 'length', '(', ')', ')', ')', '||', 'CVS_DIR', '.', 'equals', '(', 'fullFilename', '.', 'substring', '(', 'lastDirPos', '-', 'CVS_DIR', '.', 'length', '(', ')', ',', 'lastDirPos', ')', ')', ')', '{', 'continue', ';', '}', 'if', '(', '"', 'readme.txt', '"', '.', 'equals', '(', 'file', '.', 'getName', '(', ')', ')', ')', '{', 'continue', ';', '}', 'String', 'fileOut', '=', 'outputDir', '.', 'replace', '(', "'\\\\'", ',', "'/'", ')', ';', 'String', 'path', '=', 'file', '.', 'getCanonicalPath', '(', ')', '.', 'replace', '(', "'\\\\'", ',', "'/'", ')', ';', 'if', '(', 'path', '.', 'indexOf', '(', 'templatePath', ')', '==', '0', ')', '{', 'path', '=', 'path', '.', 'substring', '(', 'templatePath', '.', 'length', '(', ')', ')', ';', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'CONF_GENERAL_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getConfigOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'CONF_GENERAL_DIR', '.', 'length', '(', ')', ')', ';', 'copyFile', '=', 'true', ';', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'CONF_STRUTS_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getConfigOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'CONF_STRUTS_DIR', '.', 'length', '(', ')', ')', ';', 'copyFile', '=', 'true', ';', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'CONF_TAPESTRY4_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getConfigOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'CONF_TAPESTRY4_DIR', '.', 'length', '(', ')', ')', ';', 'copyFile', '=', 'true', ';', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'CONF_SWING_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getConfigOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'CONF_SWING_DIR', '.', 'length', '(', ')', ')', ';', 'copyFile', '=', 'true', ';', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_WEB_STRUTS_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getJspOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_WEB_STRUTS_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchWebTier', '(', '"', 'struts', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_WEB_TAPESTRY4_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getJspOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_WEB_TAPESTRY4_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchWebTier', '(', '"', 'tapestry', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_SWING_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getSwingOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_SWING_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchWebTier', '(', '"', 'swing', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_STRUTS_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getWebOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_STRUTS_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchWebTier', '(', '"', 'struts', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_TAPESTRY4_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getWebOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_TAPESTRY4_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchWebTier', '(', '"', 'tapestry', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_EJB2_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getEjbOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_EJB2_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchBusinessTier', '(', '"', 'ejb', '2', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_EJB3_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getEjbOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_EJB3_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchBusinessTier', '(', '"', 'ejb', '3', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_HIBERNATE2_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getHibernateOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_HIBERNATE2_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchBusinessTier', '(', '"', 'hibernate', '2', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_HIBERNATE3_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getHibernateOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_HIBERNATE3_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'matchBusinessTier', '(', '"', 'hibernate', '3', '"', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_MOCK_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getMockOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_MOCK_DIR', '.', 'length', '(', ')', ')', ';', 'if', '(', 'config', '.', 'useMock', '(', ')', '.', 'booleanValue', '(', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_SERVICE_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getServiceOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_SERVICE_DIR', '.', 'length', '(', ')', ')', ';', 'copyFile', '=', 'true', ';', '}', 'else', 'if', '(', 'path', '.', 'startsWith', '(', 'Paths', '.', 'JAVA_TEST_DIR', ')', ')', '{', 'path', '=', 'paths', '.', 'getTestOutput', '(', ')', '+', 'path', '.', 'substring', '(', 'Paths', '.', 'JAVA_TEST_DIR', '.', 'length', '(', ')', ')', ';', 'copyFile', '=', 'true', ';', '}', 'else', 'if', '(', '(', 'path', '.', 'indexOf', '(', '"', 'build.bat', '"', ')', '!=', '-', '1', ')', '||', '(', '(', 'path', '.', 'indexOf', '(', '"', 'deploy.bat', '"', ')', '!=', '-', '1', ')', ')', ')', '{', 'copyFile', '=', 'true', ';', '}', '}', 'if', '(', '!', 'path', '.', 'startsWith', '(', '"', '/', '"', ')', ')', '{', 'path', '=', '"', '/', '"', '+', 'path', ';', '}', 'if', '(', 'copyFile', ')', '{', 'fileOut', '+=', 'path', ';', 'path', '=', 'outputDir', '+', 'path', ';', 'if', '(', '!', 'file', '.', 'isDirectory', '(', ')', ')', '{', 'String', 'name', '=', 'file', '.', 'getName', '(', ')', ';', 'path', '=', 'path', '.', 'substring', '(', '0', ',', '(', 'path', '.', 'length', '(', ')', '-', 'name', '.', 'length', '(', ')', ')', ')', ';', '}', 'new', 'File', '(', 'path', ')', '.', 'mkdirs', '(', ')', ';', 'if', '(', '!', 'file', '.', 'isDirectory', '(', ')', ')', '{', 'byte', 'array', '[', ']', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'size', '=', '0', ';', 'try', '{', 'BufferedInputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'file', ')', ')', ';', 'BufferedOutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'fileOut', ')', ')', ';', 'while', '(', '(', 'size', '=', 'in', '.', 'read', '(', 'array', ')', ')', '!=', '-', '1', ')', 'out', '.', 'write', '(', 'array', ',', '0', ',', 'size', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', 'log', '(', '"', '[Error]', 'Copy', 'output', 'file', 'failed', ':', '', '"', '+', 'fileOut', ')', ';', 'log', '(', 'exc', '.', 'getMessage', '(', ')', ')', ';', '}', '}', '}', '}', '}', 'catch', '(', 'Exception', 'exc', ')', '{', 'log', '.', 'error', '(', '"', 'Error', 'while', 'copying', 'files:', '', '"', ',', 'exc', ')', ';', 'log', '(', 'exc', '.', 'getMessage', '(', ')', ')', ';', '}', '}']
Example 216 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copy', '(', 'String', 'a', ',', 'String', 'b', ')', 'throws', 'IOException', '{', 'File', 'inputFile', '=', 'new', 'File', '(', 'a', ')', ';', 'File', 'outputFile', '=', 'new', 'File', '(', 'b', ')', ';', 'FileReader', 'in', '=', 'new', 'FileReader', '(', 'inputFile', ')', ';', 'FileWriter', 'out', '=', 'new', 'FileWriter', '(', 'outputFile', ')', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', 'out', '.', 'write', '(', 'c', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
Example 217 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'protected', 'void', 'copy', '(', 'Reader', 'reader', ',', 'OutputStream', 'outputs', ')', 'throws', 'IOException', '{', 'if', '(', 'outputs', '==', 'null', ')', '{', 'throw', 'new', 'NullPointerException', '(', ')', ';', '}', 'if', '(', 'reader', '==', 'null', ')', '{', 'throw', 'new', 'NullPointerException', '(', ')', ';', '}', 'ZipOutputStream', 'zipoutputs', '=', 'null', ';', 'try', '{', 'zipoutputs', '=', 'new', 'ZipOutputStream', '(', 'outputs', ')', ';', 'zipoutputs', '.', 'putNextEntry', '(', 'new', 'ZipEntry', '(', '"', 'default', '"', ')', ')', ';', 'IOUtils', '.', 'copy', '(', 'reader', ',', 'zipoutputs', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'throw', 'e', ';', '}', 'finally', '{', 'if', '(', 'zipoutputs', '!=', 'null', ')', '{', 'zipoutputs', '.', 'close', '(', ')', ';', '}', 'if', '(', 'reader', '!=', 'null', ')', '{', 'reader', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 218 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Test', '@', 'JUnitHttpServer', '(', 'port', '=', '10342', ',', 'https', '=', 'false', ',', 'webapps', '=', '{', '@', 'Webapp', '(', 'context', '=', '"', '/fmpm', '"', ',', 'path', '=', '"', 'src/test/resources/test-webapp', '"', ')', '}', ')', 'public', 'void', 'testTestServlet', '(', ')', 'throws', 'Exception', '{', 'TestServlet', '.', 'reset', '(', ')', ';', 'HttpClient', 'client', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'HttpEntity', 'entity', '=', 'new', 'StringEntity', '(', 'xml', ')', ';', 'HttpPost', 'method', '=', 'new', 'HttpPost', '(', '"', 'http://localhost:10342/fmpm/restful/NotificationMessageRelay', '"', ')', ';', 'method', '.', 'setEntity', '(', 'entity', ')', ';', 'HttpResponse', 'response', '=', 'client', '.', 'execute', '(', 'method', ')', ';', 'assertEquals', '(', '200', ',', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ')', ';', 'assertEquals', '(', 'xml', ',', 'TestServlet', '.', 'getPosted', '(', ')', ')', ';', '}']
  >>  iter 1, ACC! path => or (0 => 0, 1.00000 => 1.00000) a=1.000
  >>  iter 2, ACC! or => route (0 => 0, 1.00000 => 1.00000) a=1.000
  >>  iter 3, ACC! route => host (0 => 0, 1.00000 => 1.00000) a=1.034
  >>  iter 4, REJ. host => link (0 => 0, 1.00000 => 1.00000) a=0.967
  >>  iter 5, ACC! host => version (0 => 0, 1.00000 => 1.00000) a=1.000
  >>  iter 6, ACC! version => host (0 => 0, 1.00000 => 1.00000) a=1.034
  >>  iter 7, REJ. host => source (0 => 0, 1.00000 => 1.00000) a=0.967
  >>  iter 8, ACC! host => proc (0 => 0, 1.00000 => 1.00000) a=1.000
  >>  iter 9, ACC! proc => route (0 => 0, 1.00000 => 1.00000) a=1.034
  >>  iter 10, ACC! route => handler (0 => 0, 1.00000 => 1.00000) a=1.034
Example 219 attack result: {'succ': False, 'tokens': '    @Test\n    @JUnitHttpServer(port = 10342, https = false, webapps = { @Webapp(context = "/fmpm", handler = "src/test/resources/test-webapp") })\n    public void testTestServlet() throws Exception {\n        TestServlet.reset();\n        HttpClient client = new DefaultHttpClient();\n        HttpEntity entity = new StringEntity(xml);\n        HttpPost method = new HttpPost("http://localhost:10342/fmpm/restful/NotificationMessageRelay");\n        method.setEntity(entity);\n        HttpResponse response = client.execute(method);\n        assertEquals(200, response.getStatusLine().getStatusCode());\n        assertEquals(xml, TestServlet.getPosted());\n    }\n', 'raw_tokens': None, 'prog_length': 119, 'new_pred': 0, 'is_success': -1, 'old_uid': 'path', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'path': 'handler'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 219 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 14.62 min
  curr succ rate = 0.037037037037037035
Query times in this attack:  306
All Query times:  23607
raw_tokens: ['public', 'static', 'String', 'md5', '(', 'String', 'text', ')', '{', 'try', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', ')', ')', ';', 'return', 'ForumUtil', '.', 'bufferToHex', '(', 'md', '.', 'digest', '(', ')', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'null', ';', '}', '}']
Example 220 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'myClickHandler', '(', 'View', 'view', ')', '{', 'switch', '(', 'view', '.', 'getId', '(', ')', ')', '{', 'case', 'R', '.', 'id', '.', 'ReadWebPage', ':', 'try', '{', 'textView', '.', 'setText', '(', '"', '"', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'urlText', '.', 'getText', '(', ')', '.', 'toString', '(', ')', ')', ';', 'BufferedReader', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', '=', '"', '"', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'textView', '.', 'append', '(', 'line', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Nay,', 'did', 'not', 'work', '"', ')', ';', 'textView', '.', 'setText', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'break', ';', '}', '}']
Example 221 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'encipherAMessage', '(', 'String', 'message', ')', '{', 'try', '{', 'MessageDigest', 'sha1', '=', 'MessageDigest', '.', 'getInstance', '(', 'java', '.', 'util', '.', 'ResourceBundle', '.', 'getBundle', '(', '"', 'com/jjcp/resources/Strings', '"', ')', '.', 'getString', '(', '"', 'SHA1', '"', ')', ')', ';', 'sha1', '.', 'update', '(', 'message', '.', 'getBytes', '(', 'java', '.', 'util', '.', 'ResourceBundle', '.', 'getBundle', '(', '"', 'com/jjcp/resources/Strings', '"', ')', '.', 'getString', '(', '"', 'UTF-16LE', '"', ')', ')', ')', ';', 'byte', '[', ']', 'digest', '=', 'sha1', '.', 'digest', '(', ')', ';', 'BASE64Encoder', 'base64encoder', '=', 'new', 'BASE64Encoder', '(', ')', ';', 'String', 'cipherTextB64', '=', 'base64encoder', '.', 'encode', '(', 'digest', ')', ';', 'return', 'cipherTextB64', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'SelectorView', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'SelectorView', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', 'return', '"', '"', ';', '}']
Example 222 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'check', '(', 'Object', 'credentials', ')', '{', 'String', 'password', '=', '(', 'credentials', 'instanceof', 'String', ')', '?', '(', 'String', ')', 'credentials', ':', 'credentials', '.', 'toString', '(', ')', ';', 'try', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'byte', '[', ']', 'ha1', ';', 'if', '(', 'credentials', 'instanceof', 'Credential', '.', 'MD5', ')', '{', 'ha1', '=', '(', '(', 'Credential', '.', 'MD5', ')', 'credentials', ')', '.', 'getDigest', '(', ')', ';', '}', 'else', '{', 'md', '.', 'update', '(', 'username', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'realm', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'password', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'ha1', '=', 'md', '.', 'digest', '(', ')', ';', '}', 'md', '.', 'reset', '(', ')', ';', 'md', '.', 'update', '(', 'method', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'uri', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'byte', '[', ']', 'ha2', '=', 'md', '.', 'digest', '(', ')', ';', 'md', '.', 'update', '(', 'TypeUtil', '.', 'toString', '(', 'ha1', ',', '16', ')', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'nonce', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'nc', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'cnonce', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'qop', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'TypeUtil', '.', 'toString', '(', 'ha2', ',', '16', ')', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'byte', '[', ']', 'digest', '=', 'md', '.', 'digest', '(', ')', ';', 'return', '(', 'TypeUtil', '.', 'toString', '(', 'digest', ',', '16', ')', '.', 'equalsIgnoreCase', '(', 'response', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'LogSupport', '.', 'EXCEPTION', ',', 'e', ')', ';', '}', 'return', 'false', ';', '}']
Example 223 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'getGoGl', '(', 'final', 'String', 'urlPath', ',', 'String', 'key', ')', '{', 'log', '.', 'debug', '(', '"', 'getGoGl', 'url', '', '"', '+', 'urlPath', ')', ';', 'log', '.', 'debug', '(', '"', 'getGoGl', 'key', '', '"', '+', 'key', ')', ';', 'String', 'shortUrl', '=', 'null', ';', 'URL', 'simpleURL', '=', 'null', ';', 'HttpsURLConnection', 'url', '=', 'null', ';', 'BufferedInputStream', 'bStream', '=', 'null', ';', 'StringBuffer', 'resultString', '=', 'new', 'StringBuffer', '(', '"', '"', ')', ';', 'String', 'inputString', '=', '"', '{', '\\"', 'longUrl', '\\"', ':', '\\"', '"', '+', 'urlPath', '+', '"', '\\"', '}', '"', ';', 'log', '.', 'debug', '(', '"', 'getGoGl', 'inputString', '', '"', '+', 'inputString', ')', ';', 'try', '{', 'simpleURL', '=', 'new', 'URL', '(', '"', 'https://www.googleapis.com/urlshortener/v1/url?key=', '"', '+', 'key', ')', ';', 'url', '=', '(', 'HttpsURLConnection', ')', 'simpleURL', '.', 'openConnection', '(', ')', ';', 'url', '.', 'setDoOutput', '(', 'true', ')', ';', 'url', '.', 'setRequestProperty', '(', '"', 'content-type', '"', ',', '"', 'application/json', '"', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'url', '.', 'getOutputStream', '(', ')', ')', ';', 'pw', '.', 'print', '(', 'inputString', ')', ';', 'pw', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'log', '.', 'error', '(', 'ex', ')', ';', 'shortUrl', '=', 'urlPath', ';', '}', 'try', '{', 'bStream', '=', 'new', 'BufferedInputStream', '(', 'url', '.', 'getInputStream', '(', ')', ')', ';', 'int', 'i', ';', 'while', '(', '(', 'i', '=', 'bStream', '.', 'read', '(', ')', ')', '>=', '0', ')', '{', 'resultString', '.', 'append', '(', '(', 'char', ')', 'i', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'SocialUtils', '.', 'log', '.', 'error', '(', 'ex', ')', ';', 'shortUrl', '=', 'urlPath', ';', '}', 'return', 'shortUrl', ';', '}']
Example 224 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'getRandomGUID', '(', 'boolean', 'secure', ')', '{', 'MessageDigest', 'md5', '=', 'null', ';', 'StringBuffer', 'sbValueBeforeMD5', '=', 'new', 'StringBuffer', '(', ')', ';', 'try', '{', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '', '"', '+', 'e', ')', ';', '}', 'try', '{', 'long', 'time', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'rand', '=', '0', ';', 'if', '(', 'secure', ')', '{', 'rand', '=', 'mySecureRand', '.', 'nextLong', '(', ')', ';', '}', 'else', '{', 'rand', '=', 'myRand', '.', 'nextLong', '(', ')', ';', '}', 'sbValueBeforeMD5', '.', 'append', '(', 's_id', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'time', ')', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'rand', ')', ')', ';', 'valueBeforeMD5', '=', 'sbValueBeforeMD5', '.', 'toString', '(', ')', ';', 'md5', '.', 'update', '(', 'valueBeforeMD5', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'array', '=', 'md5', '.', 'digest', '(', ')', ';', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'array', '.', 'length', ';', '++', 'j', ')', '{', 'int', 'b', '=', 'array', '[', 'j', ']', '&', '0xFF', ';', 'if', '(', 'b', '<', '0x10', ')', '{', 'sb', '.', 'append', '(', "'0'", ')', ';', '}', 'sb', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'b', ')', ')', ';', '}', 'valueAfterMD5', '=', 'sb', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '"', '+', 'e', ')', ';', '}', '}']
Example 225 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'int', 'getContentLength', '(', 'String', 'address', ')', '{', 'URLConnection', 'conn', '=', 'null', ';', 'int', 'contentLength', '=', '0', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'address', ')', ';', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'contentLength', '=', 'conn', '.', 'getContentLength', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'contentLength', ';', '}']
Example 226 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'getStation', '(', 'String', 'prefecture', ',', 'String', 'line', ')', '{', 'HttpClient', 'httpclient', '=', 'null', ';', 'try', '{', 'httpclient', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'List', '<', 'NameValuePair', '>', 'qparams', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'qparams', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'method', '"', ',', '"', 'getStations', '"', ')', ')', ';', 'qparams', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'prefecture', '"', ',', 'prefecture', ')', ')', ';', 'qparams', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'line', '"', ',', 'line', ')', ')', ';', 'URI', 'uri', '=', 'URIUtils', '.', 'createURI', '(', '"', 'http', '"', ',', '"', 'express.heartrails.com', '"', ',', '-', '1', ',', '"', '/api/xml', '"', ',', 'URLEncodedUtils', '.', 'format', '(', 'qparams', ',', '"', 'UTF-8', '"', ')', ',', 'null', ')', ';', 'HttpGet', 'httpget', '=', 'new', 'HttpGet', '(', 'uri', ')', ';', 'HttpResponse', 'response', '=', 'httpclient', '.', 'execute', '(', 'httpget', ')', ';', 'HttpEntity', 'entity', '=', 'response', '.', 'getEntity', '(', ')', ';', 'InputStream', 'instream', '=', 'entity', '.', 'getContent', '(', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'instream', ',', '"', 'UTF-8', '"', ')', ')', ';', 'StringBuffer', 'buf', '=', 'new', 'StringBuffer', '(', ')', ';', 'String', 'str', ';', 'while', '(', '(', 'str', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'buf', '.', 'append', '(', 'str', ')', ';', 'buf', '.', 'append', '(', '"', '', '"', ')', ';', '}', 'reader', '.', 'close', '(', ')', ';', 'stationRes', '=', 'new', 'StationResponse', '(', 'buf', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'URISyntaxException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'ClientProtocolException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'SAXException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'ParserConfigurationException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'mSearchStation', '.', 'setEnabled', '(', 'true', ')', ';', '}', '}']
  >>  iter 1, ACC! line => url (0 => 0, 0.99895 => 0.99896) a=1.050
  >>  iter 2, ACC! url => object (0 => 0, 0.99896 => 0.99892) a=1.059
  >>  iter 3, ACC! object => li (0 => 0, 0.99892 => 0.99897) a=1.009
  >>  iter 4, ACC! li => sync (0 => 0, 0.99897 => 0.99899) a=1.049
  >>  iter 5, ACC! sync => style (0 => 0, 0.99899 => 0.99901) a=1.087
  >>  iter 6, ACC! style => link (0 => 0, 0.99901 => 0.99896) a=1.113
  >>  iter 7, ACC! link => id (0 => 0, 0.99896 => 0.99894) a=1.042
  >>  iter 8, ACC! id => comment (0 => 0, 0.99894 => 0.99897) a=1.037
  >>  iter 9, ACC! comment => source (0 => 0, 0.99897 => 0.99895) a=1.047
  >>  iter 10, ACC! source => reader (0 => 0, 0.99895 => 0.99893) a=1.047
Example 227 attack result: {'succ': False, 'tokens': '    public void getStation(String prefecture, String reader) {\n        HttpClient httpclient = null;\n        try {\n            httpclient = new DefaultHttpClient();\n            List<NameValuePair> qparams = new ArrayList<NameValuePair>();\n            qparams.add(new BasicNameValuePair("method", "getStations"));\n            qparams.add(new BasicNameValuePair("prefecture", prefecture));\n            qparams.add(new BasicNameValuePair("reader", reader));\n            URI uri = URIUtils.createURI("http", "express.heartrails.com", -1, "/api/xml", URLEncodedUtils.format(qparams, "UTF-8"), null);\n            HttpGet httpget = new HttpGet(uri);\n            HttpResponse response = httpclient.execute(httpget);\n            HttpEntity entity = response.getEntity();\n            InputStream instream = entity.getContent();\n            BufferedReader reader = new BufferedReader(new InputStreamReader(instream, "UTF-8"));\n            StringBuffer buf = new StringBuffer();\n            String str;\n            while ((str = reader.readLine()) != null) {\n                buf.append(str);\n                buf.append("\n");\n            }\n            reader.close();\n            stationRes = new StationResponse(buf.toString());\n        } catch (URISyntaxException ex) {\n            ex.printStackTrace();\n        } catch (ClientProtocolException ex) {\n            ex.printStackTrace();\n        } catch (IOException ex) {\n            ex.printStackTrace();\n        } catch (SAXException ex) {\n            ex.printStackTrace();\n        } catch (ParserConfigurationException ex) {\n            ex.printStackTrace();\n        } finally {\n            mSearchStation.setEnabled(true);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 314, 'new_pred': 0, 'is_success': -1, 'old_uid': 'line', 'score_info': 2.169609e-05, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'line': 'reader'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 227 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 14.88 min
  curr succ rate = 0.036585365853658534
Query times in this attack:  305
All Query times:  23912
raw_tokens: ['public', 'static', 'final', 'void', 'copyFile', '(', 'File', 'source', ',', 'File', 'target', ')', '{', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'source', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'target', ')', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'e', ')', '{', '}', '}']
  >>  iter 1, ACC! copyFile => transferFiles (0 => 0, 0.99959 => 0.99959) a=1.001
  >>  iter 2, ACC! transferFiles => copyStream (0 => 0, 0.99959 => 0.99959) a=1.001
  >>  iter 3, ACC! copyStream => CopyStream (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 4, REJ. CopyStream => transferFiles (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 5, REJ. CopyStream => CopyFile (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 6, REJ. CopyStream => transferFiles (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 7, REJ. CopyStream =>  copyStream (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 8, REJ. CopyStream => CopyFiles (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 9, REJ. CopyStream =>  copyfile (0 => 0, 0.99959 => 0.99959) a=1.000
  >>  iter 10, REJ. CopyStream => copyFiles (0 => 0, 0.99959 => 0.99959) a=1.000
Example 228 attack result: {'succ': False, 'tokens': '    public static final void copyFiles(File source, File target) {\n        try {\n            FileChannel srcChannel = new FileInputStream(source).getChannel();\n            FileChannel dstChannel = new FileOutputStream(target).getChannel();\n            dstChannel.transferFrom(srcChannel, 0, srcChannel.size());\n            srcChannel.close();\n            dstChannel.close();\n        } catch (java.io.IOException e) {\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 81, 'new_pred': 0, 'is_success': -1, 'old_uid': 'copyFile', 'score_info': -2.3841858e-07, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'copyFile': 'CopyStream'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 228 FAILED.
  time cost = 0.10 min
  ALL EXAMPLE time cost = 14.99 min
  curr succ rate = 0.03614457831325301
Query times in this attack:  143
All Query times:  24055
raw_tokens: ['private', 'static', 'IProject', 'createCopyProject', '(', 'IProject', 'project', ',', 'String', 'pName', ',', 'IWorkspace', 'ws', ',', 'IProgressMonitor', 'pm', ')', 'throws', 'Exception', '{', 'pm', '.', 'beginTask', '(', '"', 'Creating', 'temp', 'project', '"', ',', '1', ')', ';', 'IPath', 'destination', '=', 'new', 'Path', '(', 'pName', ')', ';', 'IJavaProject', 'oldJavaproj', '=', 'JavaCore', '.', 'create', '(', 'project', ')', ';', 'IClasspathEntry', '[', ']', 'classPath', '=', 'oldJavaproj', '.', 'getRawClasspath', '(', ')', ';', 'IProject', 'newProject', '=', 'ResourcesPlugin', '.', 'getWorkspace', '(', ')', '.', 'getRoot', '(', ')', '.', 'getProject', '(', 'pName', ')', ';', 'newProject', '.', 'create', '(', 'null', ')', ';', 'newProject', '.', 'open', '(', 'null', ')', ';', 'IProjectDescription', 'desc', '=', 'newProject', '.', 'getDescription', '(', ')', ';', 'desc', '.', 'setNatureIds', '(', 'new', 'String', '[', ']', '{', 'JavaCore', '.', 'NATURE_ID', '}', ')', ';', 'newProject', '.', 'setDescription', '(', 'desc', ',', 'null', ')', ';', 'List', '<', 'IClasspathEntry', '>', 'newClassPath', '=', 'new', 'ArrayList', '<', 'IClasspathEntry', '>', '(', ')', ';', 'for', '(', 'IClasspathEntry', 'cEntry', ':', 'classPath', ')', '{', 'switch', '(', 'cEntry', '.', 'getEntryKind', '(', ')', ')', '{', 'case', 'IClasspathEntry', '.', 'CPE_SOURCE', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'Source', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'copySourceFolder', '(', 'project', ',', 'newProject', ',', 'cEntry', ',', 'destination', ')', ')', ';', 'break', ';', 'case', 'IClasspathEntry', '.', 'CPE_LIBRARY', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'library', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'cEntry', ')', ';', 'break', ';', 'case', 'IClasspathEntry', '.', 'CPE_PROJECT', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'project', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'cEntry', ')', ';', 'break', ';', 'case', 'IClasspathEntry', '.', 'CPE_VARIABLE', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'variable', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'cEntry', ')', ';', 'break', ';', 'default', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'container', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'cEntry', ')', ';', '}', '}', 'copyDir', '(', 'project', '.', 'getLocation', '(', ')', '.', 'toString', '(', ')', ',', '"', '/translator', '"', ',', 'newProject', '.', 'getLocation', '(', ')', '.', 'toString', '(', ')', ',', '"', '"', ',', 'new', 'ArrayList', '<', 'String', '>', '(', ')', '{', '{', 'add', '(', '"', 'generated', '"', ')', ';', 'add', '(', '"', 'classes', '"', ')', ';', 'add', '(', '"', '.svn', '"', ')', ';', '}', '}', ')', ';', 'newProject', '.', 'refreshLocal', '(', 'IResource', '.', 'DEPTH_INFINITE', ',', 'pm', ')', ';', 'newProject', '.', 'build', '(', 'IncrementalProjectBuilder', '.', 'AUTO_BUILD', ',', 'pm', ')', ';', 'newProject', '.', 'touch', '(', 'pm', ')', ';', 'IJavaProject', 'javaproj', '=', 'JavaCore', '.', 'create', '(', 'newProject', ')', ';', 'javaproj', '.', 'setOutputLocation', '(', 'new', 'Path', '(', '"', '/', '"', '+', 'newProject', '.', 'getName', '(', ')', '+', '"', '/classes/bin', '"', ')', ',', 'null', ')', ';', 'javaproj', '.', 'setRawClasspath', '(', 'newClassPath', '.', 'toArray', '(', 'new', 'IClasspathEntry', '[', 'newClassPath', '.', 'size', '(', ')', ']', ')', ',', 'pm', ')', ';', 'Map', 'opts', '=', 'oldJavaproj', '.', 'getOptions', '(', 'true', ')', ';', 'javaproj', '.', 'setOptions', '(', 'opts', ')', ';', 'javaproj', '.', 'makeConsistent', '(', 'pm', ')', ';', 'javaproj', '.', 'save', '(', 'pm', ',', 'true', ')', ';', 'return', 'newProject', ';', '}']
Example 229 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'convert', '(', 'File', 'src', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'src', ')', ')', ';', 'DcmParser', 'p', '=', 'pfact', '.', 'newDcmParser', '(', 'in', ')', ';', 'Dataset', 'ds', '=', 'fact', '.', 'newDataset', '(', ')', ';', 'p', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'try', '{', 'FileFormat', 'format', '=', 'p', '.', 'detectFileFormat', '(', ')', ';', 'if', '(', 'format', '!=', 'FileFormat', '.', 'ACRNEMA_STREAM', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'not', 'an', 'ACRNEMA', 'stream!', '"', ')', ';', 'return', ';', '}', 'p', '.', 'parseDcmFile', '(', 'format', ',', 'Tags', '.', 'PixelData', ')', ';', 'if', '(', 'ds', '.', 'contains', '(', 'Tags', '.', 'StudyInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SeriesInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SOPInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SOPClassUID', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'contains', 'UIDs!', '"', '+', '"', '', '=>', 'probable', 'already', 'DICOM', '-', 'do', 'not', 'convert', '"', ')', ';', 'return', ';', '}', 'boolean', 'hasPixelData', '=', 'p', '.', 'getReadTag', '(', ')', '==', 'Tags', '.', 'PixelData', ';', 'boolean', 'inflate', '=', 'hasPixelData', '&&', 'ds', '.', 'getInt', '(', 'Tags', '.', 'BitsAllocated', ',', '0', ')', '==', '12', ';', 'int', 'pxlen', '=', 'p', '.', 'getReadLength', '(', ')', ';', 'if', '(', 'hasPixelData', ')', '{', 'if', '(', 'inflate', ')', '{', 'ds', '.', 'putUS', '(', 'Tags', '.', 'BitsAllocated', ',', '16', ')', ';', 'pxlen', '=', 'pxlen', '*', '4', '/', '3', ';', '}', 'if', '(', 'pxlen', '!=', '(', 'ds', '.', 'getInt', '(', 'Tags', '.', 'BitsAllocated', ',', '0', ')', '>>>', '3', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'Rows', ',', '0', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'Columns', ',', '0', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'NumberOfFrames', ',', '1', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'NumberOfSamples', ',', '1', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'mismatch', 'pixel', 'data', 'length!', '"', '+', '"', '', '=>', 'do', 'not', 'convert', '"', ')', ';', 'return', ';', '}', '}', 'ds', '.', 'putUI', '(', 'Tags', '.', 'StudyInstanceUID', ',', 'uid', '(', 'studyUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SeriesInstanceUID', ',', 'uid', '(', 'seriesUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SOPInstanceUID', ',', 'uid', '(', 'instUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SOPClassUID', ',', 'classUID', ')', ';', 'if', '(', '!', 'ds', '.', 'contains', '(', 'Tags', '.', 'NumberOfSamples', ')', ')', '{', 'ds', '.', 'putUS', '(', 'Tags', '.', 'NumberOfSamples', ',', '1', ')', ';', '}', 'if', '(', '!', 'ds', '.', 'contains', '(', 'Tags', '.', 'PhotometricInterpretation', ')', ')', '{', 'ds', '.', 'putCS', '(', 'Tags', '.', 'PhotometricInterpretation', ',', '"', 'MONOCHROME2', '"', ')', ';', '}', 'if', '(', 'fmi', ')', '{', 'ds', '.', 'setFileMetaInfo', '(', 'fact', '.', 'newFileMetaInfo', '(', 'ds', ',', 'UIDs', '.', 'ImplicitVRLittleEndian', ')', ')', ';', '}', 'OutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'dest', ')', ')', ';', 'try', '{', '}', 'finally', '{', 'ds', '.', 'writeFile', '(', 'out', ',', 'encodeParam', '(', ')', ')', ';', 'if', '(', 'hasPixelData', ')', '{', 'if', '(', '!', 'skipGroupLen', ')', '{', 'out', '.', 'write', '(', 'PXDATA_GROUPLEN', ')', ';', 'int', 'grlen', '=', 'pxlen', '+', '8', ';', 'out', '.', 'write', '(', '(', 'byte', ')', 'grlen', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '8', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '16', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '24', ')', ')', ';', '}', 'out', '.', 'write', '(', 'PXDATA_TAG', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', 'pxlen', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '8', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '16', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '24', ')', ')', ';', '}', 'if', '(', 'inflate', ')', '{', 'int', 'b2', ',', 'b3', ';', 'for', '(', ';', 'pxlen', '>', '0', ';', 'pxlen', '-=', '3', ')', '{', 'out', '.', 'write', '(', 'in', '.', 'read', '(', ')', ')', ';', 'b2', '=', 'in', '.', 'read', '(', ')', ';', 'b3', '=', 'in', '.', 'read', '(', ')', ';', 'out', '.', 'write', '(', 'b2', '&', '0x0f', ')', ';', 'out', '.', 'write', '(', 'b2', '>>', '4', '|', '(', '(', 'b3', '&', '0x0f', ')', '<<', '4', ')', ')', ';', 'out', '.', 'write', '(', 'b3', '>>', '4', ')', ';', '}', '}', 'else', '{', 'for', '(', ';', 'pxlen', '>', '0', ';', '--', 'pxlen', ')', '{', 'out', '.', 'write', '(', 'in', '.', 'read', '(', ')', ')', ';', '}', '}', 'out', '.', 'close', '(', ')', ';', '}', 'System', '.', 'out', '.', 'print', '(', "'.'", ')', ';', '}', 'finally', '{', 'in', '.', 'close', '(', ')', ';', '}', '}']
Example 230 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'readFile', '(', 'String', 'urlFileString', ')', 'throws', 'IOException', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'urlFileString', ')', ';', 'VizDebugUtils', '.', 'debug', '(', '"', 'url:', '', '"', '+', 'url', '.', 'toString', '(', ')', ')', ';', 'InputStream', 'stream', '=', 'url', '.', 'openStream', '(', ')', ';', 'Reader', 'reader', '=', 'new', 'InputStreamReader', '(', 'stream', ',', '"', 'iso-8859-1', '"', ')', ';', 'StringWriter', 'writer', '=', 'new', 'StringWriter', '(', ')', ';', 'StreamUtils', '.', 'transfer', '(', 'reader', ',', 'writer', ')', ';', 'stream', '.', 'close', '(', ')', ';', 'return', 'writer', '.', 'toString', '(', ')', ';', '}']
Example 231 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'try', '{', 'FileChannel', 'out', '=', 'new', 'FileOutputStream', '(', 'outputfile', ')', '.', 'getChannel', '(', ')', ';', 'long', 'pos', '=', '0', ';', 'status', '.', 'setText', '(', '"', 'Slučovač:', 'Proces', 'slučování', 'spuštěn..', 'Prosím', 'čekejte..");', '', '', '', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'noofparts', ';', 'i', '++', ')', '{', 'FileChannel', 'in', '=', 'new', 'FileInputStream', '(', 'originalfilename', '.', 'getAbsolutePath', '(', ')', '+', '"', '.', '"', '+', 'String', '.', 'format', '(', '"', '%03d', '"', ',', 'i', ')', ')', '.', 'getChannel', '(', ')', ';', 'status', '.', 'setText', '(', '"', 'Slučovač:', 'Slučuji', 'část', '"', '+', 'i', '', '', '', '', '.', '"', ';', '', '', '', '', 'this', '.', 'splitsize', '=', 'in', '.', 'size', '(', ')', ';', 'out', '.', 'transferFrom', '(', 'in', ',', 'pos', ',', 'splitsize', ')', ';', 'pos', '+=', 'splitsize', ';', 'in', '.', 'close', '(', ')', ';', 'if', '(', 'deleteOnFinish', ')', 'new', 'File', '(', 'originalfilename', '+', 'String', '.', 'format', '(', '"', '.%03d', '"', ',', 'i', ')', ')', '.', 'delete', '(', ')', ';', 'pb', '.', 'setValue', '(', '100', '*', 'i', '/', 'noofparts', ')', ';', '}', 'out', '.', 'close', '(', ')', ';', 'status', '.', 'setText', '(', '"', 'Slučovač:', 'Hotovo..")', ';', '', '', 'JOptionPane', '.', 'showMessageDialog', '(', 'null', ',', '"', 'Sloučeno!"', ',', '', '', 'S', 'lučovač",', '', 'J', 'O', 'tionPane.IN', 'F', 'ORMATION_MESSAGE);', '', '', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}']
Example 232 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'protected', 'byte', '[', ']', 'computeHash', '(', ')', '{', 'try', '{', 'final', 'MessageDigest', 'inputHash', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA', '"', ')', ';', 'inputHash', '.', 'update', '(', 'bufferFileData', '(', ')', '.', 'getBytes', '(', ')', ')', ';', 'return', 'inputHash', '.', 'digest', '(', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', 'nsae', ')', '{', 'lastException', '=', 'nsae', ';', 'return', 'new', 'byte', '[', '0', ']', ';', '}', 'catch', '(', 'final', 'IOException', 'ioe', ')', '{', 'lastException', '=', 'ioe', ';', 'return', 'new', 'byte', '[', '0', ']', ';', '}', '}']
Example 233 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'String', 'hashPass', '(', 'String', 'p', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'MessageDigest', 'md', ';', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'byte', '[', ']', 'sha1hash', '=', 'new', 'byte', '[', '40', ']', ';', 'md', '.', 'update', '(', 'p', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'p', '.', 'length', '(', ')', ')', ';', 'sha1hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'sha1hash', ')', ';', '}']
Example 234 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['void', 'copy', '(', 'String', 'source_name', ',', 'String', 'dest_name', ')', 'throws', 'IOException', '{', 'File', 'source_file', '=', 'new', 'File', '(', 'source_name', ')', ';', 'File', 'destination_file', '=', 'new', 'File', '(', 'dest_name', ')', ';', 'FileInputStream', 'source', '=', 'null', ';', 'FileOutputStream', 'destination', '=', 'null', ';', 'byte', '[', ']', 'buffer', ';', 'int', 'bytes_read', ';', 'try', '{', 'if', '(', '!', 'source_file', '.', 'exists', '(', ')', '||', '!', 'source_file', '.', 'isFile', '(', ')', ')', '{', 'throw', 'new', 'FileCopyException', '(', '"', 'FileCopy:', 'no', 'such', 'source', 'file:', '', '"', '+', 'source_name', ')', ';', '}', 'if', '(', '!', 'source_file', '.', 'canRead', '(', ')', ')', '{', 'throw', 'new', 'FileCopyException', '(', '"', 'FileCopy:', 'source', 'file', '', '"', '+', '"', 'is', 'unreadable:', '', '"', '+', 'source_name', ')', ';', '}', 'if', '(', '!', 'destination_file', '.', 'exists', '(', ')', ')', '{', 'File', 'parentdir', '=', 'parent', '(', 'destination_file', ')', ';', 'if', '(', '!', 'parentdir', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'FileCopyException', '(', '"', 'FileCopy:', 'destination', '', '"', '+', '"', 'directory', "doesn't", 'exist:', '', '"', '+', 'dest_name', ')', ';', '}', 'if', '(', '!', 'parentdir', '.', 'canWrite', '(', ')', ')', '{', 'throw', 'new', 'FileCopyException', '(', '"', 'FileCopy:', 'destination', '', '"', '+', '"', 'directory', 'is', 'unwriteable:', '', '"', '+', 'dest_name', ')', ';', '}', '}', 'source', '=', 'new', 'FileInputStream', '(', 'source_file', ')', ';', 'destination', '=', 'new', 'FileOutputStream', '(', 'destination_file', ')', ';', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', 'true', ')', '{', 'bytes_read', '=', 'source', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'bytes_read', '==', '-', '1', ')', '{', 'break', ';', '}', 'destination', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytes_read', ')', ';', '}', '}', 'finally', '{', 'if', '(', 'source', '!=', 'null', ')', '{', 'try', '{', 'source', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'if', '(', 'destination', '!=', 'null', ')', '{', 'try', '{', 'destination', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}']
  >>  iter 1, ACC! IOException => IOError (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! IOError => IPError (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! IPError =>  URIException (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC!  URIException =>  URIError (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC!  URIError =>  IOError (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC!  IOError => IPError (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! IPError =>  IOError (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC!  IOError =>  URIException (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC!  URIException => IOception (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! IOception => IPError (1 => 1, 0.99988 => 0.99988) a=1.000
Example 235 attack result: {'succ': False, 'tokens': '        void copy(String source_name, String dest_name) throws  URIException {\n            File source_file = new File(source_name);\n            File destination_file = new File(dest_name);\n            FileInputStream source = null;\n            FileOutputStream destination = null;\n            byte[] buffer;\n            int bytes_read;\n            try {\n                if (!source_file.exists() || !source_file.isFile()) {\n                    throw new FileCopyException("FileCopy: no such source file: " + source_name);\n                }\n                if (!source_file.canRead()) {\n                    throw new FileCopyException("FileCopy: source file " + "is unreadable: " + source_name);\n                }\n                if (!destination_file.exists()) {\n                    File parentdir = parent(destination_file);\n                    if (!parentdir.exists()) {\n                        throw new FileCopyException("FileCopy: destination " + "directory doesn\'t exist: " + dest_name);\n                    }\n                    if (!parentdir.canWrite()) {\n                        throw new FileCopyException("FileCopy: destination " + "directory is unwriteable: " + dest_name);\n                    }\n                }\n                source = new FileInputStream(source_file);\n                destination = new FileOutputStream(destination_file);\n                buffer = new byte[1024];\n                while (true) {\n                    bytes_read = source.read(buffer);\n                    if (bytes_read == -1) {\n                        break;\n                    }\n                    destination.write(buffer, 0, bytes_read);\n                }\n            } finally {\n                if (source != null) {\n                    try {\n                        source.close();\n                    } catch ( URIException e) {\n                    }\n                }\n                if (destination != null) {\n                    try {\n                        destination.close();\n                    } catch ( URIException e) {\n                    }\n                }\n            }\n        }\n', 'raw_tokens': None, 'prog_length': 290, 'new_pred': 1, 'is_success': -1, 'old_uid': 'IOException', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'IOException': 'IPError'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 235 FAILED.
  time cost = 0.10 min
  ALL EXAMPLE time cost = 15.17 min
  curr succ rate = 0.03571428571428571
Query times in this attack:  115
All Query times:  24170
raw_tokens: ['private', 'static', 'String', 'scramble', '(', 'String', 'text', ')', '{', 'try', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'byte', 'b', ':', 'md', '.', 'digest', '(', ')', ')', 'sb', '.', 'append', '(', 'Integer', '.', 'toString', '(', 'b', '&', '0xFF', ',', '16', ')', ')', ';', 'return', 'sb', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'return', 'null', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'return', 'null', ';', '}', '}']
Example 236 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'folderFileChooserActionPerformed', '(', 'java', '.', 'awt', '.', 'event', '.', 'ActionEvent', 'evt', ')', '{', 'if', '(', 'evt', '.', 'getActionCommand', '(', ')', '.', 'equals', '(', 'JFileChooser', '.', 'APPROVE_SELECTION', ')', ')', '{', 'File', 'selectedFolder', '=', 'folderFileChooser', '.', 'getSelectedFile', '(', ')', ';', 'File', 'collectionCopyFile', ';', 'String', 'newDocumentName', ';', 'Document', 'newDocument', ';', 'StringBuilder', 'distinguisherReplacer', '=', 'new', 'StringBuilder', '(', ')', ';', 'int', 'matchingFilenameDistinguisher', ';', 'String', 'nextToken', ';', 'Term', 'newTerm', ';', 'String', 'userHome', ';', 'String', 'fileSeparator', ';', 'int', 'userOption', ';', 'ArrayList', '<', 'File', '>', 'folderTextFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'ArrayList', '<', 'File', '>', 'folderRejectedFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'HashSet', '<', 'File', '>', 'ignoredFiles', '=', 'new', 'HashSet', '<', 'File', '>', '(', ')', ';', 'FileNameExtensionFilter', 'textFileFilter', '=', 'new', 'FileNameExtensionFilter', '(', '"', 'Text', 'Files', '"', ',', '"', 'txt', '"', ')', ';', 'Scanner', 'tokenizer', '=', 'null', ';', 'FileChannel', 'fileSource', '=', 'null', ';', 'FileChannel', 'collectionDestination', '=', 'null', ';', 'HashMap', '<', 'String', ',', 'Integer', '>', 'termHashMap', '=', 'null', ';', 'Index', 'collectionIndex', '=', 'activeCollection', '.', 'getIndex', '(', ')', ';', 'int', 'documentTermMaxFrequency', ';', 'int', 'currentTermFrequency', ';', 'for', '(', 'File', 'folderFile', ':', 'selectedFolder', '.', 'listFiles', '(', ')', ')', 'if', '(', 'textFileFilter', '.', 'accept', '(', 'folderFile', ')', ')', 'folderTextFiles', '.', 'add', '(', 'folderFile', ')', ';', 'else', 'folderRejectedFiles', '.', 'add', '(', 'folderFile', ')', ';', 'for', '(', 'File', 'selectedFile', ':', 'folderTextFiles', ')', '{', 'newDocumentName', '=', 'selectedFile', '.', 'getName', '(', ')', ';', 'newDocument', '=', 'new', 'Document', '(', 'newDocumentName', ')', ';', 'if', '(', 'activeCollection', '.', 'containsDocument', '(', 'newDocument', ')', ')', '{', 'matchingFilenameDistinguisher', '=', '1', ';', 'newDocumentName', '=', 'newDocumentName', '.', 'concat', '(', '"', '(', '"', '+', 'matchingFilenameDistinguisher', '+', '"', ')', '"', ')', ';', 'newDocument', '.', 'setDocumentName', '(', 'newDocumentName', ')', ';', 'while', '(', 'activeCollection', '.', 'containsDocument', '(', 'newDocument', ')', ')', '{', 'matchingFilenameDistinguisher', '++', ';', 'newDocumentName', '=', 'distinguisherReplacer', '.', 'replace', '(', 'newDocumentName', '.', 'length', '(', ')', '-', '2', ',', 'newDocumentName', '.', 'length', '(', ')', '-', '1', ',', 'new', 'Integer', '(', 'matchingFilenameDistinguisher', ')', '.', 'toString', '(', ')', ')', '.', 'toString', '(', ')', ';', 'newDocument', '.', 'setDocumentName', '(', 'newDocumentName', ')', ';', '}', '}', 'termHashMap', '=', 'new', 'HashMap', '<', 'String', ',', 'Integer', '>', '(', ')', ';', 'try', '{', 'tokenizer', '=', 'new', 'Scanner', '(', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'selectedFile', ')', ')', ')', ';', 'tokenizer', '.', 'useDelimiter', '(', 'Pattern', '.', 'compile', '(', '"', '\\\\', 'p{Space}|', '\\\\', 'p{Punct}|', '\\\\', 'p{Cntrl}', '"', ')', ')', ';', 'while', '(', 'tokenizer', '.', 'hasNext', '(', ')', ')', '{', 'nextToken', '=', 'tokenizer', '.', 'next', '(', ')', '.', 'toLowerCase', '(', ')', ';', 'if', '(', '!', 'nextToken', '.', 'isEmpty', '(', ')', ')', 'if', '(', 'termHashMap', '.', 'containsKey', '(', 'nextToken', ')', ')', 'termHashMap', '.', 'put', '(', 'nextToken', ',', 'termHashMap', '.', 'get', '(', 'nextToken', ')', '+', '1', ')', ';', 'else', 'termHashMap', '.', 'put', '(', 'nextToken', ',', '1', ')', ';', '}', 'documentTermMaxFrequency', '=', '0', ';', 'for', '(', 'String', 'term', ':', 'termHashMap', '.', 'keySet', '(', ')', ')', '{', 'newTerm', '=', 'new', 'Term', '(', 'term', ')', ';', 'if', '(', '!', 'collectionIndex', '.', 'termExists', '(', 'newTerm', ')', ')', 'collectionIndex', '.', 'addTerm', '(', 'newTerm', ')', ';', 'currentTermFrequency', '=', 'termHashMap', '.', 'get', '(', 'term', ')', ';', 'if', '(', 'currentTermFrequency', '>', 'documentTermMaxFrequency', ')', 'documentTermMaxFrequency', '=', 'currentTermFrequency', ';', 'collectionIndex', '.', 'addOccurence', '(', 'newTerm', ',', 'newDocument', ',', 'currentTermFrequency', ')', ';', '}', 'newDocument', '.', 'setTermMaxFrequency', '(', 'documentTermMaxFrequency', ')', ';', 'activeCollection', '.', 'addDocument', '(', 'newDocument', ')', ';', 'userHome', '=', 'System', '.', 'getProperty', '(', '"', 'user.home', '"', ')', ';', 'fileSeparator', '=', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', ';', 'collectionCopyFile', '=', 'new', 'File', '(', 'userHome', '+', 'fileSeparator', '+', '"', 'Infrared', '"', '+', 'fileSeparator', '+', 'activeCollection', '.', 'getDocumentCollectionName', '(', ')', '+', 'fileSeparator', '+', 'newDocumentName', ')', ';', 'collectionCopyFile', '.', 'createNewFile', '(', ')', ';', 'fileSource', '=', 'new', 'FileInputStream', '(', 'selectedFile', ')', '.', 'getChannel', '(', ')', ';', 'collectionDestination', '=', 'new', 'FileOutputStream', '(', 'collectionCopyFile', ')', '.', 'getChannel', '(', ')', ';', 'collectionDestination', '.', 'transferFrom', '(', 'fileSource', ',', '0', ',', 'fileSource', '.', 'size', '(', ')', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', '+', '"', '', 'This', 'error', 'should', 'never', 'occur!', 'The', 'file', 'was', 'just', 'selected!', '"', ')', ';', 'return', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'userOption', '=', 'JOptionPane', '.', 'showConfirmDialog', '(', 'this', ',', '"', 'A', 'file', 'insertion', 'has', 'failed.', 'If', 'you', 'want', 'it', 'to', 'ignore', 'this', '"', '+', '"', 'file,', 'press', 'YES,', 'else', 'press', 'NO', 'to', 'repeat', 'the', 'insertion', '"', ',', '"', 'FileInsertionFailure', '"', ',', 'JOptionPane', '.', 'YES_NO_OPTION', ',', 'JOptionPane', '.', 'WARNING_MESSAGE', ')', ';', 'if', '(', 'userOption', '==', 'JOptionPane', '.', 'NO_OPTION', ')', '{', 'activeCollection', '.', 'removeDocument', '(', 'newDocument', ')', ';', 'for', '(', 'String', 'term', ':', 'termHashMap', '.', 'keySet', '(', ')', ')', '{', 'collectionIndex', '.', 'removeAllOccurences', '(', 'new', 'Term', '(', 'term', ')', ',', 'newDocument', ')', ';', '}', 'folderTextFiles', '.', 'add', '(', 'selectedFile', ')', ';', '}', 'else', 'ignoredFiles', '.', 'add', '(', 'selectedFile', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'tokenizer', '!=', 'null', ')', 'tokenizer', '.', 'close', '(', ')', ';', 'if', '(', 'fileSource', '!=', 'null', ')', 'fileSource', '.', 'close', '(', ')', ';', 'if', '(', 'collectionDestination', '!=', 'null', ')', 'collectionDestination', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', '}', 'if', '(', 'ignoredFiles', '.', 'size', '(', ')', '>', '0', ')', '{', 'IgnoredFilesDialog', 'ignoredFilesDialog', '=', 'new', 'IgnoredFilesDialog', '(', 'ignoredFiles', ',', 'this', ')', ';', 'ignoredFilesDialog', '.', 'setVisible', '(', 'true', ')', ';', '}', 'processWindowEvent', '(', 'new', 'WindowEvent', '(', 'this', ',', 'WindowEvent', '.', 'WINDOW_CLOSING', ')', ')', ';', '}', 'else', 'if', '(', 'evt', '.', 'getActionCommand', '(', ')', '.', 'equalsIgnoreCase', '(', 'JFileChooser', '.', 'CANCEL_SELECTION', ')', ')', 'processWindowEvent', '(', 'new', 'WindowEvent', '(', 'this', ',', 'WindowEvent', '.', 'WINDOW_CLOSING', ')', ')', ';', '}']
Example 237 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'Configuration', '', '(', 'URL', 'url', ')', '{', 'InputStream', 'in', '=', 'null', ';', 'try', '{', 'load', '(', 'in', '=', 'url', '.', 'openStream', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', '"', 'Could', 'not', 'load', 'configuration', 'from', '', '"', '+', 'url', ',', 'e', ')', ';', '}', 'finally', '{', 'if', '(', 'in', '!=', 'null', ')', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ignore', ')', '{', '}', '}', '}', '}']
  >>  iter 1, ACC! in => image (0 => 0, 0.99984 => 0.99982) a=1.343
  >>  iter 2, ACC! image => IN (0 => 0, 0.99982 => 0.99985) a=1.248
  >>  iter 3, ACC! IN => ic (0 => 0, 0.99985 => 0.99983) a=1.373
  >>  iter 4, ACC! ic => min (0 => 0, 0.99983 => 0.99985) a=1.298
  >>  iter 5, ACC! min => source (0 => 0, 0.99985 => 0.99984) a=1.466
  >>  iter 6, ACC! source => reader (0 => 0, 0.99984 => 0.99979) a=1.338
  >>  iter 7, ACC! reader => config (0 => 0, 0.99979 => 0.99984) a=1.036
  >>  iter 8, ACC! config => i (0 => 0, 0.99984 => 0.99985) a=1.383
  >>  iter 9, ACC! i => b (0 => 0, 0.99985 => 0.99984) a=1.383
  >>  iter 10, ACC! b => file (0 => 0, 0.99984 => 0.99982) a=1.405
Example 238 attack result: {'succ': False, 'tokens': '    public Configuration(URL url) {\n        InputStream file = null;\n        try {\n            load(file = url.openStream());\n        } catch (Exception e) {\n            throw new RuntimeException("Could not load configuration from " + url, e);\n        } finally {\n            if (file != null) {\n                try {\n                    file.close();\n                } catch (IOException ignore) {\n                }\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 75, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 1.9609928e-05, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'in': 'file'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 238 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 15.34 min
  curr succ rate = 0.03529411764705882
Query times in this attack:  311
All Query times:  24481
raw_tokens: ['protected', 'void', 'findPackages', '(', 'Set', '<', 'String', '>', 'packages', ',', 'ClassLoader', 'classLoader', ')', 'throws', 'IOException', '{', 'Enumeration', '<', 'URL', '>', 'resources', '=', 'classLoader', '.', 'getResources', '(', 'META_INF_SERVICES', ')', ';', 'while', '(', 'resources', '.', 'hasMoreElements', '(', ')', ')', '{', 'URL', 'url', '=', 'resources', '.', 'nextElement', '(', ')', ';', 'String', 'path', '=', 'url', '.', 'getPath', '(', ')', ';', 'if', '(', '!', 'visitedURIs', '.', 'contains', '(', 'path', ')', ')', '{', 'visitedURIs', '.', 'add', '(', 'path', ')', ';', 'LOG', '.', 'debug', '(', '"', 'Loading', 'file', '{}', 'to', 'retrieve', 'list', 'of', 'packages,', 'from', 'url:', '{}', '"', ',', 'META_INF_SERVICES', ',', 'url', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'String', 'line', '=', 'reader', '.', 'readLine', '(', ')', ';', 'if', '(', 'line', '==', 'null', ')', '{', 'break', ';', '}', 'line', '=', 'line', '.', 'trim', '(', ')', ';', 'if', '(', 'line', '.', 'startsWith', '(', '"', '#', '"', ')', '||', 'line', '.', 'length', '(', ')', '==', '0', ')', '{', 'continue', ';', '}', 'tokenize', '(', 'packages', ',', 'line', ')', ';', '}', '}', 'finally', '{', 'IOHelper', '.', 'close', '(', 'reader', ',', 'null', ',', 'LOG', ')', ';', '}', '}', '}', '}']
Example 239 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'String', 'calcReturnKey', '(', 'String', 'key', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'MessageDigest', 'md', ';', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'String', 'text', '=', 'new', 'String', '(', ')', ';', 'byte', '[', ']', 'sha1hash', '=', 'new', 'byte', '[', '20', ']', ';', 'text', '=', 'key', '+', 'GUUI', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', ')', ',', '0', ',', 'text', '.', 'length', '(', ')', ')', ';', 'sha1hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', '(', 'Helper', '.', 'getBASE64', '(', 'sha1hash', ')', ')', ';', '}']
Example 240 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'ZipViewdataReader', '', '(', 'ZipInputStream', 'stream', ')', 'throws', 'IOException', '{', 'ZipEntry', 'ze', ';', 'while', '(', '(', 'ze', '=', 'stream', '.', 'getNextEntry', '(', ')', ')', '!=', 'null', ')', '{', 'File', 'temp', '=', 'File', '.', 'createTempFile', '(', '"', 'spool.', '"', ',', '"', '.synu', '"', ')', ';', 'temp', '.', 'deleteOnExit', '(', ')', ';', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'temp', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', '*', '1024', ']', ';', 'int', 'length', ';', 'while', '(', '(', 'length', '=', 'stream', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'length', ')', ';', 'fos', '.', 'close', '(', ')', ';', 'String', 'name', '=', 'ze', '.', 'getName', '(', ')', ';', 'String', '[', ']', 'parts', '=', 'name', '.', 'split', '(', '"', '[', '\\\\', '\\\\', '/]', '"', ')', ';', 'this', '.', '_file_hash', '.', 'put', '(', 'parts', '[', 'parts', '.', 'length', '-', '1', ']', ',', 'temp', ')', ';', '}', 'stream', '.', 'close', '(', ')', ';', 'for', '(', 'String', 'key', ':', 'this', '.', '_file_hash', '.', 'keySet', '(', ')', ')', 'if', '(', 'key', '.', 'endsWith', '(', '"', 'Viewdata', '"', ')', ')', '{', 'File', 'f', '=', 'this', '.', '_file_hash', '.', 'get', '(', 'key', ')', ';', 'FileReader', 'fr', '=', 'new', 'FileReader', '(', 'f', ')', ';', 'this', '.', '_viewdata', '=', 'new', 'BufferedReader', '(', 'fr', ')', ';', 'break', ';', '}', 'if', '(', 'this', '.', '_viewdata', '==', 'null', ')', 'throw', 'new', 'FileNotFoundException', '(', '"', 'No', 'Viewdata', 'found', 'in', 'ZIP', 'file.', '"', ')', ';', '}']
  >>  iter 1, ACC! in => as (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 2, ACC! as => rin (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 3, ACC! rin => pin (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 4, ACC! pin => rin (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 5, ACC! rin => again (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 6, ACC! again => ax (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 7, ACC! ax => inas (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 8, ACC! inas => login (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 9, ACC! login => In (1 => 1, 0.99971 => 0.99971) a=1.000
  >>  iter 10, ACC! In => login (1 => 1, 0.99971 => 0.99971) a=1.000
Example 241 attack result: {'succ': False, 'tokens': '    public ZipViewdataReader(ZipInputStream stream) throws IOException {\n        ZipEntry ze;\n        while ((ze = stream.getNextEntry()) != null) {\n            File temp = File.createTempFile("spool.", ".synu");\n            temp.deleteOnExit();\n            FileOutputStream fos = new FileOutputStream(temp);\n            byte[] buffer = new byte[1024 * 1024];\n            int length;\n            while ((length = stream.read(buffer)) != -1) fos.write(buffer, 0, length);\n            fos.close();\n            String name = ze.getName();\n            String[] parts = name.split("[\\\\\\\\/]");\n            this._file_hash.put(parts[parts.length - 1], temp);\n        }\n        stream.close();\n        for (String key : this._file_hash.keySet()) if (key.endsWith("Viewdata")) {\n            File f = this._file_hash.get(key);\n            FileReader fr = new FileReader(f);\n            this._viewdata = new BufferedReader(fr);\n            break;\n        }\n        if (this._viewdata == null) throw new FileNotFoundException("No Viewdata found in ZIP file.");\n    }\n', 'raw_tokens': None, 'prog_length': 236, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'in': 'login'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 241 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 15.53 min
  curr succ rate = 0.03488372093023256
Query times in this attack:  311
All Query times:  24792
raw_tokens: ['public', 'QDataSet', 'doRead', '(', 'URL', 'url', ',', 'URLConnection', 'connect', ')', 'throws', 'IOException', ',', 'ParserConfigurationException', ',', 'SAXException', '{', 'codebase', '=', 'url', ';', 'InputStream', 'in', ';', 'if', '(', 'connect', '!=', 'null', ')', '{', 'in', '=', 'connect', '.', 'getInputStream', '(', ')', ';', '}', 'else', '{', 'in', '=', 'url', '.', 'openStream', '(', ')', ';', '}', 'DocumentBuilder', 'builder', '=', 'DocumentBuilderFactory', '.', 'newInstance', '(', ')', '.', 'newDocumentBuilder', '(', ')', ';', 'InputSource', 'source', '=', 'new', 'InputSource', '(', 'in', ')', ';', 'Document', 'document', '=', 'builder', '.', 'parse', '(', 'source', ')', ';', 'in', '.', 'close', '(', ')', ';', 'QDataSet', 'result', '=', 'null', ';', 'NodeList', 'kids', '=', 'document', '.', 'getChildNodes', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'kids', '.', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'Node', 'n', '=', 'kids', '.', 'item', '(', 'i', ')', ';', 'if', '(', 'n', '.', 'getNodeName', '(', ')', '.', 'equals', '(', '"', 'netcdf', '"', ')', ')', '{', 'result', '=', 'netcdf', '(', 'n', ')', ';', '}', '}', 'return', 'result', ';', '}']
  >>  iter 1, REJ. url => base (0 => 0, 0.99997 => 0.99998) a=0.991
  >>  iter 2, ACC! url => file (0 => 0, 0.99997 => 0.99997) a=1.185
  >>  iter 3, REJ. file => page (0 => 0, 0.99997 => 0.99998) a=0.836
  >>  iter 4, REJ. file => not (0 => 0, 0.99997 => 0.99998) a=0.836
  >>  iter 5, REJ. file => cl (0 => 0, 0.99997 => 0.99998) a=0.812
  >>  iter 6, REJ. file => user (0 => 0, 0.99997 => 0.99998) a=0.812
  >>  iter 7, REJ. file => xml (0 => 0, 0.99997 => 0.99998) a=0.836
  >>  iter 8, REJ. file => jar (0 => 0, 0.99997 => 0.99998) a=0.836
  >>  iter 9, REJ. file => api (0 => 0, 0.99997 => 0.99998) a=0.836
  >>  iter 10, REJ. file => cl (0 => 0, 0.99997 => 0.99998) a=0.800
Example 242 attack result: {'succ': False, 'tokens': '    public QDataSet doRead(URL cl, URLConnection connect) throws IOException, ParserConfigurationException, SAXException {\n        codebase = cl;\n        InputStream in;\n        if (connect != null) {\n            in = connect.getInputStream();\n        } else {\n            in = cl.openStream();\n        }\n        DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n        InputSource source = new InputSource(in);\n        Document document = builder.parse(source);\n        in.close();\n        QDataSet result = null;\n        NodeList kids = document.getChildNodes();\n        for (int i = 0; i < kids.getLength(); i++) {\n            Node n = kids.item(i);\n            if (n.getNodeName().equals("netcdf")) {\n                result = netcdf(n);\n            }\n        }\n        return result;\n    }\n', 'raw_tokens': None, 'prog_length': 161, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -7.1525574e-06, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'url': 'file'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 242 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 15.68 min
  curr succ rate = 0.034482758620689655
Query times in this attack:  308
All Query times:  25100
raw_tokens: ['public', 'InputStream', 'start', '(', 'String', 'classname', ',', 'String', 'jarFileURI', ',', 'String', '...', 'params', ')', 'throws', 'IOException', '{', 'Runtime', '.', 'getRuntime', '(', ')', '.', 'addShutdownHook', '(', 'new', 'Thread', '(', ')', '{', '@', 'Override', 'public', 'void', 'run', '(', ')', '{', 'terminate', '(', ')', ';', '}', '}', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'loading', 'jar', 'file', '', '"', '+', 'jarFileURI', '+', '"', '', '...', '"', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'jarFileURI', ')', ';', 'InputStream', 'is', '=', 'url', '.', 'openStream', '(', ')', ';', 'jarFile', '=', 'QAUtil', '.', 'createTempfile', '(', ')', ';', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'jarFile', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'bytes_read', ';', 'while', '(', '(', 'bytes_read', '=', 'is', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytes_read', ')', ';', '}', 'fos', '.', 'close', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', 'String', '[', ']', 'args', '=', 'new', 'String', '[', 'params', '.', 'length', '+', '4', ']', ';', 'args', '[', '0', ']', '=', '"', 'java', '"', ';', 'args', '[', '1', ']', '=', '"', '-cp', '"', ';', 'args', '[', '2', ']', '=', 'jarFile', '.', 'getAbsolutePath', '(', ')', ';', 'args', '[', '3', ']', '=', 'classname', ';', 'System', '.', 'arraycopy', '(', 'params', ',', '0', ',', 'args', ',', '4', ',', 'params', '.', 'length', ')', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'for', '(', 'String', 'arg', ':', 'args', ')', '{', 'sb', '.', 'append', '(', 'arg', '+', '"', '', '', '"', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'execute', '', '"', '+', 'sb', ')', ';', 'ProcessBuilder', 'pb', '=', 'new', 'ProcessBuilder', '(', 'args', ')', ';', 'p', '=', 'pb', '.', 'start', '(', ')', ';', 'return', 'p', '.', 'getInputStream', '(', ')', ';', '}']
Example 243 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'getWebContent', '(', 'String', 'remoteUrl', ',', 'String', 'encoding', ')', '{', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'try', '{', 'java', '.', 'net', '.', 'URL', 'url', '=', 'new', 'java', '.', 'net', '.', 'URL', '(', 'remoteUrl', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ',', 'encoding', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'sb', '.', 'append', '(', 'line', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'logger', '.', 'error', '(', '"', '获取远程网址内容失败', '-', '"', '+', 'remoteUrl,', 'e);', '', '', '', '', '', '', '', '}', 'return', 'sb', '.', 'toString', '(', ')', ';', '}']
  >>  iter 1, REJ. in => i (0 => 0, 0.99688 => 0.99703) a=0.985
  >>  iter 2, REJ. in => image (0 => 0, 0.99688 => 0.99707) a=0.985
  >>  iter 3, REJ. in => url (0 => 0, 0.99688 => 0.99703) a=0.981
  >>  iter 4, REJ. in => l (0 => 0, 0.99688 => 0.99694) a=0.985
  >>  iter 5, REJ. in => data (0 => 0, 0.99688 => 0.99710) a=0.985
  >>  iter 6, REJ. in => diff (0 => 0, 0.99688 => 0.99714) a=0.985
  >>  iter 7, REJ. in => input (0 => 0, 0.99688 => 0.99697) a=0.981
  >>  iter 8, REJ. in => ac (0 => 0, 0.99688 => 0.99707) a=0.985
  >>  iter 9, REJ. in => reader (0 => 0, 0.99688 => 0.99694) a=0.985
  >>  iter 10, REJ. in => file (0 => 0, 0.99688 => 0.99701) a=0.985
Example 244 attack result: {'succ': False, 'tokens': '    public static String getWebContent(String remoteUrl, String encoding) {\n        StringBuffer sb = new StringBuffer();\n        try {\n            java.net.URL url = new java.net.URL(remoteUrl);\n            BufferedReader file = new BufferedReader(new InputStreamReader(url.openStream(), encoding));\n            String line;\n            while ((line = file.readLine()) != null) {\n                sb.append(line);\n            }\n            file.close();\n        } catch (Exception e) {\n            logger.error("获取远程网址内容失败 - " + remoteUrl, e);\n        }\n        return sb.toString();\n    }\n', 'raw_tokens': None, 'prog_length': 119, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -0.00012803078, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 244 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 15.84 min
  curr succ rate = 0.03409090909090909
Query times in this attack:  314
All Query times:  25414
raw_tokens: ['Bitmap', 'downloadBitmap', '(', 'String', 'url', ')', '{', 'final', 'int', 'IO_BUFFER_SIZE', '=', '4', '*', '1024', ';', 'final', 'HttpClient', 'client', '=', '(', 'mode', '==', 'Mode', '.', 'NO_ASYNC_TASK', ')', '?', 'new', 'DefaultHttpClient', '(', ')', ':', 'AndroidHttpClient', '.', 'newInstance', '(', '"', 'Android', '"', ')', ';', 'final', 'HttpGet', 'getRequest', '=', 'new', 'HttpGet', '(', 'url', ')', ';', 'try', '{', 'HttpResponse', 'response', '=', 'client', '.', 'execute', '(', 'getRequest', ')', ';', 'final', 'int', 'statusCode', '=', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ';', 'if', '(', 'statusCode', '!=', 'HttpStatus', '.', 'SC_OK', ')', '{', 'Log', '.', 'w', '(', '"', 'ImageDownloader', '"', ',', '"', 'Error', '', '"', '+', 'statusCode', '+', '"', '', 'while', 'retrieving', 'bitmap', 'from', '', '"', '+', 'url', ')', ';', 'return', 'null', ';', '}', 'final', 'HttpEntity', 'entity', '=', 'response', '.', 'getEntity', '(', ')', ';', 'if', '(', 'entity', '!=', 'null', ')', '{', 'InputStream', 'inputStream', '=', 'null', ';', 'try', '{', 'inputStream', '=', 'entity', '.', 'getContent', '(', ')', ';', 'return', 'BitmapFactory', '.', 'decodeStream', '(', 'new', 'FlushedInputStream', '(', 'inputStream', ')', ')', ';', '}', 'finally', '{', 'if', '(', 'inputStream', '!=', 'null', ')', '{', 'inputStream', '.', 'close', '(', ')', ';', '}', 'entity', '.', 'consumeContent', '(', ')', ';', '}', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'getRequest', '.', 'abort', '(', ')', ';', 'Log', '.', 'w', '(', 'LOG_TAG', ',', '"', 'I/O', 'error', 'while', 'retrieving', 'bitmap', 'from', '', '"', '+', 'url', ',', 'e', ')', ';', '}', 'catch', '(', 'IllegalStateException', 'e', ')', '{', 'getRequest', '.', 'abort', '(', ')', ';', 'Log', '.', 'w', '(', 'LOG_TAG', ',', '"', 'Incorrect', 'URL:', '', '"', '+', 'url', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'getRequest', '.', 'abort', '(', ')', ';', 'Log', '.', 'w', '(', 'LOG_TAG', ',', '"', 'Error', 'while', 'retrieving', 'bitmap', 'from', '', '"', '+', 'url', ',', 'e', ')', ';', '}', 'finally', '{', 'if', '(', '(', 'client', 'instanceof', 'AndroidHttpClient', ')', ')', '{', '(', '(', 'AndroidHttpClient', ')', 'client', ')', '.', 'close', '(', ')', ';', '}', '}', 'return', 'null', ';', '}']
Example 245 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'fetch', '(', 'URL', 'url', ')', '{', 'StringBuilder', 'body', '=', 'new', 'StringBuilder', '(', ')', ';', 'try', '{', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'inputLine', ';', 'while', '(', '(', 'inputLine', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'body', '.', 'append', '(', 'inputLine', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'return', 'body', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'debug', '(', '"', 'Error:', 'fetch:', 'Exception', 'reading', 'URL:', '', '"', '+', 'e', ')', ';', '}', 'return', 'null', ';', '}']
Example 246 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'InputStream', 'gzip', '(', 'final', 'InputStream', 'inputStream', ')', 'throws', 'IOException', '{', 'Assert', '.', 'notNull', '(', 'inputStream', ',', '"', 'inputStream', '"', ')', ';', 'InputOutputStream', 'inputOutputStream', '=', 'new', 'InputOutputStream', '(', ')', ';', 'GZIPOutputStream', 'gzipOutputStream', '=', 'new', 'GZIPOutputStream', '(', 'inputOutputStream', ')', ';', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'gzipOutputStream', ')', ';', 'gzipOutputStream', '.', 'close', '(', ')', ';', 'return', 'inputOutputStream', '.', 'getInputStream', '(', ')', ';', '}']
Example 247 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'getRandomGUID', '(', 'boolean', 'secure', ')', '{', 'MessageDigest', 'md5', '=', 'null', ';', 'StringBuffer', 'sbValueBeforeMD5', '=', 'new', 'StringBuffer', '(', ')', ';', 'try', '{', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '', '"', '+', 'e', ')', ';', '}', 'try', '{', 'long', 'time', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'rand', '=', '0', ';', 'if', '(', 'secure', ')', '{', 'rand', '=', 'mySecureRand', '.', 'nextLong', '(', ')', ';', '}', 'else', '{', 'rand', '=', 'myRand', '.', 'nextLong', '(', ')', ';', '}', 'sbValueBeforeMD5', '.', 'append', '(', 's_id', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'time', ')', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', '"', ':', '"', ')', ';', 'sbValueBeforeMD5', '.', 'append', '(', 'Long', '.', 'toString', '(', 'rand', ')', ')', ';', 'valueBeforeMD5', '=', 'sbValueBeforeMD5', '.', 'toString', '(', ')', ';', 'md5', '.', 'update', '(', 'valueBeforeMD5', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'array', '=', 'md5', '.', 'digest', '(', ')', ';', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'j', '=', '0', ';', 'j', '<', 'array', '.', 'length', ';', '++', 'j', ')', '{', 'int', 'b', '=', 'array', '[', 'j', ']', '&', '0xFF', ';', 'if', '(', 'b', '<', '0x10', ')', 'sb', '.', 'append', '(', "'0'", ')', ';', 'sb', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'b', ')', ')', ';', '}', 'valueAfterMD5', '=', 'sb', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error:', '"', '+', 'e', ')', ';', '}', '}']
Example 248 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'process', '(', 'String', 'zipFileName', ',', 'String', 'directory', ',', 'String', 'db', ',', 'boolean', 'quiet', ')', 'throws', 'SQLException', '{', 'ArrayList', '<', 'String', '>', 'list', '=', 'FileLister', '.', 'getDatabaseFiles', '(', 'directory', ',', 'db', ',', 'true', ')', ';', 'if', '(', 'list', '.', 'size', '(', ')', '==', '0', ')', '{', 'if', '(', '!', 'quiet', ')', '{', 'printNoDatabaseFilesFound', '(', 'directory', ',', 'db', ')', ';', '}', 'return', ';', '}', 'zipFileName', '=', 'FileUtils', '.', 'normalize', '(', 'zipFileName', ')', ';', 'if', '(', 'FileUtils', '.', 'exists', '(', 'zipFileName', ')', ')', '{', 'FileUtils', '.', 'delete', '(', 'zipFileName', ')', ';', '}', 'OutputStream', 'fileOut', '=', 'null', ';', 'try', '{', 'fileOut', '=', 'FileUtils', '.', 'openFileOutputStream', '(', 'zipFileName', ',', 'false', ')', ';', 'ZipOutputStream', 'zipOut', '=', 'new', 'ZipOutputStream', '(', 'fileOut', ')', ';', 'String', 'base', '=', '"', '"', ';', 'for', '(', 'String', 'fileName', ':', 'list', ')', '{', 'if', '(', 'fileName', '.', 'endsWith', '(', 'Constants', '.', 'SUFFIX_PAGE_FILE', ')', ')', '{', 'base', '=', 'FileUtils', '.', 'getParent', '(', 'fileName', ')', ';', 'break', ';', '}', 'else', 'if', '(', 'fileName', '.', 'endsWith', '(', 'Constants', '.', 'SUFFIX_DATA_FILE', ')', ')', '{', 'base', '=', 'FileUtils', '.', 'getParent', '(', 'fileName', ')', ';', 'break', ';', '}', '}', 'for', '(', 'String', 'fileName', ':', 'list', ')', '{', 'String', 'f', '=', 'FileUtils', '.', 'getAbsolutePath', '(', 'fileName', ')', ';', 'if', '(', '!', 'f', '.', 'startsWith', '(', 'base', ')', ')', '{', 'Message', '.', 'throwInternalError', '(', 'f', '+', '"', '', 'does', 'not', 'start', 'with', '', '"', '+', 'base', ')', ';', '}', 'if', '(', 'FileUtils', '.', 'isDirectory', '(', 'fileName', ')', ')', '{', 'continue', ';', '}', 'f', '=', 'f', '.', 'substring', '(', 'base', '.', 'length', '(', ')', ')', ';', 'f', '=', 'BackupCommand', '.', 'correctFileName', '(', 'f', ')', ';', 'ZipEntry', 'entry', '=', 'new', 'ZipEntry', '(', 'f', ')', ';', 'zipOut', '.', 'putNextEntry', '(', 'entry', ')', ';', 'InputStream', 'in', '=', 'null', ';', 'try', '{', 'in', '=', 'FileUtils', '.', 'openFileInputStream', '(', 'fileName', ')', ';', 'IOUtils', '.', 'copyAndCloseInput', '(', 'in', ',', 'zipOut', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', '}', 'finally', '{', 'IOUtils', '.', 'closeSilently', '(', 'in', ')', ';', '}', 'zipOut', '.', 'closeEntry', '(', ')', ';', 'if', '(', '!', 'quiet', ')', '{', 'out', '.', 'println', '(', '"', 'Processed:', '', '"', '+', 'fileName', ')', ';', '}', '}', 'zipOut', '.', 'closeEntry', '(', ')', ';', 'zipOut', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'Message', '.', 'convertIOException', '(', 'e', ',', 'zipFileName', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeSilently', '(', 'fileOut', ')', ';', '}', '}']
  >>  iter 1, ACC! out => copy (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! copy => input (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! in => f (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! input => c (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! c => conf (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! f => pin (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! conf => timeout (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! timeout => cache (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! cache => conn (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! pin => connection (1 => 1, 0.99988 => 0.99988) a=1.001
Example 249 attack result: {'succ': False, 'tokens': '    private void process(String zipFileName, String directory, String db, boolean quiet) throws SQLException {\n        ArrayList<String> list = FileLister.getDatabaseFiles(directory, db, true);\n        if (list.size() == 0) {\n            if (!quiet) {\n                printNoDatabaseFilesFound(directory, db);\n            }\n            return;\n        }\n        zipFileName = FileUtils.normalize(zipFileName);\n        if (FileUtils.exists(zipFileName)) {\n            FileUtils.delete(zipFileName);\n        }\n        OutputStream fileOut = null;\n        try {\n            fileOut = FileUtils.openFileOutputStream(zipFileName, false);\n            ZipOutputStream zipOut = new ZipOutputStream(fileOut);\n            String base = "";\n            for (String fileName : list) {\n                if (fileName.endsWith(Constants.SUFFIX_PAGE_FILE)) {\n                    base = FileUtils.getParent(fileName);\n                    break;\n                } else if (fileName.endsWith(Constants.SUFFIX_DATA_FILE)) {\n                    base = FileUtils.getParent(fileName);\n                    break;\n                }\n            }\n            for (String fileName : list) {\n                String connection = FileUtils.getAbsolutePath(fileName);\n                if (!connection.startsWith(base)) {\n                    Message.throwInternalError(connection + " does not start with " + base);\n                }\n                if (FileUtils.isDirectory(fileName)) {\n                    continue;\n                }\n                connection = connection.substring(base.length());\n                connection = BackupCommand.correctFileName(connection);\n                ZipEntry entry = new ZipEntry(connection);\n                zipOut.putNextEntry(entry);\n                InputStream connection = null;\n                try {\n                    connection = FileUtils.openFileInputStream(fileName);\n                    IOUtils.copyAndCloseInput(connection, zipOut);\n                } catch (FileNotFoundException e) {\n                } finally {\n                    IOUtils.closeSilently(connection);\n                }\n                zipOut.closeEntry();\n                if (!quiet) {\n                    conn.println("Processed: " + fileName);\n                }\n            }\n            zipOut.closeEntry();\n            zipOut.close();\n        } catch (IOException e) {\n            throw Message.convertIOException(e, zipFileName);\n        } finally {\n            IOUtils.closeSilently(fileOut);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 385, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 1.15833245e-08, 'nb_changed_var': 2, 'nb_changed_pos': 5, 'replace_info': {'out': 'conn', 'in': 'connection'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 249 FAILED.
  time cost = 0.17 min
  ALL EXAMPLE time cost = 16.07 min
  curr succ rate = 0.033707865168539325
Query times in this attack:  314
All Query times:  25728
raw_tokens: ['void', 'ProcessRequests', '(', 'DataInputStream', 'in', ',', 'PrintStream', 'out', ')', '{', 'String', 'sQuery', ';', 'while', '(', 'true', ')', '{', 'try', '{', 'sQuery', '=', 'in', '.', 'readLine', '(', ')', ';', 'if', '(', 'sQuery', '==', 'null', ')', 'return', ';', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'select', '"', ')', ')', '{', 'ProcessQuery', '(', 'sQuery', ',', 'out', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'insert', '"', ')', ')', '{', 'Statement', 'stmt', '=', 'con', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', 'sQuery', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'update', '"', ')', ')', '{', 'Statement', 'stmt', '=', 'con', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', 'sQuery', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'commit', '"', ')', ')', '{', 'con', '.', 'commit', '(', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'autocommit', 'true', '"', ')', ')', '{', 'con', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'autocommit', 'false', '"', ')', ')', '{', 'con', '.', 'setAutoCommit', '(', 'false', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'delete', '"', ')', ')', '{', 'Statement', 'stmt', '=', 'con', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', 'sQuery', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'rollback', '"', ')', ')', '{', 'con', '.', 'rollback', '(', ')', ';', '}', 'else', '{', 'out', '.', 'println', '(', '"', 'What', '?', '"', ')', ';', '}', 'out', '.', 'println', '(', '"', '>', '"', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', 'out', '.', 'println', '(', '"', '***', 'SQLException', 'caught', '***', '"', ')', ';', 'while', '(', 'ex', '!=', 'null', ')', '{', 'out', '.', 'println', '(', '"', 'SQLState:', '', '"', '+', 'ex', '.', 'getSQLState', '(', ')', ')', ';', 'out', '.', 'println', '(', '"', 'Message:', '', '', '"', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'out', '.', 'println', '(', '"', 'Vendor:', '', '', '', '"', '+', 'ex', '.', 'getErrorCode', '(', ')', ')', ';', 'ex', '=', 'ex', '.', 'getNextException', '(', ')', ';', 'out', '.', 'println', '(', '"', '"', ')', ';', '}', '}', 'catch', '(', 'java', '.', 'lang', '.', 'Exception', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
Example 250 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'readCreditsHtml', '(', 'IApplication', 'app', ')', '{', 'final', 'URL', 'url', '=', 'app', '.', 'getResources', '(', ')', '.', 'getCreditsURL', '(', ')', ';', 'StringBuffer', 'buf', '=', 'new', 'StringBuffer', '(', '2048', ')', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'try', '{', 'BufferedReader', 'rdr', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'try', '{', 'String', 'line', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'rdr', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', 'internationalizedLine', '=', 'Utilities', '.', 'replaceI18NSpanLine', '(', 'line', ',', 's_stringMgr', ')', ';', 'buf', '.', 'append', '(', 'internationalizedLine', ')', ';', '}', '}', 'finally', '{', 'rdr', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'String', 'errorMsg', '=', 's_stringMgr', '.', 'getString', '(', '"', 'AboutBoxDialog.error.creditsfile', '"', ')', ';', 's_log', '.', 'error', '(', 'errorMsg', ',', 'ex', ')', ';', 'buf', '.', 'append', '(', 'errorMsg', '+', '"', ':', '', '"', '+', 'ex', '.', 'toString', '(', ')', ')', ';', '}', '}', 'else', '{', 'String', 'errorMsg', '=', 's_stringMgr', '.', 'getString', '(', '"', 'AboutBoxDialog.error.creditsfileurl', '"', ')', ';', 's_log', '.', 'error', '(', 'errorMsg', ')', ';', 'buf', '.', 'append', '(', 'errorMsg', ')', ';', '}', 'return', 'buf', '.', 'toString', '(', ')', ';', '}']
Example 251 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'testRetrieve', '(', ')', 'throws', 'DigitalObjectManager', '.', 'DigitalObjectNotFoundException', ',', 'URISyntaxException', ',', 'IOException', '{', 'DigitalObjectManager', 'man', '=', 'new', 'FedoraObjectManager', '(', '"', 'fedoraAdmin', '"', ',', '"', 'fedoraAdminPass', '"', ',', '"', 'http://localhost:7910/fedora', '"', ')', ';', 'DigitalObject', 'r', '=', 'man', '.', 'retrieve', '(', 'new', 'URI', '(', '"', 'demo:dc2mods.1', '"', ')', ')', ';', 'String', 'title', '=', 'r', '.', 'getTitle', '(', ')', ';', 'List', '<', 'Metadata', '>', 'met', '=', 'r', '.', 'getMetadata', '(', ')', ';', 'InputStream', 'content', '=', 'r', '.', 'getContent', '(', ')', '.', 'read', '(', ')', ';', 'StringWriter', 'theString', '=', 'new', 'StringWriter', '(', ')', ';', 'IOUtils', '.', 'copy', '(', 'content', ',', 'theString', ')', ';', 'assertNotNull', '(', 'theString', '.', 'toString', '(', ')', ',', '"', 'Content', 'should', 'not', 'be', 'null', '"', ')', ';', 'assertNotNull', '(', 'title', ',', '"', 'The', 'title', 'should', 'be', 'set', '"', ')', ';', 'assertNotNull', '(', 'met', '.', 'get', '(', '0', ')', '.', 'getContent', '(', ')', ',', '"', 'There', 'should', 'be', 'some', 'metadata', '"', ')', ';', '}']
Example 252 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'InputStream', 'gzip', '(', 'final', 'InputStream', 'inputStream', ')', 'throws', 'IOException', '{', 'Assert', '.', 'notNull', '(', 'inputStream', ',', '"', 'inputStream', '"', ')', ';', 'InputOutputStream', 'inputOutputStream', '=', 'new', 'InputOutputStream', '(', ')', ';', 'GZIPOutputStream', 'gzipOutputStream', '=', 'new', 'GZIPOutputStream', '(', 'inputOutputStream', ')', ';', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'gzipOutputStream', ')', ';', 'gzipOutputStream', '.', 'close', '(', ')', ';', 'return', 'inputOutputStream', '.', 'getInputStream', '(', ')', ';', '}']
Example 253 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'long', 'getLastModified', '(', 'final', 'Resource', 'arg0', ')', '{', 'try', '{', 'final', 'ServletContext', 'context', '=', 'CContext', '.', 'getInstance', '(', ')', '.', 'getContext', '(', ')', ';', 'final', 'URL', 'url', '=', 'context', '.', 'getResource', '(', 'arg0', '.', 'getName', '(', ')', ')', ';', 'final', 'URLConnection', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'final', 'long', 'lm', '=', 'conn', '.', 'getLastModified', '(', ')', ';', 'try', '{', 'conn', '.', 'getInputStream', '(', ')', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'final', 'Exception', 'ignore', ')', '{', ';', '}', 'return', 'lm', ';', '}', 'catch', '(', 'final', 'Exception', 'e', ')', '{', 'return', '0', ';', '}', '}']
Example 254 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'nioBuild', '(', ')', '{', 'try', '{', 'final', 'ByteBuffer', 'buffer', '=', 'ByteBuffer', '.', 'allocateDirect', '(', '1024', '*', '4', ')', ';', 'final', 'FileChannel', 'out', '=', 'new', 'FileOutputStream', '(', 'dest', ')', '.', 'getChannel', '(', ')', ';', 'for', '(', 'File', 'part', ':', 'parts', ')', '{', 'setState', '(', 'part', '.', 'getName', '(', ')', ',', 'BUILDING', ')', ';', 'FileChannel', 'in', '=', 'new', 'FileInputStream', '(', 'part', ')', '.', 'getChannel', '(', ')', ';', 'while', '(', 'in', '.', 'read', '(', 'buffer', ')', '>', '0', ')', '{', 'buffer', '.', 'flip', '(', ')', ';', 'written', '+=', 'out', '.', 'write', '(', 'buffer', ')', ';', 'buffer', '.', 'clear', '(', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', '}', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! out => version (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 2, ACC! version => result (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 3, ACC! result => version (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 4, ACC! version => work (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 5, ACC! work => off (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 6, ACC! off => post (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 7, ACC! post => again (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 8, ACC! again => user (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 9, ACC! user => Out (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 10, ACC! Out => outer (0 => 0, 0.99997 => 0.99997) a=1.000
Example 255 attack result: {'succ': False, 'tokens': '    private void nioBuild() {\n        try {\n            final ByteBuffer buffer = ByteBuffer.allocateDirect(1024 * 4);\n            final FileChannel outer = new FileOutputStream(dest).getChannel();\n            for (File part : parts) {\n                setState(part.getName(), BUILDING);\n                FileChannel in = new FileInputStream(part).getChannel();\n                while (in.read(buffer) > 0) {\n                    buffer.flip();\n                    written += outer.write(buffer);\n                    buffer.clear();\n                }\n                in.close();\n            }\n            outer.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 129, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': -1.1920929e-07, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'out': 'outer'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 255 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 16.27 min
  curr succ rate = 0.03333333333333333
Query times in this attack:  309
All Query times:  26037
raw_tokens: ['public', 'void', 'extractFrinika', '(', ')', 'throws', 'Exception', '{', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'frinikaFile', ')', ';', 'progressBar', '.', 'setIndeterminate', '(', 'true', ')', ';', 'ZipInputStream', 'zis', '=', 'new', 'ZipInputStream', '(', 'fis', ')', ';', 'ZipEntry', 'ze', '=', 'zis', '.', 'getNextEntry', '(', ')', ';', 'while', '(', 'ze', '!=', 'null', ')', '{', 'showMessage', '(', '"', 'Extracting:', '', '"', '+', 'ze', '.', 'getName', '(', ')', ')', ';', 'File', 'file', '=', 'new', 'File', '(', 'installDirName', '+', '"', '/', '"', '+', 'ze', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'ze', '.', 'isDirectory', '(', ')', ')', 'file', '.', 'mkdir', '(', ')', ';', 'else', '{', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'byte', '[', ']', 'b', '=', 'new', 'byte', '[', 'BUFSIZE', ']', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'zis', '.', 'read', '(', 'b', ')', ')', '!=', '-', '1', ')', 'fos', '.', 'write', '(', 'b', ',', '0', ',', 'c', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'ze', '=', 'zis', '.', 'getNextEntry', '(', ')', ';', '}', '}']
Example 256 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'fromFile', ',', 'File', 'toFile', ')', 'throws', 'IOException', '{', 'FileReader', 'from', '=', 'new', 'FileReader', '(', 'fromFile', ')', ';', 'FileWriter', 'to', '=', 'new', 'FileWriter', '(', 'toFile', ')', ';', 'char', '[', ']', 'buffer', '=', 'new', 'char', '[', '4096', ']', ';', 'int', 'bytes_read', ';', 'while', '(', '(', 'bytes_read', '=', 'from', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'to', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytes_read', ')', ';', '}', 'to', '.', 'flush', '(', ')', ';', 'to', '.', 'close', '(', ')', ';', 'from', '.', 'close', '(', ')', ';', '}']
  >>  iter 1, ACC! buffer => queue (0 => 0, 0.99470 => 0.99470) a=1.004
  >>  iter 2, ACC! queue => length (0 => 0, 0.99470 => 0.99469) a=1.002
  >>  iter 3, ACC! length => offset (0 => 0, 0.99469 => 0.99470) a=1.003
  >>  iter 4, ACC! offset => base (0 => 0, 0.99470 => 0.99470) a=1.003
  >>  iter 5, ACC! base => entry (0 => 0, 0.99470 => 0.99470) a=1.005
  >>  iter 6, ACC! entry => loader (0 => 0, 0.99470 => 0.99469) a=1.003
  >>  iter 7, ACC! loader => block (0 => 0, 0.99469 => 0.99469) a=1.003
  >>  iter 8, ACC! block => buff (0 => 0, 0.99469 => 0.99470) a=1.002
  >>  iter 9, ACC! buff => expression (0 => 0, 0.99470 => 0.99470) a=1.005
  >>  iter 10, ACC! expression => view (0 => 0, 0.99470 => 0.99469) a=1.004
Example 257 attack result: {'succ': False, 'tokens': '    public static void copyFile(File fromFile, File toFile) throws IOException {\n        FileReader from = new FileReader(fromFile);\n        FileWriter to = new FileWriter(toFile);\n        char[] view = new char[4096];\n        int bytes_read;\n        while ((bytes_read = from.read(view)) != -1) {\n            to.write(view, 0, bytes_read);\n        }\n        to.flush();\n        to.close();\n        from.close();\n    }\n', 'raw_tokens': None, 'prog_length': 94, 'new_pred': 0, 'is_success': -1, 'old_uid': 'buffer', 'score_info': 9.059906e-06, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'buffer': 'view'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 257 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 16.43 min
  curr succ rate = 0.03296703296703297
Query times in this attack:  305
All Query times:  26342
raw_tokens: ['private', 'static', 'Pattern', 'getBotPattern', '(', ')', '{', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'try', '{', 'Enumeration', '<', 'URL', '>', 'urls', '=', 'AbstractPustefixRequestHandler', '.', 'class', '.', 'getClassLoader', '(', ')', '.', 'getResources', '(', 'CONFIG', ')', ';', 'while', '(', 'urls', '.', 'hasMoreElements', '(', ')', ')', '{', 'URL', 'url', '=', 'urls', '.', 'nextElement', '(', ')', ';', 'InputStream', 'in', '=', 'url', '.', 'openStream', '(', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'in', ',', '"', 'utf8', '"', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'line', '=', 'line', '.', 'trim', '(', ')', ';', 'if', '(', '!', 'line', '.', 'startsWith', '(', '"', '#', '"', ')', '&&', '!', 'line', '.', 'equals', '(', '"', '"', ')', ')', '{', 'if', '(', 'sb', '.', 'length', '(', ')', '>', '0', ')', 'sb', '.', 'append', '(', '"', '|', '"', ')', ';', 'sb', '.', 'append', '(', '"', '(', '"', ')', '.', 'append', '(', 'line', ')', '.', 'append', '(', '"', ')', '"', ')', ';', '}', '}', 'in', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', '"', 'Error', 'reading', 'bot', 'user-agent', 'configuration', '"', ',', 'e', ')', ';', '}', 'return', 'Pattern', '.', 'compile', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}']
  >>  iter 1, REJ. line => Line (0 => 0, 0.99974 => 0.99974) a=0.990
  >>  iter 2, ACC! reader => ner (0 => 0, 0.99974 => 0.99975) a=1.005
  >>  iter 3, ACC! url => lr (0 => 0, 0.99975 => 0.99973) a=1.075
  >>  iter 4, ACC! lr => layer (0 => 0, 0.99973 => 0.99975) a=1.026
  >>  iter 5, ACC! ner => driver (0 => 0, 0.99975 => 0.99975) a=1.038
  >>  iter 6, REJ. line => element (0 => 0, 0.99975 => 0.99978) a=0.994
  >>  iter 7, ACC! driver => e (0 => 0, 0.99975 => 0.99975) a=1.037
  >>  iter 8, ACC! layer => sl (0 => 0, 0.99975 => 0.99973) a=1.068
  >>  iter 9, ACC! e => r (0 => 0, 0.99973 => 0.99973) a=1.010
  >>  iter 10, ACC! line => el (0 => 0, 0.99973 => 0.99976) a=1.000
Example 258 attack result: {'succ': False, 'tokens': '    private static Pattern getBotPattern() {\n        StringBuilder sb = new StringBuilder();\n        try {\n            Enumeration<URL> urls = AbstractPustefixRequestHandler.class.getClassLoader().getResources(CONFIG);\n            while (urls.hasMoreElements()) {\n                URL sl = urls.nextElement();\n                InputStream in = sl.openStream();\n                BufferedReader r = new BufferedReader(new InputStreamReader(in, "utf8"));\n                String el;\n                while ((el = r.readLine()) != null) {\n                    el = el.trim();\n                    if (!el.startsWith("#") && !el.equals("")) {\n                        if (sb.length() > 0) sb.append("|");\n                        sb.append("(").append(el).append(")");\n                    }\n                }\n                in.close();\n            }\n        } catch (IOException r) {\n            throw new RuntimeException("Error reading bot user-agent configuration", r);\n        }\n        return Pattern.compile(sb.toString());\n    }\n', 'raw_tokens': None, 'prog_length': 209, 'new_pred': 0, 'is_success': -1, 'old_uid': 'line', 'score_info': -2.2888184e-05, 'nb_changed_var': 3, 'nb_changed_pos': 11, 'replace_info': {'reader': 'r', 'url': 'sl', 'line': 'el'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 258 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 16.58 min
  curr succ rate = 0.03260869565217391
Query times in this attack:  302
All Query times:  26644
raw_tokens: ['@', 'Override', 'public', 'InputStream', 'getInputStream', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'dfos', '==', 'null', ')', '{', 'int', 'deferredOutputStreamThreshold', '=', 'Config', '.', 'getInstance', '(', ')', '.', 'getDeferredOutputStreamThreshold', '(', ')', ';', 'dfos', '=', 'new', 'DeferredFileOutputStream', '(', 'deferredOutputStreamThreshold', ',', 'Definitions', '.', 'PROJECT_NAME', ',', '"', '.', '"', '+', 'Definitions', '.', 'TMP_EXTENSION', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'is', ',', 'dfos', ')', ';', '}', 'finally', '{', 'dfos', '.', 'close', '(', ')', ';', '}', '}', 'return', 'dfos', '.', 'getDeferredInputStream', '(', ')', ';', '}']
Example 259 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'hash', '(', 'String', 'clearPassword', ')', '{', 'if', '(', 'osalt', '==', '0', ')', 'return', 'null', ';', 'MessageDigest', 'md', '=', 'null', ';', 'try', '{', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA1', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'AssertionError', '(', '"', "Can't", 'find', 'the', 'SHA1', 'algorithm', 'in', 'the', 'java.security', 'package', '"', ')', ';', '}', 'String', 'saltString', '=', 'String', '.', 'valueOf', '(', 'osalt', ')', ';', 'md', '.', 'update', '(', 'saltString', '.', 'getBytes', '(', ')', ')', ';', 'md', '.', 'update', '(', 'clearPassword', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'digestBytes', '=', 'md', '.', 'digest', '(', ')', ';', 'StringBuffer', 'digestSB', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'digestBytes', '.', 'length', ';', 'i', '++', ')', '{', 'int', 'lowNibble', '=', 'digestBytes', '[', 'i', ']', '&', '0x0f', ';', 'int', 'highNibble', '=', '(', 'digestBytes', '[', 'i', ']', '>>', '4', ')', '&', '0x0f', ';', 'digestSB', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'highNibble', ')', ')', ';', 'digestSB', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', 'lowNibble', ')', ')', ';', '}', 'String', 'digestStr', '=', 'digestSB', '.', 'toString', '(', ')', ';', 'return', 'digestStr', ';', '}']
Example 260 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFileToFile', '(', 'File', 'srcFile', ',', 'File', 'dstFile', ',', 'boolean', 'deleteOriginals', ',', 'boolean', 'forceDelete', ')', 'throws', 'FileNotFoundException', ',', 'IOException', '{', 'if', '(', 'srcFile', '.', 'exists', '(', ')', '&&', 'srcFile', '.', 'isFile', '(', ')', ')', '{', 'boolean', 'copied', '=', 'false', ';', 'if', '(', 'deleteOriginals', '&&', '(', '!', 'forceDelete', '||', 'srcFile', '.', 'canWrite', '(', ')', ')', ')', '{', 'copied', '=', 'srcFile', '.', 'renameTo', '(', 'dstFile', ')', ';', '}', 'if', '(', '!', 'copied', ')', '{', 'Throwable', 'thrownException', '=', 'null', ';', 'File', 'parent', '=', 'dstFile', '.', 'getParentFile', '(', ')', ';', 'if', '(', '!', 'parent', '.', 'exists', '(', ')', '&&', '!', 'parent', '.', 'mkdirs', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'Failed', 'to', 'create', 'the', 'directory', '', '"', '+', 'parent', '+', '"', '.', '"', ')', ';', '}', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'srcFile', ')', ';', 'try', '{', 'FileChannel', 'srcChannel', '=', 'in', '.', 'getChannel', '(', ')', ';', 'try', '{', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'dstFile', ')', ';', 'try', '{', 'FileChannel', 'dstChannel', '=', 'out', '.', 'getChannel', '(', ')', ';', 'try', '{', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'thrownException', '=', 't', ';', '}', 'finally', '{', 'dstChannel', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'if', '(', 'thrownException', '==', 'null', ')', '{', 'thrownException', '=', 't', ';', '}', '}', 'finally', '{', 'out', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'if', '(', 'thrownException', '==', 'null', ')', '{', 'thrownException', '=', 't', ';', '}', '}', 'finally', '{', 'srcChannel', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'if', '(', 'thrownException', '==', 'null', ')', '{', 'thrownException', '=', 't', ';', '}', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'if', '(', 'thrownException', '==', 'null', ')', '{', 'thrownException', '=', 'e', ';', '}', '}', '}', 'if', '(', 'deleteOriginals', '&&', '(', 'srcFile', '.', 'canWrite', '(', ')', '||', 'forceDelete', ')', ')', '{', 'if', '(', '!', 'srcFile', '.', 'delete', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'Failed', 'to', 'delete', '', '"', '+', 'srcFile', '+', '"', '.', '"', ')', ';', '}', '}', 'if', '(', 'thrownException', '!=', 'null', ')', '{', 'if', '(', 'thrownException', 'instanceof', 'IOException', ')', '{', 'throw', '(', 'IOException', ')', 'thrownException', ';', '}', 'else', 'if', '(', 'thrownException', 'instanceof', 'Error', ')', '{', 'throw', '(', 'Error', ')', 'thrownException', ';', '}', 'else', '{', 'throw', '(', 'RuntimeException', ')', 'thrownException', ';', '}', '}', '}', '}', '}']
Example 261 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'notifyIterationEnds', '(', 'final', 'IterationEndsEvent', 'event', ')', '{', 'log', '.', 'info', '(', '"', 'moving', 'files...', '"', ')', ';', 'File', 'source', '=', 'new', 'File', '(', '"', 'deqsim.log', '"', ')', ';', 'if', '(', 'source', '.', 'exists', '(', ')', ')', '{', 'File', 'destination', '=', 'new', 'File', '(', 'Controler', '.', 'getIterationFilename', '(', '"', 'deqsim.log', '"', ')', ')', ';', 'if', '(', '!', 'IOUtils', '.', 'renameFile', '(', 'source', ',', 'destination', ')', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'move', 'deqsim.log', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', '}', 'int', 'parallelCnt', '=', '0', ';', 'source', '=', 'new', 'File', '(', '"', 'deqsim.log.', '"', '+', 'parallelCnt', ')', ';', 'while', '(', 'source', '.', 'exists', '(', ')', ')', '{', 'File', 'destination', '=', 'new', 'File', '(', 'Controler', '.', 'getIterationFilename', '(', '"', 'deqsim.log.', '"', '+', 'parallelCnt', ')', ')', ';', 'if', '(', '!', 'IOUtils', '.', 'renameFile', '(', 'source', ',', 'destination', ')', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'move', 'deqsim.log.', '"', '+', 'parallelCnt', '+', '"', '', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', 'parallelCnt', '++', ';', 'source', '=', 'new', 'File', '(', '"', 'deqsim.log.', '"', '+', 'parallelCnt', ')', ';', '}', 'source', '=', 'new', 'File', '(', '"', 'loads_out.txt', '"', ')', ';', 'if', '(', 'source', '.', 'exists', '(', ')', ')', '{', 'File', 'destination', '=', 'new', 'File', '(', 'Controler', '.', 'getIterationFilename', '(', '"', 'loads_out.txt', '"', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copyFile', '(', 'source', ',', 'destination', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'copy', 'loads_out.txt', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'copy', 'loads_out.txt', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', 'destination', '=', 'new', 'File', '(', '"', 'loads_in.txt', '"', ')', ';', 'if', '(', '!', 'IOUtils', '.', 'renameFile', '(', 'source', ',', 'destination', ')', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'move', 'loads_out.txt', 'to', 'loads_in.txt.', '"', ')', ';', '}', '}', 'source', '=', 'new', 'File', '(', '"', 'linkprocs.txt', '"', ')', ';', 'if', '(', 'source', '.', 'exists', '(', ')', ')', '{', 'File', 'destination', '=', 'new', 'File', '(', 'Controler', '.', 'getIterationFilename', '(', '"', 'linkprocs.txt', '"', ')', ')', ';', 'if', '(', '!', 'IOUtils', '.', 'renameFile', '(', 'source', ',', 'destination', ')', ')', '{', 'log', '.', 'info', '(', '"', 'WARNING:', 'Could', 'not', 'move', 'linkprocs.txt', 'to', 'its', 'iteration', 'directory.', '"', ')', ';', '}', '}', '}']
Example 262 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'jarDiagnostics', '(', 'Throwable', 'throwable', ',', 'File', '[', ']', 'files', ')', 'throws', 'IOException', '{', 'File', 'home', '=', 'new', 'File', '(', 'System', '.', 'getProperty', '(', '"', 'user.home', '"', ')', ')', ';', 'File', 'jar_file', '=', 'File', '.', 'createTempFile', '(', '"', 'nuages-diagnostic.', '"', ',', '"', '.jar', '"', ',', 'home', ')', ';', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'jar_file', ')', ';', 'JarOutputStream', 'jos', '=', 'new', 'JarOutputStream', '(', 'fos', ')', ';', 'ZipEntry', 'ze', '=', 'new', 'ZipEntry', '(', '"', 'Exception', '"', ')', ';', 'jos', '.', 'putNextEntry', '(', 'ze', ')', ';', 'PrintStream', 'ps', '=', 'new', 'PrintStream', '(', 'jos', ')', ';', 'throwable', '.', 'printStackTrace', '(', 'ps', ')', ';', 'for', '(', 'File', 'file', ':', 'files', ')', 'if', '(', '(', 'file', '!=', 'null', ')', '&&', 'file', '.', 'exists', '(', ')', ')', '{', 'ze', '=', 'new', 'ZipEntry', '(', 'file', '.', 'getName', '(', ')', ')', ';', 'jos', '.', 'putNextEntry', '(', 'ze', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'fis', '.', 'read', '(', 'buffer', ')', ')', '>', '0', ')', 'jos', '.', 'write', '(', 'buffer', ',', '0', ',', 'len', ')', ';', 'fis', '.', 'close', '(', ')', ';', '}', 'jos', '.', 'close', '(', ')', ';', 'return', 'jar_file', '.', 'getPath', '(', ')', ';', '}']
  >>  iter 1, ACC! file => filename (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! filename => force (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! force => current (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! files => parents (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! parents => results (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 6, ACC! current => content (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! results => fs (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! content => File (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! fs => items (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! items => projects (1 => 1, 0.99988 => 0.99988) a=1.000
Example 263 attack result: {'succ': False, 'tokens': '    private String jarDiagnostics(Throwable throwable, File[] projects) throws IOException {\n        File home = new File(System.getProperty("user.home"));\n        File jar_file = File.createTempFile("nuages-diagnostic.", ".jar", home);\n        FileOutputStream fos = new FileOutputStream(jar_file);\n        JarOutputStream jos = new JarOutputStream(fos);\n        ZipEntry ze = new ZipEntry("Exception");\n        jos.putNextEntry(ze);\n        PrintStream ps = new PrintStream(jos);\n        throwable.printStackTrace(ps);\n        for (File File : projects) if ((File != null) && File.exists()) {\n            ze = new ZipEntry(File.getName());\n            jos.putNextEntry(ze);\n            byte[] buffer = new byte[65536];\n            FileInputStream fis = new FileInputStream(File);\n            int len;\n            while ((len = fis.read(buffer)) > 0) jos.write(buffer, 0, len);\n            fis.close();\n        }\n        jos.close();\n        return jar_file.getPath();\n    }\n', 'raw_tokens': None, 'prog_length': 212, 'new_pred': 1, 'is_success': -1, 'old_uid': 'files', 'score_info': -2.1340384e-08, 'nb_changed_var': 2, 'nb_changed_pos': 7, 'replace_info': {'file': 'File', 'files': 'projects'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 263 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 16.78 min
  curr succ rate = 0.03225806451612903
Query times in this attack:  295
All Query times:  26939
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'final', 'SimpleMessageListener', 'listener', '=', 'new', 'SimpleMessageListener', '(', ')', '{', 'public', 'final', 'boolean', 'accept', '(', 'final', 'String', 'from', ',', 'final', 'String', 'recipient', ')', '{', 'return', 'true', ';', '}', 'public', 'final', 'void', 'deliver', '(', 'final', 'String', 'from', ',', 'final', 'String', 'recipient', ',', 'final', 'InputStream', 'data', ')', 'throws', 'TooMuchDataException', ',', 'IOException', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'FROM:', '', '"', '+', 'from', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'TO:', '', '"', '+', 'recipient', ')', ';', 'final', 'File', 'tmpDir', '=', 'new', 'File', '(', 'System', '.', 'getProperty', '(', '"', 'java.io.tmpdir', '"', ')', ')', ';', 'final', 'File', 'file', '=', 'new', 'File', '(', 'tmpDir', ',', 'recipient', ')', ';', 'final', 'FileWriter', 'fw', '=', 'new', 'FileWriter', '(', 'file', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'data', ',', 'fw', ')', ';', '}', 'finally', '{', 'fw', '.', 'close', '(', ')', ';', '}', '}', '}', ';', 'final', 'SMTPServer', 'smtpServer', '=', 'new', 'SMTPServer', '(', 'new', 'SimpleMessageListenerAdapter', '(', 'listener', ')', ')', ';', 'smtpServer', '.', 'start', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Started', 'SMTP', 'Server', '"', ')', ';', '}']
  >>  iter 1, ACC! out => conn (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! conn => group (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! group => cli (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! cli => Out (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! Out => store (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! store => group (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! group => parent (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! parent => cache (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! cache => OUT (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! OUT => gen (1 => 1, 0.99988 => 0.99988) a=1.001
Example 264 attack result: {'succ': False, 'tokens': '            public void run() {\n                final SimpleMessageListener listener = new SimpleMessageListener() {\n\n                    public final boolean accept(final String from, final String recipient) {\n                        return true;\n                    }\n\n                    public final void deliver(final String from, final String recipient, final InputStream data) throws TooMuchDataException, IOException {\n                        System.gen.println("FROM: " + from);\n                        System.gen.println("TO: " + recipient);\n                        final File tmpDir = new File(System.getProperty("java.io.tmpdir"));\n                        final File file = new File(tmpDir, recipient);\n                        final FileWriter fw = new FileWriter(file);\n                        try {\n                            IOUtils.copy(data, fw);\n                        } finally {\n                            fw.close();\n                        }\n                    }\n                };\n                final SMTPServer smtpServer = new SMTPServer(new SimpleMessageListenerAdapter(listener));\n                smtpServer.start();\n                System.gen.println("Started SMTP Server");\n            }\n', 'raw_tokens': None, 'prog_length': 176, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 1.060107e-08, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'out': 'gen'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 264 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 16.93 min
  curr succ rate = 0.031914893617021274
Query times in this attack:  296
All Query times:  27235
raw_tokens: ['public', 'static', 'void', 'bubbleSort', '(', 'String', '[', ']', 'a', ')', '{', 'Collator', 'myCollator', '=', 'Collator', '.', 'getInstance', '(', ')', ';', 'boolean', 'switched', '=', 'true', ';', 'for', '(', 'int', 'pass', '=', '0', ';', 'pass', '<', 'a', '.', 'length', '-', '1', '&&', 'switched', ';', 'pass', '++', ')', '{', 'switched', '=', 'false', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'a', '.', 'length', '-', 'pass', '-', '1', ';', 'i', '++', ')', '{', 'if', '(', 'myCollator', '.', 'compare', '(', 'a', '[', 'i', ']', ',', 'a', '[', 'i', '+', '1', ']', ')', '>', '0', ')', '{', 'switched', '=', 'true', ';', 'String', 'temp', '=', 'a', '[', 'i', ']', ';', 'a', '[', 'i', ']', '=', 'a', '[', 'i', '+', '1', ']', ';', 'a', '[', 'i', '+', '1', ']', '=', 'temp', ';', '}', '}', '}', '}']
Example 265 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['static', 'HashSet', '<', 'ScriptEngineFactory', '>', 'lookup', '(', 'ClassLoader', 'loader', ',', 'String', 'name', ')', '{', 'HashSet', '<', 'ScriptEngineFactory', '>', 'factories', '=', 'new', 'HashSet', '<', 'ScriptEngineFactory', '>', '(', ')', ';', 'try', '{', 'Enumeration', '<', 'URL', '>', 'urls', '=', 'loader', '.', 'getResources', '(', 'name', ')', ';', 'while', '(', 'urls', '.', 'hasMoreElements', '(', ')', ')', '{', 'URL', 'url', '=', 'urls', '.', 'nextElement', '(', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ',', '"', 'UTF-8', '"', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', '(', 'line', '=', 'trim', '(', 'line', ')', ')', '!=', 'null', ')', '{', 'try', '{', 'Class', '<', 'ScriptEngineFactory', '>', 'clazz', '=', '(', 'Class', '<', 'ScriptEngineFactory', '>', ')', 'Class', '.', 'forName', '(', 'line', ',', 'true', ',', 'loader', ')', ';', 'ScriptEngineFactory', 'factory', '=', 'clazz', '.', 'newInstance', '(', ')', ';', 'factories', '.', 'add', '(', 'factory', ')', ';', '}', 'catch', '(', 'java', '.', 'lang', '.', 'UnsupportedClassVersionError', 'error', ')', '{', 'if', '(', 'DEBUG', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'line', '+', '"', ':', 'version', 'mismatch', '-', 'ignore', '"', ')', ';', '}', '}', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'throw', 'new', 'ScriptException', '(', 'ex', ')', ';', '}', 'finally', '{', 'return', 'factories', ';', '}', '}']
  >>  iter 1, ACC! ex => su (0 => 0, 0.99990 => 0.99990) a=1.001
  >>  iter 2, ACC! su => con (0 => 0, 0.99990 => 0.99990) a=1.001
  >>  iter 3, ACC! con => expl (0 => 0, 0.99990 => 0.99990) a=1.001
  >>  iter 4, ACC! expl => tx (0 => 0, 0.99990 => 0.99990) a=1.001
  >>  iter 5, ACC! tx => su (0 => 0, 0.99990 => 0.99990) a=1.001
  >>  iter 6, ACC! su => exec (0 => 0, 0.99990 => 0.99990) a=1.000
  >>  iter 7, ACC! exec => six (0 => 0, 0.99990 => 0.99990) a=1.000
  >>  iter 8, ACC! six => class (0 => 0, 0.99990 => 0.99990) a=1.001
  >>  iter 9, ACC! class => lex (0 => 0, 0.99990 => 0.99990) a=1.000
  >>  iter 10, ACC! lex => aux (0 => 0, 0.99990 => 0.99990) a=1.001
Example 266 attack result: {'succ': False, 'tokens': '    static HashSet<ScriptEngineFactory> lookup(ClassLoader loader, String name) {\n        HashSet<ScriptEngineFactory> factories = new HashSet<ScriptEngineFactory>();\n        try {\n            Enumeration<URL> urls = loader.getResources(name);\n            while (urls.hasMoreElements()) {\n                URL url = urls.nextElement();\n                BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "UTF-8"));\n                String line;\n                while ((line = reader.readLine()) != null) {\n                    if ((line = trim(line)) != null) {\n                        try {\n                            Class<ScriptEngineFactory> clazz = (Class<ScriptEngineFactory>) Class.forName(line, true, loader);\n                            ScriptEngineFactory factory = clazz.newInstance();\n                            factories.add(factory);\n                        } catch (java.lang.UnsupportedClassVersionError error) {\n                            if (DEBUG) {\n                                System.err.println(line + ": version mismatch - ignore");\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (IOException aux) {\n            throw new ScriptException(aux);\n        } finally {\n            return factories;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 211, 'new_pred': 0, 'is_success': -1, 'old_uid': 'ex', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'ex': 'aux'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 266 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 17.09 min
  curr succ rate = 0.031578947368421054
Query times in this attack:  294
All Query times:  27529
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'final', 'SimpleMessageListener', 'listener', '=', 'new', 'SimpleMessageListener', '(', ')', '{', 'public', 'final', 'boolean', 'accept', '(', 'final', 'String', 'from', ',', 'final', 'String', 'recipient', ')', '{', 'return', 'true', ';', '}', 'public', 'final', 'void', 'deliver', '(', 'final', 'String', 'from', ',', 'final', 'String', 'recipient', ',', 'final', 'InputStream', 'data', ')', 'throws', 'TooMuchDataException', ',', 'IOException', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'FROM:', '', '"', '+', 'from', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'TO:', '', '"', '+', 'recipient', ')', ';', 'final', 'File', 'tmpDir', '=', 'new', 'File', '(', 'System', '.', 'getProperty', '(', '"', 'java.io.tmpdir', '"', ')', ')', ';', 'final', 'File', 'file', '=', 'new', 'File', '(', 'tmpDir', ',', 'recipient', ')', ';', 'final', 'FileWriter', 'fw', '=', 'new', 'FileWriter', '(', 'file', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'data', ',', 'fw', ')', ';', '}', 'finally', '{', 'fw', '.', 'close', '(', ')', ';', '}', '}', '}', ';', 'final', 'SMTPServer', 'smtpServer', '=', 'new', 'SMTPServer', '(', 'new', 'SimpleMessageListenerAdapter', '(', 'listener', ')', ')', ';', 'smtpServer', '.', 'start', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Started', 'SMTP', 'Server', '"', ')', ';', '}']
  >>  iter 1, ACC! file => http (0 => 0, 0.99954 => 0.99954) a=1.001
  >>  iter 2, ACC! http => resource (0 => 0, 0.99954 => 0.99954) a=1.002
  >>  iter 3, ACC! resource => socket (0 => 0, 0.99954 => 0.99954) a=1.001
  >>  iter 4, ACC! socket => ile (0 => 0, 0.99954 => 0.99954) a=1.000
  >>  iter 5, ACC! ile => url (0 => 0, 0.99954 => 0.99954) a=1.000
  >>  iter 6, ACC! url => server (0 => 0, 0.99954 => 0.99954) a=1.006
  >>  iter 7, ACC! server => use (0 => 0, 0.99954 => 0.99954) a=1.000
  >>  iter 8, ACC! use => content (0 => 0, 0.99954 => 0.99954) a=1.000
  >>  iter 9, ACC! content => cache (0 => 0, 0.99954 => 0.99954) a=1.000
  >>  iter 10, ACC! cache => base (0 => 0, 0.99954 => 0.99954) a=1.001
Example 267 attack result: {'succ': False, 'tokens': '            public void run() {\n                final SimpleMessageListener listener = new SimpleMessageListener() {\n\n                    public final boolean accept(final String from, final String recipient) {\n                        return true;\n                    }\n\n                    public final void deliver(final String from, final String recipient, final InputStream data) throws TooMuchDataException, IOException {\n                        System.out.println("FROM: " + from);\n                        System.out.println("TO: " + recipient);\n                        final File tmpDir = new File(System.getProperty("java.io.tmpdir"));\n                        final File base = new File(tmpDir, recipient);\n                        final FileWriter fw = new FileWriter(base);\n                        try {\n                            IOUtils.copy(data, fw);\n                        } finally {\n                            fw.close();\n                        }\n                    }\n                };\n                final SMTPServer smtpServer = new SMTPServer(new SimpleMessageListenerAdapter(listener));\n                smtpServer.start();\n                System.out.println("Started SMTP Server");\n            }\n', 'raw_tokens': None, 'prog_length': 176, 'new_pred': 0, 'is_success': -1, 'old_uid': 'file', 'score_info': 3.5762787e-07, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'file': 'base'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 267 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 17.24 min
  curr succ rate = 0.03125
Query times in this attack:  285
All Query times:  27814
raw_tokens: ['@', 'Test', 'public', 'void', 'behaveTest', '(', ')', '{', 'InputStream', 'is', '=', 'this', '.', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', '"', 'safetyCaseTest.mdf', '"', ')', ';', 'ByteArrayOutputStream', 'out', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'is', ',', 'out', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', '"', 'Unable', 'to', 'read', 'mdf', '"', ',', 'e', ')', ';', '}', 'TrafficSimulationEngine', 'engine', '=', 'new', 'TrafficSimulationEngine', '(', ')', ';', 'TrafficModelDefinition', 'def', '=', 'MDFReader', '.', 'read', '(', 'out', '.', 'toByteArray', '(', ')', ')', ';', 'engine', '.', 'init', '(', 'def', ')', ';', 'Map', '<', 'Integer', ',', 'Set', '<', 'Integer', '>', '>', 'linkSegments', '=', 'new', 'HashMap', '<', 'Integer', ',', 'Set', '<', 'Integer', '>', '>', '(', ')', ';', 'Set', '<', 'Integer', '>', 'segments', '=', 'new', 'HashSet', '<', 'Integer', '>', '(', ')', ';', 'segments', '.', 'add', '(', '0', ')', ';', 'linkSegments', '.', 'put', '(', '0', ',', 'segments', ')', ';', 'FrameProperties', 'frameProperties', '=', 'new', 'FrameProperties', '(', 'linkSegments', ',', 'new', 'HashSet', '<', 'Integer', '>', '(', ')', ')', ';', 'engine', '.', 'setFrameProperties', '(', 'frameProperties', ')', ';', 'RegularVehicle', 'vehicle', '=', '(', 'RegularVehicle', ')', 'engine', '.', 'getDynamicObjects', '(', ')', '.', 'iterator', '(', ')', '.', 'next', '(', ')', ';', 'CompositeDriver', 'driver', '=', '(', 'CompositeDriver', ')', 'vehicle', '.', 'getDriver', '(', ')', ';', 'driver', '.', 'drive', '(', '0.1f', ')', ';', 'SafetyCase', 'safety', '=', 'new', 'SafetyCase', '(', 'driver', ')', ';', 'RectangleCCRange', 'ccRange', '=', '(', 'RectangleCCRange', ')', 'safety', '.', 'behave', '(', '0.1f', ')', ';', 'HandRange', 'turnRange', '=', 'ccRange', '.', 'getTurnRange', '(', ')', ';', 'HandRange', 'probeRange', '=', 'new', 'HandRange', '(', ')', ';', 'probeRange', '.', 'remove', '(', 'Hand', '.', 'Left', ')', ';', 'assertTrue', '(', 'turnRange', '.', 'equals', '(', 'probeRange', ')', ')', ';', 'assertTrue', '(', 'ccRange', '.', 'getPriority', '(', ')', '==', 'Priority', '.', 'SafetyCase', ')', ';', '}']
Example 268 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'testDefaultHeadersRedirect', '(', ')', 'throws', 'Exception', '{', 'String', 'host', '=', '"', 'localhost', '"', ';', 'int', 'port', '=', 'this', '.', 'localServer', '.', 'getServicePort', '(', ')', ';', 'this', '.', 'localServer', '.', 'register', '(', '"', '*', '"', ',', 'new', 'BasicRedirectService', '(', 'host', ',', 'port', ')', ')', ';', 'DefaultHttpClient', 'client', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'HttpContext', 'context', '=', 'new', 'BasicHttpContext', '(', ')', ';', 'List', '<', 'Header', '>', 'defaultHeaders', '=', 'new', 'ArrayList', '<', 'Header', '>', '(', '1', ')', ';', 'defaultHeaders', '.', 'add', '(', 'new', 'BasicHeader', '(', 'HTTP', '.', 'USER_AGENT', ',', '"', 'my-test-client', '"', ')', ')', ';', 'client', '.', 'getParams', '(', ')', '.', 'setParameter', '(', 'ClientPNames', '.', 'DEFAULT_HEADERS', ',', 'defaultHeaders', ')', ';', 'HttpGet', 'httpget', '=', 'new', 'HttpGet', '(', '"', '/oldlocation/', '"', ')', ';', 'HttpResponse', 'response', '=', 'client', '.', 'execute', '(', 'getServerHttp', '(', ')', ',', 'httpget', ',', 'context', ')', ';', 'HttpEntity', 'e', '=', 'response', '.', 'getEntity', '(', ')', ';', 'if', '(', 'e', '!=', 'null', ')', '{', 'e', '.', 'consumeContent', '(', ')', ';', '}', 'HttpRequest', 'reqWrapper', '=', '(', 'HttpRequest', ')', 'context', '.', 'getAttribute', '(', 'ExecutionContext', '.', 'HTTP_REQUEST', ')', ';', 'assertEquals', '(', 'HttpStatus', '.', 'SC_OK', ',', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ')', ';', 'assertEquals', '(', '"', '/newlocation/', '"', ',', 'reqWrapper', '.', 'getRequestLine', '(', ')', '.', 'getUri', '(', ')', ')', ';', 'Header', 'header', '=', 'reqWrapper', '.', 'getFirstHeader', '(', 'HTTP', '.', 'USER_AGENT', ')', ';', 'assertEquals', '(', '"', 'my-test-client', '"', ',', 'header', '.', 'getValue', '(', ')', ')', ';', '}']
Example 269 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'byte', '[', ']', 'getBytes', '(', 'URL', 'url', ')', 'throws', 'IOException', '{', 'URLConnection', 'connection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'InputStream', 'in', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'int', 'contentLength', '=', 'connection', '.', 'getContentLength', '(', ')', ';', 'ByteArrayOutputStream', 'tmpOut', ';', 'if', '(', 'contentLength', '!=', '-', '1', ')', '{', 'tmpOut', '=', 'new', 'ByteArrayOutputStream', '(', 'contentLength', ')', ';', '}', 'else', '{', 'tmpOut', '=', 'new', 'ByteArrayOutputStream', '(', '16384', ')', ';', '}', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '512', ']', ';', 'while', '(', 'true', ')', '{', 'int', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ';', 'if', '(', 'len', '==', '-', '1', ')', '{', 'break', ';', '}', 'tmpOut', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'tmpOut', '.', 'close', '(', ')', ';', 'byte', '[', ']', 'array', '=', 'tmpOut', '.', 'toByteArray', '(', ')', ';', 'return', 'array', ';', '}']
Example 270 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'import_pieces', '(', 'String', 'filename', ')', '{', 'int', 'pieceId', ';', 'int', 'i', ';', 'int', 'n', ';', 'int', '[', ']', 'color', ';', 'boolean', 'byurl', '=', 'true', ';', 'e2piece', 'temppiece', ';', 'color', '=', 'new', 'int', '[', '4', ']', ';', 'BufferedReader', 'entree', ';', 'try', '{', 'if', '(', 'byurl', '==', 'true', ')', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'baseURL', ',', 'filename', ')', ';', 'InputStream', 'in', '=', 'url', '.', 'openStream', '(', ')', ';', 'entree', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'in', ')', ')', ';', '}', 'else', '{', 'entree', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'filename', ')', ')', ';', '}', 'pieceId', '=', '0', ';', 'while', '(', 'true', ')', '{', 'String', 'lineread', '=', 'entree', '.', 'readLine', '(', ')', ';', 'if', '(', 'lineread', '==', 'null', ')', '{', 'break', ';', '}', 'StringTokenizer', 'tok', '=', 'new', 'StringTokenizer', '(', 'lineread', ',', '"', '', '', '"', ')', ';', 'n', '=', 'tok', '.', 'countTokens', '(', ')', ';', 'if', '(', 'n', '==', '2', ')', '{', '}', 'else', '{', 'for', '(', 'i', '=', '0', ';', 'i', '<', '4', ';', 'i', '++', ')', '{', 'color', '[', 'i', ']', '=', 'Integer', '.', 'parseInt', '(', 'tok', '.', 'nextToken', '(', ')', ')', ';', '}', 'pieceId', '++', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Read', 'Piece', ':', '', '"', '+', 'pieceId', '+', '"', ':', '"', '+', 'color', '[', '0', ']', '+', '"', '', '', '"', '+', 'color', '[', '1', ']', '+', '"', '', '', '"', '+', 'color', '[', '2', ']', '+', '"', '', '', '"', '+', 'color', '[', '3', ']', ')', ';', 'temppiece', '=', 'new', 'e2piece', '(', 'pieceId', ',', 'color', '[', '0', ']', '+', '1', ',', 'color', '[', '1', ']', '+', '1', ',', 'color', '[', '2', ']', '+', '1', ',', 'color', '[', '3', ']', '+', '1', ')', ';', 'allpieces', '.', 'add_piece', '(', 'temppiece', ')', ';', 'unplacedpieces', '.', 'add_piece', '(', 'temppiece', ')', ';', '}', '}', 'return', 'true', ';', '}', 'catch', '(', 'IOException', 'err', ')', '{', 'return', 'false', ';', '}', '}']
  >>  iter 1, REJ. in => In (0 => 0, 0.99901 => 0.99907) a=0.962
  >>  iter 2, ACC! out => ex (0 => 0, 0.99901 => 0.99901) a=1.002
  >>  iter 3, REJ. in => binary (0 => 0, 0.99901 => 0.99911) a=0.963
  >>  iter 4, REJ. in => binary (0 => 0, 0.99901 => 0.99911) a=0.990
  >>  iter 5, ACC! ex => i (0 => 0, 0.99901 => 0.99901) a=1.003
  >>  iter 6, ACC! i => inc (0 => 0, 0.99901 => 0.99900) a=1.012
  >>  iter 7, ACC! inc => o (0 => 0, 0.99900 => 0.99900) a=1.009
  >>  iter 8, ACC! o => In (0 => 0, 0.99900 => 0.99900) a=1.016
  >>  iter 9, REJ. in => image (0 => 0, 0.99900 => 0.99910) a=0.965
  >>  iter 10, ACC! In => ext (0 => 0, 0.99900 => 0.99900) a=1.002
Example 271 attack result: {'succ': False, 'tokens': '    public boolean import_pieces(String filename) {\n        int pieceId;\n        int ext;\n        int n;\n        int[] color;\n        boolean byurl = true;\n        e2piece temppiece;\n        color = new int[4];\n        BufferedReader entree;\n        try {\n            if (byurl == true) {\n                URL url = new URL(baseURL, filename);\n                InputStream in = url.openStream();\n                entree = new BufferedReader(new InputStreamReader(in));\n            } else {\n                entree = new BufferedReader(new FileReader(filename));\n            }\n            pieceId = 0;\n            while (true) {\n                String lineread = entree.readLine();\n                if (lineread == null) {\n                    break;\n                }\n                StringTokenizer tok = new StringTokenizer(lineread, " ");\n                n = tok.countTokens();\n                if (n == 2) {\n                } else {\n                    for (ext = 0; ext < 4; ext++) {\n                        color[ext] = Integer.parseInt(tok.nextToken());\n                    }\n                    pieceId++;\n                    System.ext.println("Read Piece : " + pieceId + ":" + color[0] + " " + color[1] + " " + color[2] + " " + color[3]);\n                    temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1);\n                    allpieces.add_piece(temppiece);\n                    unplacedpieces.add_piece(temppiece);\n                }\n            }\n            return true;\n        } catch (IOException err) {\n            return false;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 307, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': -1.1920929e-06, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'out': 'ext'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 271 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 17.44 min
  curr succ rate = 0.030927835051546393
Query times in this attack:  311
All Query times:  28125
raw_tokens: ['public', 'static', 'void', 'unzip', '(', 'String', 'zipfile', ',', 'String', 'outputDirectory', ')', '{', 'try', '{', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'ZipInputStream', 'zipinputstream', '=', 'null', ';', 'ZipEntry', 'zipentry', ';', 'zipinputstream', '=', 'new', 'ZipInputStream', '(', 'new', 'FileInputStream', '(', 'zipfile', ')', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', 'while', '(', 'zipentry', '!=', 'null', ')', '{', 'String', 'entryName', '=', 'zipentry', '.', 'getName', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'entryname', '', '"', '+', 'entryName', ')', ';', 'int', 'n', ';', 'FileOutputStream', 'fileoutputstream', ';', 'File', 'newFile', '=', 'new', 'File', '(', 'entryName', ')', ';', 'String', 'directory', '=', 'newFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'directory', '==', 'null', ')', '{', 'if', '(', 'newFile', '.', 'isDirectory', '(', ')', ')', 'break', ';', '}', 'fileoutputstream', '=', 'new', 'FileOutputStream', '(', 'outputDirectory', '+', 'entryName', ')', ';', 'while', '(', '(', 'n', '=', 'zipinputstream', '.', 'read', '(', 'buf', ',', '0', ',', '1024', ')', ')', '>', '-', '1', ')', 'fileoutputstream', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', 'fileoutputstream', '.', 'close', '(', ')', ';', 'zipinputstream', '.', 'closeEntry', '(', ')', ';', 'zipentry', '=', 'zipinputstream', '.', 'getNextEntry', '(', ')', ';', '}', 'zipinputstream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 272 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'encodePassword', '(', 'String', 'password', ')', '{', 'try', '{', 'MessageDigest', 'messageDiegest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'messageDiegest', '.', 'update', '(', 'password', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', 'return', 'Base64', '.', 'encodeToString', '(', 'messageDiegest', '.', 'digest', '(', ')', ',', 'false', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'log', '.', 'error', '(', '"', 'Ha', 'habido', 'un', 'error', 'mientras', 'se', 'almacenaba', 'la', 'clave', 'de', 'acceso.', '"', ')', ';', 'throw', 'new', 'Error', '(', 'e', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'log', '.', 'error', '(', '"', 'Ha', 'habido', 'un', 'error', 'mientras', 'se', 'almacenaba', 'la', 'clave', 'de', 'acceso.', '"', ')', ';', 'throw', 'new', 'Error', '(', 'e', ')', ';', '}', '}']
Example 273 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'ChannelIF', 'addChannel', '(', 'String', 'url', ')', 'throws', 'Exception', '{', 'ChannelIF', 'channel', '=', 'null', ';', 'try', '{', 'channel', '=', 'FeedParser', '.', 'parse', '(', 'new', 'ChannelBuilder', '(', ')', ',', 'url', ')', ';', 'if', '(', 'channel', '.', 'getLocation', '(', ')', '==', 'null', ')', 'channel', '.', 'setLocation', '(', 'new', 'URL', '(', 'url', ')', ')', ';', '}', 'catch', '(', 'ParseException', 'e', ')', '{', 'InputStream', 'is', '=', 'new', 'URL', '(', 'url', ')', '.', 'openStream', '(', ')', ';', 'InputStreamReader', 'reader', '=', 'new', 'InputStreamReader', '(', 'is', ')', ';', 'channel', '=', 'FeedParser', '.', 'parse', '(', 'new', 'ChannelBuilder', '(', ')', ',', 'reader', ')', ';', 'reader', '.', 'close', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', 'if', '(', 'channel', '.', 'getLocation', '(', ')', '==', 'null', ')', 'channel', '.', 'setLocation', '(', 'new', 'URL', '(', 'url', ')', ')', ';', '}', 'DAOChannel', '.', 'addChannel', '(', 'channel', ')', ';', 'DAOFavicon', '.', 'addFaviconForChannel', '(', 'channel', ')', ';', 'return', 'channel', ';', '}']
Example 274 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'List', '<', 'String', '>', 'selectSynchrnServerFiles', '(', 'SynchrnServerVO', 'synchrnServerVO', ')', 'throws', 'Exception', '{', 'List', '<', 'String', '>', 'list', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'try', '{', 'FTPClient', 'ftpClient', '=', 'new', 'FTPClient', '(', ')', ';', 'ftpClient', '.', 'setControlEncoding', '(', '"', 'euc-kr', '"', ')', ';', 'if', '(', '!', 'EgovWebUtil', '.', 'isIPAddress', '(', 'synchrnServerVO', '.', 'getServerIp', '(', ')', ')', ')', '{', 'throw', 'new', 'RuntimeException', '(', '"', 'IP', 'is', 'needed.', '(', '"', '+', 'synchrnServerVO', '.', 'getServerIp', '(', ')', '+', '"', ')', '"', ')', ';', '}', 'InetAddress', 'host', '=', 'InetAddress', '.', 'getByName', '(', 'synchrnServerVO', '.', 'getServerIp', '(', ')', ')', ';', 'try', '{', 'ftpClient', '.', 'connect', '(', 'host', ',', 'Integer', '.', 'parseInt', '(', 'synchrnServerVO', '.', 'getServerPort', '(', ')', ')', ')', ';', 'boolean', 'isLogin', '=', 'ftpClient', '.', 'login', '(', 'synchrnServerVO', '.', 'getFtpId', '(', ')', ',', 'synchrnServerVO', '.', 'getFtpPassword', '(', ')', ')', ';', 'if', '(', '!', 'isLogin', ')', 'throw', 'new', 'Exception', '(', '"', 'FTP', 'Client', 'Login', 'Error', ':', '', '"', ')', ';', '}', 'catch', '(', 'SocketException', 'se', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'se', ')', ';', 'throw', 'new', 'Exception', '(', 'se', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'e', ')', ';', 'throw', 'new', 'Exception', '(', 'e', ')', ';', '}', 'FTPFile', '[', ']', 'fTPFile', '=', 'null', ';', 'try', '{', 'ftpClient', '.', 'changeWorkingDirectory', '(', 'synchrnServerVO', '.', 'getSynchrnLc', '(', ')', ')', ';', 'fTPFile', '=', 'ftpClient', '.', 'listFiles', '(', 'synchrnServerVO', '.', 'getSynchrnLc', '(', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fTPFile', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', 'fTPFile', '[', 'i', ']', '.', 'isFile', '(', ')', ')', 'list', '.', 'add', '(', 'fTPFile', '[', 'i', ']', '.', 'getName', '(', ')', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'e', ')', ';', '}', 'finally', '{', 'ftpClient', '.', 'logout', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'list', '.', 'add', '(', '"', 'noList', '"', ')', ';', '}', 'return', 'list', ';', '}']
Example 275 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'unsplit', '(', 'String', 'newFilename', ',', 'File', '[', ']', 'files', ')', 'throws', 'Exception', '{', 'FileOutputStream', 'stream', '=', 'new', 'FileOutputStream', '(', 'new', 'File', '(', 'newFilename', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', 'FileInputStream', 'fin', '=', 'new', 'FileInputStream', '(', 'files', '[', 'i', ']', '.', 'getAbsolutePath', '(', ')', ')', ';', 'DataInputStream', 'din', '=', 'new', 'DataInputStream', '(', 'fin', ')', ';', 'while', '(', 'din', '.', 'available', '(', ')', '>', '0', ')', '{', 'stream', '.', 'write', '(', 'din', '.', 'read', '(', ')', ')', ';', '}', 'din', '.', 'close', '(', ')', ';', 'fin', '.', 'close', '(', ')', ';', '}', 'stream', '.', 'close', '(', ')', ';', '}']
Example 276 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'fillTemplate', '(', 'String', 'sourceFileName', ',', 'String', 'targetFileName', ',', 'Map', '<', 'String', ',', 'String', '>', 'values', ')', 'throws', 'IOException', '{', 'File', 'targetDirectory', '=', 'new', 'File', '(', 'targetFileName', '.', 'substring', '(', '0', ',', 'targetFileName', '.', 'lastIndexOf', '(', 'File', '.', 'separator', ')', ')', ')', ';', 'targetDirectory', '.', 'mkdirs', '(', ')', ';', 'File', 'file', '=', 'new', 'File', '(', 'sourceFileName', ')', ';', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'FileChannel', 'fc', '=', 'fis', '.', 'getChannel', '(', ')', ';', 'int', 'sz', '=', '(', 'int', ')', 'fc', '.', 'size', '(', ')', ';', 'MappedByteBuffer', 'bb', '=', 'fc', '.', 'map', '(', 'FileChannel', '.', 'MapMode', '.', 'READ_ONLY', ',', '0', ',', 'sz', ')', ';', 'Charset', 'charset', '=', 'Charset', '.', 'forName', '(', '"', 'ISO-8859-15', '"', ')', ';', 'CharsetDecoder', 'decoder', '=', 'charset', '.', 'newDecoder', '(', ')', ';', 'CharBuffer', 'cb', '=', 'decoder', '.', 'decode', '(', 'bb', ')', ';', 'String', 'inString', '=', 'cb', '.', 'toString', '(', ')', ';', 'fis', '.', 'close', '(', ')', ';', 'fc', '.', 'close', '(', ')', ';', 'Set', '<', 'String', '>', 'keys', '=', 'values', '.', 'keySet', '(', ')', ';', 'for', '(', 'Object', 'k', ':', 'keys', ')', '{', 'inString', '=', 'inString', '.', 'replace', '(', '(', 'String', ')', 'k', ',', 'escape', '(', 'values', '.', 'get', '(', 'k', ')', ')', ')', ';', '}', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'targetFileName', ')', ';', 'PrintStream', 'ps', '=', 'new', 'PrintStream', '(', 'fos', ')', ';', 'ps', '.', 'print', '(', 'inString', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}']
Example 277 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'String', 'file1', ',', 'String', 'file2', ')', '{', 'File', 'filedata1', '=', 'new', 'java', '.', 'io', '.', 'File', '(', 'file1', ')', ';', 'if', '(', 'filedata1', '.', 'exists', '(', ')', ')', '{', 'try', '{', 'BufferedOutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'file2', ')', ')', ';', 'BufferedInputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'file1', ')', ')', ';', 'try', '{', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', '{', 'out', '.', 'write', '(', 'read', ')', ';', '}', 'out', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex1', ')', '{', 'ex1', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
  >>  iter 1, ACC! in => pull (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 2, ACC! pull => pin (0 => 0, 0.99998 => 0.99998) a=1.005
  >>  iter 3, ACC! pin => again (0 => 0, 0.99998 => 0.99998) a=1.005
  >>  iter 4, ACC! IOException => DownloadProblem (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 5, ACC! out => ext (0 => 0, 0.99998 => 0.99998) a=1.005
  >>  iter 6, ACC! DownloadProblem => TimeoutProblem (0 => 0, 0.99998 => 0.99998) a=1.005
  >>  iter 7, ACC! TimeoutProblem => IOception (0 => 0, 0.99998 => 0.99998) a=1.005
  >>  iter 8, ACC! ext => Out (0 => 0, 0.99998 => 0.99998) a=1.005
  >>  iter 9, ACC! Out => io (0 => 0, 0.99998 => 0.99998) a=1.005
  >>  iter 10, ACC! IOception => Downloadception (0 => 0, 0.99998 => 0.99998) a=1.005
Example 278 attack result: {'succ': False, 'tokens': '    public static void copyFile(String file1, String file2) {\n        File filedata1 = new java.io.File(file1);\n        if (filedata1.exists()) {\n            try {\n                BufferedOutputStream io = new BufferedOutputStream(new FileOutputStream(file2));\n                BufferedInputStream again = new BufferedInputStream(new FileInputStream(file1));\n                try {\n                    int read;\n                    while ((read = again.read()) != -1) {\n                        io.write(read);\n                    }\n                    io.flush();\n                } catch (Downloadception ex1) {\n                    ex1.printStackTrace();\n                } finally {\n                    io.close();\n                    again.close();\n                }\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 142, 'new_pred': 0, 'is_success': -1, 'old_uid': 'IOException', 'score_info': 0.0, 'nb_changed_var': 3, 'nb_changed_pos': 8, 'replace_info': {'in': 'again', 'IOException': 'Downloadception', 'out': 'io'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 278 FAILED.
  time cost = 0.12 min
  ALL EXAMPLE time cost = 17.65 min
  curr succ rate = 0.030612244897959183
Query times in this attack:  235
All Query times:  28360
raw_tokens: ['String', 'fetch_m3u', '(', 'String', 'm3u', ')', '{', 'InputStream', 'pstream', '=', 'null', ';', 'if', '(', 'm3u', '.', 'startsWith', '(', '"', 'http://', '"', ')', ')', '{', 'try', '{', 'URL', 'url', '=', 'null', ';', 'if', '(', 'running_as_applet', ')', '{', 'url', '=', 'new', 'URL', '(', 'getCodeBase', '(', ')', ',', 'm3u', ')', ';', '}', 'else', '{', 'url', '=', 'new', 'URL', '(', 'm3u', ')', ';', '}', 'URLConnection', 'urlc', '=', 'url', '.', 'openConnection', '(', ')', ';', 'pstream', '=', 'urlc', '.', 'getInputStream', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ee', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'ee', ')', ';', 'return', 'null', ';', '}', '}', 'if', '(', 'pstream', '==', 'null', '&&', '!', 'running_as_applet', ')', '{', 'try', '{', 'pstream', '=', 'new', 'FileInputStream', '(', 'System', '.', 'getProperty', '(', '"', 'user.dir', '"', ')', '+', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', '+', 'm3u', ')', ';', '}', 'catch', '(', 'Exception', 'ee', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'ee', ')', ';', 'return', 'null', ';', '}', '}', 'String', 'line', '=', 'null', ';', 'while', '(', 'true', ')', '{', 'try', '{', 'line', '=', 'readline', '(', 'pstream', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'if', '(', 'line', '==', 'null', ')', '{', 'break', ';', '}', 'return', 'line', ';', '}', 'return', 'null', ';', '}']
  >>  iter 1, ACC! url => str (0 => 0, 1.00000 => 0.99999) a=1.256
  >>  iter 2, ACC! str => server (0 => 0, 0.99999 => 0.99999) a=1.136
  >>  iter 3, ACC! server => id (0 => 0, 0.99999 => 0.99999) a=1.067
  >>  iter 4, ACC! id => open (0 => 0, 0.99999 => 0.99999) a=1.116
  >>  iter 5, ACC! open => image (0 => 0, 0.99999 => 0.99999) a=1.067
  >>  iter 6, ACC! image => object (0 => 0, 0.99999 => 1.00000) a=1.091
  >>  iter 7, ACC! object => file (0 => 0, 1.00000 => 0.99999) a=1.220
  >>  iter 8, ACC! file => Url (0 => 0, 0.99999 => 0.99999) a=1.087
  >>  iter 9, ACC! Url => config (0 => 0, 0.99999 => 0.99999) a=1.042
  >>  iter 10, ACC! config => source (0 => 0, 0.99999 => 0.99999) a=1.140
Example 279 attack result: {'succ': False, 'tokens': '    String fetch_m3u(String m3u) {\n        InputStream pstream = null;\n        if (m3u.startsWith("http://")) {\n            try {\n                URL source = null;\n                if (running_as_applet) {\n                    source = new URL(getCodeBase(), m3u);\n                } else {\n                    source = new URL(m3u);\n                }\n                URLConnection urlc = source.openConnection();\n                pstream = urlc.getInputStream();\n            } catch (Exception ee) {\n                System.err.println(ee);\n                return null;\n            }\n        }\n        if (pstream == null && !running_as_applet) {\n            try {\n                pstream = new FileInputStream(System.getProperty("user.dir") + System.getProperty("file.separator") + m3u);\n            } catch (Exception ee) {\n                System.err.println(ee);\n                return null;\n            }\n        }\n        String line = null;\n        while (true) {\n            try {\n                line = readline(pstream);\n            } catch (Exception e) {\n            }\n            if (line == null) {\n                break;\n            }\n            return line;\n        }\n        return null;\n    }\n', 'raw_tokens': None, 'prog_length': 202, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 1.1920929e-07, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'url': 'source'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 279 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 17.80 min
  curr succ rate = 0.030303030303030304
Query times in this attack:  295
All Query times:  28655
raw_tokens: ['public', 'static', 'final', 'String', 'digest', '(', 'String', 'credentials', ',', 'String', 'algorithm', ',', 'String', 'encoding', ')', '{', 'try', '{', 'MessageDigest', 'md', '=', '(', 'MessageDigest', ')', 'MessageDigest', '.', 'getInstance', '(', 'algorithm', ')', '.', 'clone', '(', ')', ';', 'if', '(', 'encoding', '==', 'null', ')', '{', 'md', '.', 'update', '(', 'credentials', '.', 'getBytes', '(', ')', ')', ';', '}', 'else', '{', 'md', '.', 'update', '(', 'credentials', '.', 'getBytes', '(', 'encoding', ')', ')', ';', '}', 'return', '(', 'convert', '(', 'md', '.', 'digest', '(', ')', ')', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'tools', '.', 'util', '.', 'LogMgr', '.', 'err', '(', '"', 'Crypto.digest', '', '"', '+', 'ex', '.', 'toString', '(', ')', ')', ';', 'return', 'credentials', ';', '}', '}']
Example 280 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'HashMap', '<', 'String', ',', 'String', '>', 'prepareDataFile', '(', 'String', 'fileName', ')', '{', 'File', 'originalDataFile', '=', 'new', 'File', '(', 'fileName', ')', ';', 'String', 'tableName', '=', 'new', 'String', '(', ')', ';', 'String', 'line', '=', 'new', 'String', '(', ')', ';', 'BufferedReader', 'br', ';', 'BufferedWriter', 'bw', ';', 'long', 'recordsNumber', ';', 'File', 'tempDataFile', ';', 'HashMap', '<', 'String', ',', 'String', '>', 'tableFileMap', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'String', 'filePath', '=', 'new', 'String', '(', ')', ';', 'try', '{', 'br', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'new', 'FileInputStream', '(', 'originalDataFile', ')', ')', ')', ';', 'if', '(', 'br', '.', 'ready', '(', ')', ')', '{', 'if', '(', '(', 'line', '=', 'br', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'do', '{', 'tableName', '=', '"', 'temp_', '"', '+', 'getTableName', '(', 'line', ')', ';', 'tempDataFile', '=', 'new', 'File', '(', '"', './Data/', '"', '+', 'tableName', '+', '"', '.txt', '"', ')', ';', 'tempDataFile', '.', 'createNewFile', '(', ')', ';', 'tableFileMap', '.', 'put', '(', 'tableName', ',', 'tempDataFile', '.', 'getCanonicalPath', '(', ')', ')', ';', 'recordsNumber', '=', 'getRecordNumber', '(', 'line', ')', ';', 'bw', '=', 'new', 'BufferedWriter', '(', 'new', 'OutputStreamWriter', '(', 'new', 'FileOutputStream', '(', 'tempDataFile', ')', ')', ')', ';', 'for', '(', 'long', 'i', '=', '0', ';', 'i', '<', 'recordsNumber', ';', 'i', '++', ')', '{', 'bw', '.', 'write', '(', 'br', '.', 'readLine', '(', ')', '+', '"', '\\r', '', '"', ')', ';', '}', 'bw', '.', 'close', '(', ')', ';', '}', 'while', '(', '(', 'line', '=', 'br', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', ';', '}', 'br', '.', 'close', '(', ')', ';', 'return', 'tableFileMap', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'ExceptionHandler', '.', 'handleExcptin', '(', 'e', ')', ';', '}', 'return', 'null', ';', '}']
Example 281 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'if', '(', 'name', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Must', 'set', 'file', 'name', 'for', 'retrieval', '"', ')', ';', 'return', ';', '}', 'if', '(', 'handle', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Must', 'set', 'CCNHandle', '"', ')', ';', 'return', ';', '}', 'if', '(', 'htmlPane', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Must', 'set', 'JEditorPane', '"', ')', ';', 'return', ';', '}', 'JFrame', 'frame', '=', 'new', 'JFrame', '(', ')', ';', 'JFileChooser', 'chooser', '=', 'new', 'JFileChooser', '(', ')', ';', 'File', 'f', '=', 'null', ';', 'chooser', '.', 'setCurrentDirectory', '(', 'null', ')', ';', 'int', 'returnVal', '=', 'chooser', '.', 'showSaveDialog', '(', 'frame', ')', ';', 'if', '(', 'returnVal', '==', 'JFileChooser', '.', 'APPROVE_OPTION', ')', '{', 'f', '=', 'chooser', '.', 'getSelectedFile', '(', ')', ';', '}', 'else', '{', 'htmlPane', '.', 'setText', '(', '"', 'Save', 'File', 'cancelled', '"', ')', ';', 'return', ';', '}', 'boolean', 'overwrite', '=', 'false', ';', 'try', '{', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 'htmlPane', '.', 'setText', '(', '"', 'Overwriting', 'contents', 'of', '', '"', '+', 'f', '.', 'getPath', '(', ')', ')', ';', 'overwrite', '=', 'true', ';', '}', 'else', '{', 'f', '.', 'createNewFile', '(', ')', ';', '}', 'if', '(', 'f', '.', 'canWrite', '(', ')', ')', '{', '}', 'else', '{', 'htmlPane', '.', 'setText', '(', '"', 'The', 'ContentExplorer', 'is', 'unable', 'to', 'write', 'the', 'content', 'to', 'the', 'specified', 'file.', '"', ')', ';', 'return', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'could', 'not', 'create', '', '"', '+', 'f', '.', 'getPath', '(', ')', '+', '"', '', 'for', 'saving', 'content', 'to', 'filesystem', '"', ')', ';', 'htmlPane', '.', 'setText', '(', '"', 'could', 'not', 'create', '', '"', '+', 'f', '.', 'getPath', '(', ')', '+', '"', '', 'for', 'saving', 'content', 'to', 'filesystem', '"', ')', ';', '}', 'try', '{', 'if', '(', '!', 'overwrite', ')', 'htmlPane', '.', 'setText', '(', '"', 'saving', '', '"', '+', 'name', '+', '"', '', 'to', '', '"', '+', 'f', '.', 'getCanonicalPath', '(', ')', ')', ';', 'else', 'htmlPane', '.', 'setText', '(', '"', 'overwriting', 'contents', 'of', '', '"', '+', 'f', '.', 'getCanonicalPath', '(', ')', '+', '"', '', 'to', 'save', '', '"', '+', 'name', ')', ';', 'CCNFileInputStream', 'fis', '=', 'new', 'CCNFileInputStream', '(', 'name', ',', 'handle', ')', ';', 'FileOutputStream', 'output', '=', 'new', 'FileOutputStream', '(', 'f', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'readsize', ']', ';', 'int', 'readcount', '=', '0', ';', 'int', 'readtotal', '=', '0', ';', 'while', '(', '(', 'readcount', '=', 'fis', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'readtotal', '+=', 'readcount', ';', 'output', '.', 'write', '(', 'buffer', ',', '0', ',', 'readcount', ')', ';', 'output', '.', 'flush', '(', ')', ';', '}', 'htmlPane', '.', 'setText', '(', '"', 'Saved', '', '"', '+', 'name', '+', '"', '', 'to', '', '"', '+', 'f', '.', 'getCanonicalPath', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'htmlPane', '.', 'setText', '(', '"', 'Could', 'not', 'save', '', '"', '+', 'name', '+', '"', '', 'to', '', '"', '+', 'f', '.', 'getPath', '(', ')', '+', '"', '', 'This', 'may', 'be', 'a', 'prefix', 'for', 'an', 'object', 'or', 'just', 'may', 'not', 'be', 'available', 'at', 'this', 'time.', '"', ')', ';', 'System', '.', 'err', '.', 'println', '(', '"', 'Could', 'not', 'retrieve', 'file:', '', '"', '+', 'name', ')', ';', '}', '}']
Example 282 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'copyFile', '(', 'File', 'sourceFile', ',', 'File', 'destFile', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'destFile', '.', 'exists', '(', ')', ')', '{', 'destFile', '.', 'createNewFile', '(', ')', ';', '}', 'FileChannel', 'source', '=', 'null', ';', 'FileChannel', 'destination', '=', 'null', ';', 'try', '{', 'source', '=', 'new', 'FileInputStream', '(', 'sourceFile', ')', '.', 'getChannel', '(', ')', ';', 'destination', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', '.', 'getChannel', '(', ')', ';', 'destination', '.', 'transferFrom', '(', 'source', ',', '0', ',', 'source', '.', 'size', '(', ')', ')', ';', '}', 'finally', '{', 'if', '(', 'source', '!=', 'null', ')', '{', 'source', '.', 'close', '(', ')', ';', '}', 'if', '(', 'destination', '!=', 'null', ')', '{', 'destination', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 283 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'getImageUrlForComicsJoke', '(', 'Date', 'date', ',', 'String', 'baseURL', ',', 'String', 'imageDefinition', ',', 'int', 'imagePathStart', ')', 'throws', 'JokeFinderException', '{', 'String', 'imageUrl', '=', 'null', ';', 'try', '{', 'imageUrl', '=', 'getBaseImageComicsJoke', '(', 'date', ',', 'baseURL', ',', 'imageDefinition', ',', 'imagePathStart', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'imageUrl', ')', ';', 'url', '.', 'openStream', '(', ')', ';', '}', 'catch', '(', 'JokeFinderException', 'e', ')', '{', 'logger', '.', 'warn', '(', '"', "Couldn't", 'find', 'base', 'URL.', '"', ',', 'e', ')', ';', 'imageUrl', '=', 'null', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'warn', '(', '"', "Couldn't", 'find', 'or', 'open', 'image', 'base', 'URL.', '"', ',', 'e', ')', ';', 'imageUrl', '=', 'null', ';', '}', 'if', '(', 'imageUrl', '==', 'null', ')', '{', 'throw', 'new', 'JokeFinderException', '(', '"', "Couldn't", 'find', 'joke.', '"', ')', ';', '}', 'return', 'imageUrl', ';', '}']
Example 284 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'encrypt', '(', 'String', 'text', ',', 'String', 'passphrase', ',', 'int', 'keylen', ')', '{', 'RC2ParameterSpec', 'parm', '=', 'new', 'RC2ParameterSpec', '(', 'keylen', ')', ';', 'try', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'md', '.', 'update', '(', 'passphrase', '.', 'getBytes', '(', 'getCharset', '(', ')', ')', ')', ';', 'SecretKeySpec', 'skeySpec', '=', 'new', 'SecretKeySpec', '(', 'md', '.', 'digest', '(', ')', ',', '"', 'RC2', '"', ')', ';', 'Cipher', 'cipher', '=', 'Cipher', '.', 'getInstance', '(', '"', 'RC2/ECB/NoPadding', '"', ')', ';', 'cipher', '.', 'init', '(', 'Cipher', '.', 'ENCRYPT_MODE', ',', 'skeySpec', ',', 'parm', ')', ';', 'byte', '[', ']', 'newBytes', '=', 'encodeStringNew', '(', 'text', ')', ';', 'byte', '[', ']', 'd', '=', 'cipher', '.', 'doFinal', '(', 'newBytes', ')', ';', 'return', 'Base64', '.', 'encodeBytes', '(', 'd', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'NoSuchPaddingException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'InvalidKeyException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'InvalidAlgorithmParameterException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IllegalBlockSizeException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'BadPaddingException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'null', ';', '}']
  >>  iter 1, ACC! digest => diggest (1 => 1, 0.99975 => 0.99975) a=1.002
  >>  iter 2, ACC! diggest => Digusher (1 => 1, 0.99975 => 0.99975) a=1.002
  >>  iter 3, ACC! Digusher => loggest (1 => 1, 0.99975 => 0.99975) a=1.003
  >>  iter 4, ACC! loggest => signest (1 => 1, 0.99975 => 0.99975) a=1.001
  >>  iter 5, ACC! signest => Digester (1 => 1, 0.99975 => 0.99975) a=1.002
  >>  iter 6, ACC! Digester => validester (1 => 1, 0.99975 => 0.99975) a=1.003
  >>  iter 7, ACC! validester => Digest (1 => 1, 0.99975 => 0.99975) a=1.002
  >>  iter 8, ACC! Digest => hashest (1 => 1, 0.99975 => 0.99975) a=1.003
  >>  iter 9, ACC! hashest => DigString (1 => 1, 0.99975 => 0.99975) a=1.000
  >>  iter 10, ACC! DigString => validested (1 => 1, 0.99975 => 0.99975) a=1.002
Example 285 attack result: {'succ': False, 'tokens': '    public String encrypt(String text, String passphrase, int keylen) {\n        RC2ParameterSpec parm = new RC2ParameterSpec(keylen);\n        try {\n            MessageDigest md = MessageDigest.getInstance("MD5");\n            md.update(passphrase.getBytes(getCharset()));\n            SecretKeySpec skeySpec = new SecretKeySpec(md.validested(), "RC2");\n            Cipher cipher = Cipher.getInstance("RC2/ECB/NoPadding");\n            cipher.init(Cipher.ENCRYPT_MODE, skeySpec, parm);\n            byte[] newBytes = encodeStringNew(text);\n            byte[] d = cipher.doFinal(newBytes);\n            return Base64.encodeBytes(d);\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        } catch (NoSuchPaddingException e) {\n            e.printStackTrace();\n        } catch (InvalidKeyException e) {\n            e.printStackTrace();\n        } catch (InvalidAlgorithmParameterException e) {\n            e.printStackTrace();\n        } catch (IllegalBlockSizeException e) {\n            e.printStackTrace();\n        } catch (BadPaddingException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n', 'raw_tokens': None, 'prog_length': 206, 'new_pred': 1, 'is_success': -1, 'old_uid': 'digest', 'score_info': -2.1021697e-07, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'digest': 'validested'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 285 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 18.01 min
  curr succ rate = 0.03
Query times in this attack:  316
All Query times:  28971
raw_tokens: ['public', 'SparqlQueryLoaderImpl', '', '(', ')', 'throws', 'IOException', '{', 'ClassLoader', 'loader', '=', 'SparqlQueryLoaderImpl', '.', 'class', '.', 'getClassLoader', '(', ')', ';', 'URL', 'url', '=', 'loader', '.', 'getResource', '(', 'PROPERTIES_FILENAME', ')', ';', 'InputStream', 'stream', '=', 'url', '.', 'openStream', '(', ')', ';', 'properties', '.', 'load', '(', 'stream', ')', ';', 'stream', '.', 'close', '(', ')', ';', 'String', 'names', '=', 'getProperties', '(', ')', '.', 'getProperty', '(', 'NAMES_PARAMETER', ')', ';', 'StringTokenizer', 'st', '=', 'new', 'StringTokenizer', '(', 'names', ',', '"', ',', '"', ')', ';', 'while', '(', 'st', '.', 'hasMoreTokens', '(', ')', ')', '{', 'String', 'name', '=', 'st', '.', 'nextToken', '(', ')', ';', 'String', 'value', '=', 'readContents', '(', 'String', '.', 'format', '(', '"', 'sparql/%s.sparql', '"', ',', 'name', ')', ')', ';', 'getName2Query', '(', ')', '.', 'put', '(', 'name', ',', 'value', ')', ';', '}', '}']
Example 286 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'testUnavailable', '(', ')', 'throws', 'Exception', '{', 'URL', 'url', '=', 'null', ';', 'url', '=', 'new', 'URL', '(', '"', 'http://127.0.0.1:', '"', '+', 'connector', '.', 'getLocalPort', '(', ')', '+', '"', '/test/dump/info?query=foo', '"', ')', ';', 'assertTrue', '(', 'IO', '.', 'toString', '(', 'url', '.', 'openStream', '(', ')', ')', '.', 'startsWith', '(', '"', '<html>', '"', ')', ')', ';', 'assertTrue', '(', 'context', '.', 'getServletHandler', '(', ')', '.', 'isAvailable', '(', ')', ')', ';', 'url', '=', 'new', 'URL', '(', '"', 'http://127.0.0.1:', '"', '+', 'connector', '.', 'getLocalPort', '(', ')', '+', '"', '/test/dump/ex2/2', '"', ')', ';', 'try', '{', 'IO', '.', 'toString', '(', 'url', '.', 'openStream', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'assertFalse', '(', 'context', '.', 'getServletHandler', '(', ')', '.', 'isAvailable', '(', ')', ')', ';', 'Thread', '.', 'sleep', '(', '4000', ')', ';', 'assertTrue', '(', 'context', '.', 'getServletHandler', '(', ')', '.', 'isAvailable', '(', ')', ')', ';', '}']
Example 287 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'boolean', 'CopyFile', '(', 'File', 'srcFile', ',', 'File', 'tagFile', ')', 'throws', 'IOException', '{', 'if', '(', 'srcFile', '==', 'null', '||', 'tagFile', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'int', 'length', '=', '2097152', ';', 'File', 'dirFile', '=', 'new', 'File', '(', 'getFileFolder', '(', 'tagFile', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', 'if', '(', '!', 'dirFile', '.', 'exists', '(', ')', ')', '{', 'dirFile', '.', 'mkdirs', '(', ')', ';', '}', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'srcFile', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'tagFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'FileChannel', 'inC', '=', 'in', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outC', '=', 'out', '.', 'getChannel', '(', ')', ';', 'int', 'i', '=', '0', ';', 'while', '(', 'true', ')', '{', 'if', '(', 'inC', '.', 'position', '(', ')', '==', 'inC', '.', 'size', '(', ')', ')', '{', 'inC', '.', 'close', '(', ')', ';', 'outC', '.', 'close', '(', ')', ';', 'break', ';', '}', 'if', '(', '(', 'inC', '.', 'size', '(', ')', '-', 'inC', '.', 'position', '(', ')', ')', '<', '20971520', ')', 'length', '=', '(', 'int', ')', '(', 'inC', '.', 'size', '(', ')', '-', 'inC', '.', 'position', '(', ')', ')', ';', 'else', 'length', '=', '20971520', ';', 'inC', '.', 'transferTo', '(', 'inC', '.', 'position', '(', ')', ',', 'length', ',', 'outC', ')', ';', 'inC', '.', 'position', '(', 'inC', '.', 'position', '(', ')', '+', 'length', ')', ';', 'i', '++', ';', '}', 'return', 'true', ';', '}']
  >>  iter 1, ACC! out => co (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! co => In (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! in => a (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 4, ACC! a => s (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! s => min (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 6, ACC! In => session (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 7, ACC! min => win (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! win => inner (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 9, ACC! inner => data (1 => 1, 0.99988 => 0.99988) a=1.003
  >>  iter 10, ACC! data => ac (1 => 1, 0.99988 => 0.99988) a=1.003
Example 288 attack result: {'succ': False, 'tokens': '    private static boolean CopyFile(File srcFile, File tagFile) throws IOException {\n        if (srcFile == null || tagFile == null) {\n            return false;\n        }\n        int length = 2097152;\n        File dirFile = new File(getFileFolder(tagFile.getAbsolutePath()));\n        if (!dirFile.exists()) {\n            dirFile.mkdirs();\n        }\n        FileInputStream ac = new FileInputStream(srcFile);\n        FileOutputStream session = new FileOutputStream(tagFile.getAbsolutePath());\n        FileChannel inC = ac.getChannel();\n        FileChannel outC = session.getChannel();\n        int i = 0;\n        while (true) {\n            if (inC.position() == inC.size()) {\n                inC.close();\n                outC.close();\n                break;\n            }\n            if ((inC.size() - inC.position()) < 20971520) length = (int) (inC.size() - inC.position()); else length = 20971520;\n            inC.transferTo(inC.position(), length, outC);\n            inC.position(inC.position() + length);\n            i++;\n        }\n        return true;\n    }\n', 'raw_tokens': None, 'prog_length': 225, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 1.2012606e-08, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'out': 'session', 'in': 'ac'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 288 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 18.19 min
  curr succ rate = 0.0297029702970297
Query times in this attack:  296
All Query times:  29267
raw_tokens: ['@', 'Override', 'protected', 'void', 'doRequest', '(', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'resp', ')', 'throws', 'ServletException', ',', 'IOException', '{', 'String', 'reqPath', '=', 'req', '.', 'getPathInfo', '(', ')', ';', 'if', '(', 'reqPath', '.', 'startsWith', '(', '"', '/', '"', ')', ')', 'reqPath', '=', 'reqPath', '.', 'substring', '(', '1', ')', ';', 'ZipEntry', 'entry', '=', 'zipInfo', '.', 'get', '(', 'reqPath', ')', ';', 'if', '(', 'entry', '==', 'null', ')', '{', 'logger', '.', 'debug', '(', 'Utils', '.', 'join', '(', '"', 'Requested', 'path', 'not', 'found:', '[', '"', ',', 'reqPath', ',', '"', ']', '"', ')', ')', ';', 'resp', '.', 'sendError', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', ')', ';', 'return', ';', '}', 'logger', '.', 'debug', '(', 'Utils', '.', 'join', '(', '"', 'Requested', 'path:', '[', '"', ',', 'reqPath', ',', '"', ']', '"', ')', ')', ';', 'ServletUtils', '.', 'establishContentType', '(', 'reqPath', ',', 'resp', ')', ';', 'InputStream', 'in', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'BufferedInputStream', '(', 'zipFile', '.', 'getInputStream', '(', 'entry', ')', ')', ';', 'IOUtils', '.', 'copy', '(', 'in', ',', 'resp', '.', 'getOutputStream', '(', ')', ')', ';', 'logger', '.', 'debug', '(', '"', 'Rendered:', '', '"', '+', 'reqPath', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'logger', '.', 'error', '(', '"', 'zipped', 'resource', 'not', 'found:', '', '"', '+', 'reqPath', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', '}', '}']
Example 289 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'Long', 'processAddCompany', '(', 'Company', 'companyBean', ',', 'Long', 'holdingId', ')', '{', 'PreparedStatement', 'ps', '=', 'null', ';', 'DatabaseAdapter', 'dbDyn', '=', 'null', ';', 'try', '{', 'dbDyn', '=', 'DatabaseAdapter', '.', 'getInstance', '(', ')', ';', 'CustomSequenceType', 'seq', '=', 'new', 'CustomSequenceType', '(', ')', ';', 'seq', '.', 'setSequenceName', '(', '"', 'seq_WM_LIST_COMPANY', '"', ')', ';', 'seq', '.', 'setTableName', '(', '"', 'WM_LIST_COMPANY', '"', ')', ';', 'seq', '.', 'setColumnName', '(', '"', 'ID_FIRM', '"', ')', ';', 'Long', 'sequenceValue', '=', 'dbDyn', '.', 'getSequenceNextValue', '(', 'seq', ')', ';', 'ps', '=', 'dbDyn', '.', 'prepareStatement', '(', '"', 'insert', 'into', 'WM_LIST_COMPANY', '(', '"', '+', '"', '\tID_FIRM,', '', '"', '+', '"', '\tfull_name,', '', '"', '+', '"', '\tshort_name,', '', '"', '+', '"', '\taddress,', '', '"', '+', '"', '\tchief,', '', '"', '+', '"', '\tbuh,', '', '"', '+', '"', '\turl,', '', '"', '+', '"', '\tshort_info,', '', '"', '+', '"', '', '', '', 'is_deleted', '"', '+', '"', ')values', '', '"', '+', '(', 'dbDyn', '.', 'getIsNeedUpdateBracket', '(', ')', '?', '"', '(', '"', ':', '"', '"', ')', '+', '"', '\t?,', '"', '+', '"', '\t?,', '"', '+', '"', '\t?,', '"', '+', '"', '\t?,', '"', '+', '"', '\t?,', '"', '+', '"', '\t?,', '"', '+', '"', '\t?,', '"', '+', '"', '\t?,', '"', '+', '"', '', '', '', '0', '', '"', '+', '(', 'dbDyn', '.', 'getIsNeedUpdateBracket', '(', ')', '?', '"', ')', '"', ':', '"', '"', ')', ')', ';', 'int', 'num', '=', '1', ';', 'RsetTools', '.', 'setLong', '(', 'ps', ',', 'num', '++', ',', 'sequenceValue', ')', ';', 'ps', '.', 'setString', '(', 'num', '++', ',', 'companyBean', '.', 'getName', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'num', '++', ',', 'companyBean', '.', 'getShortName', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'num', '++', ',', 'companyBean', '.', 'getAddress', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'num', '++', ',', 'companyBean', '.', 'getCeo', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'num', '++', ',', 'companyBean', '.', 'getCfo', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'num', '++', ',', 'companyBean', '.', 'getWebsite', '(', ')', ')', ';', 'ps', '.', 'setString', '(', 'num', '++', ',', 'companyBean', '.', 'getInfo', '(', ')', ')', ';', 'int', 'i1', '=', 'ps', '.', 'executeUpdate', '(', ')', ';', 'if', '(', 'log', '.', 'isDebugEnabled', '(', ')', ')', 'log', '.', 'debug', '(', '"', 'Count', 'of', 'inserted', 'records', '-', '', '"', '+', 'i1', ')', ';', 'if', '(', 'holdingId', '!=', 'null', ')', '{', 'InternalDaoFactory', '.', 'getInternalHoldingDao', '(', ')', '.', 'setRelateHoldingCompany', '(', 'dbDyn', ',', 'holdingId', ',', 'sequenceValue', ')', ';', '}', 'dbDyn', '.', 'commit', '(', ')', ';', 'return', 'sequenceValue', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'try', '{', 'if', '(', 'dbDyn', '!=', 'null', ')', 'dbDyn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e001', ')', '{', '}', 'String', 'es', '=', '"', 'Error', 'add', 'new', 'company', '"', ';', 'log', '.', 'error', '(', 'es', ',', 'e', ')', ';', 'throw', 'new', 'IllegalStateException', '(', 'es', ',', 'e', ')', ';', '}', 'finally', '{', 'DatabaseManager', '.', 'close', '(', 'dbDyn', ',', 'ps', ')', ';', 'dbDyn', '=', 'null', ';', 'ps', '=', 'null', ';', '}', '}']
Example 290 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'InputStreamReader', 'in', '=', 'null', ';', 'OutputStreamWriter', 'out', '=', 'null', ';', 'URL', 'url', '=', 'null', ';', 'File', 'net_file', '=', 'null', ';', 'long', 'in_length', '=', '0', ';', 'progress_bar', '.', 'setValue', '(', '0', ')', ';', 'progress_bar', '.', 'setString', '(', '"', 'connecting!', '"', ')', ';', 'progress_bar', '.', 'setStringPainted', '(', 'true', ')', ';', 'if', '(', 'sync_host_path_name', '.', 'length', '(', ')', '>', '0', ')', '{', 'try', '{', 'try', '{', 'if', '(', 'protocol', '==', 'Settings', '.', 'protFTP', ')', '{', 'url', '=', 'new', 'URL', '(', '"', 'ftp://', '"', '+', 'user_name', '+', '"', ':', '"', '+', 'password', '+', '"', '@', '"', '+', 'sync_host_path_name', ')', ';', 'URLConnection', 'connection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'in', '=', 'new', 'InputStreamReader', '(', 'connection', '.', 'getInputStream', '(', ')', ')', ';', 'in_length', '=', 'connection', '.', 'getContentLength', '(', ')', ';', '}', 'else', '{', 'net_file', '=', 'new', 'File', '(', 'sync_host_path_name', ')', ';', 'in', '=', 'new', 'InputStreamReader', '(', 'new', 'FileInputStream', '(', 'net_file', ')', ',', '"', 'US-ASCII', '"', ')', ';', 'in_length', '=', 'net_file', '.', 'length', '(', ')', ';', '}', 'progress_bar', '.', 'setString', '(', '"', 'synchronising!', '"', ')', ';', 'EventMemory', '.', 'get_instance', '(', 'null', ')', '.', 'import_vCalendar', '(', 'in', ',', 'Math', '.', 'max', '(', 'in_length', ',', '1', ')', ',', 'true', ',', 'progress_bar', ')', ';', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'progress_bar', '.', 'setString', '(', 'x', '.', 'getMessage', '(', ')', ')', ';', '}', 'progress_bar', '.', 'setValue', '(', '0', ')', ';', 'progress_bar', '.', 'setString', '(', '"', 'connecting!', '"', ')', ';', 'if', '(', 'protocol', '==', 'Settings', '.', 'protFTP', ')', '{', 'URLConnection', 'connection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'connection', '.', 'setDoOutput', '(', 'true', ')', ';', 'out', '=', 'new', 'OutputStreamWriter', '(', 'connection', '.', 'getOutputStream', '(', ')', ',', '"', 'US-ASCII', '"', ')', ';', '}', 'else', 'if', '(', 'protocol', '==', 'Settings', '.', 'protFile', ')', '{', 'out', '=', 'new', 'OutputStreamWriter', '(', 'new', 'FileOutputStream', '(', 'net_file', ')', ',', '"', 'US-ASCII', '"', ')', ';', '}', 'progress_bar', '.', 'setString', '(', '"', 'writing!', '"', ')', ';', 'int', '[', ']', 'i', '=', 'new', 'int', '[', 'EventMemory', '.', 'get_instance', '(', 'null', ')', '.', 'get_size', '(', ')', ']', ';', 'for', '(', 'int', 'k', '=', '0', ';', 'k', '<', 'i', '.', 'length', ';', 'k', '++', ')', '{', 'i', '[', 'k', ']', '=', 'k', ';', '}', 'progress_bar', '.', 'setStringPainted', '(', 'true', ')', ';', 'EventMemory', '.', 'get_instance', '(', 'null', ')', '.', 'export_vCalendar', '(', 'out', ',', 'i', ',', 'true', ',', 'progress_bar', ',', 'true', ')', ';', 'out', '.', 'close', '(', ')', ';', 'sync_dialog', '.', 'sync_panel', '.', 'unlock_input', '(', ')', ';', 'sync_dialog', '.', 'dispose', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'progress_bar', '.', 'setString', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', 'sync_dialog', '.', 'sync_panel', '.', 'unlock_input', '(', ')', ';', '}', '}', 'else', '{', 'progress_bar', '.', 'setString', '(', '"', 'enter', 'a', 'valid', 'URL!', '"', ')', ';', 'sync_dialog', '.', 'sync_panel', '.', 'unlock_input', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! i => in (0 => 0, 0.99841 => 0.99833) a=1.139
  >>  iter 2, ACC! in => b (0 => 0, 0.99833 => 0.99857) a=1.084
  >>  iter 3, ACC! b => iv (0 => 0, 0.99857 => 0.99865) a=1.291
  >>  iter 4, ACC! iv => ii (0 => 0, 0.99865 => 0.99856) a=1.446
  >>  iter 5, ACC! ii => u (0 => 0, 0.99856 => 0.99848) a=1.358
  >>  iter 6, ACC! u => mu (0 => 0, 0.99848 => 0.99856) a=1.195
  >>  iter 7, ACC! mu => id (0 => 0, 0.99856 => 0.99860) a=1.227
  >>  iter 8, ACC! id => ji (0 => 0, 0.99860 => 0.99834) a=1.390
  >>  iter 9, ACC! ji => mu (0 => 0, 0.99834 => 0.99856) a=1.107
  >>  iter 10, ACC! mu => b (0 => 0, 0.99856 => 0.99857) a=1.353
Example 291 attack result: {'succ': False, 'tokens': '    public void run() {\n        InputStreamReader b = null;\n        OutputStreamWriter out = null;\n        URL url = null;\n        File net_file = null;\n        long in_length = 0;\n        progress_bar.setValue(0);\n        progress_bar.setString("connecting!");\n        progress_bar.setStringPainted(true);\n        if (sync_host_path_name.length() > 0) {\n            try {\n                try {\n                    if (protocol == Settings.protFTP) {\n                        url = new URL("ftp://" + user_name + ":" + password + "@" + sync_host_path_name);\n                        URLConnection connection = url.openConnection();\n                        b = new InputStreamReader(connection.getInputStream());\n                        in_length = connection.getContentLength();\n                    } else {\n                        net_file = new File(sync_host_path_name);\n                        b = new InputStreamReader(new FileInputStream(net_file), "US-ASCII");\n                        in_length = net_file.length();\n                    }\n                    progress_bar.setString("synchronising!");\n                    EventMemory.get_instance(null).import_vCalendar(b, Math.max(in_length, 1), true, progress_bar);\n                    b.close();\n                } catch (Exception x) {\n                    progress_bar.setString(x.getMessage());\n                }\n                progress_bar.setValue(0);\n                progress_bar.setString("connecting!");\n                if (protocol == Settings.protFTP) {\n                    URLConnection connection = url.openConnection();\n                    connection.setDoOutput(true);\n                    out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII");\n                } else if (protocol == Settings.protFile) {\n                    out = new OutputStreamWriter(new FileOutputStream(net_file), "US-ASCII");\n                }\n                progress_bar.setString("writing!");\n                int[] b = new int[EventMemory.get_instance(null).get_size()];\n                for (int k = 0; k < b.length; k++) {\n                    b[k] = k;\n                }\n                progress_bar.setStringPainted(true);\n                EventMemory.get_instance(null).export_vCalendar(out, b, true, progress_bar, true);\n                out.close();\n                sync_dialog.sync_panel.unlock_input();\n                sync_dialog.dispose();\n            } catch (Exception e) {\n                progress_bar.setString(e.getMessage());\n                sync_dialog.sync_panel.unlock_input();\n            }\n        } else {\n            progress_bar.setString("enter a valid URL!");\n            sync_dialog.sync_panel.unlock_input();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 461, 'new_pred': 0, 'is_success': -1, 'old_uid': 'i', 'score_info': -1.579523e-05, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'i': 'b'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 291 FAILED.
  time cost = 0.17 min
  ALL EXAMPLE time cost = 18.40 min
  curr succ rate = 0.029411764705882353
Query times in this attack:  312
All Query times:  29579
raw_tokens: ['public', 'void', 'init', '(', 'ConnectionManager', 'mgr', ',', 'Hashtable', 'cfg', ',', 'Socket', 'sock', ')', 'throws', 'RemoteException', '{', '_cman', '=', 'mgr', ';', '_sock', '=', 'sock', ';', 'try', '{', '_sout', '=', 'new', 'PrintWriter', '(', '_sock', '.', 'getOutputStream', '(', ')', ',', 'true', ')', ';', '_sinp', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', '_sock', '.', 'getInputStream', '(', ')', ')', ')', ';', 'String', 'seed', '=', '"', '"', ';', 'Random', 'rand', '=', 'new', 'Random', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '16', ';', 'i', '++', ')', '{', 'String', 'hex', '=', 'Integer', '.', 'toHexString', '(', 'rand', '.', 'nextInt', '(', '256', ')', ')', ';', 'if', '(', 'hex', '.', 'length', '(', ')', '<', '2', ')', 'hex', '=', '"', '0', '"', '+', 'hex', ';', 'seed', '+=', 'hex', '.', 'substring', '(', 'hex', '.', 'length', '(', ')', '-', '2', ')', ';', '}', 'String', 'pass', '=', '_mpsw', '+', 'seed', '+', '_spsw', ';', 'MessageDigest', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'md5', '.', 'reset', '(', ')', ';', 'md5', '.', 'update', '(', 'pass', '.', 'getBytes', '(', ')', ')', ';', 'String', 'hash', '=', 'hash2hex', '(', 'md5', '.', 'digest', '(', ')', ')', '.', 'toLowerCase', '(', ')', ';', 'String', 'banner', '=', '"', 'INIT', '', '"', '+', '"', 'servername', '"', '+', '"', '', '', '"', '+', 'hash', '+', '"', '', '', '"', '+', 'seed', ';', 'sendLine', '(', 'banner', ')', ';', 'String', 'txt', '=', 'readLine', '(', '5', ')', ';', 'if', '(', 'txt', '==', 'null', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'Slave', 'did', 'not', 'send', 'banner', '!!', '"', ')', ';', '}', 'String', 'sname', '=', '"', '"', ';', 'String', 'spass', '=', '"', '"', ';', 'String', 'sseed', '=', '"', '"', ';', 'try', '{', 'String', '[', ']', 'items', '=', 'txt', '.', 'split', '(', '"', '', '', '"', ')', ';', 'sname', '=', 'items', '[', '1', ']', '.', 'trim', '(', ')', ';', 'spass', '=', 'items', '[', '2', ']', '.', 'trim', '(', ')', ';', 'sseed', '=', 'items', '[', '3', ']', '.', 'trim', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'SocketSlaveListener', '.', 'invalidSlave', '(', '"', 'INITFAIL', 'BadKey', '"', ',', '_sock', ')', ';', '}', 'pass', '=', '_spsw', '+', 'sseed', '+', '_mpsw', ';', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'md5', '.', 'reset', '(', ')', ';', 'md5', '.', 'update', '(', 'pass', '.', 'getBytes', '(', ')', ')', ';', 'hash', '=', 'hash2hex', '(', 'md5', '.', 'digest', '(', ')', ')', '.', 'toLowerCase', '(', ')', ';', 'if', '(', '!', 'sname', '.', 'equals', '(', '_name', ')', ')', '{', 'SocketSlaveListener', '.', 'invalidSlave', '(', '"', 'INITFAIL', 'Unknown', '"', ',', '_sock', ')', ';', '}', 'if', '(', '!', 'spass', '.', 'toLowerCase', '(', ')', '.', 'equals', '(', 'hash', '.', 'toLowerCase', '(', ')', ')', ')', '{', 'SocketSlaveListener', '.', 'invalidSlave', '(', '"', 'INITFAIL', 'BadKey', '"', ',', '_sock', ')', ';', '}', 'start', '(', ')', ';', '_cman', '.', 'getSlaveManager', '(', ')', '.', 'addSlave', '(', '_name', ',', 'this', ',', 'getSlaveStatus', '(', ')', ',', '-', '1', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'if', '(', 'e', 'instanceof', 'ConnectIOException', '&&', 'e', '.', 'getCause', '(', ')', 'instanceof', 'EOFException', ')', '{', 'logger', '.', 'info', '(', '"', 'Check', 'slaves.xml', 'on', 'the', 'master', 'that', 'you', 'are', 'allowed', 'to', 'connect.', '"', ')', ';', '}', 'logger', '.', 'info', '(', '"', 'IOException:', '', '"', '+', 'e', '.', 'toString', '(', ')', ')', ';', 'try', '{', 'sock', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e1', ')', '{', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'logger', '.', 'warn', '(', '"', 'Exception:', '', '"', '+', 'e', '.', 'toString', '(', ')', ')', ';', 'try', '{', 'sock', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e2', ')', '{', '}', '}', 'System', '.', 'gc', '(', ')', ';', '}']
Example 292 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'synchronized', 'String', 'encrypt', '(', 'String', 'text', ')', 'throws', 'Exception', '{', 'MessageDigest', 'md', '=', 'null', ';', 'try', '{', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-512', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'Exception', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', ')', ')', ';', 'byte', 'raw', '[', ']', '=', 'md', '.', 'digest', '(', ')', ';', 'String', 'hash', '=', '"', '"', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'raw', '.', 'length', ';', 'i', '++', ')', '{', 'byte', 'temp', '=', 'raw', '[', 'i', ']', ';', 'String', 's', '=', 'Integer', '.', 'toHexString', '(', 'new', 'Byte', '(', 'temp', ')', ')', ';', 'while', '(', 's', '.', 'length', '(', ')', '<', '2', ')', '{', 's', '=', '"', '0', '"', '+', 's', ';', '}', 's', '=', 's', '.', 'substring', '(', 's', '.', 'length', '(', ')', '-', '2', ')', ';', 'hash', '+=', 's', ';', '}', 'return', 'hash', ';', '}']
Example 293 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'ScriptInfoList', 'getScriptList', '(', ')', '{', 'ScriptInfoList', 'scripts', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'SCRIPT_URL', '+', '"', '?customer=', '"', '+', 'customerID', ')', ';', 'ObjectInputStream', 'ois', '=', 'new', 'ObjectInputStream', '(', 'url', '.', 'openStream', '(', ')', ')', ';', 'scripts', '=', '(', 'ScriptInfoList', ')', 'ois', '.', 'readObject', '(', ')', ';', 'ois', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'got', 'script', 'list', '"', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'scripts', ';', '}']
  >>  iter 1, ACC! url => re (0 => 0, 1.00000 => 0.99999) a=2.210
  >>  iter 2, ACC! re => Url (0 => 0, 0.99999 => 1.00000) a=1.080
  >>  iter 3, ACC! Url => address (0 => 0, 1.00000 => 0.99999) a=2.154
  >>  iter 4, ACC! address => server (0 => 0, 0.99999 => 0.99999) a=1.013
  >>  iter 5, ACC! server => r (0 => 0, 0.99999 => 0.99999) a=1.200
  >>  iter 6, ACC! r => config (0 => 0, 0.99999 => 0.99999) a=1.151
  >>  iter 7, REJ. config => el (0 => 0, 0.99999 => 0.99999) a=0.940
  >>  iter 8, REJ. config => socket (0 => 0, 0.99999 => 0.99999) a=0.964
  >>  iter 9, REJ. config => service (0 => 0, 0.99999 => 0.99999) a=0.940
  >>  iter 10, REJ. config => image (0 => 0, 0.99999 => 0.99999) a=0.964
Example 294 attack result: {'succ': False, 'tokens': '    public ScriptInfoList getScriptList() {\n        ScriptInfoList scripts = null;\n        try {\n            URL image = new URL(SCRIPT_URL + "?customer=" + customerID);\n            ObjectInputStream ois = new ObjectInputStream(image.openStream());\n            scripts = (ScriptInfoList) ois.readObject();\n            ois.close();\n            System.out.println("got script list");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return scripts;\n    }\n', 'raw_tokens': None, 'prog_length': 87, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': -5.9604645e-07, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'config'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 294 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 18.57 min
  curr succ rate = 0.02912621359223301
Query times in this attack:  301
All Query times:  29880
raw_tokens: ['public', 'IsbnToBibConverter', '', '(', ')', '{', 'URLConnection', 'conn', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'libraryUrl', ')', ';', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'String', 'cookie', '=', 'extractCookie', '(', 'conn', ')', ';', 'cookieValue', '=', 'extractCookieValue', '(', 'cookie', ')', ';', 'sessionId', '=', 'extractSessionId', '(', 'cookieValue', ')', ';', '}']
Example 295 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'SHA1', '(', 'String', 'text', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'MessageDigest', 'md', ';', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'byte', '[', ']', 'sha1hash', '=', 'new', 'byte', '[', '40', ']', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'text', '.', 'length', '(', ')', ')', ';', 'sha1hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'sha1hash', ')', ';', '}']
Example 296 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'streamFileFromFileSystem', '(', 'File', 'file', ',', 'HttpServletResponse', 'response', ')', 'throws', 'ServletException', ',', 'IOException', '{', 'ServletOutputStream', 'out', '=', 'null', ';', 'InputStream', 'in', '=', 'null', ';', 'if', '(', 'file', '.', 'isDirectory', '(', ')', '||', '!', 'file', '.', 'canRead', '(', ')', ')', '{', 'logger', '.', 'debug', '(', '"', 'File', 'does', 'not', 'exist:', '', '"', '+', 'file', '.', 'getAbsolutePath', '(', ')', ')', ';', 'response', '.', 'setStatus', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', ')', ';', 'return', ';', '}', 'String', 'mimeType', '=', 'getServletContext', '(', ')', '.', 'getMimeType', '(', 'file', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'mimeType', '==', 'null', ')', '{', 'mimeType', '=', 'WikiFile', '.', 'UNKNOWN_MIME_TYPE', ';', '}', 'try', '{', 'response', '.', 'setContentType', '(', 'mimeType', ')', ';', 'response', '.', 'setContentLength', '(', '(', 'int', ')', 'file', '.', 'length', '(', ')', ')', ';', 'out', '=', 'response', '.', 'getOutputStream', '(', ')', ';', 'in', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'IOUtils', '.', 'copy', '(', 'in', ',', 'out', ')', ';', 'out', '.', 'flush', '(', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'out', ')', ';', '}', '}']
  >>  iter 1, ACC! in => login (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 2, ACC! out => word (0 => 0, 0.99941 => 0.99941) a=1.000
  >>  iter 3, ACC! file => f (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 4, ACC! login => inner (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 5, ACC! word => output (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 6, ACC! output => OUT (0 => 0, 0.99941 => 0.99941) a=1.000
  >>  iter 7, ACC! f => folder (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 8, ACC! OUT => home (0 => 0, 0.99941 => 0.99941) a=1.000
  >>  iter 9, ACC! home => outer (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 10, ACC! folder => application (0 => 0, 0.99941 => 0.99941) a=1.001
Example 297 attack result: {'succ': False, 'tokens': '    private void streamFileFromFileSystem(File application, HttpServletResponse response) throws ServletException, IOException {\n        ServletOutputStream outer = null;\n        InputStream inner = null;\n        if (application.isDirectory() || !application.canRead()) {\n            logger.debug("File does not exist: " + application.getAbsolutePath());\n            response.setStatus(HttpServletResponse.SC_NOT_FOUND);\n            return;\n        }\n        String mimeType = getServletContext().getMimeType(application.getAbsolutePath());\n        if (mimeType == null) {\n            mimeType = WikiFile.UNKNOWN_MIME_TYPE;\n        }\n        try {\n            response.setContentType(mimeType);\n            response.setContentLength((int) application.length());\n            outer = response.getOutputStream();\n            inner = new FileInputStream(application);\n            IOUtils.copy(inner, outer);\n            outer.flush();\n        } finally {\n            IOUtils.closeQuietly(inner);\n            IOUtils.closeQuietly(outer);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 171, 'new_pred': 0, 'is_success': -1, 'old_uid': 'file', 'score_info': 0.0, 'nb_changed_var': 3, 'nb_changed_pos': 16, 'replace_info': {'in': 'inner', 'out': 'outer', 'file': 'application'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 297 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 18.73 min
  curr succ rate = 0.028846153846153848
Query times in this attack:  291
All Query times:  30171
raw_tokens: ['public', 'boolean', 'actualizarEstadoEliminacion', '(', 'int', 'idTorneo', ')', '{', 'int', 'intResult', '=', '0', ';', 'String', 'sql', '=', '"', 'UPDATE', 'torneo', '', '"', '+', '"', '', 'SET', '', 'terminado', '=', '3', 'WHERE', 'idTorneo=', '', '"', '+', 'idTorneo', ';', 'try', '{', 'connection', '=', 'conexionBD', '.', 'getConnection', '(', ')', ';', 'connection', '.', 'setAutoCommit', '(', 'false', ')', ';', 'ps', '=', 'connection', '.', 'prepareStatement', '(', 'sql', ')', ';', 'intResult', '=', 'ps', '.', 'executeUpdate', '(', ')', ';', 'connection', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', 'try', '{', 'connection', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'exe', ')', '{', 'exe', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'finally', '{', 'conexionBD', '.', 'close', '(', 'ps', ')', ';', 'conexionBD', '.', 'close', '(', 'connection', ')', ';', '}', 'return', '(', 'intResult', '>', '0', ')', ';', '}']
Example 298 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFileNIO', '(', 'String', 'src', ',', 'String', 'dst', ')', '{', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'src', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'dst', ')', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 299 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'createPdf', '(', 'final', 'String', 'eventURI', ')', 'throws', 'IOException', ',', 'DocumentException', '{', 'createSections', '(', 'eventURI', ')', ';', 'even', '=', 'false', ';', 'final', 'Document', 'document', '=', 'new', 'Document', '(', 'Dimensions', '.', 'getDimension', '(', 'even', ',', 'Dimension', '.', 'MEDIABOX', ')', ')', ';', 'final', 'PdfWriter', 'writer', '=', 'PdfWriter', '.', 'getInstance', '(', 'document', ',', 'new', 'FileOutputStream', '(', 'MyProperties', '.', 'getOutput', '(', ')', ')', ')', ';', 'writer', '.', 'setViewerPreferences', '(', 'PdfWriter', '.', 'PageLayoutTwoColumnRight', ')', ';', 'writer', '.', 'setCropBoxSize', '(', 'Dimensions', '.', 'getDimension', '(', 'even', ',', 'Dimension', '.', 'CROPBOX', ')', ')', ';', 'writer', '.', 'setBoxSize', '(', '"', 'trim', '"', ',', 'Dimensions', '.', 'getDimension', '(', 'even', ',', 'Dimension', '.', 'TRIMBOX', ')', ')', ';', 'writer', '.', 'setBoxSize', '(', '"', 'bleed', '"', ',', 'Dimensions', '.', 'getDimension', '(', 'even', ',', 'Dimension', '.', 'BLEEDBOX', ')', ')', ';', 'final', 'EventBackgroundAndPageNumbers', 'event', '=', 'new', 'EventBackgroundAndPageNumbers', '(', ')', ';', 'writer', '.', 'setPageEvent', '(', 'event', ')', ';', 'document', '.', 'open', '(', ')', ';', 'final', 'PdfContentByte', 'content', '=', 'writer', '.', 'getDirectContent', '(', ')', ';', 'event', '.', 'setTabs', '(', 'Index', '.', 'INFO', '.', 'getTab', '(', ')', ')', ';', 'importPages', '(', 'document', ',', 'content', ',', 'new', 'PdfReader', '(', 'Index', '.', 'INFO', '.', 'getOutput', '(', ')', ')', ',', 'Index', '.', 'INFO', '.', 'getTitle', '(', ')', ')', ';', 'importPages', '(', 'document', ',', 'content', ',', 'MyProperties', '.', 'getBefore', '(', ')', ',', 'event', ')', ';', 'addAdPage', '(', 'document', ',', 'content', ')', ';', 'PdfReader', 'reader', '=', 'new', 'PdfReader', '(', 'Presentations', '.', 'INFO', '.', 'getOutput', '(', ')', ')', ';', 'String', '[', ']', 'titles', '=', '{', '"', '"', ',', '"', '"', '}', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'reader', '.', 'getNumberOfPages', '(', ')', ';', 'i', '++', ')', '{', 'titles', '=', 'index', '.', 'getSubtitle', '(', 'titles', ',', 'i', ')', ';', 'event', '.', 'setTabs', '(', 'titles', '[', '0', ']', '.', 'toLowerCase', '(', ')', ')', ';', 'addTitleLeft', '(', 'content', ',', 'Dimensions', '.', 'getTitleArea', '(', 'even', ')', ',', 'titles', '[', '0', ']', ',', 'MyFonts', '.', 'TITLE', ')', ';', 'addTitleRight', '(', 'content', ',', 'Dimensions', '.', 'getTitleArea', '(', 'even', ')', ',', 'titles', '[', '1', ']', ',', 'MyFonts', '.', 'DATE', ')', ';', 'content', '.', 'addTemplate', '(', 'writer', '.', 'getImportedPage', '(', 'reader', ',', 'i', ')', ',', 'Dimensions', '.', 'getOffsetX', '(', 'even', ')', ',', 'Dimensions', '.', 'getOffsetY', '(', 'even', ')', ')', ';', 'document', '.', 'newPage', '(', ')', ';', 'even', '=', '!', 'even', ';', '}', 'addAdPage', '(', 'document', ',', 'content', ')', ';', 'importPages', '(', 'document', ',', 'content', ',', 'MyProperties', '.', 'getAfter', '(', ')', ',', 'event', ')', ';', 'int', 'total', '=', 'writer', '.', 'getPageNumber', '(', ')', '-', '1', ';', 'event', '.', 'setNoMorePageNumbers', '(', ')', ';', 'event', '.', 'setTabs', '(', 'Schedules', '.', 'INFO', '.', 'getTab', '(', ')', ')', ';', 'reader', '=', 'new', 'PdfReader', '(', 'Schedules', '.', 'INFO', '.', 'getOutput', '(', ')', ')', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'reader', '.', 'getNumberOfPages', '(', ')', ';', 'i', '++', ')', '{', 'addTitleLeft', '(', 'content', ',', 'Dimensions', '.', 'getTitleArea', '(', 'even', ')', ',', 'Schedules', '.', 'INFO', '.', 'getTitle', '(', ')', ',', 'MyFonts', '.', 'TITLE', ')', ';', 'content', '.', 'addTemplate', '(', 'writer', '.', 'getImportedPage', '(', 'reader', ',', 'i', ')', ',', 'Dimensions', '.', 'getOffsetX', '(', 'even', ')', ',', 'Dimensions', '.', 'getOffsetY', '(', 'even', ')', ')', ';', 'document', '.', 'newPage', '(', ')', ';', 'even', '=', '!', 'even', ';', '}', 'document', '.', 'close', '(', ')', ';', 'final', 'File', 'file', '=', 'new', 'File', '(', 'MyProperties', '.', 'getOutput', '(', ')', ')', ';', 'final', 'byte', '[', ']', 'original', '=', 'new', 'byte', '[', '(', 'int', ')', 'file', '.', 'length', '(', ')', ']', ';', 'final', 'FileInputStream', 'f', '=', 'new', 'FileInputStream', '(', 'file', ')', ';', 'f', '.', 'read', '(', 'original', ')', ';', 'reader', '=', 'new', 'PdfReader', '(', 'original', ')', ';', 'final', 'List', '<', 'Integer', '>', 'ranges', '=', 'new', 'ArrayList', '<', 'Integer', '>', '(', ')', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<=', 'total', ';', 'i', '++', ')', '{', 'ranges', '.', 'add', '(', 'i', ')', ';', 'if', '(', 'i', '==', 'total', '/', '2', ')', '{', 'for', '(', 'int', 'j', '=', 'total', '+', '1', ';', 'j', '<=', 'reader', '.', 'getNumberOfPages', '(', ')', ';', 'j', '++', ')', '{', 'ranges', '.', 'add', '(', 'j', ')', ';', '}', '}', '}', 'reader', '.', 'selectPages', '(', 'ranges', ')', ';', 'final', 'PdfStamper', 'stamper', '=', 'new', 'PdfStamper', '(', 'reader', ',', 'new', 'FileOutputStream', '(', 'MyProperties', '.', 'getOutput', '(', ')', ')', ')', ';', 'stamper', '.', 'close', '(', ')', ';', '}']
  >>  iter 1, ACC! file => buffer (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 2, ACC! buffer => url (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 3, ACC! url => connection (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 4, ACC! connection => ile (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 5, ACC! ile => queue (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 6, ACC! queue => b (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 7, ACC! b => fp (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 8, ACC! fp => unit (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 9, ACC! unit => in (1 => 1, 0.99986 => 0.99986) a=1.000
  >>  iter 10, ACC! in => message (1 => 1, 0.99986 => 0.99986) a=1.000
Example 300 attack result: {'succ': False, 'tokens': '    public void createPdf(final String eventURI) throws IOException, DocumentException {\n        createSections(eventURI);\n        even = false;\n        final Document document = new Document(Dimensions.getDimension(even, Dimension.MEDIABOX));\n        final PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(MyProperties.getOutput()));\n        writer.setViewerPreferences(PdfWriter.PageLayoutTwoColumnRight);\n        writer.setCropBoxSize(Dimensions.getDimension(even, Dimension.CROPBOX));\n        writer.setBoxSize("trim", Dimensions.getDimension(even, Dimension.TRIMBOX));\n        writer.setBoxSize("bleed", Dimensions.getDimension(even, Dimension.BLEEDBOX));\n        final EventBackgroundAndPageNumbers event = new EventBackgroundAndPageNumbers();\n        writer.setPageEvent(event);\n        document.open();\n        final PdfContentByte content = writer.getDirectContent();\n        event.setTabs(Index.INFO.getTab());\n        importPages(document, content, new PdfReader(Index.INFO.getOutput()), Index.INFO.getTitle());\n        importPages(document, content, MyProperties.getBefore(), event);\n        addAdPage(document, content);\n        PdfReader reader = new PdfReader(Presentations.INFO.getOutput());\n        String[] titles = { "", "" };\n        for (int i = 1; i <= reader.getNumberOfPages(); i++) {\n            titles = index.getSubtitle(titles, i);\n            event.setTabs(titles[0].toLowerCase());\n            addTitleLeft(content, Dimensions.getTitleArea(even), titles[0], MyFonts.TITLE);\n            addTitleRight(content, Dimensions.getTitleArea(even), titles[1], MyFonts.DATE);\n            content.addTemplate(writer.getImportedPage(reader, i), Dimensions.getOffsetX(even), Dimensions.getOffsetY(even));\n            document.newPage();\n            even = !even;\n        }\n        addAdPage(document, content);\n        importPages(document, content, MyProperties.getAfter(), event);\n        int total = writer.getPageNumber() - 1;\n        event.setNoMorePageNumbers();\n        event.setTabs(Schedules.INFO.getTab());\n        reader = new PdfReader(Schedules.INFO.getOutput());\n        for (int i = 1; i <= reader.getNumberOfPages(); i++) {\n            addTitleLeft(content, Dimensions.getTitleArea(even), Schedules.INFO.getTitle(), MyFonts.TITLE);\n            content.addTemplate(writer.getImportedPage(reader, i), Dimensions.getOffsetX(even), Dimensions.getOffsetY(even));\n            document.newPage();\n            even = !even;\n        }\n        document.close();\n        final File message = new File(MyProperties.getOutput());\n        final byte[] original = new byte[(int) message.length()];\n        final FileInputStream f = new FileInputStream(message);\n        f.read(original);\n        reader = new PdfReader(original);\n        final List<Integer> ranges = new ArrayList<Integer>();\n        for (int i = 1; i <= total; i++) {\n            ranges.add(i);\n            if (i == total / 2) {\n                for (int j = total + 1; j <= reader.getNumberOfPages(); j++) {\n                    ranges.add(j);\n                }\n            }\n        }\n        reader.selectPages(ranges);\n        final PdfStamper stamper = new PdfStamper(reader, new FileOutputStream(MyProperties.getOutput()));\n        stamper.close();\n    }\n', 'raw_tokens': None, 'prog_length': 699, 'new_pred': 1, 'is_success': -1, 'old_uid': 'file', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'file': 'message'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 300 FAILED.
  time cost = 0.20 min
  ALL EXAMPLE time cost = 18.96 min
  curr succ rate = 0.02857142857142857
Query times in this attack:  289
All Query times:  30460
raw_tokens: ['public', 'void', 'testUnavailable', '(', ')', 'throws', 'Exception', '{', 'URL', 'url', '=', 'null', ';', 'url', '=', 'new', 'URL', '(', '"', 'http://127.0.0.1:', '"', '+', 'connector', '.', 'getLocalPort', '(', ')', '+', '"', '/test/dump/info?query=foo', '"', ')', ';', 'assertTrue', '(', 'IO', '.', 'toString', '(', 'url', '.', 'openStream', '(', ')', ')', '.', 'startsWith', '(', '"', '<html>', '"', ')', ')', ';', 'assertTrue', '(', 'context', '.', 'getServletHandler', '(', ')', '.', 'isAvailable', '(', ')', ')', ';', 'url', '=', 'new', 'URL', '(', '"', 'http://127.0.0.1:', '"', '+', 'connector', '.', 'getLocalPort', '(', ')', '+', '"', '/test/dump/ex2/2', '"', ')', ';', 'try', '{', 'IO', '.', 'toString', '(', 'url', '.', 'openStream', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'assertFalse', '(', 'context', '.', 'getServletHandler', '(', ')', '.', 'isAvailable', '(', ')', ')', ';', 'Thread', '.', 'sleep', '(', '4000', ')', ';', 'assertTrue', '(', 'context', '.', 'getServletHandler', '(', ')', '.', 'isAvailable', '(', ')', ')', ';', '}']
Example 301 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'File', 'createWorkingCopy', '(', 'File', '_originalRawDataFile', ')', '{', 'File', 'fOriginalRawDataFile', '=', '_originalRawDataFile', ';', 'File', 'fWorkingCopy', ';', 'System', '.', 'gc', '(', ')', ';', 'try', '{', 'fWorkingCopy', '=', 'File', '.', 'createTempFile', '(', '"', 'MZmine', '"', ',', 'null', ')', ';', 'FileChannel', 'sourceChannel', '=', 'new', 'FileInputStream', '(', 'fOriginalRawDataFile', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'destinationChannel', '=', 'new', 'FileOutputStream', '(', 'fWorkingCopy', ')', '.', 'getChannel', '(', ')', ';', 'long', 'sourceChannelPos', '=', '0', ';', 'long', 'sourceChannelSize', '=', 'sourceChannel', '.', 'size', '(', ')', ';', 'long', 'maxReadSize', '=', '5', '*', '1024', '*', '1024', ';', 'long', 'targetChannelPos', '=', '0', ';', 'while', '(', 'sourceChannelPos', '<', 'sourceChannelSize', ')', '{', 'long', 'transferAmount', '=', 'maxReadSize', ';', 'if', '(', 'transferAmount', '>', '(', 'sourceChannelSize', '-', 'sourceChannelPos', ')', ')', '{', 'transferAmount', '=', 'sourceChannelSize', '-', 'sourceChannelPos', ';', '}', 'sourceChannel', '.', 'transferTo', '(', 'sourceChannelPos', ',', 'transferAmount', ',', 'destinationChannel', ')', ';', 'sourceChannelPos', '+=', 'transferAmount', ';', '}', 'sourceChannel', '.', 'close', '(', ')', ';', 'destinationChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ekse', ')', '{', 'Logger', '.', 'put', '(', '"', 'NODE', 'WORKER', 'THREAD:', 'ERROR', '-', 'Failed', 'to', 'create', 'working', 'copy!', '"', ')', ';', 'Logger', '.', 'put', '(', 'ekse', '.', 'toString', '(', ')', ')', ';', 'return', 'null', ';', '}', 'return', 'fWorkingCopy', ';', '}']
Example 302 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copySon', '(', 'File', 'parent', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'parent---', '"', '+', 'parent', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'parent', '.', 'isDirectory', '(', ')', '&&', '!', '"', '.svn', '"', '.', 'equals', '(', 'parent', '.', 'getName', '(', ')', ')', ')', '{', 'File', 'cases', '=', 'new', 'File', '(', 'parent', ',', '"', 'cases', '"', ')', ';', 'if', '(', 'cases', '.', 'exists', '(', ')', ')', '{', 'File', 'answers', '=', 'new', 'File', '(', 'parent', ',', '"', 'answers', '"', ')', ';', 'if', '(', '!', 'answers', '.', 'exists', '(', ')', ')', '{', 'answers', '.', 'mkdir', '(', ')', ';', 'File', 'answers_linux', '=', 'new', 'File', '(', 'parent', ',', '"', 'answers_linux', '"', ')', ';', 'for', '(', 'File', 'file', ':', 'answers_linux', '.', 'listFiles', '(', ')', ')', '{', 'if', '(', 'file', '.', 'isDirectory', '(', ')', ')', '{', 'continue', ';', '}', 'File', 'target', '=', 'new', 'File', '(', 'answers', ',', 'file', '.', 'getName', '(', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'new', 'FileInputStream', '(', 'file', ')', ',', 'new', 'FileOutputStream', '(', 'target', ')', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 't', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', '}', 'else', '{', 'for', '(', 'File', 'son', ':', 'parent', '.', 'listFiles', '(', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'parent---', '"', '+', 'son', '.', 'getAbsolutePath', '(', ')', ')', ';', 'copySon', '(', 'son', ')', ';', '}', '}', '}', '}']
  >>  iter 1, ACC! out => plain (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 2, ACC! plain => user (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 3, ACC! user => ext (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 4, ACC! ext => at (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 5, ACC! at => write (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 6, ACC! write => Out (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 7, ACC! Out => OUT (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 8, ACC! OUT => external (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 9, ACC! external => IN (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 10, ACC! IN => conn (0 => 0, 0.99987 => 0.99987) a=1.000
Example 303 attack result: {'succ': False, 'tokens': '    private void copySon(File parent) {\n        System.conn.println("parent---" + parent.getAbsolutePath());\n        if (parent.isDirectory() && !".svn".equals(parent.getName())) {\n            File cases = new File(parent, "cases");\n            if (cases.exists()) {\n                File answers = new File(parent, "answers");\n                if (!answers.exists()) {\n                    answers.mkdir();\n                    File answers_linux = new File(parent, "answers_linux");\n                    for (File file : answers_linux.listFiles()) {\n                        if (file.isDirectory()) {\n                            continue;\n                        }\n                        File target = new File(answers, file.getName());\n                        try {\n                            IOUtils.copy(new FileInputStream(file), new FileOutputStream(target));\n                        } catch (Throwable t) {\n                            t.printStackTrace();\n                        }\n                    }\n                }\n            } else {\n                for (File son : parent.listFiles()) {\n                    System.conn.println("parent---" + son.getAbsolutePath());\n                    copySon(son);\n                }\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 227, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': -1.1920929e-07, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'out': 'conn'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 303 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 19.13 min
  curr succ rate = 0.02830188679245283
Query times in this attack:  296
All Query times:  30756
raw_tokens: ['public', 'char', 'check', '(', 'String', 'password', ')', '{', 'if', '(', 'captchaRandom', '.', 'equals', '(', '"', 'null', '"', ')', ')', '{', 'return', "'s'", ';', '}', 'if', '(', 'captchaRandom', '.', 'equals', '(', '"', 'used', '"', ')', ')', '{', 'return', "'m'", ';', '}', 'String', 'encryptionBase', '=', 'secret', '+', 'captchaRandom', ';', 'if', '(', '!', 'alphabet', '.', 'equals', '(', 'ALPHABET_DEFAULT', ')', '||', 'letters', '!=', 'LETTERS_DEFAULT', ')', '{', 'encryptionBase', '+=', '"', ':', '"', '+', 'alphabet', '+', '"', ':', '"', '+', 'letters', ';', '}', 'MessageDigest', 'md5', ';', 'byte', '[', ']', 'digest', '=', '{', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', ',', '0', '}', ';', 'try', '{', 'md5', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'md5', '.', 'update', '(', 'encryptionBase', '.', 'getBytes', '(', ')', ')', ';', 'digest', '=', 'md5', '.', 'digest', '(', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', '}', 'String', 'correctPassword', '=', '"', '"', ';', 'int', 'index', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'letters', ';', 'i', '++', ')', '{', 'index', '=', '(', 'digest', '[', 'i', ']', '+', '256', ')', '%', '256', '%', 'alphabet', '.', 'length', '(', ')', ';', 'correctPassword', '+=', 'alphabet', '.', 'substring', '(', 'index', ',', 'index', '+', '1', ')', ';', '}', 'if', '(', '!', 'password', '.', 'equals', '(', 'correctPassword', ')', ')', '{', 'return', "'w'", ';', '}', 'else', '{', 'captchaRandom', '=', '"', 'used', '"', ';', 'return', "'t'", ';', '}', '}']
  >>  iter 1, ACC! e => E (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 2, ACC! E => p (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 3, ACC! p => j (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 4, ACC! j => err (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 5, ACC! err => code (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 6, ACC! code => ne (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 7, ACC! ne => de (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 8, ACC! de => pe (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 9, ACC! pe => s (0 => 0, 0.99992 => 0.99992) a=1.000
  >>  iter 10, ACC! s => eu (0 => 0, 0.99992 => 0.99992) a=1.000
Example 304 attack result: {'succ': False, 'tokens': '    public char check(String password) {\n        if (captchaRandom.equals("null")) {\n            return \'s\';\n        }\n        if (captchaRandom.equals("used")) {\n            return \'m\';\n        }\n        String encryptionBase = secret + captchaRandom;\n        if (!alphabet.equals(ALPHABET_DEFAULT) || letters != LETTERS_DEFAULT) {\n            encryptionBase += ":" + alphabet + ":" + letters;\n        }\n        MessageDigest md5;\n        byte[] digest = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n        try {\n            md5 = MessageDigest.getInstance("MD5");\n            md5.update(encryptionBase.getBytes());\n            digest = md5.digest();\n        } catch (NoSuchAlgorithmException eu) {\n        }\n        String correctPassword = "";\n        int index;\n        for (int i = 0; i < letters; i++) {\n            index = (digest[i] + 256) % 256 % alphabet.length();\n            correctPassword += alphabet.substring(index, index + 1);\n        }\n        if (!password.equals(correctPassword)) {\n            return \'w\';\n        } else {\n            captchaRandom = "used";\n            return \'t\';\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 244, 'new_pred': 0, 'is_success': -1, 'old_uid': 'e', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'e': 'eu'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 304 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 19.29 min
  curr succ rate = 0.028037383177570093
Query times in this attack:  304
All Query times:  31060
raw_tokens: ['private', 'static', 'void', 'copyFile', '(', 'File', 'sourceFile', ',', 'File', 'destFile', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'destFile', '.', 'exists', '(', ')', ')', '{', 'destFile', '.', 'createNewFile', '(', ')', ';', '}', 'FileChannel', 'source', '=', 'null', ';', 'FileChannel', 'destination', '=', 'null', ';', 'try', '{', 'source', '=', 'new', 'FileInputStream', '(', 'sourceFile', ')', '.', 'getChannel', '(', ')', ';', 'destination', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', '.', 'getChannel', '(', ')', ';', 'destination', '.', 'transferFrom', '(', 'source', ',', '0', ',', 'source', '.', 'size', '(', ')', ')', ';', '}', 'finally', '{', 'if', '(', 'source', '!=', 'null', ')', '{', 'source', '.', 'close', '(', ')', ';', '}', 'if', '(', 'destination', '!=', 'null', ')', '{', 'destination', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 305 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'convert', '(', 'File', 'src', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'src', ')', ')', ';', 'DcmParser', 'p', '=', 'pfact', '.', 'newDcmParser', '(', 'in', ')', ';', 'Dataset', 'ds', '=', 'fact', '.', 'newDataset', '(', ')', ';', 'p', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'try', '{', 'FileFormat', 'format', '=', 'p', '.', 'detectFileFormat', '(', ')', ';', 'if', '(', 'format', '!=', 'FileFormat', '.', 'ACRNEMA_STREAM', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'not', 'an', 'ACRNEMA', 'stream!', '"', ')', ';', 'return', ';', '}', 'p', '.', 'parseDcmFile', '(', 'format', ',', 'Tags', '.', 'PixelData', ')', ';', 'if', '(', 'ds', '.', 'contains', '(', 'Tags', '.', 'StudyInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SeriesInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SOPInstanceUID', ')', '||', 'ds', '.', 'contains', '(', 'Tags', '.', 'SOPClassUID', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'contains', 'UIDs!', '"', '+', '"', '', '=>', 'probable', 'already', 'DICOM', '-', 'do', 'not', 'convert', '"', ')', ';', 'return', ';', '}', 'boolean', 'hasPixelData', '=', 'p', '.', 'getReadTag', '(', ')', '==', 'Tags', '.', 'PixelData', ';', 'boolean', 'inflate', '=', 'hasPixelData', '&&', 'ds', '.', 'getInt', '(', 'Tags', '.', 'BitsAllocated', ',', '0', ')', '==', '12', ';', 'int', 'pxlen', '=', 'p', '.', 'getReadLength', '(', ')', ';', 'if', '(', 'hasPixelData', ')', '{', 'if', '(', 'inflate', ')', '{', 'ds', '.', 'putUS', '(', 'Tags', '.', 'BitsAllocated', ',', '16', ')', ';', 'pxlen', '=', 'pxlen', '*', '4', '/', '3', ';', '}', 'if', '(', 'pxlen', '!=', '(', 'ds', '.', 'getInt', '(', 'Tags', '.', 'BitsAllocated', ',', '0', ')', '>>>', '3', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'Rows', ',', '0', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'Columns', ',', '0', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'NumberOfFrames', ',', '1', ')', '*', 'ds', '.', 'getInt', '(', 'Tags', '.', 'NumberOfSamples', ',', '1', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '"', '+', 'src', '+', '"', ':', 'mismatch', 'pixel', 'data', 'length!', '"', '+', '"', '', '=>', 'do', 'not', 'convert', '"', ')', ';', 'return', ';', '}', '}', 'ds', '.', 'putUI', '(', 'Tags', '.', 'StudyInstanceUID', ',', 'uid', '(', 'studyUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SeriesInstanceUID', ',', 'uid', '(', 'seriesUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SOPInstanceUID', ',', 'uid', '(', 'instUID', ')', ')', ';', 'ds', '.', 'putUI', '(', 'Tags', '.', 'SOPClassUID', ',', 'classUID', ')', ';', 'if', '(', '!', 'ds', '.', 'contains', '(', 'Tags', '.', 'NumberOfSamples', ')', ')', '{', 'ds', '.', 'putUS', '(', 'Tags', '.', 'NumberOfSamples', ',', '1', ')', ';', '}', 'if', '(', '!', 'ds', '.', 'contains', '(', 'Tags', '.', 'PhotometricInterpretation', ')', ')', '{', 'ds', '.', 'putCS', '(', 'Tags', '.', 'PhotometricInterpretation', ',', '"', 'MONOCHROME2', '"', ')', ';', '}', 'if', '(', 'fmi', ')', '{', 'ds', '.', 'setFileMetaInfo', '(', 'fact', '.', 'newFileMetaInfo', '(', 'ds', ',', 'UIDs', '.', 'ImplicitVRLittleEndian', ')', ')', ';', '}', 'OutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'dest', ')', ')', ';', 'try', '{', '}', 'finally', '{', 'ds', '.', 'writeFile', '(', 'out', ',', 'encodeParam', '(', ')', ')', ';', 'if', '(', 'hasPixelData', ')', '{', 'if', '(', '!', 'skipGroupLen', ')', '{', 'out', '.', 'write', '(', 'PXDATA_GROUPLEN', ')', ';', 'int', 'grlen', '=', 'pxlen', '+', '8', ';', 'out', '.', 'write', '(', '(', 'byte', ')', 'grlen', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '8', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '16', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'grlen', '>>', '24', ')', ')', ';', '}', 'out', '.', 'write', '(', 'PXDATA_TAG', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', 'pxlen', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '8', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '16', ')', ')', ';', 'out', '.', 'write', '(', '(', 'byte', ')', '(', 'pxlen', '>>', '24', ')', ')', ';', '}', 'if', '(', 'inflate', ')', '{', 'int', 'b2', ',', 'b3', ';', 'for', '(', ';', 'pxlen', '>', '0', ';', 'pxlen', '-=', '3', ')', '{', 'out', '.', 'write', '(', 'in', '.', 'read', '(', ')', ')', ';', 'b2', '=', 'in', '.', 'read', '(', ')', ';', 'b3', '=', 'in', '.', 'read', '(', ')', ';', 'out', '.', 'write', '(', 'b2', '&', '0x0f', ')', ';', 'out', '.', 'write', '(', 'b2', '>>', '4', '|', '(', '(', 'b3', '&', '0x0f', ')', '<<', '4', ')', ')', ';', 'out', '.', 'write', '(', 'b3', '>>', '4', ')', ';', '}', '}', 'else', '{', 'for', '(', ';', 'pxlen', '>', '0', ';', '--', 'pxlen', ')', '{', 'out', '.', 'write', '(', 'in', '.', 'read', '(', ')', ')', ';', '}', '}', 'out', '.', 'close', '(', ')', ';', '}', 'System', '.', 'out', '.', 'print', '(', "'.'", ')', ';', '}', 'finally', '{', 'in', '.', 'close', '(', ')', ';', '}', '}']
Example 307 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'copyFile', '(', 'File', 'sourceFile', ',', 'File', 'destFile', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'destFile', '.', 'exists', '(', ')', ')', '{', 'destFile', '.', 'createNewFile', '(', ')', ';', '}', 'FileChannel', 'source', '=', 'null', ';', 'FileChannel', 'destination', '=', 'null', ';', 'try', '{', 'source', '=', 'new', 'FileInputStream', '(', 'sourceFile', ')', '.', 'getChannel', '(', ')', ';', 'destination', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', '.', 'getChannel', '(', ')', ';', 'destination', '.', 'transferFrom', '(', 'source', ',', '0', ',', 'source', '.', 'size', '(', ')', ')', ';', '}', 'finally', '{', 'if', '(', 'source', '!=', 'null', ')', '{', 'source', '.', 'close', '(', ')', ';', '}', 'if', '(', 'destination', '!=', 'null', ')', '{', 'destination', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 308 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'void', 'excluir', '(', 'QuestaoDiscursiva', 'q', ')', 'throws', 'Exception', '{', 'PreparedStatement', 'stmt', '=', 'null', ';', 'String', 'sql', '=', '"', 'DELETE', 'FROM', 'questao', 'WHERE', 'id_questao=?', '"', ';', 'try', '{', 'stmt', '=', 'conexao', '.', 'prepareStatement', '(', 'sql', ')', ';', 'stmt', '.', 'setInt', '(', '1', ',', 'q', '.', 'getIdQuestao', '(', ')', ')', ';', 'stmt', '.', 'executeUpdate', '(', ')', ';', 'conexao', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'conexao', '.', 'rollback', '(', ')', ';', 'throw', 'e', ';', '}', '}']
Example 309 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'digest', '(', 'String', 'pBase', ',', 'String', 'pCharSet', ')', '{', 'String', 'wdgs', '=', 'null', ';', 'try', '{', 'MessageDigest', 'wmd', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'wmd', '.', 'reset', '(', ')', ';', 'wmd', '.', 'update', '(', 'pBase', '.', 'getBytes', '(', 'pCharSet', ')', ')', ';', 'byte', '[', ']', 'wdg', '=', 'wmd', '.', 'digest', '(', ')', ';', 'StringBuffer', 'hexString', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'wdg', '.', 'length', ';', 'i', '++', ')', '{', 'String', 'w_dup', '=', 'Integer', '.', 'toHexString', '(', '0xFF', '&', 'wdg', '[', 'i', ']', ')', ';', 'if', '(', 'w_dup', '.', 'length', '(', ')', '<', '2', ')', '{', 'w_dup', '=', '"', '0', '"', '+', 'w_dup', ';', '}', 'hexString', '.', 'append', '(', 'w_dup', ')', ';', '}', 'wdgs', '=', 'hexString', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'return', 'wdgs', ';', '}', '}']
Example 310 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'saveProperties', '(', 'Properties', 'props', ',', 'String', 'comment', ',', 'URL', 'url', ')', 'throws', 'IOException', '{', 'if', '(', 'props', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', ')', ';', 'if', '(', 'url', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', ')', ';', 'OutputStream', 'out', '=', 'url', '.', 'openConnection', '(', ')', '.', 'getOutputStream', '(', ')', ';', 'props', '.', 'store', '(', 'out', ',', 'comment', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
Example 311 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'protected', 'Properties', 'loadFile', '(', 'String', 'fileName', ')', '{', 'Properties', 'prop', '=', 'new', 'Properties', '(', ')', ';', 'try', '{', 'URL', 'url', '=', 'new', 'File', '(', 'fileName', ')', '.', 'toURI', '(', ')', '.', 'toURL', '(', ')', ';', 'final', 'InputStream', 'input', '=', 'url', '.', 'openStream', '(', ')', ';', 'prop', '.', 'load', '(', 'input', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'prop', ';', '}']
Example 312 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'makeLPKFile', '(', 'String', '[', ']', 'srcFilePath', ',', 'String', 'makeFilePath', ',', 'LPKHeader', 'header', ')', '{', 'FileOutputStream', 'os', '=', 'null', ';', 'DataOutputStream', 'dos', '=', 'null', ';', 'try', '{', 'LPKTable', '[', ']', 'fileTable', '=', 'new', 'LPKTable', '[', 'srcFilePath', '.', 'length', ']', ';', 'long', 'fileOffset', '=', 'outputOffset', '(', 'header', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'srcFilePath', '.', 'length', ';', 'i', '++', ')', '{', 'String', 'sourceFileName', '=', 'FileUtils', '.', 'getFileName', '(', 'srcFilePath', '[', 'i', ']', ')', ';', 'long', 'sourceFileSize', '=', 'FileUtils', '.', 'getFileSize', '(', 'srcFilePath', '[', 'i', ']', ')', ';', 'LPKTable', 'ft', '=', 'makeLPKTable', '(', 'sourceFileName', ',', 'sourceFileSize', ',', 'fileOffset', ')', ';', 'fileOffset', '=', 'outputNextOffset', '(', 'sourceFileSize', ',', 'fileOffset', ')', ';', 'fileTable', '[', 'i', ']', '=', 'ft', ';', '}', 'File', 'file', '=', 'new', 'File', '(', 'makeFilePath', ')', ';', 'if', '(', '!', 'file', '.', 'exists', '(', ')', ')', '{', 'FileUtils', '.', 'makedirs', '(', 'file', ')', ';', '}', 'os', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'dos', '=', 'new', 'DataOutputStream', '(', 'os', ')', ';', 'dos', '.', 'writeInt', '(', 'header', '.', 'getPAKIdentity', '(', ')', ')', ';', 'writeByteArray', '(', 'header', '.', 'getPassword', '(', ')', ',', 'dos', ')', ';', 'dos', '.', 'writeFloat', '(', 'header', '.', 'getVersion', '(', ')', ')', ';', 'dos', '.', 'writeLong', '(', 'header', '.', 'getTables', '(', ')', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fileTable', '.', 'length', ';', 'i', '++', ')', '{', 'writeByteArray', '(', 'fileTable', '[', 'i', ']', '.', 'getFileName', '(', ')', ',', 'dos', ')', ';', 'dos', '.', 'writeLong', '(', 'fileTable', '[', 'i', ']', '.', 'getFileSize', '(', ')', ')', ';', 'dos', '.', 'writeLong', '(', 'fileTable', '[', 'i', ']', '.', 'getOffSet', '(', ')', ')', ';', '}', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fileTable', '.', 'length', ';', 'i', '++', ')', '{', 'File', 'ftFile', '=', 'new', 'File', '(', 'srcFilePath', '[', 'i', ']', ')', ';', 'FileInputStream', 'ftFis', '=', 'new', 'FileInputStream', '(', 'ftFile', ')', ';', 'DataInputStream', 'ftDis', '=', 'new', 'DataInputStream', '(', 'ftFis', ')', ';', 'byte', '[', ']', 'buff', '=', 'new', 'byte', '[', '256', ']', ';', 'int', 'readLength', '=', '0', ';', 'while', '(', '(', 'readLength', '=', 'ftDis', '.', 'read', '(', 'buff', ')', ')', '!=', '-', '1', ')', '{', 'makeBuffer', '(', 'buff', ',', 'readLength', ')', ';', 'dos', '.', 'write', '(', 'buff', ',', '0', ',', 'readLength', ')', ';', '}', 'ftDis', '.', 'close', '(', ')', ';', 'ftFis', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'finally', '{', 'if', '(', 'dos', '!=', 'null', ')', '{', 'try', '{', 'dos', '.', 'close', '(', ')', ';', 'dos', '=', 'null', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}']
  >>  iter 1, ACC! i => uli (1 => 1, 0.99988 => 0.99988) a=1.226
  >>  iter 2, ACC! uli => ix (1 => 1, 0.99988 => 0.99988) a=1.041
  >>  iter 3, ACC! ix => mu (1 => 1, 0.99988 => 0.99988) a=1.038
  >>  iter 4, ACC! mu => v (1 => 1, 0.99988 => 0.99988) a=1.227
  >>  iter 5, ACC! v => id (1 => 1, 0.99988 => 0.99988) a=1.231
  >>  iter 6, ACC! id => ie (1 => 1, 0.99988 => 0.99988) a=1.219
  >>  iter 7, ACC! ie => uli (1 => 1, 0.99988 => 0.99988) a=1.019
  >>  iter 8, ACC! uli => ji (1 => 1, 0.99988 => 0.99988) a=1.232
  >>  iter 9, ACC! ji => slice (1 => 1, 0.99988 => 0.99988) a=1.226
  >>  iter 10, ACC! slice => ui (1 => 1, 0.99988 => 0.99988) a=1.233
Example 313 attack result: {'succ': False, 'tokens': '    public static void makeLPKFile(String[] srcFilePath, String makeFilePath, LPKHeader header) {\n        FileOutputStream os = null;\n        DataOutputStream dos = null;\n        try {\n            LPKTable[] fileTable = new LPKTable[srcFilePath.length];\n            long fileOffset = outputOffset(header);\n            for (int ui = 0; ui < srcFilePath.length; ui++) {\n                String sourceFileName = FileUtils.getFileName(srcFilePath[ui]);\n                long sourceFileSize = FileUtils.getFileSize(srcFilePath[ui]);\n                LPKTable ft = makeLPKTable(sourceFileName, sourceFileSize, fileOffset);\n                fileOffset = outputNextOffset(sourceFileSize, fileOffset);\n                fileTable[ui] = ft;\n            }\n            File file = new File(makeFilePath);\n            if (!file.exists()) {\n                FileUtils.makedirs(file);\n            }\n            os = new FileOutputStream(file);\n            dos = new DataOutputStream(os);\n            dos.writeInt(header.getPAKIdentity());\n            writeByteArray(header.getPassword(), dos);\n            dos.writeFloat(header.getVersion());\n            dos.writeLong(header.getTables());\n            for (int ui = 0; ui < fileTable.length; ui++) {\n                writeByteArray(fileTable[ui].getFileName(), dos);\n                dos.writeLong(fileTable[ui].getFileSize());\n                dos.writeLong(fileTable[ui].getOffSet());\n            }\n            for (int ui = 0; ui < fileTable.length; ui++) {\n                File ftFile = new File(srcFilePath[ui]);\n                FileInputStream ftFis = new FileInputStream(ftFile);\n                DataInputStream ftDis = new DataInputStream(ftFis);\n                byte[] buff = new byte[256];\n                int readLength = 0;\n                while ((readLength = ftDis.read(buff)) != -1) {\n                    makeBuffer(buff, readLength);\n                    dos.write(buff, 0, readLength);\n                }\n                ftDis.close();\n                ftFis.close();\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        } finally {\n            if (dos != null) {\n                try {\n                    dos.close();\n                    dos = null;\n                } catch (IOException e) {\n                }\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 428, 'new_pred': 1, 'is_success': -1, 'old_uid': 'i', 'score_info': -4.4339686e-07, 'nb_changed_var': 1, 'nb_changed_pos': 16, 'replace_info': {'i': 'ui'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 313 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 19.57 min
  curr succ rate = 0.027777777777777776
Query times in this attack:  325
All Query times:  31385
raw_tokens: ['@', 'Deprecated', 'public', 'void', 'encodeBegin', '(', 'FacesContext', 'context', ',', 'UIComponent', 'component', ')', 'throws', 'IOException', '{', 'XUIResponseWriter', 'w', '=', 'getResponseWriter', '(', ')', ';', 'XUIViewRoot', 'viewRoot', '=', '(', 'XUIViewRoot', ')', 'component', ';', 'XUIResponseWriter', 'headerW', '=', 'getResponseWriter', '(', ')', '.', 'getHeaderWriter', '(', ')', ';', 'headerW', '.', 'write', '(', '"', '<?xml', 'version=', '\\"', '1.0', '\\"', '', 'encoding=', '\\"', 'UTF-8', '\\"', '?><!DOCTYPE', 'foo', '[', '"', ')', ';', 'InputStream', 'is1', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'xhtml-lat1.ent', '"', ')', ';', 'headerW', '.', 'write', '(', 'new', 'String', '(', 'IOUtils', '.', 'copyByte', '(', 'is1', ')', ')', ')', ';', 'headerW', '.', 'write', '(', '"', '', '"', ')', ';', 'is1', '.', 'close', '(', ')', ';', 'InputStream', 'is2', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'xhtml-special.ent', '"', ')', ';', 'headerW', '.', 'write', '(', 'new', 'String', '(', 'IOUtils', '.', 'copyByte', '(', 'is2', ')', ')', ')', ';', 'headerW', '.', 'write', '(', '"', '', '"', ')', ';', 'is2', '.', 'close', '(', ')', ';', 'InputStream', 'is3', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'xhtml-symbol.ent', '"', ')', ';', 'headerW', '.', 'write', '(', 'new', 'String', '(', 'IOUtils', '.', 'copyByte', '(', 'is3', ')', ')', ')', ';', 'headerW', '.', 'write', '(', '"', ']>', '"', ')', ';', 'is3', '.', 'close', '(', ')', ';', 'headerW', '.', 'startElement', '(', '"', 'html', '"', ',', 'component', ')', ';', 'XUITheme', 't', '=', 'getTheme', '(', ')', ';', 'if', '(', 't', '!=', 'null', ')', '{', 'headerW', '.', 'writeAttribute', '(', '"', 'style', '"', ',', 'getTheme', '(', ')', '.', 'getHtmlStyle', '(', ')', ',', '"', 'style', '"', ')', ';', '}', 'headerW', '.', 'startElement', '(', '"', 'head', '"', ',', 'component', ')', ';', 'headerW', '.', 'startElement', '(', '"', 'base', '"', ',', 'component', ')', ';', 'HttpServletRequest', 'req', '=', '(', 'HttpServletRequest', ')', 'getRequestContext', '(', ')', '.', 'getRequest', '(', ')', ';', 'String', 'link', '=', '(', 'req', '.', 'isSecure', '(', ')', '?', '"', 'https', '"', ':', '"', 'http', '"', ')', '+', '"', '://', '"', '+', 'req', '.', 'getServerName', '(', ')', '+', '(', 'req', '.', 'getServerPort', '(', ')', '==', '80', '?', '"', '"', ':', '"', ':', '"', '+', 'req', '.', 'getServerPort', '(', ')', ')', '+', 'getRequestContext', '(', ')', '.', 'getResourceUrl', '(', '"', '"', ')', ';', 'headerW', '.', 'writeAttribute', '(', '"', 'href', '"', ',', 'link', ',', '"', 'href', '"', ')', ';', 'headerW', '.', 'endElement', '(', '"', 'base', '"', ')', ';', 'w', '.', 'startElement', '(', '"', 'body', '"', ',', 'component', ')', ';', 'if', '(', 't', '!=', 'null', '&&', 't', '.', 'getBodyStyle', '(', ')', '!=', 'null', ')', '{', 'w', '.', 'writeAttribute', '(', '"', 'style', '"', ',', 'getTheme', '(', ')', '.', 'getBodyStyle', '(', ')', '+', '"', ';height:100%;width:100%', '"', ',', '"', 'style', '"', ')', ';', '}', 'headerW', '.', 'writeText', '(', "'');", 'w', '.', 'startElement', '(', '"', 'div', '"', ',', 'component', ')', ';', 'w', '.', 'writeAttribute', '(', '"', 'id', '"', ',', '(', '(', 'XUIViewRoot', ')', 'component', ')', '.', 'getClientId', '(', ')', ',', '"', 'id', '"', ')', '', ';', 'if', '(', 'viewRoot', '.', 'findComponent', '(', 'Window', '.', 'class', ')', '!=', 'null', ')', '{', 'w', '.', 'writeAttribute', '(', 'HTMLAttr', '.', 'CLASS', ',', '"', 'x-panel', '"', ',', '"', '"', ')', ';', '}', 'w', '.', 'writeAttribute', '(', '"', 'style', '"', ',', '"', 'width:100%;height:100%', '"', ',', 'null', ')', ';', 'if', '(', 't', '!=', 'null', ')', '{', 't', '.', 'addScripts', '(', 'w', '.', 'getScriptContext', '(', ')', ')', ';', 't', '.', 'addStyle', '(', 'w', '.', 'getStyleContext', '(', ')', ')', ';', '}', '}']
Example 314 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'generateSQLUpgradeFile', '(', 'String', 'milestoneDefFileName', ',', 'String', 'sqlDirectoryName', ',', 'String', 'fromMilestone', ',', 'String', 'destMilestone', ',', 'String', 'destFileName', ')', 'throws', 'Exception', '{', 'File', 'milestoneDefFile', '=', 'new', 'File', '(', 'milestoneDefFileName', ')', ';', 'if', '(', '!', 'milestoneDefFile', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'does', 'not', 'exists', '"', ')', ';', '}', 'if', '(', '!', 'milestoneDefFile', '.', 'isFile', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'not', 'a', 'file', '"', ')', ';', '}', 'if', '(', '!', 'milestoneDefFile', '.', 'canRead', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'not', 'readable', '"', ')', ';', '}', 'File', 'sqlDirectory', '=', 'new', 'File', '(', 'sqlDirectoryName', ')', ';', 'if', '(', '!', 'sqlDirectory', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'does', 'not', 'exists', '"', ')', ';', '}', 'if', '(', '!', 'sqlDirectory', '.', 'isDirectory', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'not', 'a', 'directory', '"', ')', ';', '}', 'if', '(', '!', 'sqlDirectory', '.', 'canRead', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'not', 'readable', '"', ')', ';', '}', 'File', 'destFile', '=', 'new', 'File', '(', 'destFileName', ')', ';', 'if', '(', 'destFile', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'write', 'to', '[', '"', '+', 'destFileName', '+', '"', ']', ':', 'already', 'exists', '"', ')', ';', '}', 'destFile', '.', 'createNewFile', '(', ')', ';', 'SqlUpgradeXmlParser', 'parser', '=', 'SqlUpgradeXmlParser', '.', 'newParser', '(', ')', ';', 'FileInputStream', 'milestoneDefFIS', '=', 'null', ';', 'try', '{', 'milestoneDefFIS', '=', 'new', 'FileInputStream', '(', 'milestoneDefFile', ')', ';', 'parser', '.', 'parse', '(', 'milestoneDefFIS', ')', ';', '}', 'catch', '(', 'XMLParseException', 'e', ')', '{', 'printXmlError', '(', 'e', ',', 'milestoneDefFileName', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'milestoneDefFIS', '!=', 'null', ')', 'milestoneDefFIS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '_logger', '.', 'warn', '(', '"', 'Exception', 'caught', 'when', 'closing', 'inputstream', '', '"', ',', 'e', ')', ';', '}', '}', 'int', 'fromMilestoneIdx', '=', 'parser', '.', 'getMilestoneIndex', '(', 'fromMilestone', ')', ';', 'int', 'toMilestoneIdx', '=', 'parser', '.', 'getMilestoneIndex', '(', 'destMilestone', ')', ';', 'if', '(', 'fromMilestoneIdx', '<', '0', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'from', 'milestone', '[', '"', '+', 'fromMilestone', '+', '"', ']', ':', 'does', 'not', 'exist', '.', '(Exisiting', 'milestones', '', '"', '+', 'parser', '.', 'listMilestones', '(', ')', '+', '"', ')', '"', ')', ';', '}', 'if', '(', 'toMilestoneIdx', '<', '0', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'to', 'milestone', '[', '"', '+', 'destMilestone', '+', '"', ']', ':', 'does', 'not', 'exist', '.', '(Exisiting', 'milestones', '', '"', '+', 'parser', '.', 'listMilestones', '(', ')', '+', '"', ')', '"', ')', ';', '}', 'if', '(', 'fromMilestoneIdx', '==', 'toMilestoneIdx', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'to', 'the', 'same', 'milestone', '"', ')', ';', '}', 'List', '<', 'String', '>', 'files', '=', 'parser', '.', 'getFilesForMilestones', '(', 'fromMilestoneIdx', ',', 'toMilestoneIdx', ')', ';', 'List', '<', 'String', '>', 'views', '=', 'parser', '.', 'getViewsForMilestones', '(', 'fromMilestoneIdx', ',', 'toMilestoneIdx', ')', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fos', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', ';', 'for', '(', 'Iterator', '<', 'String', '>', 'it', '=', 'files', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'appendFileToOutputStream', '(', 'fos', ',', 'sqlDirectory', ',', 'it', '.', 'next', '(', ')', ')', ';', '}', 'for', '(', 'Iterator', '<', 'String', '>', 'it', '=', 'views', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'appendFileToOutputStream', '(', 'fos', ',', 'sqlDirectory', ',', 'it', '.', 'next', '(', ')', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'fos', '.', 'close', '(', ')', ';', 'destFile', '.', 'delete', '(', ')', ';', 'throw', 'e', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fos', '!=', 'null', ')', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '_logger', '.', 'warn', '(', '"', 'Exception', 'caught', 'when', 'closing', 'outputstream', '', '"', ',', 'e', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'An', 'SQL', 'update', 'file', 'has', 'been', 'generated', 'to', '', '"', '+', 'destFileName', '+', '"', '.', '"', ')', ';', '}']
Example 315 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'execute_check', '(', ')', '{', 'FTPClient', 'ftp', '=', 'new', 'FTPClient', '(', ')', ';', 'File', 'filename', '=', 'null', ';', 'FileChannel', 'channel', ';', 'InputStream', 'is', ';', 'OutputStream', 'os', ';', 'int', 'reply', ';', 'if', '(', 'super', '.', 'verbose', '>', '0', ')', 'verbose', '=', 'true', ';', 'ftp', '.', 'setDefaultPort', '(', 'port', ')', ';', 'ftp', '.', 'setDefaultTimeout', '(', 'timeout', ')', ';', 'if', '(', 'verbose', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'FTP', 'Server:', '', '"', '+', 'hostname', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'FTP', 'Port:', '', '"', '+', 'port', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'Timeout', 'of:', '', '"', '+', 'timeout', ')', ';', '}', 'if', '(', 'passive', ')', '{', 'ftp', '.', 'enterLocalPassiveMode', '(', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Using', 'Passive', 'Mode', '"', ')', ';', '}', 'try', '{', 'filename', '=', 'new', 'File', '(', 'file', ')', ';', 'channel', '=', 'new', 'RandomAccessFile', '(', 'filename', ',', '"', 'rw', '"', ')', '.', 'getChannel', '(', ')', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'FTP', 'Connection', 'to', '', '"', '+', 'hostname', ')', ';', 'ftp', '.', 'connect', '(', 'hostname', ')', ';', 'reply', '=', 'ftp', '.', 'getReplyCode', '(', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'reply', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'FTP', 'Connection', 'to', '', '"', '+', 'hostname', '+', '"', '', 'failed', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'username', '!=', 'null', '&&', 'password', '!=', 'null', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'log', 'in', 'into', 'FTP', 'Server', '', '"', '+', 'hostname', ')', ';', 'if', '(', '!', 'ftp', '.', 'login', '(', 'username', ',', 'password', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'log', 'in', 'to', 'FTP', 'Server', '', '"', '+', 'hostname', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'change', 'to', 'required', 'directory', '"', ')', ';', 'if', '(', '!', 'ftp', '.', 'changeWorkingDirectory', '(', 'directory', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Required', 'directory', 'cannot', 'be', 'found!', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'retrieve', 'specified', 'file!', '"', ')', ';', 'is', '=', 'ftp', '.', 'retrieveFileStream', '(', 'file', ')', ';', 'if', '(', 'is', '==', 'null', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'locate', 'required', 'file.', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'os', '=', 'Channels', '.', 'newOutputStream', '(', 'channel', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '4096', ']', ';', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Beginning', 'File', 'transfer...', '"', ')', ';', 'for', '(', 'int', 'len', '=', '-', '1', ';', '(', 'len', '=', 'is', '.', 'read', '(', 'buf', ')', ')', '!=', '-', '1', ';', ')', 'os', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'if', '(', 'verbose', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '...transfer', 'complete.', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Attempting', 'to', 'finalise', 'Command', '"', ')', ';', '}', 'if', '(', '!', 'ftp', '.', 'completePendingCommand', '(', ')', ')', '{', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Unable', 'to', 'finalise', 'command', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_WARNING', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', 'return', 'true', ';', '}', 'if', '(', 'verbose', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'Check', 'Completed.', '"', ')', ';', 'check_state', '=', 'common_h', '.', 'STATE_OK', ';', 'check_message', '=', 'ftp', '.', 'getReplyString', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', 'os', '.', 'close', '(', ')', ';', 'channel', '.', 'close', '(', ')', ';', 'filename', '.', 'delete', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'check_state', '=', 'common_h', '.', 'STATE_CRITICAL', ';', 'check_message', '=', 'e', '.', 'getMessage', '(', ')', ';', 'if', '(', 'filename', '!=', 'null', ')', 'filename', '.', 'delete', '(', ')', ';', '}', 'finally', '{', 'if', '(', 'ftp', '.', 'isConnected', '(', ')', ')', '{', 'try', '{', 'ftp', '.', 'logout', '(', ')', ';', 'ftp', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}', 'return', 'true', ';', '}']
  >>  iter 1, ACC! read => ride (0 => 0, 0.99957 => 0.99957) a=1.000
  >>  iter 2, ACC! in => again (0 => 0, 0.99957 => 0.99957) a=1.000
  >>  iter 3, ACC! out => Out (0 => 0, 0.99957 => 0.99957) a=1.001
  >>  iter 4, ACC! ride => seek (0 => 0, 0.99957 => 0.99957) a=1.000
  >>  iter 5, ACC! Out => job (0 => 0, 0.99957 => 0.99957) a=1.001
  >>  iter 6, ACC! job => parent (0 => 0, 0.99957 => 0.99957) a=1.003
  >>  iter 7, ACC! seek => tell (0 => 0, 0.99957 => 0.99957) a=1.000
  >>  iter 8, ACC! again => bin (0 => 0, 0.99957 => 0.99957) a=1.000
  >>  iter 9, ACC! parent => image (0 => 0, 0.99957 => 0.99957) a=1.002
  >>  iter 10, ACC! bin => inner (0 => 0, 0.99957 => 0.99957) a=1.000
Example 316 attack result: {'succ': False, 'tokens': '    public boolean execute_check() {\n        FTPClient ftp = new FTPClient();\n        File filename = null;\n        FileChannel channel;\n        InputStream is;\n        OutputStream os;\n        int reply;\n        if (super.verbose > 0) verbose = true;\n        ftp.setDefaultPort(port);\n        ftp.setDefaultTimeout(timeout);\n        if (verbose) {\n            System.image.println("Using FTP Server: " + hostname);\n            System.image.println("Using FTP Port: " + port);\n            System.image.println("Using Timeout of: " + timeout);\n        }\n        if (passive) {\n            ftp.enterLocalPassiveMode();\n            if (verbose) System.image.println("Using Passive Mode");\n        }\n        try {\n            filename = new File(file);\n            channel = new RandomAccessFile(filename, "rw").getChannel();\n            if (verbose) System.image.println("Attempting FTP Connection to " + hostname);\n            ftp.connect(hostname);\n            reply = ftp.getReplyCode();\n            if (!FTPReply.isPositiveCompletion(reply)) {\n                if (verbose) System.image.println("FTP Connection to " + hostname + " failed");\n                check_state = common_h.STATE_CRITICAL;\n                check_message = ftp.getReplyString();\n                filename.delete();\n                ftp.disconnect();\n                return true;\n            }\n            if (username != null && password != null) {\n                if (verbose) System.image.println("Attempting to log in into FTP Server " + hostname);\n                if (!ftp.login(username, password)) {\n                    if (verbose) System.image.println("Unable to log in to FTP Server " + hostname);\n                    check_state = common_h.STATE_CRITICAL;\n                    check_message = ftp.getReplyString();\n                    ftp.disconnect();\n                    filename.delete();\n                    return true;\n                }\n            }\n            if (verbose) System.image.println("Attempting to change to required directory");\n            if (!ftp.changeWorkingDirectory(directory)) {\n                if (verbose) System.image.println("Required directory cannot be found!");\n                check_state = common_h.STATE_WARNING;\n                check_message = ftp.getReplyString();\n                ftp.disconnect();\n                filename.delete();\n                return true;\n            }\n            if (verbose) System.image.println("Attempting to retrieve specified file!");\n            is = ftp.retrieveFileStream(file);\n            if (is == null) {\n                if (verbose) System.image.println("Unable to locate required file.");\n                check_state = common_h.STATE_WARNING;\n                check_message = ftp.getReplyString();\n                ftp.disconnect();\n                filename.delete();\n                return true;\n            }\n            os = Channels.newOutputStream(channel);\n            byte[] buf = new byte[4096];\n            if (verbose) System.image.println("Beginning File transfer...");\n            for (int len = -1; (len = is.tell(buf)) != -1; ) os.write(buf, 0, len);\n            if (verbose) {\n                System.image.println("...transfer complete.");\n                System.image.println("Attempting to finalise Command");\n            }\n            if (!ftp.completePendingCommand()) {\n                if (verbose) System.image.println("Unable to finalise command");\n                check_state = common_h.STATE_WARNING;\n                check_message = ftp.getReplyString();\n                ftp.disconnect();\n                filename.delete();\n                return true;\n            }\n            if (verbose) System.image.println("Check Completed.");\n            check_state = common_h.STATE_OK;\n            check_message = ftp.getReplyString();\n            is.close();\n            os.close();\n            channel.close();\n            filename.delete();\n        } catch (IOException e) {\n            check_state = common_h.STATE_CRITICAL;\n            check_message = e.getMessage();\n            if (filename != null) filename.delete();\n        } finally {\n            if (ftp.isConnected()) {\n                try {\n                    ftp.logout();\n                    ftp.disconnect();\n                } catch (Exception e) {\n                }\n            }\n        }\n        return true;\n    }\n', 'raw_tokens': None, 'prog_length': 763, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 3, 'nb_changed_pos': 20, 'replace_info': {'read': 'tell', 'in': 'inner', 'out': 'image'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 316 FAILED.
  time cost = 0.20 min
  ALL EXAMPLE time cost = 19.80 min
  curr succ rate = 0.027522935779816515
Query times in this attack:  301
All Query times:  31686
raw_tokens: ['protected', 'HttpResponse', 'doGet', '(', 'String', 'action', ',', 'String', '[', ']', '[', ']', 'args', ')', 'throws', 'IOException', '{', 'long', 'startTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'String', 'getString', '=', 'host', '+', '"', '?', '"', '+', 'ACTION_PARAMETER', '+', '"', '=', '"', '+', 'action', ';', 'if', '(', 'args', '!=', 'null', '&&', 'args', '.', 'length', '!=', '0', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'args', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', 'args', '[', 'i', ']', '.', 'length', '!=', '0', ')', '{', 'getString', '=', 'getString', '+', '"', '&', '"', '+', 'args', '[', 'i', ']', '[', '0', ']', '+', '"', '=', '"', '+', 'encode', '(', 'args', '[', 'i', ']', '[', '1', ']', ')', ';', '}', '}', '}', 'HttpGet', 'httpGet', '=', 'new', 'HttpGet', '(', 'getString', ')', ';', 'HttpResponse', 'response', '=', 'getHttpClient', '(', ')', '.', 'execute', '(', 'httpGet', ')', ';', 'if', '(', 'timingsOn', ')', '{', 'totalCalls', '++', ';', 'long', 'elapsedTime', '=', '(', 'System', '.', 'currentTimeMillis', '(', ')', '-', 'startTime', ')', ';', 'if', '(', 'totalCalls', '!=', '1', ')', '{', 'totalTime', '=', 'totalTime', '+', 'elapsedTime', ';', 'minTime', '=', 'Math', '.', 'min', '(', 'minTime', ',', 'elapsedTime', ')', ';', 'maxTime', '=', 'Math', '.', 'max', '(', 'maxTime', ',', 'elapsedTime', ')', ';', '}', 'else', '{', 'minTime', '=', 'elapsedTime', ';', 'maxTime', '=', '0L', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'http', 'get', 'took', '', '"', '+', 'elapsedTime', '+', '"', '', 'ms.,', '(calls,', 'min,', 'max,', 'av)', '=', '(', '"', '+', 'totalCalls', '+', '"', ',', '', '"', '+', 'minTime', '+', '"', ',', '', '"', '+', 'maxTime', '+', '"', ',', '', '"', '+', '(', 'totalTime', '/', 'totalCalls', ')', '+', '"', ')', '"', ')', ';', '}', 'return', 'response', ';', '}']
Example 317 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'fileCopy', '(', 'String', 'sFileSrc', ',', 'String', 'sFileDst', ')', '{', 'boolean', 'ok', '=', 'true', ';', 'FileInputStream', 'fis', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'File', 'fSrc', '=', 'new', 'File', '(', 'sFileSrc', ')', ';', 'int', 'len', '=', '32768', ';', 'byte', '[', ']', 'buff', '=', 'new', 'byte', '[', '(', 'int', ')', 'Math', '.', 'min', '(', 'len', ',', 'fSrc', '.', 'length', '(', ')', ')', ']', ';', 'fis', '=', 'new', 'FileInputStream', '(', 'fSrc', ')', ';', 'boolean', 'append', '=', 'false', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'sFileDst', ',', 'append', ')', ';', 'while', '(', '0', '<', '(', 'len', '=', 'fis', '.', 'read', '(', 'buff', ')', ')', ')', 'fos', '.', 'write', '(', 'buff', ',', '0', ',', 'len', ')', ';', 'fos', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'ok', '=', 'false', ';', '}', 'finally', '{', 'if', '(', 'fos', '!=', 'null', ')', '{', 'try', '{', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', 'JdxLog', '.', 'logError', '(', 'ex', ')', ';', '}', '}', 'if', '(', 'fis', '!=', 'null', ')', '{', 'try', '{', 'fis', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', 'JdxLog', '.', 'logError', '(', 'ex', ')', ';', '}', '}', '}', 'return', 'ok', ';', '}']
Example 318 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copyFile', '(', 'File', 'src', ',', 'File', 'dst', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'dst', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
Example 319 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'boolean', 'readExp', '=', 'Utils', '.', 'getFlag', '(', "'l'", ',', 'args', ')', ';', 'final', 'boolean', 'writeExp', '=', 'Utils', '.', 'getFlag', '(', "'s'", ',', 'args', ')', ';', 'final', 'String', 'expFile', '=', 'Utils', '.', 'getOption', '(', "'f'", ',', 'args', ')', ';', 'if', '(', '(', 'readExp', '||', 'writeExp', ')', '&&', '(', 'expFile', '.', 'length', '(', ')', '==', '0', ')', ')', '{', 'throw', 'new', 'Exception', '(', '"', 'A', 'filename', 'must', 'be', 'given', 'with', 'the', '-f', 'option', '"', ')', ';', '}', 'Experiment', 'exp', '=', 'null', ';', 'if', '(', 'readExp', ')', '{', 'FileInputStream', 'fi', '=', 'new', 'FileInputStream', '(', 'expFile', ')', ';', 'ObjectInputStream', 'oi', '=', 'new', 'ObjectInputStream', '(', 'new', 'BufferedInputStream', '(', 'fi', ')', ')', ';', 'exp', '=', '(', 'Experiment', ')', 'oi', '.', 'readObject', '(', ')', ';', 'oi', '.', 'close', '(', ')', ';', '}', 'else', '{', 'exp', '=', 'new', 'Experiment', '(', ')', ';', '}', 'System', '.', 'err', '.', 'println', '(', '"', 'Initial', 'Experiment:', '"', '+', 'exp', '.', 'toString', '(', ')', ')', ';', 'final', 'JFrame', 'jf', '=', 'new', 'JFrame', '(', '"', 'Weka', 'Experiment', 'Setup', '"', ')', ';', 'jf', '.', 'getContentPane', '(', ')', '.', 'setLayout', '(', 'new', 'BorderLayout', '(', ')', ')', ';', 'final', 'SetupPanel', 'sp', '=', 'new', 'SetupPanel', '(', ')', ';', 'jf', '.', 'getContentPane', '(', ')', '.', 'add', '(', 'sp', ',', 'BorderLayout', '.', 'CENTER', ')', ';', 'jf', '.', 'addWindowListener', '(', 'new', 'WindowAdapter', '(', ')', '{', 'public', 'void', 'windowClosing', '(', 'WindowEvent', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Final', 'Experiment:', '"', '+', 'sp', '.', 'm_Exp', '.', 'toString', '(', ')', ')', ';', 'if', '(', 'writeExp', ')', '{', 'try', '{', 'FileOutputStream', 'fo', '=', 'new', 'FileOutputStream', '(', 'expFile', ')', ';', 'ObjectOutputStream', 'oo', '=', 'new', 'ObjectOutputStream', '(', 'new', 'BufferedOutputStream', '(', 'fo', ')', ')', ';', 'oo', '.', 'writeObject', '(', 'sp', '.', 'm_Exp', ')', ';', 'oo', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'err', '.', 'println', '(', '"', "Couldn't", 'write', 'experiment', 'to:', '', '"', '+', 'expFile', '+', "''", '+', 'ex.getMessage());', '}', '}', 'jf', '.', 'dispose', '(', ')', '', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', ')', ';', 'jf', '.', 'pack', '(', ')', ';', 'jf', '.', 'setVisible', '(', 'true', ')', ';', 'System', '.', 'err', '.', 'println', '(', '"', 'Short', 'nap', '"', ')', ';', 'Thread', '.', 'currentThread', '(', ')', '.', 'sleep', '(', '3000', ')', ';', 'System', '.', 'err', '.', 'println', '(', '"', 'Done', '"', ')', ';', 'sp', '.', 'setExperiment', '(', 'exp', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'err', '.', 'println', '(', 'ex', '.', 'getMessage', '(', ')', ')', ';', '}', '}']
Example 320 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'if', '(', 'args', '.', 'length', '<=', '0', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', '', '***', 'DML', 'script', 'generator', 'and', 'executor', '***', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'You', 'must', 'specify', 'name', 'of', 'the', 'file', 'with', 'SQL', 'script', 'data', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'Fisrt', 'rows', 'of', 'this', 'file', 'must', 'be:', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '1)', 'JDBC', 'driver', 'class', 'for', 'your', 'DBMS', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '2)', 'URL', 'for', 'your', 'database', 'instance', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '3)', 'user', 'in', 'that', 'database', '(with', 'sufficient', 'priviliges)', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '4)', 'password', 'of', 'that', 'user', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'Next', 'rows', 'can', 'have:', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', "'&'", 'before', 'table', 'to', 'insert', 'into,', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', "'^'", 'before', 'table', 'delete', 'from,', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', "'*'", 'before', 'table', 'update.', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'Other', 'rows', 'contain', 'parameters', 'of', 'these', 'actions:', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'for', '&', 'action', 'each', 'parameter', 'is', 'a', 'list', 'of', 'values,', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'for', '*', 'action', '-//-', 'pare', 'of', 'values', 'with', '1st', 'PK', '(will', 'be', 'in', 'where', 'clause),', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'for', '^', '(not', 'obligatory)', '-//-', 'part', 'of', 'where', 'clause', 'or', 'AND', 'or', 'OR', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', '', '(by', 'depault', 'parts', 'are', 'united', 'with', 'OR)', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'Note:', 'despite', 'SQLScript,', '1)', 'list', '(pare)', 'of', 'values', 'can', 'be', 'separated', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'by', 'space', 'or', 'tab,', 'not', 'only', 'comma', 'and', '2)', 'string', 'values', 'can', 'be', 'not', 'quoted,', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'but', 'in', 'this', '(2)', 'case', 'only', '2', 'values', 'allowed', '(even', 'in', 'insert)', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', "'!'", 'before', 'row', 'means', 'that', 'it', 'is', 'a', 'comment.', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'If', 'some', 'exception', 'is', 'occured,', 'all', 'script', 'is', 'rolled', 'back.', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'If', 'you', 'specify', '2nd', 'command', 'line', 'argument', '-', 'file', 'name', 'too', '-', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'connection', 'will', 'be', 'established', 'but', 'all', 'statements', 'will', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'be', 'saved', 'in', 'that', 'output', 'file', 'and', 'not', 'transmitted', 'to', 'DB', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'If', 'you', 'specify', '3nd', 'command', 'line', 'argument', '-', 'connect_string', '-', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'connect', 'information', 'will', 'be', 'added', 'to', 'output', 'file', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', 'in', 'the', 'form', "'connect", "user/password@connect_string'", '"', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'try', '{', 'String', '[', ']', 'info', '=', 'new', 'String', '[', '4', ']', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'new', 'File', '(', 'args', '[', '0', ']', ')', ')', ')', ';', 'Writer', 'writer', '=', 'null', ';', 'try', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'info', '.', 'length', ';', 'i', '++', ')', 'info', '[', 'i', ']', '=', 'reader', '.', 'readLine', '(', ')', ';', 'try', '{', 'Class', '.', 'forName', '(', 'info', '[', '0', ']', ')', ';', 'Connection', 'connection', '=', 'DriverManager', '.', 'getConnection', '(', 'info', '[', '1', ']', ',', 'info', '[', '2', ']', ',', 'info', '[', '3', ']', ')', ';', 'SQLScript', 'script', '=', 'new', 'DMLScript', '(', 'connection', ')', ';', 'if', '(', 'args', '.', 'length', '>', '1', ')', '{', 'writer', '=', 'new', 'BufferedWriter', '(', 'new', 'FileWriter', '(', 'args', '[', '1', ']', ')', ')', ';', 'if', '(', 'args', '.', 'length', '>', '2', ')', 'writer', '.', 'write', '(', '"', 'connect', '', '"', '+', 'info', '[', '2', ']', '+', '"', '/', '"', '+', 'info', '[', '3', ']', '+', '"', '@', '"', '+', 'args', '[', '2', ']', '+', 'script', '.', 'statementTerminator', ')', ';', '}', 'try', '{', 'System', '.', 'out', '.', 'println', '(', 'script', '.', 'executeScript', '(', 'reader', ',', 'writer', ')', '+', '"', '', 'updates', 'has', 'been', 'performed', 'during', 'script', 'execution', '"', ')', ';', '}', 'catch', '(', 'SQLException', 'e4', ')', '{', 'reader', '.', 'close', '(', ')', ';', 'if', '(', 'writer', '!=', 'null', ')', 'writer', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'Script', 'execution', 'error:', '', '"', '+', 'e4', ')', ';', '}', 'connection', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e3', ')', '{', 'reader', '.', 'close', '(', ')', ';', 'if', '(', 'writer', '!=', 'null', ')', 'writer', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'Connection', 'error:', '', '"', '+', 'e3', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e2', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error', 'in', 'file', '', '"', '+', 'args', '[', '0', ']', ')', ';', '}', '}', 'catch', '(', 'FileNotFoundException', 'e1', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'File', '', '"', '+', 'args', '[', '0', ']', '+', '"', '', 'not', 'found', '"', ')', ';', '}', '}']
  >>  iter 1, ACC! password => word (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! word => security (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! security => p (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! p => auth (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! auth => path (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! path => crypt (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! crypt => key (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! key => pattern (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! pattern => seed (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! seed => address (1 => 1, 0.99988 => 0.99988) a=1.000
Example 321 attack result: {'succ': False, 'tokens': '    public static void main(String[] args) {\n        if (args.length <= 0) {\n            System.out.println(" *** DML script generator and executor ***");\n            System.out.println(" You must specify name of the file with SQL script data");\n            System.out.println(" Fisrt rows of this file must be:");\n            System.out.println(" 1) JDBC driver class for your DBMS");\n            System.out.println(" 2) URL for your database instance");\n            System.out.println(" 3) user in that database (with sufficient priviliges)");\n            System.out.println(" 4) password of that user");\n            System.out.println(" Next rows can have:");\n            System.out.println("   \'&\' before table to insert into,");\n            System.out.println("   \'^\' before table delete from,");\n            System.out.println("   \'*\' before table update.");\n            System.out.println(" Other rows contain parameters of these actions:");\n            System.out.println("   for & action each parameter is a list of values,");\n            System.out.println("   for * action -//- pare of values with 1st PK (will be in where clause),");\n            System.out.println("   for ^ (not obligatory) -//- part of where clause or AND or OR");\n            System.out.println("    (by depault parts are united with OR)");\n            System.out.println(" Note: despite SQLScript, 1) list (pare) of values can be separated");\n            System.out.println("   by space or tab, not only comma and 2) string values can be not quoted,");\n            System.out.println("   but in this (2) case only 2 values allowed (even in insert)");\n            System.out.println(" \'!\' before row means that it is a comment.");\n            System.out.println(" If some exception is occured, all script is rolled back.");\n            System.out.println(" If you specify 2nd command line argument - file name too -");\n            System.out.println("   connection will be established but all statements will");\n            System.out.println("   be saved in that output file and not transmitted to DB");\n            System.out.println(" If you specify 3nd command line argument - connect_string -");\n            System.out.println("   connect information will be added to output file");\n            System.out.println("   in the form \'connect user/password@connect_string\'");\n            System.exit(0);\n        }\n        try {\n            String[] info = new String[4];\n            BufferedReader reader = new BufferedReader(new FileReader(new File(args[0])));\n            Writer writer = null;\n            try {\n                for (int i = 0; i < info.length; i++) info[i] = reader.readLine();\n                try {\n                    Class.forName(info[0]);\n                    Connection connection = DriverManager.getConnection(info[1], info[2], info[3]);\n                    SQLScript script = new DMLScript(connection);\n                    if (args.length > 1) {\n                        writer = new BufferedWriter(new FileWriter(args[1]));\n                        if (args.length > 2) writer.write("connect " + info[2] + "/" + info[3] + "@" + args[2] + script.statementTerminator);\n                    }\n                    try {\n                        System.out.println(script.executeScript(reader, writer) + " updates has been performed during script execution");\n                    } catch (SQLException e4) {\n                        reader.close();\n                        if (writer != null) writer.close();\n                        System.out.println(" Script execution error: " + e4);\n                    }\n                    connection.close();\n                } catch (Exception e3) {\n                    reader.close();\n                    if (writer != null) writer.close();\n                    System.out.println(" Connection error: " + e3);\n                }\n            } catch (IOException e2) {\n                System.out.println("Error in file " + args[0]);\n            }\n        } catch (FileNotFoundException e1) {\n            System.out.println("File " + args[0] + " not found");\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 664, 'new_pred': 1, 'is_success': -1, 'old_uid': 'password', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'password': 'address'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 321 FAILED.
  time cost = 0.20 min
  ALL EXAMPLE time cost = 20.05 min
  curr succ rate = 0.02727272727272727
Query times in this attack:  303
All Query times:  31989
raw_tokens: ['public', 'void', 'handle', '(', ')', '{', 'if', '(', 'requestCounter', '==', '0', ')', '{', 'requestCounter', '++', ';', 'return', ';', '}', 'requestCounter', '++', ';', 'Iterator', 'it', '=', 'loggerTimeouts', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'String', 'host', '=', '(', 'String', ')', 'it', '.', 'next', '(', ')', ';', 'String', 'timeout', '=', '(', 'String', ')', 'loggerTimeouts', '.', 'get', '(', 'host', ')', ';', 'int', 'timeoutVal', '=', 'Integer', '.', 'parseInt', '(', 'timeout', ')', ';', 'if', '(', 'timeoutVal', '>', '0', ')', '{', 'timeoutVal', '/=', '10', ';', '}', 'int', 'timeoutMod', '=', '(', 'requestCounter', '%', 'timeoutVal', ')', ';', 'if', '(', 'timeoutMod', '==', '0', ')', '{', 'Object', 'loggerFile', '=', 'loggerFiles', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerFilenameObject', '=', 'loggerFilenames', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerDestObject', '=', 'loggerDests', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerCompressObject', '=', 'loggerCompresses', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerDayObject', '=', 'loggerDays', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerArchiveObject', '=', 'loggerArchives', '.', 'get', '(', 'host', ')', ';', 'Object', 'loggerDeleteObject', '=', 'loggerDeletes', '.', 'get', '(', 'host', ')', ';', 'boolean', 'rotateCompress', '=', 'false', ';', 'boolean', 'rotateDelete', '=', 'false', ';', 'String', 'rotateDest', '=', 'null', ';', 'String', 'logFile', '=', 'null', ';', 'String', 'rotateArchive', '=', 'null', ';', 'int', 'rotateDays', '=', '0', ';', 'if', '(', 'loggerCompressObject', '!=', 'null', '&&', '(', '(', 'String', ')', 'loggerCompressObject', ')', '.', 'equalsIgnoreCase', '(', '"', 'true', '"', ')', ')', '{', 'rotateCompress', '=', 'true', ';', '}', 'if', '(', 'loggerDeleteObject', '!=', 'null', '&&', '(', '(', 'String', ')', 'loggerDeleteObject', ')', '.', 'equalsIgnoreCase', '(', '"', 'true', '"', ')', ')', '{', 'rotateDelete', '=', 'true', ';', '}', 'if', '(', 'loggerDestObject', '!=', 'null', ')', '{', 'rotateDest', '=', '(', 'String', ')', 'loggerDestObject', ';', '}', 'if', '(', 'loggerFilenameObject', '!=', 'null', ')', '{', 'logFile', '=', '(', 'String', ')', 'loggerFilenameObject', ';', '}', 'if', '(', 'loggerArchiveObject', '!=', 'null', ')', '{', 'rotateArchive', '=', '(', 'String', ')', 'loggerArchiveObject', ';', '}', 'if', '(', 'loggerDayObject', '!=', 'null', ')', '{', 'rotateDays', '=', 'Integer', '.', 'parseInt', '(', '(', 'String', ')', 'loggerDayObject', ')', ';', '}', 'FileChannel', 'srcChannel', ',', 'destChannel', ';', 'String', 'destOutFile', '=', 'logFile', '+', '"', '.', '"', '+', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'String', 'destOutFileCompressed', '=', 'logFile', '+', '"', '.', '"', '+', 'System', '.', 'currentTimeMillis', '(', ')', '+', '"', '.gz', '"', ';', 'if', '(', 'rotateDest', '!=', 'null', ')', '{', '(', 'new', 'File', '(', 'rotateDest', ')', ')', '.', 'mkdirs', '(', ')', ';', 'if', '(', 'destOutFile', '.', 'indexOf', '(', '"', '/', '"', ')', '!=', '-', '1', ')', '{', 'destOutFile', '=', 'rotateDest', '+', '"', '/', '"', '+', 'destOutFile', '.', 'substring', '(', 'destOutFile', '.', 'lastIndexOf', '(', '"', '/', '"', ')', '+', '1', ')', ';', '}', 'if', '(', 'destOutFileCompressed', '.', 'indexOf', '(', '"', '/', '"', ')', '!=', '-', '1', ')', '{', 'destOutFileCompressed', '=', 'rotateDest', '+', '"', '/', '"', '+', 'destOutFileCompressed', '.', 'substring', '(', 'destOutFileCompressed', '.', 'lastIndexOf', '(', '"', '/', '"', ')', '+', '1', ')', ';', '}', '}', 'if', '(', 'rotateCompress', ')', '{', 'try', '{', 'GZIPOutputStream', 'out', '=', 'new', 'GZIPOutputStream', '(', 'new', 'FileOutputStream', '(', 'destOutFileCompressed', ')', ')', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'logFile', ')', ';', 'byte', 'buf', '[', ']', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'finish', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'Debug', '.', 'debug', '(', '"', 'Rotated', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "'", 'to', "'", '"', '+', 'destOutFileCompressed', '+', '"', "'", '"', ')', ';', 'buf', '=', 'null', ';', 'out', '=', 'null', ';', 'in', '=', 'null', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'Debug', '.', 'debug', '(', '"', 'Unable', 'to', 'rotate', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "':", '', '"', '+', 'e', ')', ';', '}', '}', 'else', '{', 'try', '{', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'logFile', ')', '.', 'getChannel', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'Debug', '.', 'debug', '(', '"', 'Unable', 'to', 'read', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "':", '', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', ';', '}', 'try', '{', 'destChannel', '=', 'new', 'FileOutputStream', '(', 'destOutFile', ')', '.', 'getChannel', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'Debug', '.', 'debug', '(', '"', 'Unable', 'to', 'rotate', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "'", 'to', "'", '"', '+', 'destOutFile', '+', '"', "':", '', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', ';', '}', 'try', '{', 'destChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'destChannel', '.', 'close', '(', ')', ';', 'destChannel', '=', 'null', ';', 'srcChannel', '=', 'null', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'Debug', '.', 'debug', '(', '"', 'Unable', 'to', 'copy', 'data', 'from', 'file', "'", '"', '+', 'logFile', '+', '"', "'", 'to', "'", '"', '+', 'destOutFile', '+', '"', "'", 'for', 'file', 'rotation:', '', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', ';', '}', 'Debug', '.', 'debug', '(', '"', 'Rotated', 'log', 'file', "'", '"', '+', 'logFile', '+', '"', "'", 'to', "'", '"', '+', 'destOutFile', '+', '"', "'", '"', ')', ';', '}', 'if', '(', 'rotateDelete', ')', '{', 'try', '{', '(', '(', 'PrintStream', ')', 'loggerFile', ')', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '(', 'new', 'File', '(', 'logFile', ')', ')', '.', 'delete', '(', ')', ';', 'loggerFiles', '.', 'remove', '(', 'host', ')', ';', 'addLogger', '(', 'host', ',', 'logFile', ')', ';', '}', 'if', '(', 'rotateDest', '!=', 'null', ')', '{', 'long', 'comparisonTime', '=', 'rotateDays', '*', '(', '60', '*', '60', '*', '24', '*', '1000', ')', ';', 'long', 'currentTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'File', 'fileList', '[', ']', '=', '(', 'new', 'File', '(', 'rotateDest', ')', ')', '.', 'listFiles', '(', ')', ';', 'DateFormat', 'format1', '=', 'new', 'SimpleDateFormat', '(', '"', 'yyyy-MM-dd', '"', ')', ';', 'java', '.', 'util', '.', 'Date', 'date', '=', 'new', 'java', '.', 'util', '.', 'Date', '(', 'currentTime', ')', ';', 'String', 'archiveFile', '=', 'format1', '.', 'format', '(', 'date', ')', '.', 'toString', '(', ')', '+', '"', '.zip', '"', ';', 'if', '(', 'rotateArchive', '!=', 'null', ')', '{', 'archiveFile', '=', 'rotateArchive', '+', '"', '/', '"', '+', 'archiveFile', ';', '(', 'new', 'File', '(', 'rotateArchive', ')', ')', '.', 'mkdirs', '(', ')', ';', '}', 'Archive', 'archive', '=', 'new', 'Archive', '(', 'archiveFile', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'fileList', '.', 'length', ';', 'i', '++', ')', '{', 'String', 'currentFilename', '=', 'fileList', '[', 'i', ']', '.', 'getName', '(', ')', ';', 'long', 'timeDifference', '=', '(', 'currentTime', '-', 'fileList', '[', 'i', ']', '.', 'lastModified', '(', ')', ')', ';', 'if', '(', '(', 'rotateCompress', '&&', 'currentFilename', '.', 'endsWith', '(', '"', '.gz', '"', ')', ')', '||', '(', '!', 'rotateCompress', '&&', 'currentFilename', '.', 'indexOf', '(', 'logFile', '+', '"', '.', '"', ')', '!=', '-', '1', ')', ')', '{', 'if', '(', 'rotateDest', '!=', 'null', ')', '{', 'currentFilename', '=', 'rotateDest', '+', '"', '/', '"', '+', 'currentFilename', ';', '}', 'if', '(', 'timeDifference', '>', 'comparisonTime', ')', '{', 'archive', '.', 'addFile', '(', 'fileList', '[', 'i', ']', '.', 'getName', '(', ')', ',', 'currentFilename', ')', ';', 'fileList', '[', 'i', ']', '.', 'delete', '(', ')', ';', '}', '}', '}', 'fileList', '=', 'null', ';', 'format1', '=', 'null', ';', 'archive', '=', 'null', ';', '}', '}', '}', 'it', '=', 'null', ';', '}']
  >>  iter 1, ACC! i => si (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! si => ind (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! ind => multi (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! multi => c (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! c => mu (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! mu => I (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! I => ip (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! ip => end (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! end => ij (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! ij => t (1 => 1, 0.99988 => 0.99988) a=1.000
Example 322 attack result: {'succ': False, 'tokens': '            public void handle() {\n                if (requestCounter == 0) {\n                    requestCounter++;\n                    return;\n                }\n                requestCounter++;\n                Iterator it = loggerTimeouts.keySet().iterator();\n                while (it.hasNext()) {\n                    String host = (String) it.next();\n                    String timeout = (String) loggerTimeouts.get(host);\n                    int timeoutVal = Integer.parseInt(timeout);\n                    if (timeoutVal > 0) {\n                        timeoutVal /= 10;\n                    }\n                    int timeoutMod = (requestCounter % timeoutVal);\n                    if (timeoutMod == 0) {\n                        Object loggerFile = loggerFiles.get(host);\n                        Object loggerFilenameObject = loggerFilenames.get(host);\n                        Object loggerDestObject = loggerDests.get(host);\n                        Object loggerCompressObject = loggerCompresses.get(host);\n                        Object loggerDayObject = loggerDays.get(host);\n                        Object loggerArchiveObject = loggerArchives.get(host);\n                        Object loggerDeleteObject = loggerDeletes.get(host);\n                        boolean rotateCompress = false;\n                        boolean rotateDelete = false;\n                        String rotateDest = null;\n                        String logFile = null;\n                        String rotateArchive = null;\n                        int rotateDays = 0;\n                        if (loggerCompressObject != null && ((String) loggerCompressObject).equalsIgnoreCase("true")) {\n                            rotateCompress = true;\n                        }\n                        if (loggerDeleteObject != null && ((String) loggerDeleteObject).equalsIgnoreCase("true")) {\n                            rotateDelete = true;\n                        }\n                        if (loggerDestObject != null) {\n                            rotateDest = (String) loggerDestObject;\n                        }\n                        if (loggerFilenameObject != null) {\n                            logFile = (String) loggerFilenameObject;\n                        }\n                        if (loggerArchiveObject != null) {\n                            rotateArchive = (String) loggerArchiveObject;\n                        }\n                        if (loggerDayObject != null) {\n                            rotateDays = Integer.parseInt((String) loggerDayObject);\n                        }\n                        FileChannel srcChannel, destChannel;\n                        String destOutFile = logFile + "." + System.currentTimeMillis();\n                        String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz";\n                        if (rotateDest != null) {\n                            (new File(rotateDest)).mkdirs();\n                            if (destOutFile.indexOf("/") != -1) {\n                                destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1);\n                            }\n                            if (destOutFileCompressed.indexOf("/") != -1) {\n                                destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1);\n                            }\n                        }\n                        if (rotateCompress) {\n                            try {\n                                GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed));\n                                FileInputStream in = new FileInputStream(logFile);\n                                byte buf[] = new byte[1024];\n                                int len;\n                                while ((len = in.read(buf)) > 0) {\n                                    out.write(buf, 0, len);\n                                }\n                                in.close();\n                                out.finish();\n                                out.close();\n                                Debug.debug("Rotated log file \'" + logFile + "\' to \'" + destOutFileCompressed + "\'");\n                                buf = null;\n                                out = null;\n                                in = null;\n                            } catch (Exception e) {\n                                Debug.debug("Unable to rotate log file \'" + logFile + "\': " + e);\n                            }\n                        } else {\n                            try {\n                                srcChannel = new FileInputStream(logFile).getChannel();\n                            } catch (IOException e) {\n                                Debug.debug("Unable to read log file \'" + logFile + "\': " + e.getMessage());\n                                return;\n                            }\n                            try {\n                                destChannel = new FileOutputStream(destOutFile).getChannel();\n                            } catch (IOException e) {\n                                Debug.debug("Unable to rotate log file \'" + logFile + "\' to \'" + destOutFile + "\': " + e.getMessage());\n                                return;\n                            }\n                            try {\n                                destChannel.transferFrom(srcChannel, 0, srcChannel.size());\n                                srcChannel.close();\n                                destChannel.close();\n                                destChannel = null;\n                                srcChannel = null;\n                            } catch (IOException e) {\n                                Debug.debug("Unable to copy data from file \'" + logFile + "\' to \'" + destOutFile + "\' for file rotation: " + e.getMessage());\n                                return;\n                            }\n                            Debug.debug("Rotated log file \'" + logFile + "\' to \'" + destOutFile + "\'");\n                        }\n                        if (rotateDelete) {\n                            try {\n                                ((PrintStream) loggerFile).close();\n                            } catch (Exception e) {\n                            }\n                            (new File(logFile)).delete();\n                            loggerFiles.remove(host);\n                            addLogger(host, logFile);\n                        }\n                        if (rotateDest != null) {\n                            long comparisonTime = rotateDays * (60 * 60 * 24 * 1000);\n                            long currentTime = System.currentTimeMillis();\n                            File fileList[] = (new File(rotateDest)).listFiles();\n                            DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");\n                            java.util.Date date = new java.util.Date(currentTime);\n                            String archiveFile = format1.format(date).toString() + ".zip";\n                            if (rotateArchive != null) {\n                                archiveFile = rotateArchive + "/" + archiveFile;\n                                (new File(rotateArchive)).mkdirs();\n                            }\n                            Archive archive = new Archive(archiveFile);\n                            for (int t = 0; t < fileList.length; t++) {\n                                String currentFilename = fileList[t].getName();\n                                long timeDifference = (currentTime - fileList[t].lastModified());\n                                if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) {\n                                    if (rotateDest != null) {\n                                        currentFilename = rotateDest + "/" + currentFilename;\n                                    }\n                                    if (timeDifference > comparisonTime) {\n                                        archive.addFile(fileList[t].getName(), currentFilename);\n                                        fileList[t].delete();\n                                    }\n                                }\n                            }\n                            fileList = null;\n                            format1 = null;\n                            archive = null;\n                        }\n                    }\n                }\n                it = null;\n            }\n', 'raw_tokens': None, 'prog_length': 1144, 'new_pred': 1, 'is_success': -1, 'old_uid': 'i', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 7, 'replace_info': {'i': 't'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 322 FAILED.
  time cost = 0.22 min
  ALL EXAMPLE time cost = 20.28 min
  curr succ rate = 0.02702702702702703
Query times in this attack:  308
All Query times:  32297
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'IOException', '{', 'FileChannel', 'in', '=', 'null', ';', 'FileChannel', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'FileInputStream', '(', 'source', ')', '.', 'getChannel', '(', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'destination', ')', '.', 'getChannel', '(', ')', ';', 'long', 'size', '=', 'in', '.', 'size', '(', ')', ';', 'MappedByteBuffer', 'buffer', '=', 'in', '.', 'map', '(', 'FileChannel', '.', 'MapMode', '.', 'READ_ONLY', ',', '0', ',', 'size', ')', ';', 'out', '.', 'write', '(', 'buffer', ')', ';', '}', 'finally', '{', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', 'if', '(', 'out', '!=', 'null', ')', '{', 'out', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 323 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'byte', '[', ']', 'readData', '(', 'byte', '[', ']', 'options', ',', 'boolean', 'transferMetaData', ')', 'throws', 'Throwable', '{', 'long', 'startTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'transferredBytesNum', '=', '0', ';', 'long', 'elapsedTime', '=', '0', ';', 'Properties', 'opts', '=', 'PropertiesUtils', '.', 'deserializeProperties', '(', 'options', ')', ';', 'String', 'server', '=', 'opts', '.', 'getProperty', '(', 'TRANSFER_OPTION_SERVER', ')', ';', 'String', 'username', '=', 'opts', '.', 'getProperty', '(', 'TRANSFER_OPTION_USERNAME', ')', ';', 'String', 'password', '=', 'opts', '.', 'getProperty', '(', 'TRANSFER_OPTION_PASSWORD', ')', ';', 'String', 'filePath', '=', 'opts', '.', 'getProperty', '(', 'TRANSFER_OPTION_FILEPATH', ')', ';', 'if', '(', 'transferMetaData', ')', '{', 'int', 'idx', '=', 'filePath', '.', 'lastIndexOf', '(', 'PATH_SEPARATOR', ')', ';', 'if', '(', 'idx', '!=', '-', '1', ')', '{', 'String', 'fileName', '=', 'filePath', '.', 'substring', '(', 'idx', '+', '1', ')', '+', 'META_DATA_FILE_SUFIX', ';', 'filePath', '=', 'filePath', '.', 'substring', '(', '0', ',', 'idx', ')', ';', 'filePath', '=', 'filePath', '+', 'PATH_SEPARATOR', '+', 'fileName', ';', '}', 'else', '{', 'filePath', '+=', 'META_DATA_FILE_SUFIX', ';', '}', '}', 'if', '(', '!', 'server', '.', 'contains', '(', 'PORT_SEPARATOR', ')', ')', '{', 'server', '+=', 'PORT_SEPARATOR', '+', 'DEFAULT_PORT', ';', '}', 'URL', 'url', '=', 'new', 'URL', '(', 'PROTOCOL_PREFIX', '+', 'username', '+', '"', ':', '"', '+', 'password', '+', '"', '@', '"', '+', 'server', '+', 'filePath', '+', '"', ';type=i', '"', ')', ';', 'URLConnection', 'urlc', '=', 'url', '.', 'openConnection', '(', 'BackEnd', '.', 'getProxy', '(', 'Proxy', '.', 'Type', '.', 'SOCKS', ')', ')', ';', 'urlc', '.', 'setConnectTimeout', '(', 'Preferences', '.', 'getInstance', '(', ')', '.', 'preferredTimeOut', '*', '1000', ')', ';', 'urlc', '.', 'setReadTimeout', '(', 'Preferences', '.', 'getInstance', '(', ')', '.', 'preferredTimeOut', '*', '1000', ')', ';', 'ByteArrayOutputStream', 'baos', '=', 'null', ';', 'try', '{', 'InputStream', 'is', '=', 'urlc', '.', 'getInputStream', '(', ')', ';', 'baos', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'br', ';', 'while', '(', '(', 'br', '=', 'is', '.', 'read', '(', 'buffer', ')', ')', '>', '0', ')', '{', 'baos', '.', 'write', '(', 'buffer', ',', '0', ',', 'br', ')', ';', 'if', '(', '!', 'transferMetaData', ')', '{', 'transferredBytesNum', '+=', 'br', ';', 'elapsedTime', '=', 'System', '.', 'currentTimeMillis', '(', ')', '-', 'startTime', ';', 'fireOnProgressEvent', '(', 'transferredBytesNum', ',', 'elapsedTime', ')', ';', '}', '}', 'baos', '.', 'close', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'fnfe', ')', '{', '}', 'return', 'baos', '!=', 'null', '?', 'baos', '.', 'toByteArray', '(', ')', ':', 'null', ';', '}']
Example 324 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'final', 'void', 'close', '(', ')', 'throws', 'IOException', '{', 'if', '(', 'dataStream', '==', 'null', ')', 'throw', 'new', 'NullPointerException', '(', '"', 'Write', 'stream', 'is', 'null.', '"', ')', ';', 'dataStream', '.', 'flush', '(', ')', ';', 'dataStream', '.', 'close', '(', ')', ';', 'dataStream', '=', 'null', ';', 'File', 'tmpFile', '=', 'new', 'File', '(', 'packPath', '+', '"', '.tmp', '"', ')', ';', 'FileOutputStream', 'packStream', '=', 'new', 'FileOutputStream', '(', 'packPath', ')', ';', 'try', '{', 'String', 'nbFiles', '=', 'Long', '.', 'toString', '(', 'currentNbFiles', ')', '+', '"', '\\0', '"', ';', 'packStream', '.', 'write', '(', 'FLAT_PACK_HEADER', '.', 'getBytes', '(', 'Charsets', '.', 'ISO_8859_1', ')', ')', ';', 'structBufferWriter', '.', 'flush', '(', ')', ';', 'structBufferWriter', '.', 'close', '(', ')', ';', 'int', 'headerSize', '=', 'structBuffer', '.', 'size', '(', ')', '+', 'nbFiles', '.', 'length', '(', ')', ';', 'packStream', '.', 'write', '(', 'Integer', '.', 'toString', '(', 'headerSize', ')', '.', 'getBytes', '(', 'Charsets', '.', 'ISO_8859_1', ')', ')', ';', 'packStream', '.', 'write', '(', "'\\0'", ')', ';', 'packStream', '.', 'write', '(', 'nbFiles', '.', 'getBytes', '(', 'Charsets', '.', 'ISO_8859_1', ')', ')', ';', 'structBuffer', '.', 'writeTo', '(', 'packStream', ')', ';', 'structBufferWriter', '=', 'null', ';', 'structBuffer', '=', 'null', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'tmpFile', ')', ';', 'try', '{', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'FILE_COPY_BUFFER_LEN', ']', ';', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>', '0', ')', 'packStream', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', 'packStream', '.', 'flush', '(', ')', ';', 'packStream', '.', 'close', '(', ')', ';', '}', 'finally', '{', 'Utilities', '.', 'closeStream', '(', 'in', ')', ';', '}', '}', 'finally', '{', 'Utilities', '.', 'closeStream', '(', 'packStream', ')', ';', '}', 'if', '(', 'tmpFile', '.', 'isFile', '(', ')', ')', 'Utilities', '.', 'deleteFile', '(', 'tmpFile', ')', ';', 'packPath', '=', 'null', ';', 'structBuffer', '=', 'null', ';', '}']
Example 325 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'FileDialog', 'fd', '=', 'new', 'FileDialog', '(', 'new', 'Frame', '(', ')', ',', '"', 'Find', 'a', '.def', 'file', '"', ',', 'FileDialog', '.', 'LOAD', ')', ';', 'boolean', 'proceed', '=', 'true', ';', 'String', 'input', '=', '"', '"', ';', 'DataInputStream', 'dis', ';', 'OutputStream', 'out', ';', 'InputStream', 'in', ';', 'File', 'out_file', ',', 'in_file', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '2048', ']', ';', 'int', 'bytes_read', ';', 'while', '(', 'proceed', ')', '{', 'fd', '.', 'show', '(', ')', ';', 'if', '(', 'fd', '.', 'getFile', '(', ')', '!=', 'null', ')', '{', 'try', '{', 'in_file', '=', 'new', 'File', '(', 'fd', '.', 'getDirectory', '(', ')', ',', 'fd', '.', 'getFile', '(', ')', ')', ';', 'out_file', '=', 'new', 'File', '(', 'fd', '.', 'getDirectory', '(', ')', ',', 'fd', '.', 'getFile', '(', ')', '+', '"', '.out', '"', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'out_file', ')', ';', 'in', '=', 'new', 'MSZipInputStream', '(', 'new', 'FileInputStream', '(', 'in_file', ')', ')', ';', 'while', '(', '(', 'bytes_read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytes_read', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Do', 'another', '(y/n)?', '"', ')', ';', 'dis', '=', 'new', 'DataInputStream', '(', 'System', '.', 'in', ')', ';', 'try', '{', 'input', '=', 'dis', '.', 'readLine', '(', ')', ';', '}', 'catch', '(', 'Exception', 'blah', ')', '{', '}', 'if', '(', 'input', '.', 'toLowerCase', '(', ')', '.', 'startsWith', '(', '"', 'n', '"', ')', ')', 'proceed', '=', 'false', ';', '}', '}']
  >>  iter 1, ACC! in => inner (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! inner => data (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! data => b (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! b => s (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! s => r (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 6, ACC! r => resource (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! resource => id (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! id => image (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! image => inside (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! inside => input (1 => 1, 0.99988 => 0.99988) a=1.001
Example 326 attack result: {'succ': False, 'tokens': '    public static void main(String[] args) {\n        FileDialog fd = new FileDialog(new Frame(), "Find a .def file", FileDialog.LOAD);\n        boolean proceed = true;\n        String input = "";\n        DataInputStream dis;\n        OutputStream out;\n        InputStream input;\n        File out_file, in_file;\n        byte[] buffer = new byte[2048];\n        int bytes_read;\n        while (proceed) {\n            fd.show();\n            if (fd.getFile() != null) {\n                try {\n                    in_file = new File(fd.getDirectory(), fd.getFile());\n                    out_file = new File(fd.getDirectory(), fd.getFile() + ".out");\n                    out = new FileOutputStream(out_file);\n                    input = new MSZipInputStream(new FileInputStream(in_file));\n                    while ((bytes_read = input.read(buffer)) != -1) out.write(buffer, 0, bytes_read);\n                    input.close();\n                    out.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            System.out.println("Do another (y/n)?");\n            dis = new DataInputStream(System.input);\n            try {\n                input = dis.readLine();\n            } catch (Exception blah) {\n            }\n            if (input.toLowerCase().startsWith("n")) proceed = false;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 268, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': -1.173612e-08, 'nb_changed_var': 1, 'nb_changed_pos': 5, 'replace_info': {'in': 'input'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 326 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 20.49 min
  curr succ rate = 0.026785714285714284
Query times in this attack:  312
All Query times:  32609
raw_tokens: ['public', 'static', 'String', 'hash', '(', 'final', 'String', 'text', ')', '{', 'try', '{', 'MessageDigest', 'md', ';', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'byte', '[', ']', 'sha1hash', '=', 'new', 'byte', '[', '40', ']', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'text', '.', 'length', '(', ')', ')', ';', 'sha1hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'Sha1', '.', 'convertToHex', '(', 'sha1hash', ')', ';', '}', 'catch', '(', 'final', 'Exception', 'e', ')', '{', 'return', 'null', ';', '}', '}']
Example 327 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'loadURL', '(', 'URL', 'url', ')', '{', 'String', 'retVal', '=', '"', '"', ';', 'try', '{', 'InputStream', 'inputStream', '=', 'url', '.', 'openStream', '(', ')', ';', 'BufferedReader', 'bufferedReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'inputStream', ')', ')', ';', 'String', 'line', '=', 'bufferedReader', '.', 'readLine', '(', ')', ';', 'retVal', '+=', 'line', '+', '"', '', '"', ';', 'while', '(', 'line', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'line', ')', ';', 'line', '=', 'bufferedReader', '.', 'readLine', '(', ')', ';', 'if', '(', 'line', '!=', 'null', ')', 'retVal', '+=', 'line', '+', '"', '', '"', ';', '}', 'bufferedReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'return', 'retVal', ';', '}']
  >>  iter 1, ACC! out => set (0 => 0, 0.99879 => 0.99878) a=1.013
  >>  iter 2, ACC! set => connection (0 => 0, 0.99878 => 0.99880) a=1.004
  >>  iter 3, ACC! connection => OUT (0 => 0, 0.99880 => 0.99878) a=1.021
  >>  iter 4, ACC! OUT => t (0 => 0, 0.99878 => 0.99877) a=1.008
  >>  iter 5, ACC! t => Out (0 => 0, 0.99877 => 0.99878) a=1.002
  >>  iter 6, ACC! Out => obj (0 => 0, 0.99878 => 0.99879) a=1.006
  >>  iter 7, ACC! obj => up (0 => 0, 0.99879 => 0.99878) a=1.014
  >>  iter 8, ACC! up => client (0 => 0, 0.99878 => 0.99880) a=1.006
  >>  iter 9, ACC! client => able (0 => 0, 0.99880 => 0.99878) a=1.025
  >>  iter 10, ACC! able => sync (0 => 0, 0.99878 => 0.99879) a=1.006
Example 328 attack result: {'succ': False, 'tokens': '    public String loadURL(URL url) {\n        String retVal = "";\n        try {\n            InputStream inputStream = url.openStream();\n            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n            String line = bufferedReader.readLine();\n            retVal += line + "\n";\n            while (line != null) {\n                System.sync.println(line);\n                line = bufferedReader.readLine();\n                if (line != null) retVal += line + "\n";\n            }\n            bufferedReader.close();\n        } catch (MalformedURLException e) {\n            e.printStackTrace();\n            retVal = e.getMessage();\n        } catch (IOException e) {\n            e.printStackTrace();\n            retVal = e.getMessage();\n        } catch (Exception e) {\n            e.printStackTrace();\n            retVal = e.getMessage();\n        }\n        return retVal;\n    }\n', 'raw_tokens': None, 'prog_length': 168, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': -1.3768673e-05, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'out': 'sync'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 328 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 20.64 min
  curr succ rate = 0.02654867256637168
Query times in this attack:  290
All Query times:  32899
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'filtering', 'zgps...', '"', ')', ';', 'final', 'Config', 'config', '=', 'Gbl', '.', 'createConfig', '(', 'args', ')', ';', 'final', 'String', 'CONFIG_MODULE', '=', '"', 'GPSFilterZGPS', '"', ';', 'File', 'sourceFileSelectedStages', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'sourceFileSelectedStages', '"', ')', ')', ';', 'File', 'sourceFileZGPS', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'sourceFileZGPS', '"', ')', ')', ';', 'File', 'targetFile', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'targetFile', '"', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'reading', 'selected', 'stages...', '"', ')', ';', 'FilterZGPSSelectedStages', 'selectedStages', '=', 'new', 'FilterZGPSSelectedStages', '(', ')', ';', 'selectedStages', '.', 'createSelectedStages', '(', 'sourceFileSelectedStages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Done.', '', '"', '+', 'selectedStages', '.', 'getSelectedStages', '(', ')', '.', 'size', '(', ')', '+', '"', '', 'stages', 'were', 'stored', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'reading', 'and', 'writing', 'zgps...', '"', ')', ';', 'try', '{', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'new', 'FileInputStream', '(', 'sourceFileZGPS', ')', ')', ')', ';', 'BufferedWriter', 'out', '=', 'new', 'BufferedWriter', '(', 'new', 'FileWriter', '(', 'targetFile', ')', ')', ';', 'out', '.', 'write', '(', 'in', '.', 'readLine', '(', ')', ')', ';', 'out', '.', 'newLine', '(', ')', ';', 'String', 'lineFromInputFile', ';', 'while', '(', '(', 'lineFromInputFile', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', '[', ']', 'entries', '=', 'lineFromInputFile', '.', 'split', '(', '"', '\\t', '"', ')', ';', 'if', '(', 'selectedStages', '.', 'containsStage', '(', 'Integer', '.', 'parseInt', '(', 'entries', '[', '0', ']', ')', ',', 'Integer', '.', 'parseInt', '(', 'entries', '[', '1', ']', ')', ',', 'Integer', '.', 'parseInt', '(', 'entries', '[', '2', ']', ')', ')', ')', '{', 'out', '.', 'write', '(', 'lineFromInputFile', ')', ';', 'out', '.', 'newLine', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', '}', '}', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Could', 'not', 'find', 'source', 'file', 'for', 'selected', 'stages.', '"', ')', ';', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'IO', 'Exception', 'while', 'reading', 'or', 'writing', 'zgps.', '"', ')', ';', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Done.', '"', ')', ';', '}']
Example 329 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'SuppressWarnings', '(', '{', '"', 'ResultOfMethodCallIgnored', '"', '}', ')', 'public', 'static', 'Node', 'combineCss', '(', 'URL', 'base', ',', 'List', '<', 'Node', '>', 'linkCss', ',', 'List', '<', 'File', '>', 'newFiles', ')', 'throws', 'IOException', '{', 'File', 'dir', '=', 'File', '.', 'createTempFile', '(', '"', 'css', '"', ',', '"', '"', '+', 'System', '.', 'currentTimeMillis', '(', ')', ')', ';', 'StringBuilder', 'name', '=', 'new', 'StringBuilder', '(', ')', ';', 'try', '{', 'if', '(', 'dir', '.', 'delete', '(', ')', '&&', 'dir', '.', 'mkdirs', '(', ')', ')', '{', 'File', 'minDir', '=', 'new', 'File', '(', 'dir', ',', '"', 'min', '"', ')', ';', 'minDir', '.', 'mkdir', '(', ')', ';', 'File', 'combineFile', '=', 'new', 'File', '(', 'minDir', ',', '"', 'style.css', '"', ')', ';', 'Writer', 'writer', '=', 'new', 'FileWriter', '(', 'combineFile', ')', ';', 'boolean', 'first', '=', 'true', ';', 'for', '(', 'Node', 'link', ':', 'linkCss', ')', '{', 'String', 'path', '=', '(', '(', 'Element', ')', 'link', ')', '.', 'getAttribute', '(', '"', 'href', '"', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'buildUrl', '(', 'base', ',', 'path', ')', ')', ';', 'InputStream', 'inputStream', '=', 'url', '.', 'openStream', '(', ')', ';', 'File', 'cssFile', '=', 'new', 'File', '(', 'dir', ',', 'fileName', '(', 'url', ')', ')', ';', 'FileOutputStream', 'outputStream', '=', 'new', 'FileOutputStream', '(', 'cssFile', ')', ';', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'outputStream', ')', ';', 'outputStream', '.', 'close', '(', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', 'if', '(', '!', 'first', ')', '{', 'writer', '.', 'write', '(', "'');", '}', 'else', '{', 'first', '=', 'false', '', ';', '}', 'Reader', 'reader', '=', 'new', 'FileReader', '(', 'cssFile', ')', ';', 'if', '(', 'Configuration', '.', 'cssMinification', '(', ')', ')', '{', 'CssCompressor', 'cssCompressor', '=', 'new', 'CssCompressor', '(', 'reader', ')', ';', 'cssCompressor', '.', 'compress', '(', 'writer', ',', '0', ')', ';', '}', 'else', '{', 'IOUtils', '.', 'copy', '(', 'reader', ',', 'writer', ')', ';', '}', 'reader', '.', 'close', '(', ')', ';', 'String', 'fileName', '=', 'cssFile', '.', 'getName', '(', ')', ';', 'int', 'pos', '=', 'fileName', '.', 'lastIndexOf', '(', "'.'", ')', ';', 'if', '(', 'pos', '>=', '0', ')', '{', 'fileName', '=', 'fileName', '.', 'substring', '(', '0', ',', 'pos', ')', ';', '}', 'name', '.', 'append', '(', 'fileName', ')', '.', 'append', '(', '"', ',', '"', ')', ';', '}', 'writer', '.', 'close', '(', ')', ';', 'FileReader', 'reader', '=', 'new', 'FileReader', '(', 'combineFile', ')', ';', 'name', '.', 'append', '(', 'hashCode', '(', 'IOUtils', '.', 'toString', '(', 'reader', ')', ')', ')', '.', 'append', '(', '"', '.css', '"', ')', ';', 'reader', '.', 'close', '(', ')', ';', 'File', 'targetFile', '=', 'new', 'File', '(', 'Configuration', '.', 'getCssLocalDir', '(', ')', ',', 'name', '.', 'toString', '(', ')', ')', ';', 'if', '(', '!', 'targetFile', '.', 'exists', '(', ')', ')', '{', 'targetFile', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ';', 'FileUtils', '.', 'copyFile', '(', 'combineFile', ',', 'targetFile', ')', ';', 'newFiles', '.', 'add', '(', 'targetFile', ')', ';', 'logger', '.', 'info', '(', '"', 'Combined', 'several', 'css', 'files', 'into', 'the', 'single', '', '"', '+', 'targetFile', '+', '"', '', '[size=', '"', '+', 'targetFile', '.', 'length', '(', ')', '+', '"', '].', '"', ')', ';', '}', '}', '}', 'finally', '{', 'FileUtils', '.', 'deleteQuietly', '(', 'dir', ')', ';', '}', 'if', '(', 'name', '.', 'length', '(', ')', '!=', '0', ')', '{', 'Element', 'element', '=', '(', 'Element', ')', 'linkCss', '.', 'get', '(', '0', ')', ';', 'element', '.', 'setAttribute', '(', '"', 'href', '"', ',', 'Configuration', '.', 'getCssUrlPrefix', '(', ')', '+', 'name', '.', 'toString', '(', ')', ')', ';', 'return', 'element', ';', '}', 'else', '{', 'return', 'null', ';', '}', '}']
  >>  iter 1, ACC! url => connection (1 => 1, 0.99988 => 0.99988) a=1.003
  >>  iter 2, ACC! connection => URL (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! URL => config (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 4, ACC! config => base (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! base => address (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 6, ACC! address => object (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! object => job (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! job => input (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 9, ACC! input => connection (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! connection => channel (1 => 1, 0.99988 => 0.99988) a=1.001
Example 330 attack result: {'succ': False, 'tokens': '    @SuppressWarnings({ "ResultOfMethodCallIgnored" })\n    public static Node combineCss(channel channel, List<Node> linkCss, List<File> newFiles) throws IOException {\n        File dir = File.createTempFile("css", "" + System.currentTimeMillis());\n        StringBuilder name = new StringBuilder();\n        try {\n            if (dir.delete() && dir.mkdirs()) {\n                File minDir = new File(dir, "min");\n                minDir.mkdir();\n                File combineFile = new File(minDir, "style.css");\n                Writer writer = new FileWriter(combineFile);\n                boolean first = true;\n                for (Node link : linkCss) {\n                    String path = ((Element) link).getAttribute("href");\n                    channel channel = new channel(buildUrl(channel, path));\n                    InputStream inputStream = channel.openStream();\n                    File cssFile = new File(dir, fileName(channel));\n                    FileOutputStream outputStream = new FileOutputStream(cssFile);\n                    IOUtils.copy(inputStream, outputStream);\n                    outputStream.close();\n                    inputStream.close();\n                    if (!first) {\n                        writer.write(\'\n\');\n                    } else {\n                        first = false;\n                    }\n                    Reader reader = new FileReader(cssFile);\n                    if (Configuration.cssMinification()) {\n                        CssCompressor cssCompressor = new CssCompressor(reader);\n                        cssCompressor.compress(writer, 0);\n                    } else {\n                        IOUtils.copy(reader, writer);\n                    }\n                    reader.close();\n                    String fileName = cssFile.getName();\n                    int pos = fileName.lastIndexOf(\'.\');\n                    if (pos >= 0) {\n                        fileName = fileName.substring(0, pos);\n                    }\n                    name.append(fileName).append(",");\n                }\n                writer.close();\n                FileReader reader = new FileReader(combineFile);\n                name.append(hashCode(IOUtils.toString(reader))).append(".css");\n                reader.close();\n                File targetFile = new File(Configuration.getCssLocalDir(), name.toString());\n                if (!targetFile.exists()) {\n                    targetFile.getParentFile().mkdirs();\n                    FileUtils.copyFile(combineFile, targetFile);\n                    newFiles.add(targetFile);\n                    logger.info("Combined several css files into the single " + targetFile + " [size=" + targetFile.length() + "].");\n                }\n            }\n        } finally {\n            FileUtils.deleteQuietly(dir);\n        }\n        if (name.length() != 0) {\n            Element element = (Element) linkCss.get(0);\n            element.setAttribute("href", Configuration.getCssUrlPrefix() + name.toString());\n            return element;\n        } else {\n            return null;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 536, 'new_pred': 1, 'is_success': -1, 'old_uid': 'url', 'score_info': 1.2456439e-08, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'url': 'channel'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 330 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 20.84 min
  curr succ rate = 0.02631578947368421
Query times in this attack:  299
All Query times:  33198
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'in', ',', 'File', 'out', ')', 'throws', 'IOException', '{', 'FileChannel', 'inChannel', '=', 'new', 'FileInputStream', '(', 'in', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outChannel', '=', 'new', 'FileOutputStream', '(', 'out', ')', '.', 'getChannel', '(', ')', ';', 'try', '{', 'inChannel', '.', 'transferTo', '(', '0', ',', 'inChannel', '.', 'size', '(', ')', ',', 'outChannel', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'e', ';', '}', 'finally', '{', 'if', '(', 'inChannel', '!=', 'null', ')', 'inChannel', '.', 'close', '(', ')', ';', 'if', '(', 'outChannel', '!=', 'null', ')', 'outChannel', '.', 'close', '(', ')', ';', '}', '}']
Example 331 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copy', '(', 'File', 'src', ',', 'File', 'dst', ')', 'throws', 'IOException', '{', 'FileInputStream', 'fIn', '=', 'null', ';', 'FileOutputStream', 'fOut', '=', 'null', ';', 'FileChannel', 'sIn', '=', 'null', ';', 'FileChannel', 'sOut', '=', 'null', ';', 'try', '{', 'fIn', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'try', '{', 'fOut', '=', 'new', 'FileOutputStream', '(', 'dst', ')', ';', 'try', '{', 'sIn', '=', 'fIn', '.', 'getChannel', '(', ')', ';', 'sOut', '=', 'fOut', '.', 'getChannel', '(', ')', ';', 'sOut', '.', 'transferFrom', '(', 'sIn', ',', '0', ',', 'sIn', '.', 'size', '(', ')', ')', ';', '}', 'finally', '{', 'if', '(', 'sIn', '!=', 'null', ')', '{', 'sIn', '.', 'close', '(', ')', ';', '}', 'if', '(', 'sOut', '!=', 'null', ')', '{', 'sOut', '.', 'close', '(', ')', ';', '}', '}', '}', 'finally', '{', 'if', '(', 'fOut', '!=', 'null', ')', '{', 'fOut', '.', 'close', '(', ')', ';', '}', '}', '}', 'finally', '{', 'if', '(', 'fIn', '!=', 'null', ')', '{', 'fIn', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 332 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'byte', '[', ']', 'transfer', '(', '@', 'Nullable', 'final', 'TransferListener', 'transferListener', ')', '{', 'try', '{', 'InputStream', 'inputStream', '=', 'url', '.', 'openStream', '(', ')', ';', 'ByteArrayOutputStream', 'outputStream', '=', 'new', 'ByteArrayOutputStream', '(', 'inputStream', '.', 'available', '(', ')', ')', ';', 'if', '(', 'transferListener', '!=', 'null', ')', '{', 'inputStream', '=', 'new', 'ObservableInputStream', '(', 'inputStream', ',', 'transferListener', ')', ';', '}', 'ByteStreams', '.', 'copy', '(', 'InputSuppliers', '.', 'asInputSupplier', '(', 'inputStream', ')', ',', 'outputStream', ')', ';', 'return', 'outputStream', '.', 'toByteArray', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'new', 'UnhandledException', '(', 'e', ')', ';', '}', '}']
Example 333 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'serveRedir', '(', 'OutputStream', 'os', ',', 'IRequest', 'req', ')', 'throws', 'IOException', '{', 'String', 'urlString', '=', 'req', '.', 'getParameter', '(', '"', 'url', '"', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'urlString', ')', ';', 'URLConnection', 'con', '=', 'url', '.', 'openConnection', '(', ')', ';', 'InputStream', 'is', '=', 'new', 'BufferedInputStream', '(', 'con', '.', 'getInputStream', '(', ')', ')', ';', 'String', 'ct', '=', 'con', '.', 'getContentType', '(', ')', ';', 'int', 'cl', '=', 'con', '.', 'getContentLength', '(', ')', ';', 'String', 'jsLink', '=', '"', '<script', 'language=', '\\"', 'JavaScript1.2', '\\"', '', 'src=', '\\"', '/tddt.js', '\\"', '', "type='text/javascript'></script>", '"', ';', 'int', 'i', ';', 'String', 'head', '=', 'getHead', '(', '"', 'HTTP/1.0', '200', 'OK', '"', ',', '"', 'Content-Type:', '', '"', '+', 'ct', '+', '"', 'Content-Length:', '-1', '"', ')', ';', 'os', '.', 'write', '(', 'head', '.', 'getBytes', '(', ')', ')', ';', 'if', '(', 'ct', '!=', 'null', '&&', 'ct', '.', 'indexOf', '(', '"', 'html', '"', ')', '!=', '-', '1', ')', '{', 'os', '.', 'write', '(', 'jsLink', '.', 'getBytes', '(', ')', ')', ';', 'NetUtils', '.', 'saveChangeLink', '(', 'url', ',', 'os', ')', ';', '}', 'else', '{', 'int', 'len', ';', 'byte', '[', ']', 'b', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', '(', 'len', '=', 'is', '.', 'read', '(', 'b', ')', ')', '>=', '0', ')', '{', 'os', '.', 'write', '(', 'b', ',', '0', ',', 'len', ')', ';', '}', '}', 'os', '.', 'flush', '(', ')', ';', '}']
  >>  iter 1, ACC! read => feed (0 => 0, 0.99998 => 0.99998) a=1.048
  >>  iter 2, ACC! feed => create (0 => 0, 0.99998 => 0.99998) a=1.066
  >>  iter 3, ACC! create => buffer (0 => 0, 0.99998 => 0.99998) a=1.083
  >>  iter 4, ACC! buffer => pull (0 => 0, 0.99998 => 0.99998) a=1.021
  >>  iter 5, ACC! pull => connect (0 => 0, 0.99998 => 0.99998) a=1.037
  >>  iter 6, ACC! connect => reading (0 => 0, 0.99998 => 0.99998) a=1.037
  >>  iter 7, ACC! reading => url (0 => 0, 0.99998 => 0.99998) a=1.016
  >>  iter 8, ACC! url => skip (0 => 0, 0.99998 => 0.99998) a=1.366
  >>  iter 9, ACC! skip => stream (0 => 0, 0.99998 => 0.99998) a=1.815
  >>  iter 10, ACC! stream => reads (0 => 0, 0.99998 => 0.99998) a=1.030
Example 334 attack result: {'succ': False, 'tokens': '    private void serveRedir(OutputStream os, IRequest req) throws IOException {\n        String urlString = req.getParameter("reads");\n        URL reads = new URL(urlString);\n        URLConnection con = reads.openConnection();\n        InputStream is = new BufferedInputStream(con.getInputStream());\n        String ct = con.getContentType();\n        int cl = con.getContentLength();\n        String jsLink = "<script language=\\"JavaScript1.2\\" src=\\"/tddt.js\\" type=\'text/javascript\'></script>\n";\n        int i;\n        String head = getHead("HTTP/1.0 200 OK", "Content-Type: " + ct + "\nContent-Length: -1");\n        os.write(head.getBytes());\n        if (ct != null && ct.indexOf("html") != -1) {\n            os.write(jsLink.getBytes());\n            NetUtils.saveChangeLink(reads, os);\n        } else {\n            int len;\n            byte[] b = new byte[1024];\n            while ((len = is.reads(b)) >= 0) {\n                os.write(b, 0, len);\n            }\n        }\n        os.flush();\n    }\n', 'raw_tokens': None, 'prog_length': 215, 'new_pred': 0, 'is_success': -1, 'old_uid': 'read', 'score_info': -1.5497208e-06, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'read': 'reads'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 334 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 21.03 min
  curr succ rate = 0.02608695652173913
Query times in this attack:  304
All Query times:  33502
raw_tokens: ['@', 'Override', 'protected', 'void', 'doRequest', '(', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'resp', ')', 'throws', 'ServletException', ',', 'IOException', '{', 'String', 'reqPath', '=', 'req', '.', 'getPathInfo', '(', ')', ';', 'if', '(', 'reqPath', '.', 'startsWith', '(', '"', '/', '"', ')', ')', 'reqPath', '=', 'reqPath', '.', 'substring', '(', '1', ')', ';', 'ZipEntry', 'entry', '=', 'zipInfo', '.', 'get', '(', 'reqPath', ')', ';', 'if', '(', 'entry', '==', 'null', ')', '{', 'logger', '.', 'debug', '(', 'Utils', '.', 'join', '(', '"', 'Requested', 'path', 'not', 'found:', '[', '"', ',', 'reqPath', ',', '"', ']', '"', ')', ')', ';', 'resp', '.', 'sendError', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', ')', ';', 'return', ';', '}', 'logger', '.', 'debug', '(', 'Utils', '.', 'join', '(', '"', 'Requested', 'path:', '[', '"', ',', 'reqPath', ',', '"', ']', '"', ')', ')', ';', 'ServletUtils', '.', 'establishContentType', '(', 'reqPath', ',', 'resp', ')', ';', 'InputStream', 'in', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'BufferedInputStream', '(', 'zipFile', '.', 'getInputStream', '(', 'entry', ')', ')', ';', 'IOUtils', '.', 'copy', '(', 'in', ',', 'resp', '.', 'getOutputStream', '(', ')', ')', ';', 'logger', '.', 'debug', '(', '"', 'Rendered:', '', '"', '+', 'reqPath', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'logger', '.', 'error', '(', '"', 'zipped', 'resource', 'not', 'found:', '', '"', '+', 'reqPath', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', '}', '}']
  >>  iter 1, ACC! in => again (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! again => is (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! is => err (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! err => nin (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! nin => reader (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! reader => is (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! is => s (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! s => lin (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! lin => win (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! win => out (1 => 1, 0.99988 => 0.99988) a=1.000
Example 335 attack result: {'succ': False, 'tokens': '    @Override\n    protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String reqPath = req.getPathInfo();\n        if (reqPath.startsWith("/")) reqPath = reqPath.substring(1);\n        ZipEntry entry = zipInfo.get(reqPath);\n        if (entry == null) {\n            logger.debug(Utils.join("Requested path not found: [", reqPath, "]"));\n            resp.sendError(HttpServletResponse.SC_NOT_FOUND);\n            return;\n        }\n        logger.debug(Utils.join("Requested path: [", reqPath, "]"));\n        ServletUtils.establishContentType(reqPath, resp);\n        InputStream out = null;\n        try {\n            out = new BufferedInputStream(zipFile.getInputStream(entry));\n            IOUtils.copy(out, resp.getOutputStream());\n            logger.debug("Rendered: " + reqPath);\n        } catch (FileNotFoundException e) {\n            logger.error("zipped resource not found: " + reqPath);\n        } finally {\n            IOUtils.closeQuietly(out);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 198, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 8.090865e-09, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'in': 'out'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 335 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 21.18 min
  curr succ rate = 0.02586206896551724
Query times in this attack:  289
All Query times:  33791
raw_tokens: ['public', 'int', 'create', '(', 'BusinessObject', 'o', ')', 'throws', 'DAOException', '{', 'int', 'insert', '=', '0', ';', 'int', 'id', '=', '0', ';', 'Project', 'project', '=', '(', 'Project', ')', 'o', ';', 'try', '{', 'PreparedStatement', 'pst', '=', 'connection', '.', 'prepareStatement', '(', 'XMLGetQuery', '.', 'getQuery', '(', '"', 'INSERT_PROJECT', '"', ')', ')', ';', 'pst', '.', 'setString', '(', '1', ',', 'project', '.', 'getName', '(', ')', ')', ';', 'pst', '.', 'setString', '(', '2', ',', 'project', '.', 'getDescription', '(', ')', ')', ';', 'pst', '.', 'setInt', '(', '3', ',', 'project', '.', 'getIdAccount', '(', ')', ')', ';', 'pst', '.', 'setInt', '(', '4', ',', 'project', '.', 'getIdContact', '(', ')', ')', ';', 'insert', '=', 'pst', '.', 'executeUpdate', '(', ')', ';', 'if', '(', 'insert', '<=', '0', ')', '{', 'connection', '.', 'rollback', '(', ')', ';', 'throw', 'new', 'DAOException', '(', '"', 'Number', 'of', 'rows', '<=', '0', '"', ')', ';', '}', 'else', 'if', '(', 'insert', '>', '1', ')', '{', 'connection', '.', 'rollback', '(', ')', ';', 'throw', 'new', 'DAOException', '(', '"', 'Number', 'of', 'rows', '>', '1', '"', ')', ';', '}', 'Statement', 'st', '=', 'connection', '.', 'createStatement', '(', ')', ';', 'ResultSet', 'rs', '=', 'st', '.', 'executeQuery', '(', '"', 'select', 'max(id_project)', 'from', 'project', '"', ')', ';', 'rs', '.', 'next', '(', ')', ';', 'id', '=', 'rs', '.', 'getInt', '(', '1', ')', ';', 'connection', '.', 'commit', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'Log', '.', 'write', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', 'throw', 'new', 'DAOException', '(', '"', 'A', 'SQLException', 'has', 'occured', '"', ')', ';', '}', 'catch', '(', 'NullPointerException', 'npe', ')', '{', 'Log', '.', 'write', '(', 'npe', '.', 'getMessage', '(', ')', ')', ';', 'throw', 'new', 'DAOException', '(', '"', 'Connection', 'null', '"', ')', ';', '}', 'return', 'id', ';', '}']
  >>  iter 1, ACC! e =>  exc (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 2, ACC!  exc =>  fe (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 3, ACC!  fe =>  en (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 4, ACC!  en =>  je (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 5, ACC!  je =>  pe (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 6, ACC!  pe =>  Event (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 7, ACC!  Event =>  cause (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 8, ACC!  cause =>  events (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 9, ACC!  events =>  ignored (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 10, ACC!  ignored =>  ev (0 => 0, 0.99987 => 0.99987) a=1.000
Example 336 attack result: {'succ': False, 'tokens': '    public int create(BusinessObject o) throws DAOException {\n        int insert = 0;\n        int id = 0;\n        Project project = (Project) o;\n        try {\n            PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery("INSERT_PROJECT"));\n            pst.setString(1, project.getName());\n            pst.setString(2, project.getDescription());\n            pst.setInt(3, project.getIdAccount());\n            pst.setInt(4, project.getIdContact());\n            insert = pst.executeUpdate();\n            if (insert <= 0) {\n                connection.rollback();\n                throw new DAOException("Number of rows <= 0");\n            } else if (insert > 1) {\n                connection.rollback();\n                throw new DAOException("Number of rows > 1");\n            }\n            Statement st = connection.createStatement();\n            ResultSet rs = st.executeQuery("select max(id_project) from project");\n            rs.next();\n            id = rs.getInt(1);\n            connection.commit();\n        } catch (SQLException  exc) {\n            Log.write( exc.getMessage());\n            throw new DAOException("A SQLException has occured");\n        } catch (NullPointerException npe) {\n            Log.write(npe.getMessage());\n            throw new DAOException("Connection null");\n        }\n        return id;\n    }\n', 'raw_tokens': None, 'prog_length': 255, 'new_pred': 0, 'is_success': -1, 'old_uid': 'e', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'e': ' ev'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 336 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 21.33 min
  curr succ rate = 0.02564102564102564
Query times in this attack:  263
All Query times:  34054
raw_tokens: ['public', 'static', 'String', 'SHAEncrypt', '(', 'String', 'originalString', ')', '{', 'String', 'encryptedString', '=', 'new', 'String', '(', '"', '"', ')', ';', 'try', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'md', '.', 'update', '(', 'originalString', '.', 'getBytes', '(', ')', ')', ';', 'byte', 'b', '[', ']', '=', 'md', '.', 'digest', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'b', '.', 'length', ';', 'i', '++', ')', '{', 'char', '[', ']', 'digit', '=', '{', "'0'", ',', "'1'", ',', "'2'", ',', "'3'", ',', "'4'", ',', "'5'", ',', "'6'", ',', "'7'", ',', "'8'", ',', "'9'", ',', "'A'", ',', "'B'", ',', "'C'", ',', "'D'", ',', "'E'", ',', "'F'", '}', ';', 'char', '[', ']', 'ob', '=', 'new', 'char', '[', '2', ']', ';', 'ob', '[', '0', ']', '=', 'digit', '[', '(', 'b', '[', 'i', ']', '>>>', '4', ')', '&', '0X0F', ']', ';', 'ob', '[', '1', ']', '=', 'digit', '[', 'b', '[', 'i', ']', '&', '0X0F', ']', ';', 'encryptedString', '+=', 'new', 'String', '(', 'ob', ')', ';', '}', '}', 'catch', '(', 'NoSuchAlgorithmException', 'nsae', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'the', 'algorithm', "doesn't", 'exist', '"', ')', ';', '}', 'return', 'encryptedString', ';', '}']
Example 337 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'renderScript', '(', 'PhaseEvent', 'event', ')', '{', 'URL', 'url', '=', 'AjaxPhaseListener', '.', 'class', '.', 'getResource', '(', 'SCRIPT_RESOURCE_NAME', ')', ';', 'URLConnection', 'conn', '=', 'null', ';', 'InputStream', 'stream', '=', 'null', ';', 'BufferedReader', 'bufReader', '=', 'null', ';', 'HttpServletResponse', 'response', '=', '(', 'HttpServletResponse', ')', 'event', '.', 'getFacesContext', '(', ')', '.', 'getExternalContext', '(', ')', '.', 'getResponse', '(', ')', ';', 'OutputStreamWriter', 'outWriter', '=', 'null', ';', 'String', 'curLine', '=', 'null', ';', 'try', '{', 'outWriter', '=', 'new', 'OutputStreamWriter', '(', 'response', '.', 'getOutputStream', '(', ')', ',', 'response', '.', 'getCharacterEncoding', '(', ')', ')', ';', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setUseCaches', '(', 'false', ')', ';', 'stream', '=', 'conn', '.', 'getInputStream', '(', ')', ';', 'bufReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'stream', ')', ')', ';', 'response', '.', 'setContentType', '(', '"', 'text/javascript', '"', ')', ';', 'response', '.', 'setStatus', '(', '200', ')', ';', 'while', '(', 'null', '!=', '(', 'curLine', '=', 'bufReader', '.', 'readLine', '(', ')', ')', ')', '{', 'outWriter', '.', 'write', '(', 'curLine', '+', '"', '', '"', ')', ';', '}', 'outWriter', '.', 'flush', '(', ')', ';', 'outWriter', '.', 'close', '(', ')', ';', 'event', '.', 'getFacesContext', '(', ')', '.', 'responseComplete', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'String', 'message', '=', 'null', ';', 'message', '=', '"', "Can't", 'load', 'script', 'file:', '"', '+', 'url', '.', 'toExternalForm', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! openConnection => openConnector (0 => 0, 0.99998 => 0.99998) a=1.011
  >>  iter 2, ACC! openConnector =>  openConnector (0 => 0, 0.99998 => 0.99998) a=1.067
  >>  iter 3, ACC!  openConnector =>  openConnect (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 4, ACC! url => loader (0 => 0, 0.99998 => 0.99995) a=5.056
  >>  iter 5, ACC!  openConnect => initConnect (0 => 0, 0.99995 => 0.99995) a=1.000
  >>  iter 6, ACC! initConnect =>  openconnection (0 => 0, 0.99995 => 0.99995) a=1.000
  >>  iter 7, ACC!  openconnection =>  openConnector (0 => 0, 0.99995 => 0.99995) a=1.000
  >>  iter 8, ACC!  openConnector => initConnector (0 => 0, 0.99995 => 0.99995) a=1.000
  >>  iter 9, ACC! loader => null (0 => 0, 0.99995 => 0.99996) a=2.375
  >>  iter 10, SUCC! null => file (0 => 1, 0.99996 => 0.00053) a=1.000
Example 338 attack result: {'succ': True, 'tokens': '    private void renderScript(PhaseEvent event) {\n        URL file = AjaxPhaseListener.class.getResource(SCRIPT_RESOURCE_NAME);\n        URLConnection conn = file;\n        InputStream stream = file;\n        BufferedReader bufReader = file;\n        HttpServletResponse response = (HttpServletResponse) event.getFacesContext().getExternalContext().getResponse();\n        OutputStreamWriter outWriter = file;\n        String curLine = file;\n        try {\n            outWriter = new OutputStreamWriter(response.getOutputStream(), response.getCharacterEncoding());\n            conn = file. openConnector();\n            conn.setUseCaches(false);\n            stream = conn.getInputStream();\n            bufReader = new BufferedReader(new InputStreamReader(stream));\n            response.setContentType("text/javascript");\n            response.setStatus(200);\n            while (file != (curLine = bufReader.readLine())) {\n                outWriter.write(curLine + "\n");\n            }\n            outWriter.flush();\n            outWriter.close();\n            event.getFacesContext().responseComplete();\n        } catch (Exception e) {\n            String message = file;\n            message = "Can\'t load script file:" + file.toExternalForm();\n        }\n    }\n', 'raw_tokens': ['private', 'void', 'renderScript', '(', 'PhaseEvent', 'event', ')', '{', 'URL', 'file', '=', 'AjaxPhaseListener', '.', 'class', '.', 'getResource', '(', 'SCRIPT_RESOURCE_NAME', ')', ';', 'URLConnection', 'conn', '=', 'file', ';', 'InputStream', 'stream', '=', 'file', ';', 'BufferedReader', 'bufReader', '=', 'file', ';', 'HttpServletResponse', 'response', '=', '(', 'HttpServletResponse', ')', 'event', '.', 'getFacesContext', '(', ')', '.', 'getExternalContext', '(', ')', '.', 'getResponse', '(', ')', ';', 'OutputStreamWriter', 'outWriter', '=', 'file', ';', 'String', 'curLine', '=', 'file', ';', 'try', '{', 'outWriter', '=', 'new', 'OutputStreamWriter', '(', 'response', '.', 'getOutputStream', '(', ')', ',', 'response', '.', 'getCharacterEncoding', '(', ')', ')', ';', 'conn', '=', 'file', '.', 'initConnector', '(', ')', ';', 'conn', '.', 'setUseCaches', '(', 'false', ')', ';', 'stream', '=', 'conn', '.', 'getInputStream', '(', ')', ';', 'bufReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'stream', ')', ')', ';', 'response', '.', 'setContentType', '(', '"', 'text/javascript', '"', ')', ';', 'response', '.', 'setStatus', '(', '200', ')', ';', 'while', '(', 'file', '!=', '(', 'curLine', '=', 'bufReader', '.', 'readLine', '(', ')', ')', ')', '{', 'outWriter', '.', 'write', '(', 'curLine', '+', '"', '', '"', ')', ';', '}', 'outWriter', '.', 'flush', '(', ')', ';', 'outWriter', '.', 'close', '(', ')', ';', 'event', '.', 'getFacesContext', '(', ')', '.', 'responseComplete', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'String', 'message', '=', 'file', ';', 'message', '=', '"', "Can't", 'load', 'script', 'file:', '"', '+', 'file', '.', 'toExternalForm', '(', ')', ';', '}', '}'], 'prog_length': 211, 'new_pred': 1, 'is_success': 1, 'old_uid': 'url', 'score_info': 0.9994296, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'openConnection': 'initConnector', 'url': 'file'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 338 SUCCEEDED!
  time cost = 0.11 min
  ALL EXAMPLE time cost = 21.46 min
  curr succ rate = 0.03389830508474576
Query times in this attack:  187
All Query times:  34241
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'fromFile', ',', 'File', 'toFile', ')', 'throws', 'IOException', '{', 'FileReader', 'from', '=', 'new', 'FileReader', '(', 'fromFile', ')', ';', 'FileWriter', 'to', '=', 'new', 'FileWriter', '(', 'toFile', ')', ';', 'char', '[', ']', 'buffer', '=', 'new', 'char', '[', '4096', ']', ';', 'int', 'bytes_read', ';', 'while', '(', '(', 'bytes_read', '=', 'from', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'to', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytes_read', ')', ';', '}', 'to', '.', 'flush', '(', ')', ';', 'to', '.', 'close', '(', ')', ';', 'from', '.', 'close', '(', ')', ';', '}']
Example 339 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'getHash', '(', 'final', 'String', 'password', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'final', 'MessageDigest', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'byte', '[', ']', 'md5hash', ';', 'digest', '.', 'update', '(', 'password', '.', 'getBytes', '(', '"', 'utf-8', '"', ')', ',', '0', ',', 'password', '.', 'length', '(', ')', ')', ';', 'md5hash', '=', 'digest', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'md5hash', ')', ';', '}']
Example 340 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'md5', '(', 'String', 'string', ')', '{', 'MessageDigest', 'md', '=', 'null', ';', 'try', '{', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'exception', ')', '{', 'LOGGER', '.', 'warn', '(', 'exception', '.', 'getMessage', '(', ')', ')', ';', '}', 'byte', '[', ']', 'md5hash', '=', 'new', 'byte', '[', '32', ']', ';', 'try', '{', 'md', '.', 'update', '(', 'string', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'string', '.', 'length', '(', ')', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'exception', ')', '{', 'LOGGER', '.', 'warn', '(', 'exception', '.', 'getMessage', '(', ')', ')', ';', '}', 'md5hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'md5hash', ')', ';', '}']
Example 341 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'extractFrinika', '(', ')', 'throws', 'Exception', '{', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'frinikaFile', ')', ';', 'progressBar', '.', 'setIndeterminate', '(', 'true', ')', ';', 'ZipInputStream', 'zis', '=', 'new', 'ZipInputStream', '(', 'fis', ')', ';', 'ZipEntry', 'ze', '=', 'zis', '.', 'getNextEntry', '(', ')', ';', 'while', '(', 'ze', '!=', 'null', ')', '{', 'showMessage', '(', '"', 'Extracting:', '', '"', '+', 'ze', '.', 'getName', '(', ')', ')', ';', 'File', 'file', '=', 'new', 'File', '(', 'installDirName', '+', '"', '/', '"', '+', 'ze', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'ze', '.', 'isDirectory', '(', ')', ')', 'file', '.', 'mkdir', '(', ')', ';', 'else', '{', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'byte', '[', ']', 'b', '=', 'new', 'byte', '[', 'BUFSIZE', ']', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'zis', '.', 'read', '(', 'b', ')', ')', '!=', '-', '1', ')', 'fos', '.', 'write', '(', 'b', ',', '0', ',', 'c', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'ze', '=', 'zis', '.', 'getNextEntry', '(', ')', ';', '}', '}']
Example 342 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'synchronized', 'File', 'zipTempFile', '(', 'File', 'tempFile', ')', 'throws', 'BlogunityException', '{', 'try', '{', 'File', 'zippedFile', '=', 'new', 'File', '(', 'BlogunityManager', '.', 'getSystemConfiguration', '(', ')', '.', 'getTempDir', '(', ')', ',', 'tempFile', '.', 'getName', '(', ')', '+', '"', '.zip', '"', ')', ';', 'ZipOutputStream', 'zos', '=', 'new', 'ZipOutputStream', '(', 'new', 'FileOutputStream', '(', 'zippedFile', ')', ')', ';', 'byte', '[', ']', 'readBuffer', '=', 'new', 'byte', '[', '2156', ']', ';', 'int', 'bytesIn', '=', '0', ';', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'tempFile', ')', ';', 'ZipEntry', 'anEntry', '=', 'new', 'ZipEntry', '(', 'tempFile', '.', 'getName', '(', ')', ')', ';', 'zos', '.', 'putNextEntry', '(', 'anEntry', ')', ';', 'while', '(', '(', 'bytesIn', '=', 'fis', '.', 'read', '(', 'readBuffer', ')', ')', '!=', '-', '1', ')', '{', 'zos', '.', 'write', '(', 'readBuffer', ',', '0', ',', 'bytesIn', ')', ';', '}', 'fis', '.', 'close', '(', ')', ';', 'zos', '.', 'close', '(', ')', ';', 'return', 'zippedFile', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'BlogunityException', '(', 'I18NStatusFactory', '.', 'create', '(', 'I18N', '.', 'ERRORS', '.', 'FEED_ZIP_FAILED', ',', 'e', ')', ')', ';', '}', '}']
Example 343 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'boolean', 'downloadFile', '(', 'URL', 'remote', ',', 'File', 'local', ')', 'throws', 'IllegalArgumentException', ',', 'IOException', '{', 'if', '(', 'local', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Must', 'specify', 'remote', 'file', '"', ')', ';', 'if', '(', 'local', '.', 'exists', '(', ')', '&&', '!', 'local', '.', 'canWrite', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'Cannot', 'write', 'to', '', '"', '+', 'local', ')', ';', 'long', 'lengthCurrent', '=', 'local', '.', 'exists', '(', ')', '?', 'local', '.', 'length', '(', ')', ':', '-', '1l', ';', 'if', '(', 'lengthCurrent', '==', '0', ')', 'throw', 'new', 'IOException', '(', '"', 'Cannot', 'get', 'the', 'length', 'for', '', '"', '+', 'local', ')', ';', 'long', 'lastModifiedCurrent', '=', 'local', '.', 'exists', '(', ')', '?', 'local', '.', 'lastModified', '(', ')', ':', '-', '1l', ';', 'if', '(', 'remote', '==', 'null', ')', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Must', 'specify', 'remote', 'url', '"', ')', ';', 'URLConnection', 'urlConnection', '=', 'remote', '.', 'openConnection', '(', ')', ';', 'urlConnection', '.', 'setDoInput', '(', 'true', ')', ';', 'urlConnection', '.', 'setDoOutput', '(', 'false', ')', ';', 'long', 'lengthRemote', '=', 'urlConnection', '.', 'getContentLength', '(', ')', ';', 'long', 'lastModifiedRemote', '=', 'urlConnection', '.', 'getLastModified', '(', ')', ';', 'if', '(', 'lengthRemote', '==', 'lengthCurrent', ')', '{', 'LOGGER', '.', 'fine', '(', '"', 'Not', 'downloading', '', '"', '+', 'remote', '+', '"', '', 'of', 'length', '', '"', '+', 'lengthRemote', '+', '"', '', 'and', 'date', '', '"', '+', '(', 'lastModifiedRemote', '>', '0', '?', 'new', 'Date', '(', 'lastModifiedRemote', ')', '.', 'toString', '(', ')', ':', '"', 'n/a', '"', ')', '+', '"', '', 'for', '', '"', '+', 'local', '+', '"', '', 'of', 'length', '', '"', '+', 'lengthCurrent', '+', '"', '', 'and', 'date', '', '"', '+', 'new', 'Date', '(', 'lastModifiedCurrent', ')', ')', ';', 'return', 'false', ';', '}', 'BufferedInputStream', 'inputStream', '=', 'null', ';', 'BufferedOutputStream', 'bufferedOutputStream', '=', 'null', ';', 'try', '{', 'inputStream', '=', 'new', 'BufferedInputStream', '(', 'urlConnection', '.', 'getInputStream', '(', ')', ',', 'BUFFER_SIZE', ')', ';', 'bufferedOutputStream', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'local', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'BUFFER_SIZE', ']', ';', 'do', '{', 'int', 'count', '=', 'inputStream', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'count', '<', '0', ')', 'break', ';', 'bufferedOutputStream', '.', 'write', '(', 'buffer', ',', '0', ',', 'count', ')', ';', '}', 'while', '(', 'true', ')', ';', 'return', 'true', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'inputStream', '!=', 'null', ')', 'inputStream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Throwable', 'throwable', ')', '{', '}', 'try', '{', 'if', '(', 'bufferedOutputStream', '!=', 'null', ')', 'bufferedOutputStream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Throwable', 'throwable', ')', '{', '}', '}', '}']
Example 344 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'InputStream', 'getResponse', '(', 'String', 'pURL', ',', 'String', 'pUserName', ',', 'String', 'pPassword', ',', 'OutputStream', 'pResponseOutputStream', ',', 'String', 'pHttpMethodType', ')', 'throws', 'Exception', '{', 'BufferedInputStream', 'bis', '=', 'null', ';', 'BufferedOutputStream', 'bos', '=', 'null', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'pURL', ')', ';', 'int', 'port', '=', 'url', '.', 'getPort', '(', ')', ';', 'if', '(', '-', '1', '==', 'port', ')', '{', 'port', '=', 'url', '.', 'getDefaultPort', '(', ')', ';', '}', 'if', '(', 'url', '.', 'getProtocol', '(', ')', '.', 'equals', '(', 'HTTPS_PROTOCOL', ')', ')', '{', 'Protocol', 'httpsProtocol', '=', 'new', 'Protocol', '(', 'HTTPS_PROTOCOL', ',', 'new', 'EasySSLProtocolSocketFactory', '(', ')', ',', 'port', ')', ';', 'Protocol', '.', 'registerProtocol', '(', 'HTTPS_PROTOCOL', ',', 'httpsProtocol', ')', ';', '}', 'HttpClient', 'httpClient', '=', 'new', 'HttpClient', '(', ')', ';', 'httpClient', '.', 'getParams', '(', ')', '.', 'setParameter', '(', '"', 'http.socket.timeout', '"', ',', 'HTTP_SOCKET_TIMEOUT', ')', ';', 'HttpMethod', 'httpMethod', '=', 'getHttpMethod', '(', 'pHttpMethodType', ',', 'pURL', ')', ';', 'if', '(', 'null', '!=', 'pUserName', '&&', 'null', '!=', 'pPassword', ')', '{', 'httpClient', '.', 'getState', '(', ')', '.', 'setCredentials', '(', 'AuthScope', '.', 'ANY', ',', 'new', 'UsernamePasswordCredentials', '(', 'pUserName', ',', 'pPassword', ')', ')', ';', '}', 'try', '{', 'httpClient', '.', 'executeMethod', '(', 'httpMethod', ')', ';', 'if', '(', 'null', '!=', 'pResponseOutputStream', ')', '{', 'IOUtils', '.', 'copy', '(', 'httpMethod', '.', 'getResponseBodyAsStream', '(', ')', ',', 'pResponseOutputStream', ')', ';', '}', 'return', 'httpMethod', '.', 'getResponseBodyAsStream', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', '(', 'e', ')', ';', '}', 'finally', '{', 'httpMethod', '.', 'releaseConnection', '(', ')', ';', '}', '}']
Example 345 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'SuppressWarnings', '(', '"', 'unchecked', '"', ')', 'public', 'void', 'execute', '(', ')', 'throws', 'MojoExecutionException', '{', 'List', '<', 'Dependency', '>', 'dependencies', '=', 'project', '.', 'getDependencies', '(', ')', ';', 'File', 'file', '=', 'new', 'File', '(', 'this', '.', 'localRepository', '.', 'getBasedir', '(', ')', ')', ';', 'File', 'dojoArtifact', '=', 'null', ';', 'for', '(', 'Dependency', 'dependency', ':', 'dependencies', ')', '{', 'if', '(', '!', 'dependency', '.', 'getGroupId', '(', ')', '.', 'equals', '(', '"', 'org.dojotoolkit', '"', ')', '&&', '!', 'dependency', '.', 'getArtifactId', '(', ')', '.', 'equals', '(', '"', 'dojo', '"', ')', ')', 'continue', ';', 'File', 'file2', '=', 'new', 'File', '(', 'file', ',', 'dependency', '.', 'getGroupId', '(', ')', '.', 'replace', '(', "'.'", ',', 'File', '.', 'separatorChar', ')', ')', ';', 'file2', '=', 'new', 'File', '(', 'file2', ',', 'dependency', '.', 'getArtifactId', '(', ')', ')', ';', 'file2', '=', 'new', 'File', '(', 'file2', ',', 'dependency', '.', 'getVersion', '(', ')', ')', ';', 'file2', '=', 'new', 'File', '(', 'file2', ',', 'dependency', '.', 'getArtifactId', '(', ')', '+', "'-'", '+', 'dependency', '.', 'getVersion', '(', ')', '+', "'.'", '+', 'dependency', '.', 'getType', '(', ')', ')', ';', 'if', '(', '!', 'file2', '.', 'exists', '(', ')', ')', 'throw', 'new', 'MojoExecutionException', '(', '"', 'No', 'artifact', 'found', 'in', 'base', 'repository', '', '"', '+', 'file2', ')', ';', 'dojoArtifact', '=', 'file2', ';', '}', 'if', '(', 'dojoArtifact', '==', 'null', ')', 'throw', 'new', 'MojoExecutionException', '(', '"', 'No', 'dojo', 'dependencies', 'found', '"', ')', ';', 'Plugin', 'plugin', '=', '(', 'Plugin', ')', 'project', '.', 'getBuild', '(', ')', '.', 'getPluginsAsMap', '(', ')', '.', 'get', '(', '"', 'org.apache.maven.plugins:maven-war-plugin', '"', ')', ';', 'if', '(', 'plugin', '==', 'null', ')', 'return', ';', 'String', 'webappDirectory', '=', 'null', ';', 'Xpp3Dom', 'dom', '=', '(', 'Xpp3Dom', ')', 'plugin', '.', 'getConfiguration', '(', ')', ';', 'if', '(', 'dom', '!=', 'null', ')', 'webappDirectory', '=', 'dom', '.', 'getChild', '(', '"', 'webappDirectory', '"', ')', '.', 'getValue', '(', ')', ';', 'if', '(', 'webappDirectory', '==', 'null', ')', 'webappDirectory', '=', 'project', '.', 'getBuild', '(', ')', '.', 'getDirectory', '(', ')', '+', 'File', '.', 'separatorChar', '+', 'project', '.', 'getArtifactId', '(', ')', '+', "'-'", '+', 'project', '.', 'getVersion', '(', ')', ';', 'try', '{', 'File', 'webAppDojoDir', '=', 'new', 'File', '(', 'webappDirectory', ',', 'this', '.', 'dojoDir', ')', ';', 'if', '(', '!', 'webAppDojoDir', '.', 'exists', '(', ')', ')', 'webAppDojoDir', '.', 'mkdirs', '(', ')', ';', 'ZipInputStream', 'inputStream', '=', 'new', 'ZipInputStream', '(', 'new', 'FileInputStream', '(', 'dojoArtifact', ')', ')', ';', 'ZipEntry', 'zipentry', '=', 'inputStream', '.', 'getNextEntry', '(', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', 'zipentry', '!=', 'null', ')', '{', 'File', 'entry', '=', 'new', 'File', '(', 'webAppDojoDir', ',', 'zipentry', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'zipentry', '.', 'isDirectory', '(', ')', ')', '{', 'entry', '.', 'mkdirs', '(', ')', ';', '}', 'else', '{', 'int', 'n', ';', 'FileOutputStream', 'fileoutputstream', ';', 'if', '(', 'entry', '.', 'getParent', '(', ')', '!=', 'null', ')', '{', 'entry', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ';', '}', 'fileoutputstream', '=', 'new', 'FileOutputStream', '(', 'entry', ')', ';', 'while', '(', '(', 'n', '=', 'inputStream', '.', 'read', '(', 'buf', ',', '0', ',', '1024', ')', ')', '>', '-', '1', ')', 'fileoutputstream', '.', 'write', '(', 'buf', ',', '0', ',', 'n', ')', ';', 'fileoutputstream', '.', 'close', '(', ')', ';', 'inputStream', '.', 'closeEntry', '(', ')', ';', '}', 'zipentry', '=', 'inputStream', '.', 'getNextEntry', '(', ')', ';', '}', 'inputStream', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'MojoExecutionException', '(', '"', 'Error', 'to', 'extract', 'the', 'dojo', 'artifact', '', '"', ',', 'e', ')', ';', '}', '}']
Example 346 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'InputStream', 'createInputStream', '(', 'String', 'url', ')', 'throws', 'MalformedURLException', ',', 'IOException', '{', 'if', '(', 'url', '.', 'startsWith', '(', '"', 'classpath://', '"', ')', ')', '{', 'InputStream', 'is', '=', 'XMLResource', '.', 'class', '.', 'getResourceAsStream', '(', 'url', '.', 'substring', '(', '12', ')', ')', ';', 'if', '(', 'is', '==', 'null', ')', 'throw', 'new', 'IOException', '(', '"', "Couldn't", 'open', 'stream', 'to', '[', '"', '+', 'url', '+', '"', ']', '"', ')', ';', 'return', 'is', ';', '}', 'else', '{', 'return', 'new', 'URL', '(', 'url', ')', '.', 'openStream', '(', ')', ';', '}', '}']
Example 347 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'setFavBoard', '(', 'List', '<', 'BoardObject', '>', 'list', ')', 'throws', 'NetworkException', ',', 'ContentException', '{', 'HttpClient', 'client', '=', 'HttpConfig', '.', 'newInstance', '(', ')', ';', 'HttpPost', 'post', '=', 'new', 'HttpPost', '(', 'HttpConfig', '.', 'bbsURL', '(', ')', '+', 'HttpConfig', '.', 'BBS_FAV_SETTING', ')', ';', 'List', '<', 'NameValuePair', '>', 'nvps', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'for', '(', 'BoardObject', 'board', ':', 'list', ')', 'nvps', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', 'board', '.', 'getId', '(', ')', ',', '"', 'on', '"', ')', ')', ';', 'try', '{', 'post', '.', 'setEntity', '(', 'new', 'UrlEncodedFormEntity', '(', 'nvps', ',', 'BBSBodyParseHelper', '.', 'BBS_CHARSET', ')', ')', ';', 'HttpResponse', 'response', '=', 'client', '.', 'execute', '(', 'post', ')', ';', 'HttpEntity', 'entity', '=', 'response', '.', 'getEntity', '(', ')', ';', 'if', '(', 'HTTPUtil', '.', 'isHttp200', '(', 'response', ')', '&&', 'HTTPUtil', '.', 'isXmlContentType', '(', 'response', ')', ')', '{', 'HTTPUtil', '.', 'consume', '(', 'response', '.', 'getEntity', '(', ')', ')', ';', 'return', 'true', ';', '}', 'else', '{', 'String', 'msg', '=', 'BBSBodyParseHelper', '.', 'parseFailMsg', '(', 'entity', ')', ';', 'throw', 'new', 'ContentException', '(', 'msg', ')', ';', '}', '}', 'catch', '(', 'ClientProtocolException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'throw', 'new', 'NetworkException', '(', 'e', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'throw', 'new', 'NetworkException', '(', 'e', ')', ';', '}', '}']
Example 348 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'void', 'EncodeRoute', '(', ')', 'throws', 'EncodeFailedException', ',', 'IOException', '{', 'File', 'storefile', '=', 'getNode', '(', ')', '.', 'getCodec', '(', ')', '.', 'PackStore', '(', 'null', ',', 'ReturnStore', ')', ';', 'DownRoute', '.', 'EncodeData', '(', 'storefile', ')', ';', 'File', 'data', '=', 'getNode', '(', ')', '.', 'getCodec', '(', ')', '.', 'PackRemoteDownload', '(', 'this', ')', ';', 'data', '=', 'PigData', '.', 'EncodeData', '(', 'data', ')', ';', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'PiggybackRouteFile', ',', 'true', ')', ';', 'FileChannel', 'foc', '=', 'fos', '.', 'getChannel', '(', ')', ';', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'data', ')', ';', 'FileChannel', 'fic', '=', 'fis', '.', 'getChannel', '(', ')', ';', 'fic', '.', 'transferTo', '(', '0', ',', 'fic', '.', 'size', '(', ')', ',', 'foc', ')', ';', 'foc', '.', 'close', '(', ')', ';', 'fic', '.', 'close', '(', ')', ';', 'UpRoute', '.', 'EncodeData', '(', 'PiggybackRouteFile', ')', ';', '}']
Example 349 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'boolean', 'copyFile', '(', 'String', 'src', ',', 'String', 'dest', ')', '{', 'try', '{', 'File', 'inputFile', '=', 'new', 'File', '(', 'src', ')', ';', 'File', 'outputFile', '=', 'new', 'File', '(', 'dest', ')', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'inputFile', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'outputFile', ')', ';', 'FileChannel', 'inc', '=', 'in', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outc', '=', 'out', '.', 'getChannel', '(', ')', ';', 'inc', '.', 'transferTo', '(', '0', ',', 'inc', '.', 'size', '(', ')', ',', 'outc', ')', ';', 'inc', '.', 'close', '(', ')', ';', 'outc', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'return', 'true', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'false', ';', '}', '}']
Example 350 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'String', 'doIt', '(', ')', 'throws', 'java', '.', 'lang', '.', 'Exception', '{', 'StringBuffer', 'sql', '=', 'null', ';', 'int', 'no', '=', '0', ';', 'String', 'clientCheck', '=', 'getWhereClause', '(', ')', ';', 'if', '(', 'm_deleteOldImported', ')', '{', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'DELETE', 'I_BPartner', '', '"', '+', '"', 'WHERE', "I_IsImported='Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Delete', 'Old', 'Impored', '=', '"', '+', 'no', ')', ';', '}', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', '', '"', '+', '"', 'SET', 'AD_Client_ID', '=', 'COALESCE', '(AD_Client_ID,', '', '"', ')', '.', 'append', '(', 'm_AD_Client_ID', ')', '.', 'append', '(', '"', '),', '"', '+', '"', '', 'AD_Org_ID', '=', 'COALESCE', '(AD_Org_ID,', '0),', '"', '+', '"', '', 'IsActive', '=', 'COALESCE', '(IsActive,', "'Y'),", '"', '+', '"', '', 'Created', '=', 'COALESCE', '(Created,', 'SysDate),', '"', '+', '"', '', 'CreatedBy', '=', 'COALESCE', '(CreatedBy,', '0),', '"', '+', '"', '', 'Updated', '=', 'COALESCE', '(Updated,', 'SysDate),', '"', '+', '"', '', 'UpdatedBy', '=', 'COALESCE', '(UpdatedBy,', '0),', '"', '+', '"', '', 'I_ErrorMsg', '=', "'", "',", '"', '+', '"', '', 'I_IsImported', '=', "'N'", '', '"', '+', '"', 'WHERE', "I_IsImported<>'Y'", 'OR', 'I_IsImported', 'IS', 'NULL', '"', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Reset=', '"', '+', 'no', ')', ';', 'ModelValidationEngine', '.', 'get', '(', ')', '.', 'fireImportValidate', '(', 'this', ',', 'null', ',', 'null', ',', 'ImportValidator', '.', 'TIMING_BEFORE_VALIDATE', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', 'GroupValue=(SELECT', 'MAX(Value)', 'FROM', 'C_BP_Group', 'g', 'WHERE', "g.IsDefault='Y'", '"', '+', '"', '', 'AND', 'g.AD_Client_ID=i.AD_Client_ID)', '', '"', ')', ';', 'sql', '.', 'append', '(', '"', 'WHERE', 'GroupValue', 'IS', 'NULL', 'AND', 'C_BP_Group_ID', 'IS', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Set', 'Group', 'Default=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', 'C_BP_Group_ID=(SELECT', 'C_BP_Group_ID', 'FROM', 'C_BP_Group', 'g', '"', '+', '"', '', 'WHERE', 'i.GroupValue=g.Value', 'AND', 'g.AD_Client_ID=i.AD_Client_ID)', '', '"', '+', '"', 'WHERE', 'C_BP_Group_ID', 'IS', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Set', 'Group=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', '', '"', '+', '"', 'SET', "I_IsImported='E',", "I_ErrorMsg=I_ErrorMsg||'ERR=Invalid", 'Group,', "'", '', '"', '+', '"', 'WHERE', 'C_BP_Group_ID', 'IS', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'config', '(', '"', 'Invalid', 'Group=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', 'C_Country_ID=(SELECT', 'C_Country_ID', 'FROM', 'C_Country', 'c', '"', '+', '"', '', 'WHERE', 'i.CountryCode=c.CountryCode', 'AND', 'c.AD_Client_ID', 'IN', '(0,', 'i.AD_Client_ID))', '', '"', '+', '"', 'WHERE', 'C_Country_ID', 'IS', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Set', 'Country=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', '', '"', '+', '"', 'SET', "I_IsImported='E',", "I_ErrorMsg=I_ErrorMsg||'ERR=Invalid", 'Country,', "'", '', '"', '+', '"', 'WHERE', 'C_Country_ID', 'IS', 'NULL', 'AND', '(City', 'IS', 'NOT', 'NULL', 'OR', 'Address1', 'IS', 'NOT', 'NULL)', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'config', '(', '"', 'Invalid', 'Country=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'Set', 'RegionName=(SELECT', 'MAX(Name)', 'FROM', 'C_Region', 'r', '"', '+', '"', '', 'WHERE', "r.IsDefault='Y'", 'AND', 'r.C_Country_ID=i.C_Country_ID', '"', '+', '"', '', 'AND', 'r.AD_Client_ID', 'IN', '(0,', 'i.AD_Client_ID))', '', '"', ')', ';', 'sql', '.', 'append', '(', '"', 'WHERE', 'RegionName', 'IS', 'NULL', 'AND', 'C_Region_ID', 'IS', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Set', 'Region', 'Default=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'Set', 'C_Region_ID=(SELECT', 'C_Region_ID', 'FROM', 'C_Region', 'r', '"', '+', '"', '', 'WHERE', 'r.Name=i.RegionName', 'AND', 'r.C_Country_ID=i.C_Country_ID', '"', '+', '"', '', 'AND', 'r.AD_Client_ID', 'IN', '(0,', 'i.AD_Client_ID))', '', '"', '+', '"', 'WHERE', 'C_Region_ID', 'IS', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Set', 'Region=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", "I_ErrorMsg=I_ErrorMsg||'ERR=Invalid", 'Region,', "'", '', '"', '+', '"', 'WHERE', 'C_Region_ID', 'IS', 'NULL', '', '"', '+', '"', '', 'AND', 'EXISTS', '(SELECT', '*', 'FROM', 'C_Country', 'c', '"', '+', '"', '', 'WHERE', 'c.C_Country_ID=i.C_Country_ID', 'AND', "c.HasRegion='Y')", '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'config', '(', '"', 'Invalid', 'Region=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', 'C_Greeting_ID=(SELECT', 'C_Greeting_ID', 'FROM', 'C_Greeting', 'g', '"', '+', '"', '', 'WHERE', 'i.BPContactGreeting=g.Name', 'AND', 'g.AD_Client_ID', 'IN', '(0,', 'i.AD_Client_ID))', '', '"', '+', '"', 'WHERE', 'C_Greeting_ID', 'IS', 'NULL', 'AND', 'BPContactGreeting', 'IS', 'NOT', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Set', 'Greeting=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", "I_ErrorMsg=I_ErrorMsg||'ERR=Invalid", 'Greeting,', "'", '', '"', '+', '"', 'WHERE', 'C_Greeting_ID', 'IS', 'NULL', 'AND', 'BPContactGreeting', 'IS', 'NOT', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'config', '(', '"', 'Invalid', 'Greeting=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', '(C_BPartner_ID,AD_User_ID)=', '"', '+', '"', '(SELECT', 'C_BPartner_ID,AD_User_ID', 'FROM', 'AD_User', 'u', '', '"', '+', '"', 'WHERE', 'i.EMail=u.EMail', 'AND', 'u.AD_Client_ID=i.AD_Client_ID)', '', '"', '+', '"', 'WHERE', 'i.EMail', 'IS', 'NOT', 'NULL', 'AND', "I_IsImported='N'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Found', 'EMail', 'User=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', 'C_BPartner_ID=(SELECT', 'C_BPartner_ID', 'FROM', 'C_BPartner', 'p', '"', '+', '"', '', 'WHERE', 'i.Value=p.Value', 'AND', 'p.AD_Client_ID=i.AD_Client_ID)', '', '"', '+', '"', 'WHERE', 'C_BPartner_ID', 'IS', 'NULL', 'AND', 'Value', 'IS', 'NOT', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported='N'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Found', 'BPartner=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', 'AD_User_ID=(SELECT', 'AD_User_ID', 'FROM', 'AD_User', 'c', '"', '+', '"', '', 'WHERE', 'i.ContactName=c.Name', 'AND', 'i.C_BPartner_ID=c.C_BPartner_ID', 'AND', 'c.AD_Client_ID=i.AD_Client_ID)', '', '"', '+', '"', 'WHERE', 'C_BPartner_ID', 'IS', 'NOT', 'NULL', 'AND', 'AD_User_ID', 'IS', 'NULL', 'AND', 'ContactName', 'IS', 'NOT', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported='N'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Found', 'Contact=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', 'C_BPartner_Location_ID=(SELECT', 'C_BPartner_Location_ID', '"', '+', '"', '', 'FROM', 'C_BPartner_Location', 'bpl', 'INNER', 'JOIN', 'C_Location', 'l', 'ON', '(bpl.C_Location_ID=l.C_Location_ID)', '"', '+', '"', '', 'WHERE', 'i.C_BPartner_ID=bpl.C_BPartner_ID', 'AND', 'bpl.AD_Client_ID=i.AD_Client_ID', '"', '+', '"', '', 'AND', '(i.Address1=l.Address1', 'OR', '(i.Address1', 'IS', 'NULL', 'AND', 'l.Address1', 'IS', 'NULL))', '"', '+', '"', '', 'AND', '(i.Address2=l.Address2', 'OR', '(i.Address2', 'IS', 'NULL', 'AND', 'l.Address2', 'IS', 'NULL))', '"', '+', '"', '', 'AND', '(i.City=l.City', 'OR', '(i.City', 'IS', 'NULL', 'AND', 'l.City', 'IS', 'NULL))', '"', '+', '"', '', 'AND', '(i.Postal=l.Postal', 'OR', '(i.Postal', 'IS', 'NULL', 'AND', 'l.Postal', 'IS', 'NULL))', '"', '+', '"', '', 'AND', '(i.Postal_Add=l.Postal_Add', 'OR', '(l.Postal_Add', 'IS', 'NULL', 'AND', 'l.Postal_Add', 'IS', 'NULL))', '"', '+', '"', '', 'AND', 'i.C_Region_ID=l.C_Region_ID', 'AND', 'i.C_Country_ID=l.C_Country_ID)', '', '"', '+', '"', 'WHERE', 'C_BPartner_ID', 'IS', 'NOT', 'NULL', 'AND', 'C_BPartner_Location_ID', 'IS', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported='N'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Found', 'Location=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', 'R_InterestArea_ID=(SELECT', 'R_InterestArea_ID', 'FROM', 'R_InterestArea', 'ia', '', '"', '+', '"', 'WHERE', 'i.InterestAreaName=ia.Name', 'AND', 'ia.AD_Client_ID=i.AD_Client_ID)', '', '"', '+', '"', 'WHERE', 'R_InterestArea_ID', 'IS', 'NULL', 'AND', 'InterestAreaName', 'IS', 'NOT', 'NULL', '"', '+', '"', '', 'AND', "I_IsImported='N'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'Set', 'Interest', 'Area=', '"', '+', 'no', ')', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', '', '"', '+', '"', 'SET', "I_IsImported='E',", "I_ErrorMsg=I_ErrorMsg||'ERR=Value", 'is', 'mandatory,', "'", '', '"', '+', '"', 'WHERE', 'Value', 'IS', 'NULL', '', '"', '+', '"', '', 'AND', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'config', '(', '"', 'Value', 'is', 'mandatory=', '"', '+', 'no', ')', ';', 'ModelValidationEngine', '.', 'get', '(', ')', '.', 'fireImportValidate', '(', 'this', ',', 'null', ',', 'null', ',', 'ImportValidator', '.', 'TIMING_AFTER_VALIDATE', ')', ';', 'commitEx', '(', ')', ';', 'if', '(', 'p_IsValidateOnly', ')', '{', 'return', '"', 'Validated', '"', ';', '}', 'int', 'noInsert', '=', '0', ';', 'int', 'noUpdate', '=', '0', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'SELECT', '*', 'FROM', 'I_BPartner', '', '"', '+', '"', 'WHERE', "I_IsImported='N'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'sql', '.', 'append', '(', '"', '', 'ORDER', 'BY', 'Value,', 'I_BPartner_ID', '"', ')', ';', 'PreparedStatement', 'pstmt', '=', 'null', ';', 'ResultSet', 'rs', '=', 'null', ';', 'try', '{', 'pstmt', '=', 'DB', '.', 'prepareStatement', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'rs', '=', 'pstmt', '.', 'executeQuery', '(', ')', ';', 'String', 'Old_BPValue', '=', '"', '"', ';', 'MBPartner', 'bp', '=', 'null', ';', 'MBPartnerLocation', 'bpl', '=', 'null', ';', 'while', '(', 'rs', '.', 'next', '(', ')', ')', '{', 'String', 'New_BPValue', '=', 'rs', '.', 'getString', '(', '"', 'Value', '"', ')', ';', 'X_I_BPartner', 'impBP', '=', 'new', 'X_I_BPartner', '(', 'getCtx', '(', ')', ',', 'rs', ',', 'get_TrxName', '(', ')', ')', ';', 'log', '.', 'fine', '(', '"', 'I_BPartner_ID=', '"', '+', 'impBP', '.', 'getI_BPartner_ID', '(', ')', '+', '"', ',', 'C_BPartner_ID=', '"', '+', 'impBP', '.', 'getC_BPartner_ID', '(', ')', '+', '"', ',', 'C_BPartner_Location_ID=', '"', '+', 'impBP', '.', 'getC_BPartner_Location_ID', '(', ')', '+', '"', ',', 'AD_User_ID=', '"', '+', 'impBP', '.', 'getAD_User_ID', '(', ')', ')', ';', 'if', '(', '!', 'New_BPValue', '.', 'equals', '(', 'Old_BPValue', ')', ')', '{', 'bp', '=', 'null', ';', 'if', '(', 'impBP', '.', 'getC_BPartner_ID', '(', ')', '==', '0', ')', '{', 'if', '(', 'impBP', '.', 'getName', '(', ')', '==', 'null', '||', 'impBP', '.', 'getName', '(', ')', '.', 'length', '(', ')', '==', '0', ')', '{', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Invalid", 'Name,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdate', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', 'bp', '=', 'new', 'MBPartner', '(', 'impBP', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'AD_Language', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'AD_Language', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'AD_Language', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_BPTypeBR', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_BPTypeBR', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_BPTypeBR', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CNPJ', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'Boolean', 'ok', '=', 'org', '.', 'adempierelbr', '.', 'validator', '.', 'ValidatorBPartner', '.', 'validaCNPJ', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CNPJ', '"', ')', ')', ';', 'if', '(', 'ok', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_CNPJ', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CNPJ', '"', ')', ')', ';', 'else', '{', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Invalid", 'CNPJ,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdate', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CPF', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'Boolean', 'ok', '=', 'org', '.', 'adempierelbr', '.', 'validator', '.', 'ValidatorBPartner', '.', 'validaCPF', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CPF', '"', ')', ')', ';', 'if', '(', 'ok', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_CPF', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CPF', '"', ')', ')', ';', 'else', '{', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Invalid", 'CPF,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdate', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_IE', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_IE', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_IE', '"', ')', ')', ';', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_IsIEExempt', '"', ',', 'false', ')', ';', '}', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CCM', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_CCM', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CCM', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_RG', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_RG', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_RG', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isVendor', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'isVendor', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isVendor', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isCustomer', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'isCustomer', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isCustomer', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isSalesRep', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'isSalesRep', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isSalesRep', '"', ')', ')', ';', 'ModelValidationEngine', '.', 'get', '(', ')', '.', 'fireImportValidate', '(', 'this', ',', 'impBP', ',', 'bp', ',', 'ImportValidator', '.', 'TIMING_AFTER_IMPORT', ')', ';', 'setTypeOfBPartner', '(', 'impBP', ',', 'bp', ')', ';', 'if', '(', 'bp', '.', 'save', '(', ')', ')', '{', 'impBP', '.', 'setC_BPartner_ID', '(', 'bp', '.', 'getC_BPartner_ID', '(', ')', ')', ';', 'log', '.', 'finest', '(', '"', 'Insert', 'BPartner', '-', '', '"', '+', 'bp', '.', 'getC_BPartner_ID', '(', ')', ')', ';', 'noInsert', '++', ';', '}', 'else', '{', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', '(CASE', 'WHEN', '(SELECT', 'COUNT(*)', 'FROM', 'C_BPartner', 'WHERE', 'lbr_CNPJ', 'IS', 'NOT', 'NULL', 'AND', "lbr_CNPJ='", '"', ')', '.', 'append', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CNPJ', '"', ')', ')', '.', 'append', '(', '"', "')", '>', '0', 'THEN', "'CNPJ", 'Duplicado,', "'", 'WHEN', '(SELECT', 'COUNT(*)', 'FROM', 'C_BPartner', 'WHERE', 'lbr_CPF', 'IS', 'NOT', 'NULL', 'AND', "lbr_CPF='", '"', ')', '.', 'append', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CPF', '"', ')', ')', '.', 'append', '(', '"', "')", '>', '0', 'THEN', "'CPF", 'Duplicado,', "'", 'END)', '||', '"', ')', '.', 'append', '(', '"', "'Cannot", 'Insert', 'BPartner,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', 'else', '{', 'bp', '=', 'new', 'MBPartner', '(', 'getCtx', '(', ')', ',', 'impBP', '.', 'getC_BPartner_ID', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getName', '(', ')', '!=', 'null', ')', '{', 'bp', '.', 'setName', '(', 'impBP', '.', 'getName', '(', ')', ')', ';', 'bp', '.', 'setName2', '(', 'impBP', '.', 'getName2', '(', ')', ')', ';', '}', 'if', '(', 'impBP', '.', 'getDUNS', '(', ')', '!=', 'null', ')', 'bp', '.', 'setDUNS', '(', 'impBP', '.', 'getDUNS', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getTaxID', '(', ')', '!=', 'null', ')', 'bp', '.', 'setTaxID', '(', 'impBP', '.', 'getTaxID', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getNAICS', '(', ')', '!=', 'null', ')', 'bp', '.', 'setNAICS', '(', 'impBP', '.', 'getNAICS', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getDescription', '(', ')', '!=', 'null', ')', 'bp', '.', 'setDescription', '(', 'impBP', '.', 'getDescription', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getC_BP_Group_ID', '(', ')', '!=', '0', ')', 'bp', '.', 'setC_BP_Group_ID', '(', 'impBP', '.', 'getC_BP_Group_ID', '(', ')', ')', ';', 'ModelValidationEngine', '.', 'get', '(', ')', '.', 'fireImportValidate', '(', 'this', ',', 'impBP', ',', 'bp', ',', 'ImportValidator', '.', 'TIMING_AFTER_IMPORT', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'AD_Language', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'AD_Language', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'AD_Language', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_BPTypeBR', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_BPTypeBR', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_BPTypeBR', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CNPJ', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'Boolean', 'ok', '=', 'org', '.', 'adempierelbr', '.', 'validator', '.', 'ValidatorBPartner', '.', 'validaCNPJ', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CNPJ', '"', ')', ')', ';', 'if', '(', 'ok', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_CNPJ', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CNPJ', '"', ')', ')', ';', 'else', '{', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Invalid", 'CNPJ,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdate', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CPF', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'Boolean', 'ok', '=', 'org', '.', 'adempierelbr', '.', 'validator', '.', 'ValidatorBPartner', '.', 'validaCPF', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CPF', '"', ')', ')', ';', 'if', '(', 'ok', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_CPF', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CPF', '"', ')', ')', ';', 'else', '{', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Invalid", 'CPF,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdate', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_IE', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_IE', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_IE', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CCM', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_CCM', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_CCM', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_RG', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'lbr_RG', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'lbr_RG', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isVendor', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'isVendor', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isVendor', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isCustomer', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'isCustomer', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isCustomer', '"', ')', ')', ';', 'if', '(', '!', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isSalesRep', '"', ')', '.', 'equals', '(', '"', '"', ')', ')', 'bp', '.', 'set_ValueOfColumn', '(', '"', 'isSalesRep', '"', ',', 'impBP', '.', 'get_ValueAsString', '(', '"', 'isSalesRep', '"', ')', ')', ';', 'setTypeOfBPartner', '(', 'impBP', ',', 'bp', ')', ';', 'if', '(', 'bp', '.', 'save', '(', ')', ')', '{', 'log', '.', 'finest', '(', '"', 'Update', 'BPartner', '-', '', '"', '+', 'bp', '.', 'getC_BPartner_ID', '(', ')', ')', ';', 'noUpdate', '++', ';', '}', 'else', '{', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Cannot", 'Update', 'BPartner,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', 'bpl', '=', 'null', ';', 'if', '(', 'impBP', '.', 'getC_BPartner_Location_ID', '(', ')', '!=', '0', ')', '{', 'bpl', '=', 'new', 'MBPartnerLocation', '(', 'getCtx', '(', ')', ',', 'impBP', '.', 'getC_BPartner_Location_ID', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'MLocation', 'location', '=', 'new', 'MLocation', '(', 'getCtx', '(', ')', ',', 'bpl', '.', 'getC_Location_ID', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'location', '.', 'setC_Country_ID', '(', 'impBP', '.', 'getC_Country_ID', '(', ')', ')', ';', 'location', '.', 'setC_Region_ID', '(', 'impBP', '.', 'getC_Region_ID', '(', ')', ')', ';', 'location', '.', 'setCity', '(', 'impBP', '.', 'getCity', '(', ')', ')', ';', 'location', '.', 'setAddress1', '(', 'impBP', '.', 'getAddress1', '(', ')', ')', ';', 'location', '.', 'setAddress2', '(', 'impBP', '.', 'getAddress2', '(', ')', ')', ';', 'location', '.', 'setAddress3', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'Address3', '"', ')', ')', ';', 'location', '.', 'setAddress4', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'Address4', '"', ')', ')', ';', 'location', '.', 'setPostal', '(', 'impBP', '.', 'getPostal', '(', ')', ')', ';', 'location', '.', 'setPostal_Add', '(', 'impBP', '.', 'getPostal_Add', '(', ')', ')', ';', 'if', '(', '!', 'location', '.', 'save', '(', ')', ')', 'log', '.', 'warning', '(', '"', 'Location', 'not', 'updated', '"', ')', ';', 'else', 'bpl', '.', 'setC_Location_ID', '(', 'location', '.', 'getC_Location_ID', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getPhone', '(', ')', '!=', 'null', ')', 'bpl', '.', 'setPhone', '(', 'impBP', '.', 'getPhone', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getPhone2', '(', ')', '!=', 'null', ')', 'bpl', '.', 'setPhone2', '(', 'impBP', '.', 'getPhone2', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getFax', '(', ')', '!=', 'null', ')', 'bpl', '.', 'setFax', '(', 'impBP', '.', 'getFax', '(', ')', ')', ';', 'ModelValidationEngine', '.', 'get', '(', ')', '.', 'fireImportValidate', '(', 'this', ',', 'impBP', ',', 'bpl', ',', 'ImportValidator', '.', 'TIMING_AFTER_IMPORT', ')', ';', 'bpl', '.', 'save', '(', ')', ';', '}', 'else', 'if', '(', 'impBP', '.', 'getC_Country_ID', '(', ')', '!=', '0', '&&', 'impBP', '.', 'getAddress1', '(', ')', '!=', 'null', '&&', 'impBP', '.', 'getCity', '(', ')', '!=', 'null', ')', '{', 'MLocation', 'location', '=', 'new', 'MLocation', '(', 'getCtx', '(', ')', ',', 'impBP', '.', 'getC_Country_ID', '(', ')', ',', 'impBP', '.', 'getC_Region_ID', '(', ')', ',', 'impBP', '.', 'getCity', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'location', '.', 'setAddress1', '(', 'impBP', '.', 'getAddress1', '(', ')', ')', ';', 'location', '.', 'setAddress2', '(', 'impBP', '.', 'getAddress2', '(', ')', ')', ';', 'location', '.', 'setAddress3', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'Address3', '"', ')', ')', ';', 'location', '.', 'setAddress4', '(', 'impBP', '.', 'get_ValueAsString', '(', '"', 'Address4', '"', ')', ')', ';', 'location', '.', 'setPostal', '(', 'impBP', '.', 'getPostal', '(', ')', ')', ';', 'location', '.', 'setPostal_Add', '(', 'impBP', '.', 'getPostal_Add', '(', ')', ')', ';', 'if', '(', 'location', '.', 'save', '(', ')', ')', 'log', '.', 'finest', '(', '"', 'Insert', 'Location', '-', '', '"', '+', 'location', '.', 'getC_Location_ID', '(', ')', ')', ';', 'else', '{', 'rollback', '(', ')', ';', 'noInsert', '--', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Cannot", 'Insert', 'Location,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', 'bpl', '=', 'new', 'MBPartnerLocation', '(', 'bp', ')', ';', 'bpl', '.', 'setC_Location_ID', '(', 'location', '.', 'getC_Location_ID', '(', ')', ')', ';', 'bpl', '.', 'setPhone', '(', 'impBP', '.', 'getPhone', '(', ')', ')', ';', 'bpl', '.', 'setPhone2', '(', 'impBP', '.', 'getPhone2', '(', ')', ')', ';', 'bpl', '.', 'setFax', '(', 'impBP', '.', 'getFax', '(', ')', ')', ';', 'ModelValidationEngine', '.', 'get', '(', ')', '.', 'fireImportValidate', '(', 'this', ',', 'impBP', ',', 'bpl', ',', 'ImportValidator', '.', 'TIMING_AFTER_IMPORT', ')', ';', 'if', '(', 'bpl', '.', 'save', '(', ')', ')', '{', 'log', '.', 'finest', '(', '"', 'Insert', 'BP', 'Location', '-', '', '"', '+', 'bpl', '.', 'getC_BPartner_Location_ID', '(', ')', ')', ';', 'impBP', '.', 'setC_BPartner_Location_ID', '(', 'bpl', '.', 'getC_BPartner_Location_ID', '(', ')', ')', ';', '}', 'else', '{', 'rollback', '(', ')', ';', 'noInsert', '--', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Cannot", 'Insert', 'BPLocation,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', '}', 'Old_BPValue', '=', 'New_BPValue', ';', 'MUser', 'user', '=', 'null', ';', 'if', '(', 'impBP', '.', 'getAD_User_ID', '(', ')', '!=', '0', ')', '{', 'user', '=', 'new', 'MUser', '(', 'getCtx', '(', ')', ',', 'impBP', '.', 'getAD_User_ID', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'if', '(', 'user', '.', 'getC_BPartner_ID', '(', ')', '==', '0', ')', 'user', '.', 'setC_BPartner_ID', '(', 'bp', '.', 'getC_BPartner_ID', '(', ')', ')', ';', 'else', 'if', '(', 'user', '.', 'getC_BPartner_ID', '(', ')', '!=', 'bp', '.', 'getC_BPartner_ID', '(', ')', ')', '{', 'rollback', '(', ')', ';', 'noInsert', '--', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'BP", 'of', 'User', '<>', 'BP,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', 'if', '(', 'impBP', '.', 'getC_Greeting_ID', '(', ')', '!=', '0', ')', 'user', '.', 'setC_Greeting_ID', '(', 'impBP', '.', 'getC_Greeting_ID', '(', ')', ')', ';', 'String', 'name', '=', 'impBP', '.', 'getContactName', '(', ')', ';', 'if', '(', 'name', '==', 'null', '||', 'name', '.', 'length', '(', ')', '==', '0', ')', 'name', '=', 'impBP', '.', 'getEMail', '(', ')', ';', 'user', '.', 'setName', '(', 'name', ')', ';', 'if', '(', 'impBP', '.', 'getTitle', '(', ')', '!=', 'null', ')', 'user', '.', 'setTitle', '(', 'impBP', '.', 'getTitle', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getContactDescription', '(', ')', '!=', 'null', ')', 'user', '.', 'setDescription', '(', 'impBP', '.', 'getContactDescription', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getComments', '(', ')', '!=', 'null', ')', 'user', '.', 'setComments', '(', 'impBP', '.', 'getComments', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getPhone', '(', ')', '!=', 'null', ')', 'user', '.', 'setPhone', '(', 'impBP', '.', 'getPhone', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getPhone2', '(', ')', '!=', 'null', ')', 'user', '.', 'setPhone2', '(', 'impBP', '.', 'getPhone2', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getFax', '(', ')', '!=', 'null', ')', 'user', '.', 'setFax', '(', 'impBP', '.', 'getFax', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getEMail', '(', ')', '!=', 'null', ')', 'user', '.', 'setEMail', '(', 'impBP', '.', 'getEMail', '(', ')', ')', ';', 'if', '(', 'impBP', '.', 'getBirthday', '(', ')', '!=', 'null', ')', 'user', '.', 'setBirthday', '(', 'impBP', '.', 'getBirthday', '(', ')', ')', ';', 'if', '(', 'bpl', '!=', 'null', ')', 'user', '.', 'setC_BPartner_Location_ID', '(', 'bpl', '.', 'getC_BPartner_Location_ID', '(', ')', ')', ';', 'ModelValidationEngine', '.', 'get', '(', ')', '.', 'fireImportValidate', '(', 'this', ',', 'impBP', ',', 'user', ',', 'ImportValidator', '.', 'TIMING_AFTER_IMPORT', ')', ';', 'if', '(', 'user', '.', 'save', '(', ')', ')', '{', 'log', '.', 'finest', '(', '"', 'Update', 'BP', 'Contact', '-', '', '"', '+', 'user', '.', 'getAD_User_ID', '(', ')', ')', ';', '}', 'else', '{', 'rollback', '(', ')', ';', 'noInsert', '--', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Cannot", 'Update', 'BP', 'Contact,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', 'else', 'if', '(', 'impBP', '.', 'getContactName', '(', ')', '!=', 'null', '||', 'impBP', '.', 'getEMail', '(', ')', '!=', 'null', ')', '{', 'user', '=', 'new', 'MUser', '(', 'bp', ')', ';', 'if', '(', 'impBP', '.', 'getC_Greeting_ID', '(', ')', '!=', '0', ')', 'user', '.', 'setC_Greeting_ID', '(', 'impBP', '.', 'getC_Greeting_ID', '(', ')', ')', ';', 'String', 'name', '=', 'impBP', '.', 'getContactName', '(', ')', ';', 'if', '(', 'name', '==', 'null', '||', 'name', '.', 'length', '(', ')', '==', '0', ')', 'name', '=', 'impBP', '.', 'getEMail', '(', ')', ';', 'user', '.', 'setName', '(', 'name', ')', ';', 'user', '.', 'setTitle', '(', 'impBP', '.', 'getTitle', '(', ')', ')', ';', 'user', '.', 'setDescription', '(', 'impBP', '.', 'getContactDescription', '(', ')', ')', ';', 'user', '.', 'setComments', '(', 'impBP', '.', 'getComments', '(', ')', ')', ';', 'user', '.', 'setPhone', '(', 'impBP', '.', 'getPhone', '(', ')', ')', ';', 'user', '.', 'setPhone2', '(', 'impBP', '.', 'getPhone2', '(', ')', ')', ';', 'user', '.', 'setFax', '(', 'impBP', '.', 'getFax', '(', ')', ')', ';', 'user', '.', 'setEMail', '(', 'impBP', '.', 'getEMail', '(', ')', ')', ';', 'user', '.', 'setBirthday', '(', 'impBP', '.', 'getBirthday', '(', ')', ')', ';', 'if', '(', 'bpl', '!=', 'null', ')', 'user', '.', 'setC_BPartner_Location_ID', '(', 'bpl', '.', 'getC_BPartner_Location_ID', '(', ')', ')', ';', 'ModelValidationEngine', '.', 'get', '(', ')', '.', 'fireImportValidate', '(', 'this', ',', 'impBP', ',', 'user', ',', 'ImportValidator', '.', 'TIMING_AFTER_IMPORT', ')', ';', 'if', '(', 'user', '.', 'save', '(', ')', ')', '{', 'log', '.', 'finest', '(', '"', 'Insert', 'BP', 'Contact', '-', '', '"', '+', 'user', '.', 'getAD_User_ID', '(', ')', ')', ';', 'impBP', '.', 'setAD_User_ID', '(', 'user', '.', 'getAD_User_ID', '(', ')', ')', ';', '}', 'else', '{', 'rollback', '(', ')', ';', 'noInsert', '--', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', 'i', '', '"', '+', '"', 'SET', "I_IsImported='E',", 'I_ErrorMsg=I_ErrorMsg||', '"', ')', '.', 'append', '(', '"', "'Cannot", 'Insert', 'BPContact,', "'", '', '"', ')', '.', 'append', '(', '"', 'WHERE', 'I_BPartner_ID=', '"', ')', '.', 'append', '(', 'impBP', '.', 'getI_BPartner_ID', '(', ')', ')', ';', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'continue', ';', '}', '}', 'if', '(', 'impBP', '.', 'getR_InterestArea_ID', '(', ')', '!=', '0', '&&', 'user', '!=', 'null', ')', '{', 'MContactInterest', 'ci', '=', 'MContactInterest', '.', 'get', '(', 'getCtx', '(', ')', ',', 'impBP', '.', 'getR_InterestArea_ID', '(', ')', ',', 'user', '.', 'getAD_User_ID', '(', ')', ',', 'true', ',', 'get_TrxName', '(', ')', ')', ';', 'ci', '.', 'save', '(', ')', ';', '}', 'impBP', '.', 'setI_IsImported', '(', 'true', ')', ';', 'impBP', '.', 'setProcessed', '(', 'true', ')', ';', 'impBP', '.', 'setProcessing', '(', 'false', ')', ';', 'impBP', '.', 'saveEx', '(', ')', ';', 'commitEx', '(', ')', ';', '}', 'DB', '.', 'close', '(', 'rs', ',', 'pstmt', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'rollback', '(', ')', ';', 'throw', 'new', 'DBException', '(', 'e', ',', 'sql', '.', 'toString', '(', ')', ')', ';', '}', 'finally', '{', 'DB', '.', 'close', '(', 'rs', ',', 'pstmt', ')', ';', 'rs', '=', 'null', ';', 'pstmt', '=', 'null', ';', 'sql', '=', 'new', 'StringBuffer', '(', '"', 'UPDATE', 'I_BPartner', '', '"', '+', '"', 'SET', "I_IsImported='N',", 'Updated=SysDate', '', '"', '+', '"', 'WHERE', "I_IsImported<>'Y'", '"', ')', '.', 'append', '(', 'clientCheck', ')', ';', 'no', '=', 'DB', '.', 'executeUpdateEx', '(', 'sql', '.', 'toString', '(', ')', ',', 'get_TrxName', '(', ')', ')', ';', 'addLog', '(', '0', ',', 'null', ',', 'new', 'BigDecimal', '(', 'no', ')', ',', '"', '@Errors@', '"', ')', ';', 'addLog', '(', '0', ',', 'null', ',', 'new', 'BigDecimal', '(', 'noInsert', ')', ',', '"', '@C_BPartner_ID@:', '@Inserted@', '"', ')', ';', 'addLog', '(', '0', ',', 'null', ',', 'new', 'BigDecimal', '(', 'noUpdate', ')', ',', '"', '@C_BPartner_ID@:', '@Updated@', '"', ')', ';', '}', 'return', '"', '"', ';', '}']
Example 352 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'copyOneOfMyFile', '(', 'File', 'f', ',', 'String', 'dest', ')', '{', 'if', '(', '!', 'ownsThisFile', '(', 'f', '.', 'getName', '(', ')', ')', ')', 'return', 'false', ';', 'if', '(', '!', 'dest', '.', 'endsWith', '(', 'File', '.', 'separator', ')', ')', 'dest', '=', 'dest', '.', 'concat', '(', 'File', '.', 'separator', ')', ';', 'try', '{', 'BufferedOutputStream', 'out', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'new', 'File', '(', 'dest', '+', 'f', '.', 'getName', '(', ')', ')', ')', ')', ';', 'BufferedInputStream', 'in', '=', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'f', ')', ')', ';', 'int', 'len', '=', '1024', ';', 'byte', '[', ']', 'read', '=', 'new', 'byte', '[', 'len', ']', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'read', ')', ')', '>', '0', ')', 'out', '.', 'write', '(', 'read', ',', '0', ',', 'len', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', 'if', '(', '!', 'PatchManager', '.', 'mute', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'file', 'created', ':', '', '"', '+', 'dest', '+', 'f', '.', 'getName', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'copy', 'directory', ':', '', '"', '+', 'e', ')', ';', 'return', 'false', ';', '}', 'return', 'true', ';', '}']
Example 353 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'copy', '(', 'File', 'in', ',', 'File', 'out', ')', 'throws', 'Exception', '{', 'FileChannel', 'src', '=', 'new', 'FileInputStream', '(', 'in', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'dest', '=', 'new', 'FileOutputStream', '(', 'out', ')', '.', 'getChannel', '(', ')', ';', 'src', '.', 'transferTo', '(', '0', ',', 'src', '.', 'size', '(', ')', ',', 'dest', ')', ';', 'src', '.', 'close', '(', ')', ';', 'dest', '.', 'close', '(', ')', ';', '}']
Example 354 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'downloadWebVersionString', '(', 'String', 'address', ')', '{', 'StringBuffer', 'stb', '=', 'new', 'StringBuffer', '(', ')', ';', 'URLConnection', 'conn', '=', 'null', ';', 'InputStream', 'in', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'address', ')', ';', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'in', '=', 'conn', '.', 'getInputStream', '(', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'numRead', ';', 'long', 'numWritten', '=', '0', ';', 'while', '(', '(', 'numRead', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'numRead', ';', 'i', '++', ')', '{', 'stb', '.', 'append', '(', '(', 'char', ')', 'buffer', '[', 'i', ']', ')', ';', '}', 'numWritten', '+=', 'numRead', ';', '}', '}', 'catch', '(', 'Exception', 'exception', ')', '{', 'exception', '.', 'printStackTrace', '(', ')', ';', 'return', 'stb', '.', 'toString', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', 'return', 'stb', '.', 'toString', '(', ')', ';', '}']
Example 355 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'byte', '[', ']', 'generateHashBytes', '(', ')', '{', 'String', 's', '=', 'createString', '(', 'false', ')', ';', 'MessageDigest', 'md', ';', 'try', '{', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'nsa', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', "Can't", 'get', 'MD5', 'implementation', '', '"', '+', 'nsa', ')', ';', 'throw', 'new', 'RuntimeException', '(', '"', 'DynanmicAddress2:', "Can't", 'get', 'MD5', 'implementation', '"', ')', ';', '}', 'if', '(', 'm_key', '!=', 'null', ')', 'md', '.', 'update', '(', 'm_key', '.', 'getBytes', '(', ')', ',', '0', ',', 'm_key', '.', 'length', '(', ')', ')', ';', 'md', '.', 'update', '(', 's', '.', 'getBytes', '(', ')', ',', '0', ',', 's', '.', 'length', '(', ')', ')', ';', 'byte', '[', ']', 'hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'hash', ';', '}']
  >>  iter 1, ACC! out => inner (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 2, ACC! inner => output (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 3, ACC! output => w (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 4, ACC! w => part (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 5, ACC! part => img (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 6, ACC! img => writer (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 7, ACC! writer => up (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 8, ACC! up => win (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 9, ACC! win => bin (0 => 0, 0.99998 => 0.99998) a=1.000
  >>  iter 10, ACC! bin => err (0 => 0, 0.99998 => 0.99998) a=1.000
Example 356 attack result: {'succ': False, 'tokens': '    protected byte[] generateHashBytes() {\n        String s = createString(false);\n        MessageDigest md;\n        try {\n            md = MessageDigest.getInstance("MD5");\n        } catch (NoSuchAlgorithmException nsa) {\n            System.err.println("Can\'t get MD5 implementation " + nsa);\n            throw new RuntimeException("DynanmicAddress2: Can\'t get MD5 implementation");\n        }\n        if (m_key != null) md.update(m_key.getBytes(), 0, m_key.length());\n        md.update(s.getBytes(), 0, s.length());\n        byte[] hash = md.digest();\n        return hash;\n    }\n', 'raw_tokens': None, 'prog_length': 121, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'out': 'err'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 356 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 21.82 min
  curr succ rate = 0.03361344537815126
Query times in this attack:  330
All Query times:  34571
raw_tokens: ['public', 'Fen_Download_FlameRobin', '', '(', ')', '{', 'super', '(', ')', ';', 'initialize', '(', ')', ';', 'long', 'HeureDebut', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'HeureActuelle', ';', 'String', 'urlsetup', '=', '"', 'http://downloads.sourceforge.net/project/autobackupbysim/tools/flamerobin-0.9.2-1-setup.exe', '"', ';', 'int', 'erreurOuverture', '=', '0', ';', 'InputStream', 'input', '=', 'null', ';', 'String', 'cheminFichier', '=', '"', '"', ';', 'File', 'fichier', ';', 'FileOutputStream', 'writeFile', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'urlsetup', ')', ';', 'URLConnection', 'connection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'final', 'int', 'fileLength', '=', 'connection', '.', 'getContentLength', '(', ')', ';', 'if', '(', '(', 'fileLength', '==', '-', '1', ')', '||', '(', 'fileLength', '==', '0', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Invalide', 'URL', 'or', 'file.', '"', ')', ';', 'erreurOuverture', '++', ';', '}', 'input', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'String', 'fileName', '=', 'url', '.', 'getFile', '(', ')', '.', 'substring', '(', 'url', '.', 'getFile', '(', ')', '.', 'lastIndexOf', '(', "'/'", ')', '+', '1', ')', ';', 'if', '(', 'fileName', '.', 'contains', '(', '"', '%20', '"', ')', '==', 'true', ')', '{', 'fileName', '=', 'fileName', '.', 'replaceAll', '(', '"', '%20', '"', ',', '"', '', '', '"', ')', ';', '}', 'if', '(', 'fileName', '.', 'contains', '(', '"', '&amp;', '"', ')', '==', 'true', ')', '{', 'fileName', '=', 'fileName', '.', 'replaceAll', '(', '"', '&amp;', '"', ',', '"', '', 'and', '', '"', ')', ';', '}', 'cheminFichier', '=', 'GestionRepertoire', '.', 'RecupRepTravail', '(', ')', '+', '"', '\\\\', '"', '+', 'fileName', ';', 'jLabel1', '.', 'setText', '(', '"', '', 'Fichier', 'en', 'cours', ':', '', '"', '+', 'fileName', ')', ';', 'fichier', '=', 'new', 'File', '(', 'cheminFichier', ')', ';', 'writeFile', '=', 'new', 'FileOutputStream', '(', 'cheminFichier', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', '*', '1024', ']', ';', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'input', '.', 'read', '(', 'buffer', ')', ')', '>', '0', ')', '{', 'writeFile', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', 'long', 'TailleEncours', '=', 'fichier', '.', 'length', '(', ')', ';', 'int', 'progressionEnCours', '=', '(', 'int', ')', '(', '(', '100', '*', '(', 'TailleEncours', '+', '1', ')', ')', '/', 'fileLength', ')', ';', 'HeureActuelle', '=', 'System', '.', 'currentTimeMillis', '(', ')', ';', 'long', 'Vitesse', '=', '(', 'long', ')', '(', 'TailleEncours', '/', '(', 'HeureActuelle', '-', 'HeureDebut', ')', ')', ';', 'jLabel1', '.', 'setText', '(', '"', 'T�l�chargement', 'du', 'fichier', ',', 'Vitesse', 'Actuelle', ':', '"', '+', '', 'V', 't', 'sse', '+', '"', 'K', '/', 's");', '', '', '', 'jProgressBar', '.', 'setValue', '(', 'progressionEnCours', ')', ';', 'jProgressBar', '.', 'setString', '(', 'progressionEnCours', '+', '"', '', '%', '"', ')', ';', '}', 'writeFile', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Error', 'while', 'trying', 'to', 'download', 'the', 'file.', '"', ')', ';', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'erreurOuverture', '==', '0', ')', '{', 'writeFile', '.', 'close', '(', ')', ';', 'input', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'String', 'cmdExecuteSetup', '=', '(', '"', 'cmd', '/c', '', '\\"', '"', '+', 'cheminFichier', '+', '"', '\\"', '', '/silent', '"', ')', ';', 'Runtime', 'r', '=', 'Runtime', '.', 'getRuntime', '(', ')', ';', 'Process', 'p', '=', 'null', ';', 'try', '{', 'p', '=', 'r', '.', 'exec', '(', 'cmdExecuteSetup', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'try', '{', 'p', '.', 'waitFor', '(', ')', ';', '}', 'catch', '(', 'InterruptedException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
Example 357 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'String', 's', ',', 's2', ';', 's', '=', '"', '"', ';', 's2', '=', '"', '"', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', '"', 'http://www.m-w.com/dictionary/', '"', '+', 'Word', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'str', ';', 'while', '(', '(', '(', 'str', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '&&', '(', '!', 'stopped', ')', ')', '{', 's', '=', 's', '+', 'str', ';', '}', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'Pattern', 'pattern', '=', 'Pattern', '.', 'compile', '(', '"', 'popWin', '\\\\', "('/cgi-bin/(.+?)'", '"', ',', 'Pattern', '.', 'CASE_INSENSITIVE', '|', 'Pattern', '.', 'DOTALL', ')', ';', 'Matcher', 'matcher', '=', 'pattern', '.', 'matcher', '(', 's', ')', ';', 'if', '(', '(', '!', 'stopped', ')', '&&', '(', 'matcher', '.', 'find', '(', ')', ')', ')', '{', 'String', 'newurl', '=', '"', 'http://m-w.com/cgi-bin/', '"', '+', 'matcher', '.', 'group', '(', '1', ')', ';', 'try', '{', 'URL', 'url2', '=', 'new', 'URL', '(', 'newurl', ')', ';', 'BufferedReader', 'in2', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url2', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'str', ';', 'while', '(', '(', '(', 'str', '=', 'in2', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '&&', '(', '!', 'stopped', ')', ')', '{', 's2', '=', 's2', '+', 'str', ';', '}', 'in2', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'Pattern', 'pattern2', '=', 'Pattern', '.', 'compile', '(', '"', '<A', 'HREF=', '\\"', 'http://(.+?)', '\\"', '>Click', 'here', 'to', 'listen', 'with', 'your', 'default', 'audio', 'player', '"', ',', 'Pattern', '.', 'CASE_INSENSITIVE', '|', 'Pattern', '.', 'DOTALL', ')', ';', 'Matcher', 'matcher2', '=', 'pattern2', '.', 'matcher', '(', 's2', ')', ';', 'if', '(', '(', '!', 'stopped', ')', '&&', '(', 'matcher2', '.', 'find', '(', ')', ')', ')', '{', 'if', '(', 'getWave', '(', '"', 'http://', '"', '+', 'matcher2', '.', 'group', '(', '1', ')', ')', ')', 'label', '.', 'setEnabled', '(', 'true', ')', ';', '}', '}', 'button', '.', 'setEnabled', '(', 'true', ')', ';', '}']
Example 358 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'copy', '(', 'String', 'source', ',', 'String', 'target', ')', 'throws', 'IOException', '{', '@', 'Cleanup', 'FileChannel', 'sourceChannel', '=', 'new', 'FileInputStream', '(', 'new', 'File', '(', 'source', ')', ')', '.', 'getChannel', '(', ')', ';', '@', 'Cleanup', 'FileChannel', 'targetChannel', '=', 'new', 'FileOutputStream', '(', 'new', 'File', '(', 'target', ')', ')', '.', 'getChannel', '(', ')', ';', 'targetChannel', '.', 'transferFrom', '(', 'sourceChannel', ',', '0', ',', 'sourceChannel', '.', 'size', '(', ')', ')', ';', '}']
  >>  iter 1, SUCC! source => url (1 => 0, 0.99988 => 0.00005) a=1.000
Example 359 attack result: {'succ': True, 'tokens': '    public void copy(String url, String target) throws IOException {\n        @Cleanup FileChannel sourceChannel = new FileInputStream(new File(url)).getChannel();\n        @Cleanup FileChannel targetChannel = new FileOutputStream(new File(target)).getChannel();\n        targetChannel.transferFrom(sourceChannel, 0, sourceChannel.size());\n    }\n', 'raw_tokens': ['public', 'void', 'copy', '(', 'String', 'url', ',', 'String', 'target', ')', 'throws', 'IOException', '{', '@', 'Cleanup', 'FileChannel', 'sourceChannel', '=', 'new', 'FileInputStream', '(', 'new', 'File', '(', 'url', ')', ')', '.', 'getChannel', '(', ')', ';', '@', 'Cleanup', 'FileChannel', 'targetChannel', '=', 'new', 'FileOutputStream', '(', 'new', 'File', '(', 'target', ')', ')', '.', 'getChannel', '(', ')', ';', 'targetChannel', '.', 'transferFrom', '(', 'sourceChannel', ',', '0', ',', 'sourceChannel', '.', 'size', '(', ')', ')', ';', '}'], 'prog_length': 67, 'new_pred': 0, 'is_success': 1, 'old_uid': 'source', 'score_info': -0.99983627, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'source': 'url'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 359 SUCCEEDED!
  time cost = 0.02 min
  ALL EXAMPLE time cost = 21.88 min
  curr succ rate = 0.041666666666666664
Query times in this attack:  36
All Query times:  34607
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'filtering', 'zgps...', '"', ')', ';', 'final', 'Config', 'config', '=', 'Gbl', '.', 'createConfig', '(', 'args', ')', ';', 'final', 'String', 'CONFIG_MODULE', '=', '"', 'GPSFilterZGPS', '"', ';', 'File', 'sourceFileSelectedStages', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'sourceFileSelectedStages', '"', ')', ')', ';', 'File', 'sourceFileZGPS', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'sourceFileZGPS', '"', ')', ')', ';', 'File', 'targetFile', '=', 'new', 'File', '(', 'config', '.', 'findParam', '(', 'CONFIG_MODULE', ',', '"', 'targetFile', '"', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'reading', 'selected', 'stages...', '"', ')', ';', 'FilterZGPSSelectedStages', 'selectedStages', '=', 'new', 'FilterZGPSSelectedStages', '(', ')', ';', 'selectedStages', '.', 'createSelectedStages', '(', 'sourceFileSelectedStages', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Done.', '', '"', '+', 'selectedStages', '.', 'getSelectedStages', '(', ')', '.', 'size', '(', ')', '+', '"', '', 'stages', 'were', 'stored', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Start', 'reading', 'and', 'writing', 'zgps...', '"', ')', ';', 'try', '{', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'new', 'FileInputStream', '(', 'sourceFileZGPS', ')', ')', ')', ';', 'BufferedWriter', 'out', '=', 'new', 'BufferedWriter', '(', 'new', 'FileWriter', '(', 'targetFile', ')', ')', ';', 'out', '.', 'write', '(', 'in', '.', 'readLine', '(', ')', ')', ';', 'out', '.', 'newLine', '(', ')', ';', 'String', 'lineFromInputFile', ';', 'while', '(', '(', 'lineFromInputFile', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', '[', ']', 'entries', '=', 'lineFromInputFile', '.', 'split', '(', '"', '\\t', '"', ')', ';', 'if', '(', 'selectedStages', '.', 'containsStage', '(', 'Integer', '.', 'parseInt', '(', 'entries', '[', '0', ']', ')', ',', 'Integer', '.', 'parseInt', '(', 'entries', '[', '1', ']', ')', ',', 'Integer', '.', 'parseInt', '(', 'entries', '[', '2', ']', ')', ')', ')', '{', 'out', '.', 'write', '(', 'lineFromInputFile', ')', ';', 'out', '.', 'newLine', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', '}', '}', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Could', 'not', 'find', 'source', 'file', 'for', 'selected', 'stages.', '"', ')', ';', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'IO', 'Exception', 'while', 'reading', 'or', 'writing', 'zgps.', '"', ')', ';', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Done.', '"', ')', ';', '}']
Example 360 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'VersionMinorMajor', 'fetchVersion', '(', ')', 'throws', 'BusinessException', '{', 'LOG', '.', 'info', '(', '"', 'Fetching', 'version', 'from', 'url', "'", '"', '+', 'WEB_URL', '+', '"', "'.", '"', ')', ';', 'URL', 'url', '=', 'null', ';', 'try', '{', 'url', '=', 'new', 'URL', '(', 'WEB_URL', ')', ';', 'assert', '(', 'url', '.', 'getProtocol', '(', ')', '.', 'equalsIgnoreCase', '(', '"', 'HTTP', '"', ')', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'LOG', '.', 'warn', '(', '"', 'Invalid', 'url', "'", '"', '+', 'WEB_URL', '+', '"', "'", 'specified!', '"', ',', 'e', ')', ';', 'throw', 'new', 'BusinessException', '(', '"', 'Tried', 'to', 'fetch', 'most', 'current', 'version', 'from', 'invalid', 'url:', '', '"', '+', 'WEB_URL', ')', ';', '}', 'try', '{', 'LOG', '.', 'debug', '(', '"', 'Opening', 'connection', 'to', 'webserver.', '"', ')', ';', 'final', 'URLConnection', 'connection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'final', 'Scanner', 'scanner', '=', 'new', 'Scanner', '(', 'connection', '.', 'getInputStream', '(', ')', ')', ';', 'scanner', '.', 'useDelimiter', '(', 'END_OF_INPUT', ')', ';', 'final', 'String', 'versionString', '=', 'scanner', '.', 'next', '(', ')', ';', 'try', '{', 'VersionMinorMajor', 'version', '=', 'new', 'VersionMinorMajor', '(', 'versionString', ')', ';', 'LOG', '.', 'debug', '(', '"', 'Successfully', 'fetched', 'version', "'", '"', '+', 'version', '+', '"', "'", 'from', 'web.', '"', ')', ';', 'return', 'version', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'LOG', '.', 'error', '(', '"', 'Stored', 'version', 'string', "'", '"', '+', 'versionString', '+', '"', "'", 'is', 'invalid!', '"', ',', 'e', ')', ';', 'throw', 'new', 'BusinessException', '(', '"', 'Could', 'not', 'construct', 'VersionMinorMajor', 'by', 'string', "'", '"', '+', 'versionString', '+', '"', "'", '(url', 'was:', '', '"', '+', 'WEB_URL', '+', '"', ')!', '"', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'LOG', '.', 'info', '(', '"', 'Fetching', 'application', 'version', 'failed!', '"', ',', 'e', ')', ';', 'throw', 'new', 'BusinessException', '(', '"', 'Could', 'not', 'get', 'contents', 'of', 'url', "'", '"', '+', 'WEB_URL', '+', '"', "'!", '"', ',', 'e', ')', ';', '}', '}']
Example 361 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'FetchTextFromWebPage', '', '(', 'String', 'path', ')', '{', 'HTMLEditorKit', '.', 'Parser', 'parser', ';', 'HTMLFile', '=', 'new', 'File', '(', 'path', ')', ';', 'byte', '[', ']', 'html', '=', 'new', 'byte', '[', 'new', 'Long', '(', 'HTMLFile', '.', 'length', '(', ')', ')', '.', 'intValue', '(', ')', ']', ';', 'try', '{', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'HTMLFile', ')', ';', 'try', '{', 'fis', '.', 'read', '(', 'html', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'ByteArrayInputStream', 'ba_read', '=', 'new', 'ByteArrayInputStream', '(', 'html', ')', ';', 'r', '=', 'new', 'InputStreamReader', '(', 'ba_read', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'URL', 'url', '=', 'null', ';', 'try', '{', 'url', '=', 'new', 'URL', '(', 'path', ')', ';', 'URLConnection', 'connection', '=', 'null', ';', 'try', '{', 'connection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'connection', '.', 'setDoInput', '(', 'true', ')', ';', 'InputStream', 'inStream', '=', 'null', ';', 'try', '{', 'inStream', '=', 'connection', '.', 'getInputStream', '(', ')', ';', 'BufferedReader', 'input', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'inStream', ')', ')', ';', 'StringBuffer', 'sbr', '=', 'new', 'StringBuffer', '(', ')', ';', 'String', 'line', '=', 'null', ';', 'try', '{', 'while', '(', '(', 'line', '=', 'input', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'line', ')', ';', 'sbr', '.', 'append', '(', 'line', '+', '"', '', '"', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e1', ')', '{', 'e1', '.', 'printStackTrace', '(', ')', ';', '}', 'File', 'temp', '=', 'new', 'File', '(', '"', '//home//wiki14//temp.txt', '"', ')', ';', 'if', '(', '!', 'temp', '.', 'exists', '(', ')', ')', '{', 'if', '(', '!', 'temp', '.', 'createNewFile', '(', ')', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'File', 'caanot', 'be', 'created', '"', ')', ';', '}', 'else', '{', 'temp', '.', 'delete', '(', ')', ';', 'if', '(', '!', 'temp', '.', 'createNewFile', '(', ')', ')', 'System', '.', 'out', '.', 'println', '(', '"', 'File', 'caanot', 'be', 'created', '"', ')', ';', '}', 'java', '.', 'io', '.', 'FileWriter', 'fw', '=', 'new', 'java', '.', 'io', '.', 'FileWriter', '(', 'temp', ')', ';', 'fw', '.', 'write', '(', 'sbr', '.', 'toString', '(', ')', ')', ';', 'fw', '.', 'close', '(', ')', ';', 'byte', '[', ']', 'newbyte', '=', 'new', 'byte', '[', 'new', 'Long', '(', 'sbr', '.', 'length', '(', ')', ')', '.', 'intValue', '(', ')', ']', ';', 'ByteArrayInputStream', 'ba_read', '=', 'new', 'ByteArrayInputStream', '(', 'newbyte', ')', ';', 'r', '=', 'new', 'InputStreamReader', '(', 'ba_read', ')', ';', '}', 'catch', '(', 'IOException', 'e1', ')', '{', 'e1', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e1', ')', '{', 'e1', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'catch', '(', 'MalformedURLException', 'e1', ')', '{', 'e1', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'parser', '=', 'new', 'ParserDelegator', '(', ')', ';', 'htmltextparser', '=', 'new', 'HtmlTextParser', '(', ')', ';', 'htmltextparser', '.', 'initData', '(', ')', ';', 'try', '{', 'parser', '.', 'parse', '(', 'r', ',', 'htmltextparser', ',', 'true', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'try', '{', 'r', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, REJ. url => api (0 => 0, 0.99981 => 0.99989) a=0.882
  >>  iter 2, REJ. url => el (0 => 0, 0.99981 => 0.99999) a=0.751
  >>  iter 3, ACC! temp => buffer (0 => 0, 0.99981 => 0.99981) a=1.112
  >>  iter 4, ACC! buffer => base (0 => 0, 0.99981 => 0.99981) a=1.071
  >>  iter 5, ACC! base => py (0 => 0, 0.99981 => 0.99980) a=1.114
  >>  iter 6, ACC! py => output (0 => 0, 0.99980 => 0.99981) a=1.043
  >>  iter 7, ACC! output => diff (0 => 0, 0.99981 => 0.99980) a=1.101
  >>  iter 8, REJ. url => li (0 => 0, 0.99980 => 0.99990) a=0.972
  >>  iter 9, ACC! diff => part (0 => 0, 0.99980 => 0.99980) a=1.074
  >>  iter 10, REJ. url => URL (0 => 0, 0.99980 => 0.99983) a=0.968
Example 362 attack result: {'succ': False, 'tokens': '    public FetchTextFromWebPage(String path) {\n        HTMLEditorKit.Parser parser;\n        HTMLFile = new File(path);\n        byte[] html = new byte[new Long(HTMLFile.length()).intValue()];\n        try {\n            FileInputStream fis = new FileInputStream(HTMLFile);\n            try {\n                fis.read(html);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            ByteArrayInputStream ba_read = new ByteArrayInputStream(html);\n            r = new InputStreamReader(ba_read);\n        } catch (FileNotFoundException e) {\n            URL URL = null;\n            try {\n                URL = new URL(path);\n                URLConnection connection = null;\n                try {\n                    connection = URL.openConnection();\n                    connection.setDoInput(true);\n                    InputStream inStream = null;\n                    try {\n                        inStream = connection.getInputStream();\n                        BufferedReader input = new BufferedReader(new InputStreamReader(inStream));\n                        StringBuffer sbr = new StringBuffer();\n                        String line = null;\n                        try {\n                            while ((line = input.readLine()) != null) {\n                                System.out.println(line);\n                                sbr.append(line + "\n");\n                            }\n                        } catch (IOException e1) {\n                            e1.printStackTrace();\n                        }\n                        File part = new File("//home//wiki14//temp.txt");\n                        if (!part.exists()) {\n                            if (!part.createNewFile()) System.out.println("File caanot be created");\n                        } else {\n                            part.delete();\n                            if (!part.createNewFile()) System.out.println("File caanot be created");\n                        }\n                        java.io.FileWriter fw = new java.io.FileWriter(part);\n                        fw.write(sbr.toString());\n                        fw.close();\n                        byte[] newbyte = new byte[new Long(sbr.length()).intValue()];\n                        ByteArrayInputStream ba_read = new ByteArrayInputStream(newbyte);\n                        r = new InputStreamReader(ba_read);\n                    } catch (IOException e1) {\n                        e1.printStackTrace();\n                    }\n                } catch (IOException e1) {\n                    e1.printStackTrace();\n                }\n            } catch (MalformedURLException e1) {\n                e1.printStackTrace();\n            }\n        }\n        parser = new ParserDelegator();\n        htmltextparser = new HtmlTextParser();\n        htmltextparser.initData();\n        try {\n            parser.parse(r, htmltextparser, true);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        try {\n            r.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 490, 'new_pred': 0, 'is_success': -1, 'old_uid': 'temp', 'score_info': -3.4749508e-05, 'nb_changed_var': 1, 'nb_changed_pos': 6, 'replace_info': {'temp': 'part'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 362 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 22.07 min
  curr succ rate = 0.04132231404958678
Query times in this attack:  304
All Query times:  34911
raw_tokens: ['public', 'HogsCustomizer', '', '(', ')', '{', 'm_filename', '=', 'PathFinder', '.', 'getCustsFile', '(', ')', ';', 'm_currenttaunts', '=', 'new', 'String', '[', '10', ']', ';', 'm_textfields', '=', 'new', 'JTextField', '[', '10', ']', ';', 'm_color', '=', 'new', 'Color', '(', '255', ',', '255', ',', '255', ')', ';', 'boolean', 'exists', '=', '(', 'new', 'File', '(', 'm_filename', ')', ')', '.', 'exists', '(', ')', ';', 'm_inverted', '=', 'false', ';', 'm_chooser', '=', 'new', 'JColorChooser', '(', ')', ';', 'AbstractColorChooserPanel', '[', ']', 'panels', '=', 'm_chooser', '.', 'getChooserPanels', '(', ')', ';', 'm_chooser', '.', 'removeChooserPanel', '(', 'panels', '[', '0', ']', ')', ';', 'm_chooser', '.', 'removeChooserPanel', '(', 'panels', '[', '2', ']', ')', ';', 'm_chooser', '.', 'setPreviewPanel', '(', 'new', 'JPanel', '(', ')', ')', ';', 'Reader', 'reader', '=', 'null', ';', 'if', '(', 'exists', ')', '{', 'try', '{', 'reader', '=', 'new', 'FileReader', '(', 'm_filename', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'else', '{', 'Object', '[', ']', 'options', '=', '{', '"', 'Yes', '"', ',', '"', 'No,', 'Thanks', '"', '}', ';', 'int', 'n', '=', 'JOptionPane', '.', 'showOptionDialog', '(', 'this', ',', '"', 'You', 'do', 'not', 'have', 'a', 'customization', 'file', 'in', 'your', 'home', 'directory.', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '"', '+', '"', 'Would', 'you', 'like', 'to', 'create', 'one?', '"', ',', '"', 'Hogs', 'Customization', '"', ',', 'JOptionPane', '.', 'YES_NO_OPTION', ',', 'JOptionPane', '.', 'QUESTION_MESSAGE', ',', 'null', ',', 'options', ',', 'options', '[', '1', ']', ')', ';', 'if', '(', 'n', '==', '0', ')', '{', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'HogsConstants', '.', 'CUSTS_TEMPLATE', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'm_filename', ')', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', 'else', '{', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'try', '{', 'reader', '=', 'new', 'FileReader', '(', 'm_filename', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e1', ')', '{', 'e1', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', 'try', '{', 'readFromFile', '(', 'reader', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'Box', 'mainpanel', '=', 'Box', '.', 'createVerticalBox', '(', ')', ';', 'mainpanel', '.', 'add', '(', 'buildTauntsPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildMouseStylePanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildColorPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildButtonsPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'this', '.', 'setDefaultCloseOperation', '(', 'JFrame', '.', 'EXIT_ON_CLOSE', ')', ';', 'this', '.', 'setContentPane', '(', 'mainpanel', ')', ';', 'this', '.', 'pack', '(', ')', ';', 'Dimension', 'dim', '=', 'Toolkit', '.', 'getDefaultToolkit', '(', ')', '.', 'getScreenSize', '(', ')', ';', 'this', '.', 'setLocation', '(', 'dim', '.', 'width', '/', '2', '-', '(', 'this', '.', 'getWidth', '(', ')', '/', '2', ')', ',', 'dim', '.', 'height', '/', '2', '-', '(', 'this', '.', 'getHeight', '(', ')', '/', '2', ')', ')', ';', 'this', '.', 'setTitle', '(', '"', 'Hogs', 'Customizer', '"', ')', ';', 'this', '.', 'setVisible', '(', 'true', ')', ';', '}']
  >>  iter 1, ACC! in => data (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! data => input (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! input => buffer (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! buffer => ins (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! ins => r (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! r => bin (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! bin => src (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! src => m (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! m => image (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! image => bin (1 => 1, 0.99988 => 0.99988) a=1.000
Example 363 attack result: {'succ': False, 'tokens': '    public HogsCustomizer() {\n        m_filename = PathFinder.getCustsFile();\n        m_currenttaunts = new String[10];\n        m_textfields = new JTextField[10];\n        m_color = new Color(255, 255, 255);\n        boolean exists = (new File(m_filename)).exists();\n        m_inverted = false;\n        m_chooser = new JColorChooser();\n        AbstractColorChooserPanel[] panels = m_chooser.getChooserPanels();\n        m_chooser.removeChooserPanel(panels[0]);\n        m_chooser.removeChooserPanel(panels[2]);\n        m_chooser.setPreviewPanel(new JPanel());\n        Reader reader = null;\n        if (exists) {\n            try {\n                reader = new FileReader(m_filename);\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        } else {\n            Object[] options = { "Yes", "No, Thanks" };\n            int n = JOptionPane.showOptionDialog(this, "You do not have a customization file in your home directory.\n                 " + "Would you like to create one?", "Hogs Customization", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);\n            if (n == 0) {\n                try {\n                    FileChannel srcChannel = new FileInputStream(HogsConstants.CUSTS_TEMPLATE).getChannel();\n                    FileChannel dstChannel = new FileOutputStream(m_filename).getChannel();\n                    dstChannel.transferFrom(srcChannel, 0, srcChannel.size());\n                    srcChannel.close();\n                    dstChannel.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    System.exit(0);\n                }\n            } else {\n                System.exit(0);\n            }\n            try {\n                reader = new FileReader(m_filename);\n            } catch (FileNotFoundException e1) {\n                e1.printStackTrace();\n                System.exit(0);\n            }\n        }\n        try {\n            readFromFile(reader);\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(0);\n        }\n        Box mainpanel = Box.createVerticalBox();\n        mainpanel.add(buildTauntsPanel());\n        mainpanel.add(buildMouseStylePanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        mainpanel.add(buildColorPanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        mainpanel.add(buildButtonsPanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        this.setContentPane(mainpanel);\n        this.pack();\n        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();\n        this.setLocation(dim.width / 2 - (this.getWidth() / 2), dim.height / 2 - (this.getHeight() / 2));\n        this.setTitle("Hogs Customizer");\n        this.setVisible(true);\n    }\n', 'raw_tokens': None, 'prog_length': 526, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'in': 'bin'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 363 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 22.24 min
  curr succ rate = 0.040983606557377046
Query times in this attack:  243
All Query times:  35154
raw_tokens: ['public', 'boolean', 'copyStoredTileTo', '(', 'File', 'targetFileName', ',', 'int', 'x', ',', 'int', 'y', ',', 'int', 'zoom', ',', 'MapSource', 'tileSource', ')', 'throws', 'IOException', '{', 'File', 'sourceFile', '=', 'getTileFile', '(', 'x', ',', 'y', ',', 'zoom', ',', 'tileSource', ')', ';', 'if', '(', '!', 'sourceFile', '.', 'exists', '(', ')', ')', 'return', 'false', ';', 'FileInputStream', 'fis', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'long', 'sourceBytes', '=', '0', ';', 'long', 'writtenBytes', '=', '0', ';', 'try', '{', 'fis', '=', 'new', 'FileInputStream', '(', 'sourceFile', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'targetFileName', ')', ';', 'FileChannel', 'source', '=', 'fis', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'destination', '=', 'fos', '.', 'getChannel', '(', ')', ';', 'sourceBytes', '=', 'source', '.', 'size', '(', ')', ';', 'writtenBytes', '=', 'destination', '.', 'transferFrom', '(', 'source', ',', '0', ',', 'sourceBytes', ')', ';', '}', 'finally', '{', 'Utilities', '.', 'closeStream', '(', 'fis', ')', ';', 'Utilities', '.', 'closeStream', '(', 'fos', ')', ';', '}', 'if', '(', 'writtenBytes', '!=', 'sourceBytes', ')', 'throw', 'new', 'IOException', '(', '"', 'Target', "file's", 'size', 'is', 'not', 'equal', 'to', 'the', 'source', "file's", 'size!', '"', ')', ';', 'return', 'true', ';', '}']
  >>  iter 1, ACC! fos => flosh (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! flosh => voes (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 3, ACC! voes => fis (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 4, ACC! fis => flou (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 5, ACC! flou => Foes (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! Foes =>  foes (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC!  foes =>  fops (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC!  fops => ufo (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! ufo => flou (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! flou =>  fis (1 => 1, 0.99988 => 0.99988) a=1.000
Example 364 attack result: {'succ': False, 'tokens': '    public boolean copyStoredTileTo(File targetFileName, int x, int y, int zoom, MapSource tileSource) throws IOException {\n        File sourceFile = getTileFile(x, y, zoom, tileSource);\n        if (!sourceFile.exists()) return false;\n        FileInputStream  foes = null;\n        FileOutputStream  foes = null;\n        long sourceBytes = 0;\n        long writtenBytes = 0;\n        try {\n             foes = new FileInputStream(sourceFile);\n             foes = new FileOutputStream(targetFileName);\n            FileChannel source =  foes.getChannel();\n            FileChannel destination =  foes.getChannel();\n            sourceBytes = source.size();\n            writtenBytes = destination.transferFrom(source, 0, sourceBytes);\n        } finally {\n            Utilities.closeStream( foes);\n            Utilities.closeStream( foes);\n        }\n        if (writtenBytes != sourceBytes) throw new IOException("Target file\'s size is not equal to the source file\'s size!");\n        return true;\n    }\n', 'raw_tokens': None, 'prog_length': 162, 'new_pred': 1, 'is_success': -1, 'old_uid': 'fos', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'fos': ' fis'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 364 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 22.39 min
  curr succ rate = 0.04065040650406504
Query times in this attack:  308
All Query times:  35462
raw_tokens: ['public', 'void', 'updateDBModel', '(', 'Tasks', 'task', ')', 'throws', 'Exception', '{', 'task', '.', 'setOperationName', '(', '"', 'Updating', 'DB', 'Model..', '"', ')', ';', 'int', 'localVersion', '=', 'getLocalModelVersion', '(', ')', ';', 'int', 'currentVersion', '=', '0', ';', 'try', '{', 'currentVersion', '=', 'getModelVersion', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'if', '(', 'e', '.', 'getErrorCode', '(', ')', '!=', '1146', ')', '{', 'throw', 'e', ';', '}', '}', 'boolean', 'autoCommit', '=', 'getConn', '(', ')', '.', 'getAutoCommit', '(', ')', ';', 'try', '{', 'getConn', '(', ')', '.', 'setAutoCommit', '(', 'false', ')', ';', 'for', '(', 'int', 'version', '=', 'currentVersion', '+', '1', ';', 'version', '<=', 'localVersion', ';', 'version', '++', ')', '{', 'task', '.', 'setStatus', '(', '"', 'Updating', 'to', 'version', '', '"', '+', 'version', ')', ';', 'InputStream', 'in', '=', 'EDACCApp', '.', 'class', '.', 'getClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'edacc/resources/db_version/', '"', '+', 'version', '+', '"', '.sql', '"', ')', ';', 'if', '(', 'in', '==', 'null', ')', '{', 'throw', 'new', 'SQLQueryFileNotFoundException', '(', ')', ';', '}', 'executeSqlScript', '(', 'task', ',', 'in', ')', ';', 'Statement', 'st', '=', 'getConn', '(', ')', '.', 'createStatement', '(', ')', ';', 'st', '.', 'executeUpdate', '(', '"', 'INSERT', 'INTO', '`Version`', 'VALUES', '(', '"', '+', 'version', '+', '"', ',', 'NOW())', '"', ')', ';', 'st', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'getConn', '(', ')', '.', 'rollback', '(', ')', ';', 'throw', 'e', ';', '}', 'finally', '{', 'getConn', '(', ')', '.', 'setAutoCommit', '(', 'autoCommit', ')', ';', '}', '}']
Example 365 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'CopyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'Exception', '{', 'FileInputStream', 'fis', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fis', '=', 'new', 'FileInputStream', '(', 'source', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'destination', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'fis', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fis', '!=', 'null', ')', '{', 'fis', '.', 'close', '(', ')', ';', '}', 'if', '(', 'fos', '!=', 'null', ')', '{', 'fos', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
  >>  iter 1, ACC! Exception => Transaction (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! Transaction => Unknown (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! Unknown => Ex (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! Ex => Event (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! Event => Except (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! Except => T (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! T => X (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! X => EX (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! EX => Unknown (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! Unknown => X (1 => 1, 0.99988 => 0.99988) a=1.000
Example 366 attack result: {'succ': False, 'tokens': '    public void CopyFile(File source, File destination) throws X {\n        FileInputStream fis = null;\n        FileOutputStream fos = null;\n        try {\n            fis = new FileInputStream(source);\n            fos = new FileOutputStream(destination);\n            byte[] buffer = new byte[4096];\n            int read;\n            while ((read = fis.read(buffer)) != -1) {\n                fos.write(buffer, 0, read);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (fis != null) {\n                    fis.close();\n                }\n                if (fos != null) {\n                    fos.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 146, 'new_pred': 1, 'is_success': -1, 'old_uid': 'Exception', 'score_info': -1.6516424e-08, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'Exception': 'X'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 366 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 22.56 min
  curr succ rate = 0.04032258064516129
Query times in this attack:  306
All Query times:  35768
raw_tokens: ['private', 'String', 'getCoded', '(', 'String', 'pass', ')', '{', 'String', 'passSecret', '=', '"', '"', ';', 'try', '{', 'MessageDigest', 'm', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'm', '.', 'update', '(', 'pass', '.', 'getBytes', '(', '"', 'UTF8', '"', ')', ')', ';', 'byte', 's', '[', ']', '=', 'm', '.', 'digest', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 's', '.', 'length', ';', 'i', '++', ')', '{', 'passSecret', '+=', 'Integer', '.', 'toHexString', '(', '(', '0x000000ff', '&', 's', '[', 'i', ']', ')', '|', '0xffffff00', ')', '.', 'substring', '(', '6', ')', ';', '}', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e1', ')', '{', 'e1', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'passSecret', ';', '}']
Example 367 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'Map', '<', 'String', ',', 'String', '>', 'readStuff', '(', 'Iterator', '<', 'URL', '>', 'urls', ')', 'throws', 'IOException', '{', 'Map', '<', 'String', ',', 'String', '>', 'result', '=', 'new', 'LinkedHashMap', '(', ')', ';', 'while', '(', 'urls', '.', 'hasNext', '(', ')', ')', '{', 'URL', 'url', '=', 'urls', '.', 'next', '(', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 's', '=', 'reader', '.', 'readLine', '(', ')', ';', 'while', '(', 's', '!=', 'null', ')', '{', 's', '=', 's', '.', 'trim', '(', ')', ';', 'if', '(', 's', '.', 'length', '(', ')', '>', '0', ')', '{', 'String', '[', ']', 'ss', '=', 's', '.', 'split', '(', '"', '\\\\', 's', '"', ')', ';', 'for', '(', 'int', 'i', '=', '1', ';', 'i', '<', 'ss', '.', 'length', ';', 'i', '++', ')', '{', 'result', '.', 'put', '(', 'ss', '[', 'i', ']', ',', 'ss', '[', '0', ']', ')', ';', '}', '}', 's', '=', 'reader', '.', 'readLine', '(', ')', ';', '}', 'reader', '.', 'close', '(', ')', ';', '}', 'return', 'result', ';', '}']
  >>  iter 1, REJ. i => base (0 => 0, 0.99860 => 0.99862) a=0.994
  >>  iter 2, REJ. i => o (0 => 0, 0.99860 => 0.99862) a=0.998
  >>  iter 3, REJ. i => ni (0 => 0, 0.99860 => 0.99862) a=0.998
  >>  iter 4, REJ. i => start (0 => 0, 0.99860 => 0.99862) a=0.998
  >>  iter 5, REJ. i => oi (0 => 0, 0.99860 => 0.99862) a=0.998
  >>  iter 6, REJ. i => n (0 => 0, 0.99860 => 0.99862) a=0.994
  >>  iter 7, REJ. i => s (0 => 0, 0.99860 => 0.99862) a=0.997
  >>  iter 8, REJ. i => start (0 => 0, 0.99860 => 0.99862) a=0.998
  >>  iter 9, REJ. i => si (0 => 0, 0.99860 => 0.99862) a=0.997
  >>  iter 10, REJ. i => ti (0 => 0, 0.99860 => 0.99862) a=0.998
Example 368 attack result: {'succ': False, 'tokens': '    private Map<String, String> readStuff(Iterator<URL> urls) throws IOException {\n        Map<String, String> result = new LinkedHashMap();\n        while (urls.hasNext()) {\n            URL url = urls.next();\n            BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));\n            String s = reader.readLine();\n            while (s != null) {\n                s = s.trim();\n                if (s.length() > 0) {\n                    String[] ss = s.split("\\\\s");\n                    for (int ti = 1; ti < ss.length; ti++) {\n                        result.put(ss[ti], ss[0]);\n                    }\n                }\n                s = reader.readLine();\n            }\n            reader.close();\n        }\n        return result;\n    }\n', 'raw_tokens': None, 'prog_length': 170, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -1.3411045e-05, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 368 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 22.73 min
  curr succ rate = 0.04
Query times in this attack:  314
All Query times:  36082
raw_tokens: ['protected', 'void', 'lookupForParsedElementAnnotations', '(', 'JClassType', 't', ')', '{', 'List', '<', 'JMethod', '>', 'methods', '=', 'getParsableElementMethods', '(', 't', ')', ';', 'if', '(', 'methods', '!=', 'null', ')', '{', 'for', '(', 'JMethod', 'method', ':', 'methods', ')', '{', 'ParsedElement', 'elementAnnotation', '=', 'method', '.', 'getAnnotation', '(', 'ParsedElement', '.', 'class', ')', ';', 'if', '(', 'elementAnnotation', '.', 'type', '(', ')', '==', 'ParsedElement', '.', 'Types', '.', 'SYNC', ')', '{', 'try', '{', 'String', 'contents', '=', '"', '"', ';', 'URL', 'url', '=', 'getClass', '(', ')', '.', 'getClassLoader', '(', ')', '.', 'getResource', '(', 'elementAnnotation', '.', 'file', '(', ')', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'contents', '+=', 'line', ';', '}', 'reader', '.', 'close', '(', ')', ';', 'ParsedElementDescriptor', 'elementDescriptor', '=', 'new', 'ParsedElementDescriptor', '(', 'method', '.', 'getName', '(', ')', ',', 'contents', '.', 'replaceAll', '(', '"', '\\"', '"', ',', '"', "'", '"', ')', ',', 'elementAnnotation', '.', 'type', '(', ')', ')', ';', 'this', '.', 'parsedElementList', '.', 'add', '(', 'elementDescriptor', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'else', '{', 'ParsedElementDescriptor', 'elementDescriptor', '=', 'new', 'ParsedElementDescriptor', '(', 'method', '.', 'getName', '(', ')', ',', 'elementAnnotation', '.', 'file', '(', ')', ',', 'elementAnnotation', '.', 'type', '(', ')', ')', ';', 'this', '.', 'parsedElementList', '.', 'add', '(', 'elementDescriptor', ')', ';', '}', '}', '}', '}']
Example 369 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'delete', '(', 'String', 'location', ')', 'throws', 'Exception', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'location', ')', ';', 'HttpURLConnection', 'conn', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setRequestMethod', '(', '"', 'DELETE', '"', ')', ';', 'conn', '.', 'connect', '(', ')', ';', 'int', 'responseCode', '=', 'conn', '.', 'getResponseCode', '(', ')', ';', 'if', '(', 'responseCode', '!=', 'HttpURLConnection', '.', 'HTTP_OK', '&&', 'responseCode', '!=', 'HttpURLConnection', '.', 'HTTP_NO_CONTENT', ')', '{', 'String', 'response', '=', '"', 'location', '', '"', '+', 'location', '+', '"', '', 'responded:', '', '"', '+', 'conn', '.', 'getResponseMessage', '(', ')', '+', '"', '', '(', '"', '+', 'responseCode', '+', '"', ')', '"', ';', 'fail', '(', 'response', ')', ';', '}', '}']
  >>  iter 1, ACC! url => null (0 => 0, 0.99969 => 0.99968) a=1.053
  >>  iter 2, ACC! null => filename (0 => 0, 0.99968 => 0.99969) a=1.112
  >>  iter 3, ACC! filename => ref (0 => 0, 0.99969 => 0.99970) a=1.170
  >>  iter 4, ACC! ref => el (0 => 0, 0.99970 => 0.99969) a=1.144
  >>  iter 5, ACC! el => base (0 => 0, 0.99969 => 0.99969) a=1.160
  >>  iter 6, ACC! base => buffer (0 => 0, 0.99969 => 0.99970) a=1.106
  >>  iter 7, ACC! buffer => www (0 => 0, 0.99970 => 0.99972) a=1.133
  >>  iter 8, ACC! www => el (0 => 0, 0.99972 => 0.99969) a=1.288
  >>  iter 9, ACC! el => ref (0 => 0, 0.99969 => 0.99970) a=1.160
  >>  iter 10, ACC! ref => ssl (0 => 0, 0.99970 => 0.99968) a=1.219
Example 370 attack result: {'succ': False, 'tokens': '    private void delete(String location) throws Exception {\n        URL ssl = new URL(location);\n        HttpURLConnection conn = (HttpURLConnection) ssl.openConnection();\n        conn.setRequestMethod("DELETE");\n        conn.connect();\n        int responseCode = conn.getResponseCode();\n        if (responseCode != HttpURLConnection.HTTP_OK && responseCode != HttpURLConnection.HTTP_NO_CONTENT) {\n            String response = "location " + location + " responded: " + conn.getResponseMessage() + " (" + responseCode + ")";\n            fail(response);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 106, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 2.7358532e-05, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'ssl'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 370 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 22.89 min
  curr succ rate = 0.03968253968253968
Query times in this attack:  303
All Query times:  36385
raw_tokens: ['private', 'static', 'void', 'unzipEntry', '(', 'ZipFile', 'zipfile', ',', 'ZipEntry', 'entry', ',', 'File', 'outputDir', ')', 'throws', 'IOException', '{', 'if', '(', 'entry', '.', 'isDirectory', '(', ')', ')', '{', 'createDir', '(', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ')', ';', 'return', ';', '}', 'File', 'outputFile', '=', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ';', 'if', '(', '!', 'outputFile', '.', 'getParentFile', '(', ')', '.', 'exists', '(', ')', ')', '{', 'createDir', '(', 'outputFile', '.', 'getParentFile', '(', ')', ')', ';', '}', 'BufferedInputStream', 'inputStream', '=', 'new', 'BufferedInputStream', '(', 'zipfile', '.', 'getInputStream', '(', 'entry', ')', ')', ';', 'BufferedOutputStream', 'outputStream', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outputFile', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'outputStream', ')', ';', '}', 'finally', '{', 'outputStream', '.', 'close', '(', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', '}', '}']
Example 371 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'readCreditsHtml', '(', 'IApplication', 'app', ')', '{', 'final', 'URL', 'url', '=', 'app', '.', 'getResources', '(', ')', '.', 'getCreditsURL', '(', ')', ';', 'StringBuffer', 'buf', '=', 'new', 'StringBuffer', '(', '2048', ')', ';', 'if', '(', 'url', '!=', 'null', ')', '{', 'try', '{', 'BufferedReader', 'rdr', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'try', '{', 'String', 'line', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'rdr', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'String', 'internationalizedLine', '=', 'Utilities', '.', 'replaceI18NSpanLine', '(', 'line', ',', 's_stringMgr', ')', ';', 'buf', '.', 'append', '(', 'internationalizedLine', ')', ';', '}', '}', 'finally', '{', 'rdr', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'String', 'errorMsg', '=', 's_stringMgr', '.', 'getString', '(', '"', 'AboutBoxDialog.error.creditsfile', '"', ')', ';', 's_log', '.', 'error', '(', 'errorMsg', ',', 'ex', ')', ';', 'buf', '.', 'append', '(', 'errorMsg', '+', '"', ':', '', '"', '+', 'ex', '.', 'toString', '(', ')', ')', ';', '}', '}', 'else', '{', 'String', 'errorMsg', '=', 's_stringMgr', '.', 'getString', '(', '"', 'AboutBoxDialog.error.creditsfileurl', '"', ')', ';', 's_log', '.', 'error', '(', 'errorMsg', ')', ';', 'buf', '.', 'append', '(', 'errorMsg', ')', ';', '}', 'return', 'buf', '.', 'toString', '(', ')', ';', '}']
Example 372 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'deleteByQuery', '(', 'String', 'query', ',', 'int', 'coreId', ')', '{', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'solrUrl', '+', '"', '/core', '"', '+', 'coreId', '+', '"', '/update', '"', ')', ';', 'URLConnection', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setDoOutput', '(', 'true', ')', ';', 'conn', '.', 'setRequestProperty', '(', '"', 'Content-type', '"', ',', '"', 'text/xml', '"', ')', ';', 'conn', '.', 'setRequestProperty', '(', '"', 'charset', '"', ',', '"', 'utf-8', '"', ')', ';', 'OutputStreamWriter', 'wr', '=', 'new', 'OutputStreamWriter', '(', 'conn', '.', 'getOutputStream', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '******************', '"', '+', 'query', ')', ';', 'wr', '.', 'write', '(', '"', '<delete><query>', '"', '+', 'query', '+', '"', '</query></delete>', '"', ')', ';', 'wr', '.', 'flush', '(', ')', ';', 'BufferedReader', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'line', ')', ';', '}', 'wr', '.', 'close', '(', ')', ';', 'rd', '.', 'close', '(', ')', ';', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setDoOutput', '(', 'true', ')', ';', 'conn', '.', 'setRequestProperty', '(', '"', 'Content-type', '"', ',', '"', 'text/xml', '"', ')', ';', 'conn', '.', 'setRequestProperty', '(', '"', 'charset', '"', ',', '"', 'utf-8', '"', ')', ';', 'wr', '=', 'new', 'OutputStreamWriter', '(', 'conn', '.', 'getOutputStream', '(', ')', ')', ';', 'wr', '.', 'write', '(', '"', '<commit/>', '"', ')', ';', 'wr', '.', 'flush', '(', ')', ';', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'line', ')', ';', '}', 'wr', '.', 'close', '(', ')', ';', 'rd', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'false', ';', '}', 'return', 'true', ';', '}']
  >>  iter 1, ACC! out => name (0 => 0, 0.99994 => 0.99994) a=1.979
  >>  iter 2, ACC! name => down (0 => 0, 0.99994 => 0.99995) a=1.164
  >>  iter 3, ACC! down => up (0 => 0, 0.99995 => 0.99994) a=1.239
  >>  iter 4, ACC! up => co (0 => 0, 0.99994 => 0.99994) a=1.382
  >>  iter 5, ACC! co => down (0 => 0, 0.99994 => 0.99995) a=1.127
  >>  iter 6, ACC! down => writer (0 => 0, 0.99995 => 0.99994) a=1.569
  >>  iter 7, ACC! writer => ext (0 => 0, 0.99994 => 0.99994) a=1.195
  >>  iter 8, ACC! ext => sys (0 => 0, 0.99994 => 0.99995) a=1.469
  >>  iter 9, ACC! sys => over (0 => 0, 0.99995 => 0.99994) a=1.517
  >>  iter 10, ACC! over => outer (0 => 0, 0.99994 => 0.99995) a=1.482
Example 373 attack result: {'succ': False, 'tokens': '    public boolean deleteByQuery(String query, int coreId) {\n        try {\n            URL url = new URL(solrUrl + "/core" + coreId + "/update");\n            URLConnection conn = url.openConnection();\n            conn.setDoOutput(true);\n            conn.setRequestProperty("Content-type", "text/xml");\n            conn.setRequestProperty("charset", "utf-8");\n            OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());\n            System.outer.println("******************" + query);\n            wr.write("<delete><query>" + query + "</query></delete>");\n            wr.flush();\n            BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            String line;\n            while ((line = rd.readLine()) != null) {\n                System.outer.println(line);\n            }\n            wr.close();\n            rd.close();\n            conn = url.openConnection();\n            conn.setDoOutput(true);\n            conn.setRequestProperty("Content-type", "text/xml");\n            conn.setRequestProperty("charset", "utf-8");\n            wr = new OutputStreamWriter(conn.getOutputStream());\n            wr.write("<commit/>");\n            wr.flush();\n            rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));\n            while ((line = rd.readLine()) != null) {\n                System.outer.println(line);\n            }\n            wr.close();\n            rd.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n        return true;\n    }\n', 'raw_tokens': None, 'prog_length': 320, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': -1.0728836e-06, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'out': 'outer'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 373 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 23.07 min
  curr succ rate = 0.03937007874015748
Query times in this attack:  306
All Query times:  36691
raw_tokens: ['void', 'queryFile', '(', 'String', 'rendezvousProgram', ',', 'String', 'rendezvousMD5', ')', '{', 'try', '{', 'XMLConfigParser', '.', 'readUrlHost', '(', ')', ';', 'String', 'url', '=', 'XMLConfigParser', '.', 'urlHost', ';', 'String', 'query', ';', 'String', 'param1', '=', '"', 'op=query', '"', ';', 'String', 'param2', '=', '"', 'program=', '"', '+', 'rendezvousProgram', ';', 'String', 'param3', '=', '"', 'md5=', '"', '+', 'rendezvousMD5', ';', 'query', '=', 'String', '.', 'format', '(', '"', '%s&%s&%s', '"', ',', 'param1', ',', 'param2', ',', 'param3', ')', ';', 'openConnection', '(', 'query', ',', 'url', ')', ';', 'String', 'line', '=', 'br', '.', 'readLine', '(', ')', ';', 'NetworkLog', '.', 'logMsg', '(', 'NetworkLog', '.', 'LOG_DEBUG', ',', 'this', ',', '"', '(Query)', 'Response', 'of', 'the', 'server:', '', '"', '+', 'line', ')', ';', 'br', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'NetworkLog', '.', 'logMsg', '(', 'NetworkLog', '.', 'LOG_ERROR', ',', 'this', ',', '"', 'Error', '"', '+', 'e', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'NetworkLog', '.', 'logMsg', '(', 'NetworkLog', '.', 'LOG_ERROR', ',', 'this', ',', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']
Example 375 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'readAndRewrite', '(', 'File', 'inFile', ',', 'File', 'outFile', ')', 'throws', 'IOException', '{', 'ImageInputStream', 'iis', '=', 'ImageIO', '.', 'createImageInputStream', '(', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'inFile', ')', ')', ')', ';', 'DcmParser', 'dcmParser', '=', 'DcmParserFactory', '.', 'getInstance', '(', ')', '.', 'newDcmParser', '(', 'iis', ')', ';', 'Dataset', 'ds', '=', 'DcmObjectFactory', '.', 'getInstance', '(', ')', '.', 'newDataset', '(', ')', ';', 'dcmParser', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'dcmParser', '.', 'parseDcmFile', '(', 'null', ',', 'Tags', '.', 'PixelData', ')', ';', 'PixelDataReader', 'pdReader', '=', 'pdFact', '.', 'newReader', '(', 'ds', ',', 'iis', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'reading', '', '"', '+', 'inFile', '+', '"', '...', '"', ')', ';', 'pdReader', '.', 'readPixelData', '(', 'false', ')', ';', 'ImageOutputStream', 'out', '=', 'ImageIO', '.', 'createImageOutputStream', '(', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outFile', ')', ')', ')', ';', 'DcmEncodeParam', 'dcmEncParam', '=', 'DcmEncodeParam', '.', 'IVR_LE', ';', 'ds', '.', 'writeDataset', '(', 'out', ',', 'dcmEncParam', ')', ';', 'ds', '.', 'writeHeader', '(', 'out', ',', 'dcmEncParam', ',', 'Tags', '.', 'PixelData', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ',', 'dcmParser', '.', 'getReadLength', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'writing', '', '"', '+', 'outFile', '+', '"', '...', '"', ')', ';', 'PixelDataWriter', 'pdWriter', '=', 'pdFact', '.', 'newWriter', '(', 'pdReader', '.', 'getPixelDataArray', '(', ')', ',', 'false', ',', 'ds', ',', 'out', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'pdWriter', '.', 'writePixelData', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'done!', '"', ')', ';', '}']
Example 376 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'connect', '(', 'final', 'URLConnectAdapter', 'urlAdapter', ')', '{', 'if', '(', 'this', '.', 'connectSettings', '==', 'null', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'Connect', 'Settings', '(is', 'null)', '"', ')', ';', '}', 'final', 'HttpURLConnection', 'httpConnection', '=', '(', 'HttpURLConnection', ')', 'urlAdapter', '.', 'openConnection', '(', ')', ';', 'BufferedReader', 'in', ';', 'try', '{', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'httpConnection', '.', 'getInputStream', '(', ')', ')', ')', ';', 'final', 'StringBuilder', 'buf', '=', 'new', 'StringBuilder', '(', '200', ')', ';', 'String', 'str', ';', 'while', '(', '(', 'str', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'buf', '.', 'append', '(', 'str', ')', ';', 'buf', '.', 'append', '(', "'');", '}', 'final', 'ConnectResult', 'result', '=', 'new', 'ConnectResult', '(', 'httpConnection', '.', 'getResponseCode', '(', ')', ',', 'buf', '.', 'toString', '(', ')', ')', '', ';', 'final', 'Map', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'headerFields', '=', 'httpConnection', '.', 'getHeaderFields', '(', ')', ';', 'for', '(', 'Map', '.', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'entry', ':', 'headerFields', '.', 'entrySet', '(', ')', ')', '{', 'final', 'String', 'key', '=', 'entry', '.', 'getKey', '(', ')', ';', 'final', 'List', '<', 'String', '>', 'val', '=', 'entry', '.', 'getValue', '(', ')', ';', 'if', '(', '(', 'val', '!=', 'null', ')', '&&', '(', 'val', '.', 'size', '(', ')', '>', '1', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'WARN:', 'Invalid', 'header', 'value', ':', '', '"', '+', 'key', '+', '"', '', 'url=', '"', '+', 'this', '.', 'connectSettings', '.', 'getUrl', '(', ')', ')', ';', '}', 'if', '(', 'key', '!=', 'null', ')', '{', 'result', '.', 'addHeader', '(', 'key', ',', 'val', '.', 'get', '(', '0', ')', ',', 'val', ')', ';', '}', 'else', '{', 'result', '.', 'addHeader', '(', '"', 'Status', '"', ',', 'val', '.', 'get', '(', '0', ')', ',', 'val', ')', ';', '}', '}', 'this', '.', 'lastResult', '=', 'result', ';', '}', 'catch', '(', 'IOException', 'e', ')', '', '{', 'throw', 'new', 'ConnectException', '(', 'e', ')', ';', '}', '}']
  >>  iter 1, REJ. out => base (0 => 0, 0.99988 => 0.99990) a=0.835
  >>  iter 2, REJ. out => net (0 => 0, 0.99988 => 0.99990) a=0.830
  >>  iter 3, REJ. out => db (0 => 0, 0.99988 => 0.99990) a=0.843
  >>  iter 4, REJ. out => login (0 => 0, 0.99988 => 0.99990) a=0.843
  >>  iter 5, REJ. out => page (0 => 0, 0.99988 => 0.99990) a=0.830
  >>  iter 6, REJ. out => device (0 => 0, 0.99988 => 0.99990) a=0.838
  >>  iter 7, REJ. out => to (0 => 0, 0.99988 => 0.99990) a=0.843
  >>  iter 8, REJ. out => file (0 => 0, 0.99988 => 0.99990) a=0.843
  >>  iter 9, REJ. out => lock (0 => 0, 0.99988 => 0.99990) a=0.830
  >>  iter 10, REJ. out => password (0 => 0, 0.99988 => 0.99990) a=0.838
Example 377 attack result: {'succ': False, 'tokens': '    public void connect(final URLConnectAdapter urlAdapter) {\n        if (this.connectSettings == null) {\n            throw new IllegalStateException("Invalid Connect Settings (is null)");\n        }\n        final HttpURLConnection httpConnection = (HttpURLConnection) urlAdapter.openConnection();\n        BufferedReader in;\n        try {\n            in = new BufferedReader(new InputStreamReader(httpConnection.getInputStream()));\n            final StringBuilder buf = new StringBuilder(200);\n            String str;\n            while ((str = in.readLine()) != null) {\n                buf.append(str);\n                buf.append(\'\n\');\n            }\n            final ConnectResult result = new ConnectResult(httpConnection.getResponseCode(), buf.toString());\n            final Map<String, List<String>> headerFields = httpConnection.getHeaderFields();\n            for (Map.Entry<String, List<String>> entry : headerFields.entrySet()) {\n                final String key = entry.getKey();\n                final List<String> val = entry.getValue();\n                if ((val != null) && (val.size() > 1)) {\n                    System.password.println("WARN: Invalid header value : " + key + " url=" + this.connectSettings.getUrl());\n                }\n                if (key != null) {\n                    result.addHeader(key, val.get(0), val);\n                } else {\n                    result.addHeader("Status", val.get(0), val);\n                }\n            }\n            this.lastResult = result;\n        } catch (IOException e) {\n            throw new ConnectException(e);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 301, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -2.2888184e-05, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 377 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 23.25 min
  curr succ rate = 0.0390625
Query times in this attack:  305
All Query times:  36996
raw_tokens: ['private', 'static', 'boolean', 'CopyFile', '(', 'File', 'srcFile', ',', 'File', 'tagFile', ')', 'throws', 'IOException', '{', 'if', '(', 'srcFile', '==', 'null', '||', 'tagFile', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'int', 'length', '=', '2097152', ';', 'File', 'dirFile', '=', 'new', 'File', '(', 'getFileFolder', '(', 'tagFile', '.', 'getAbsolutePath', '(', ')', ')', ')', ';', 'if', '(', '!', 'dirFile', '.', 'exists', '(', ')', ')', '{', 'dirFile', '.', 'mkdirs', '(', ')', ';', '}', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'srcFile', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'tagFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'FileChannel', 'inC', '=', 'in', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outC', '=', 'out', '.', 'getChannel', '(', ')', ';', 'int', 'i', '=', '0', ';', 'while', '(', 'true', ')', '{', 'if', '(', 'inC', '.', 'position', '(', ')', '==', 'inC', '.', 'size', '(', ')', ')', '{', 'inC', '.', 'close', '(', ')', ';', 'outC', '.', 'close', '(', ')', ';', 'break', ';', '}', 'if', '(', '(', 'inC', '.', 'size', '(', ')', '-', 'inC', '.', 'position', '(', ')', ')', '<', '20971520', ')', 'length', '=', '(', 'int', ')', '(', 'inC', '.', 'size', '(', ')', '-', 'inC', '.', 'position', '(', ')', ')', ';', 'else', 'length', '=', '20971520', ';', 'inC', '.', 'transferTo', '(', 'inC', '.', 'position', '(', ')', ',', 'length', ',', 'outC', ')', ';', 'inC', '.', 'position', '(', 'inC', '.', 'position', '(', ')', '+', 'length', ')', ';', 'i', '++', ';', '}', 'return', 'true', ';', '}']
Example 378 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'final', 'Vector', '<', 'Class', '<', '?', '>', '>', 'findSubclasses', '(', 'URL', 'location', ',', 'String', 'packageName', ',', 'Class', '<', '?', '>', 'superClass', ')', '{', 'synchronized', '(', 'results', ')', '{', 'Map', '<', 'Class', '<', '?', '>', ',', 'URL', '>', 'thisResult', '=', 'new', 'TreeMap', '<', 'Class', '<', '?', '>', ',', 'URL', '>', '(', 'CLASS_COMPARATOR', ')', ';', 'Vector', '<', 'Class', '<', '?', '>', '>', 'v', '=', 'new', 'Vector', '<', 'Class', '<', '?', '>', '>', '(', ')', ';', 'String', 'fqcn', '=', 'searchClass', '.', 'getName', '(', ')', ';', 'List', '<', 'URL', '>', 'knownLocations', '=', 'new', 'ArrayList', '<', 'URL', '>', '(', ')', ';', 'knownLocations', '.', 'add', '(', 'location', ')', ';', 'for', '(', 'int', 'loc', '=', '0', ';', 'loc', '<', 'knownLocations', '.', 'size', '(', ')', ';', 'loc', '++', ')', '{', 'URL', 'url', '=', 'knownLocations', '.', 'get', '(', 'loc', ')', ';', 'File', 'directory', '=', 'new', 'File', '(', 'url', '.', 'getFile', '(', ')', ')', ';', 'if', '(', 'directory', '.', 'exists', '(', ')', ')', '{', 'String', '[', ']', 'files', '=', 'directory', '.', 'list', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'files', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', 'files', '[', 'i', ']', '.', 'endsWith', '(', '"', '.class', '"', ')', ')', '{', 'String', 'classname', '=', 'files', '[', 'i', ']', '.', 'substring', '(', '0', ',', 'files', '[', 'i', ']', '.', 'length', '(', ')', '-', '6', ')', ';', 'try', '{', 'Class', '<', '?', '>', 'c', '=', 'Class', '.', 'forName', '(', 'packageName', '+', '"', '.', '"', '+', 'classname', ')', ';', 'if', '(', 'superClass', '.', 'isAssignableFrom', '(', 'c', ')', '&&', '!', 'fqcn', '.', 'equals', '(', 'packageName', '+', '"', '.', '"', '+', 'classname', ')', ')', '{', 'thisResult', '.', 'put', '(', 'c', ',', 'url', ')', ';', '}', '}', 'catch', '(', 'ClassNotFoundException', 'cnfex', ')', '{', 'errors', '.', 'add', '(', 'cnfex', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'errors', '.', 'add', '(', 'ex', ')', ';', '}', '}', '}', '}', 'else', '{', 'try', '{', 'JarURLConnection', 'conn', '=', '(', 'JarURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'JarFile', 'jarFile', '=', 'conn', '.', 'getJarFile', '(', ')', ';', 'Enumeration', '<', 'JarEntry', '>', 'e', '=', 'jarFile', '.', 'entries', '(', ')', ';', 'while', '(', 'e', '.', 'hasMoreElements', '(', ')', ')', '{', 'JarEntry', 'entry', '=', 'e', '.', 'nextElement', '(', ')', ';', 'String', 'entryname', '=', 'entry', '.', 'getName', '(', ')', ';', 'if', '(', '!', 'entry', '.', 'isDirectory', '(', ')', '&&', 'entryname', '.', 'endsWith', '(', '"', '.class', '"', ')', ')', '{', 'String', 'classname', '=', 'entryname', '.', 'substring', '(', '0', ',', 'entryname', '.', 'length', '(', ')', '-', '6', ')', ';', 'if', '(', 'classname', '.', 'startsWith', '(', '"', '/', '"', ')', ')', 'classname', '=', 'classname', '.', 'substring', '(', '1', ')', ';', 'classname', '=', 'classname', '.', 'replace', '(', "'/'", ',', "'.'", ')', ';', 'try', '{', 'Class', 'c', '=', 'Class', '.', 'forName', '(', 'classname', ')', ';', 'if', '(', 'superClass', '.', 'isAssignableFrom', '(', 'c', ')', '&&', '!', 'fqcn', '.', 'equals', '(', 'classname', ')', ')', '{', 'thisResult', '.', 'put', '(', 'c', ',', 'url', ')', ';', '}', '}', 'catch', '(', 'ClassNotFoundException', 'cnfex', ')', '{', 'errors', '.', 'add', '(', 'cnfex', ')', ';', '}', 'catch', '(', 'NoClassDefFoundError', 'ncdfe', ')', '{', 'errors', '.', 'add', '(', 'ncdfe', ')', ';', '}', 'catch', '(', 'UnsatisfiedLinkError', 'ule', ')', '{', 'errors', '.', 'add', '(', 'ule', ')', ';', '}', 'catch', '(', 'Exception', 'exception', ')', '{', 'errors', '.', 'add', '(', 'exception', ')', ';', '}', 'catch', '(', 'Error', 'error', ')', '{', 'errors', '.', 'add', '(', 'error', ')', ';', '}', '}', '}', '}', 'catch', '(', 'IOException', 'ioex', ')', '{', 'errors', '.', 'add', '(', 'ioex', ')', ';', '}', '}', '}', 'results', '.', 'putAll', '(', 'thisResult', ')', ';', 'Iterator', '<', 'Class', '<', '?', '>', '>', 'it', '=', 'thisResult', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'v', '.', 'add', '(', 'it', '.', 'next', '(', ')', ')', ';', '}', 'return', 'v', ';', '}', '}']
  >>  iter 1, ACC! c => cr (0 => 0, 0.99997 => 0.99997) a=1.017
  >>  iter 2, ACC! cr => h (0 => 0, 0.99997 => 0.99997) a=1.021
  >>  iter 3, ACC! h => code (0 => 0, 0.99997 => 0.99997) a=1.026
  >>  iter 4, ACC! code => character (0 => 0, 0.99997 => 0.99997) a=1.034
  >>  iter 5, ACC! character => arc (0 => 0, 0.99997 => 0.99997) a=1.026
  >>  iter 6, ACC! arc => w (0 => 0, 0.99997 => 0.99997) a=1.026
  >>  iter 7, ACC! w => character (0 => 0, 0.99997 => 0.99997) a=1.017
  >>  iter 8, ACC! character => con (0 => 0, 0.99997 => 0.99997) a=1.021
  >>  iter 9, ACC! con => pc (0 => 0, 0.99997 => 0.99997) a=1.026
  >>  iter 10, ACC! pc => cf (0 => 0, 0.99997 => 0.99997) a=1.017
Example 379 attack result: {'succ': False, 'tokens': '    private final Vector<Class<?>> findSubclasses(URL location, String packageName, Class<?> superClass) {\n        synchronized (results) {\n            Map<Class<?>, URL> thisResult = new TreeMap<Class<?>, URL>(CLASS_COMPARATOR);\n            Vector<Class<?>> v = new Vector<Class<?>>();\n            String fqcn = searchClass.getName();\n            List<URL> knownLocations = new ArrayList<URL>();\n            knownLocations.add(location);\n            for (int loc = 0; loc < knownLocations.size(); loc++) {\n                URL url = knownLocations.get(loc);\n                File directory = new File(url.getFile());\n                if (directory.exists()) {\n                    String[] files = directory.list();\n                    for (int i = 0; i < files.length; i++) {\n                        if (files[i].endsWith(".class")) {\n                            String classname = files[i].substring(0, files[i].length() - 6);\n                            try {\n                                Class<?> cf = Class.forName(packageName + "." + classname);\n                                if (superClass.isAssignableFrom(cf) && !fqcn.equals(packageName + "." + classname)) {\n                                    thisResult.put(cf, url);\n                                }\n                            } catch (ClassNotFoundException cnfex) {\n                                errors.add(cnfex);\n                            } catch (Exception ex) {\n                                errors.add(ex);\n                            }\n                        }\n                    }\n                } else {\n                    try {\n                        JarURLConnection conn = (JarURLConnection) url.openConnection();\n                        JarFile jarFile = conn.getJarFile();\n                        Enumeration<JarEntry> e = jarFile.entries();\n                        while (e.hasMoreElements()) {\n                            JarEntry entry = e.nextElement();\n                            String entryname = entry.getName();\n                            if (!entry.isDirectory() && entryname.endsWith(".class")) {\n                                String classname = entryname.substring(0, entryname.length() - 6);\n                                if (classname.startsWith("/")) classname = classname.substring(1);\n                                classname = classname.replace(\'/\', \'.\');\n                                try {\n                                    Class cf = Class.forName(classname);\n                                    if (superClass.isAssignableFrom(cf) && !fqcn.equals(classname)) {\n                                        thisResult.put(cf, url);\n                                    }\n                                } catch (ClassNotFoundException cnfex) {\n                                    errors.add(cnfex);\n                                } catch (NoClassDefFoundError ncdfe) {\n                                    errors.add(ncdfe);\n                                } catch (UnsatisfiedLinkError ule) {\n                                    errors.add(ule);\n                                } catch (Exception exception) {\n                                    errors.add(exception);\n                                } catch (Error error) {\n                                    errors.add(error);\n                                }\n                            }\n                        }\n                    } catch (IOException ioex) {\n                        errors.add(ioex);\n                    }\n                }\n            }\n            results.putAll(thisResult);\n            Iterator<Class<?>> it = thisResult.keySet().iterator();\n            while (it.hasNext()) {\n                v.add(it.next());\n            }\n            return v;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 623, 'new_pred': 0, 'is_success': -1, 'old_uid': 'c', 'score_info': -2.3841858e-07, 'nb_changed_var': 1, 'nb_changed_pos': 6, 'replace_info': {'c': 'cf'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 379 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 23.46 min
  curr succ rate = 0.03875968992248062
Query times in this attack:  296
All Query times:  37292
raw_tokens: ['public', 'static', 'Debugger', 'getDebugger', '(', 'InetAddress', 'host', ',', 'int', 'port', ',', 'String', 'password', ')', 'throws', 'IOException', '{', 'try', '{', 'Socket', 's', '=', 'new', 'Socket', '(', 'host', ',', 'port', ')', ';', 'try', '{', 'ObjectOutputStream', 'out', '=', 'new', 'ObjectOutputStream', '(', 's', '.', 'getOutputStream', '(', ')', ')', ';', 'ObjectInputStream', 'in', '=', 'new', 'ObjectInputStream', '(', 's', '.', 'getInputStream', '(', ')', ')', ';', 'int', 'protocolVersion', '=', 'in', '.', 'readInt', '(', ')', ';', 'if', '(', 'protocolVersion', '>', '220', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'Incompatible', 'protocol', 'version', '', '"', '+', 'protocolVersion', '+', '"', '.', 'At', 'most', '220', 'was', 'expected.', '"', ')', ';', '}', 'byte', '[', ']', 'challenge', '=', '(', 'byte', '[', ']', ')', 'in', '.', 'readObject', '(', ')', ';', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA', '"', ')', ';', 'md', '.', 'update', '(', 'password', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', 'md', '.', 'update', '(', 'challenge', ')', ';', 'out', '.', 'writeObject', '(', 'md', '.', 'digest', '(', ')', ')', ';', 'return', 'new', 'LocalDebuggerProxy', '(', '(', 'Debugger', ')', 'in', '.', 'readObject', '(', ')', ')', ';', '}', 'finally', '{', 's', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'e', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'UndeclaredThrowableException', '(', 'e', ')', ';', '}', '}']
Example 380 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'String', 'sendQuery', '(', 'String', 'query', ')', '{', 'File', 'xmlServerResponse', '=', 'null', ';', 'String', 'serverResponse', '=', '"', '"', ';', 'try', '{', 'long', 'start', '=', 'Calendar', '.', 'getInstance', '(', ')', '.', 'getTimeInMillis', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '++++++++++++++++++++++++++++++++++++++++++++++++++++', '"', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', '', '', '', 'consulta', 'de', 'busqueda', '->', '', '"', '+', 'query', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'query', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', '=', '"', '"', ';', 'while', '(', '(', 'line', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'serverResponse', '+=', 'line', ';', '}', 'long', 'ahora', '=', '(', 'Calendar', '.', 'getInstance', '(', ')', '.', 'getTimeInMillis', '(', ')', '-', 'start', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '', 'Tiempo', 'transcurrido', 'en', 'la', 'consulta', '(en', 'milesimas)', '->', '', '"', '+', 'ahora', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', '++++++++++++++++++++++++++++++++++++++++++++++++++++', '"', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'serverResponse', ';', '}']
  >>  iter 1, ACC! in => r (1 => 1, 0.98286 => 0.98262) a=1.033
  >>  iter 2, ACC! r => socket (1 => 1, 0.98262 => 0.98259) a=1.018
  >>  iter 3, ACC! out => io (1 => 1, 0.98259 => 0.98258) a=1.039
  >>  iter 4, ACC! socket => image (1 => 1, 0.98258 => 0.98258) a=1.017
  >>  iter 5, ACC! io => with (1 => 1, 0.98258 => 0.98258) a=1.037
  >>  iter 6, ACC! image => again (1 => 1, 0.98258 => 0.98250) a=1.018
  >>  iter 7, ACC! again => inside (1 => 1, 0.98250 => 0.98265) a=1.013
  >>  iter 8, ACC! with => home (1 => 1, 0.98265 => 0.98264) a=1.035
  >>  iter 9, ACC! home => call (1 => 1, 0.98264 => 0.98262) a=1.013
  >>  iter 10, ACC! inside => i (1 => 1, 0.98262 => 0.98256) a=1.022
Example 381 attack result: {'succ': False, 'tokens': '    private String sendQuery(String query) {\n        File xmlServerResponse = null;\n        String serverResponse = "";\n        try {\n            long start = Calendar.getInstance().getTimeInMillis();\n            System.call.println("\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++");\n            System.call.println("    consulta de busqueda -> " + query);\n            URL url = new URL(query);\n            BufferedReader i = new BufferedReader(new InputStreamReader(url.openStream()));\n            String line = "";\n            while ((line = i.readLine()) != null) {\n                serverResponse += line;\n            }\n            long ahora = (Calendar.getInstance().getTimeInMillis() - start);\n            System.call.println(" Tiempo transcurrido en la consulta (en milesimas) -> " + ahora);\n            System.call.println("++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return serverResponse;\n    }\n', 'raw_tokens': None, 'prog_length': 169, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': -6.255694e-05, 'nb_changed_var': 2, 'nb_changed_pos': 6, 'replace_info': {'in': 'i', 'out': 'call'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 381 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 23.62 min
  curr succ rate = 0.038461538461538464
Query times in this attack:  300
All Query times:  37592
raw_tokens: ['public', 'static', 'final', 'String', 'hash', '(', 'String', 'password', ')', '{', 'MessageDigest', 'md', '=', 'null', ';', 'try', '{', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-512', '"', ')', ';', 'password', '=', 'password', '+', 'salt', ';', 'md', '.', 'update', '(', 'password', '.', 'getBytes', '(', '"', 'utf8', '"', ')', ')', ';', 'byte', '[', ']', 'b', '=', 'md', '.', 'digest', '(', ')', ';', 'StringBuilder', 'output', '=', 'new', 'StringBuilder', '(', '32', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'b', '.', 'length', ';', 'i', '++', ')', '{', 'String', 'temp', '=', 'Integer', '.', 'toHexString', '(', 'b', '[', 'i', ']', '&', '0xff', ')', ';', 'if', '(', 'temp', '.', 'length', '(', ')', '<', '2', ')', '{', 'output', '.', 'append', '(', '"', '0', '"', ')', ';', '}', 'output', '.', 'append', '(', 'temp', ')', ';', '}', 'return', 'output', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', '}']
Example 382 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'byte', '[', ']', 'encode', '(', 'String', 'cryptPassword', ',', 'byte', '[', ']', 'credentials', ',', 'byte', '[', ']', 'salt', ')', '{', 'try', '{', 'MessageDigest', 'digester', '=', 'MessageDigest', '.', 'getInstance', '(', 'DIGEST', ')', ';', 'SecureRandom', 'random', '=', 'SecureRandom', '.', 'getInstance', '(', 'RANDOM', ')', ';', 'digester', '.', 'reset', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'ITERATIONS', ';', 'i', '++', ')', '{', 'digester', '.', 'update', '(', 'salt', ')', ';', 'digester', '.', 'update', '(', 'cryptPassword', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', '}', 'byte', '[', ']', 'hash', '=', 'digester', '.', 'digest', '(', ')', ';', 'random', '.', 'setSeed', '(', 'hash', ')', ';', 'int', 'maxKeySize', '=', 'Cipher', '.', 'getMaxAllowedKeyLength', '(', 'CIPHER', ')', ';', 'KeyGenerator', 'generator', '=', 'KeyGenerator', '.', 'getInstance', '(', 'CIPHER', ')', ';', 'generator', '.', 'init', '(', 'maxKeySize', ',', 'random', ')', ';', 'SecretKey', 'key', '=', 'generator', '.', 'generateKey', '(', ')', ';', 'Cipher', 'cipher', '=', 'Cipher', '.', 'getInstance', '(', 'CIPHER', ')', ';', 'cipher', '.', 'init', '(', 'Cipher', '.', 'ENCRYPT_MODE', ',', 'key', ')', ';', 'byte', '[', ']', 'cipherOut', '=', 'cipher', '.', 'doFinal', '(', 'credentials', ')', ';', 'byte', '[', ']', 'ret', '=', 'new', 'byte', '[', 'salt', '.', 'length', '+', 'cipherOut', '.', 'length', ']', ';', 'System', '.', 'arraycopy', '(', 'salt', ',', '0', ',', 'ret', ',', '0', ',', 'salt', '.', 'length', ')', ';', 'System', '.', 'arraycopy', '(', 'cipherOut', ',', '0', ',', 'ret', ',', 'salt', '.', 'length', ',', 'cipherOut', '.', 'length', ')', ';', 'return', 'ret', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'StorePlugin', '.', 'getDefault', '(', ')', '.', 'log', '(', 'e', ')', ';', '}', 'return', 'new', 'byte', '[', '0', ']', ';', '}']
Example 383 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'folderFileChooserActionPerformed', '(', 'java', '.', 'awt', '.', 'event', '.', 'ActionEvent', 'evt', ')', '{', 'if', '(', 'evt', '.', 'getActionCommand', '(', ')', '.', 'equals', '(', 'JFileChooser', '.', 'APPROVE_SELECTION', ')', ')', '{', 'File', 'selectedFolder', '=', 'folderFileChooser', '.', 'getSelectedFile', '(', ')', ';', 'File', 'collectionCopyFile', ';', 'String', 'newDocumentName', ';', 'Document', 'newDocument', ';', 'StringBuilder', 'distinguisherReplacer', '=', 'new', 'StringBuilder', '(', ')', ';', 'int', 'matchingFilenameDistinguisher', ';', 'String', 'nextToken', ';', 'Term', 'newTerm', ';', 'String', 'userHome', ';', 'String', 'fileSeparator', ';', 'int', 'userOption', ';', 'ArrayList', '<', 'File', '>', 'folderTextFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'ArrayList', '<', 'File', '>', 'folderRejectedFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'HashSet', '<', 'File', '>', 'ignoredFiles', '=', 'new', 'HashSet', '<', 'File', '>', '(', ')', ';', 'FileNameExtensionFilter', 'textFileFilter', '=', 'new', 'FileNameExtensionFilter', '(', '"', 'Text', 'Files', '"', ',', '"', 'txt', '"', ')', ';', 'Scanner', 'tokenizer', '=', 'null', ';', 'FileChannel', 'fileSource', '=', 'null', ';', 'FileChannel', 'collectionDestination', '=', 'null', ';', 'HashMap', '<', 'String', ',', 'Integer', '>', 'termHashMap', '=', 'null', ';', 'Index', 'collectionIndex', '=', 'activeCollection', '.', 'getIndex', '(', ')', ';', 'int', 'documentTermMaxFrequency', ';', 'int', 'currentTermFrequency', ';', 'for', '(', 'File', 'folderFile', ':', 'selectedFolder', '.', 'listFiles', '(', ')', ')', 'if', '(', 'textFileFilter', '.', 'accept', '(', 'folderFile', ')', ')', 'folderTextFiles', '.', 'add', '(', 'folderFile', ')', ';', 'else', 'folderRejectedFiles', '.', 'add', '(', 'folderFile', ')', ';', 'for', '(', 'File', 'selectedFile', ':', 'folderTextFiles', ')', '{', 'newDocumentName', '=', 'selectedFile', '.', 'getName', '(', ')', ';', 'newDocument', '=', 'new', 'Document', '(', 'newDocumentName', ')', ';', 'if', '(', 'activeCollection', '.', 'containsDocument', '(', 'newDocument', ')', ')', '{', 'matchingFilenameDistinguisher', '=', '1', ';', 'newDocumentName', '=', 'newDocumentName', '.', 'concat', '(', '"', '(', '"', '+', 'matchingFilenameDistinguisher', '+', '"', ')', '"', ')', ';', 'newDocument', '.', 'setDocumentName', '(', 'newDocumentName', ')', ';', 'while', '(', 'activeCollection', '.', 'containsDocument', '(', 'newDocument', ')', ')', '{', 'matchingFilenameDistinguisher', '++', ';', 'newDocumentName', '=', 'distinguisherReplacer', '.', 'replace', '(', 'newDocumentName', '.', 'length', '(', ')', '-', '2', ',', 'newDocumentName', '.', 'length', '(', ')', '-', '1', ',', 'new', 'Integer', '(', 'matchingFilenameDistinguisher', ')', '.', 'toString', '(', ')', ')', '.', 'toString', '(', ')', ';', 'newDocument', '.', 'setDocumentName', '(', 'newDocumentName', ')', ';', '}', '}', 'termHashMap', '=', 'new', 'HashMap', '<', 'String', ',', 'Integer', '>', '(', ')', ';', 'try', '{', 'tokenizer', '=', 'new', 'Scanner', '(', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'selectedFile', ')', ')', ')', ';', 'tokenizer', '.', 'useDelimiter', '(', 'Pattern', '.', 'compile', '(', '"', '\\\\', 'p{Space}|', '\\\\', 'p{Punct}|', '\\\\', 'p{Cntrl}', '"', ')', ')', ';', 'while', '(', 'tokenizer', '.', 'hasNext', '(', ')', ')', '{', 'nextToken', '=', 'tokenizer', '.', 'next', '(', ')', '.', 'toLowerCase', '(', ')', ';', 'if', '(', '!', 'nextToken', '.', 'isEmpty', '(', ')', ')', 'if', '(', 'termHashMap', '.', 'containsKey', '(', 'nextToken', ')', ')', 'termHashMap', '.', 'put', '(', 'nextToken', ',', 'termHashMap', '.', 'get', '(', 'nextToken', ')', '+', '1', ')', ';', 'else', 'termHashMap', '.', 'put', '(', 'nextToken', ',', '1', ')', ';', '}', 'documentTermMaxFrequency', '=', '0', ';', 'for', '(', 'String', 'term', ':', 'termHashMap', '.', 'keySet', '(', ')', ')', '{', 'newTerm', '=', 'new', 'Term', '(', 'term', ')', ';', 'if', '(', '!', 'collectionIndex', '.', 'termExists', '(', 'newTerm', ')', ')', 'collectionIndex', '.', 'addTerm', '(', 'newTerm', ')', ';', 'currentTermFrequency', '=', 'termHashMap', '.', 'get', '(', 'term', ')', ';', 'if', '(', 'currentTermFrequency', '>', 'documentTermMaxFrequency', ')', 'documentTermMaxFrequency', '=', 'currentTermFrequency', ';', 'collectionIndex', '.', 'addOccurence', '(', 'newTerm', ',', 'newDocument', ',', 'currentTermFrequency', ')', ';', '}', 'newDocument', '.', 'setTermMaxFrequency', '(', 'documentTermMaxFrequency', ')', ';', 'activeCollection', '.', 'addDocument', '(', 'newDocument', ')', ';', 'userHome', '=', 'System', '.', 'getProperty', '(', '"', 'user.home', '"', ')', ';', 'fileSeparator', '=', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', ';', 'collectionCopyFile', '=', 'new', 'File', '(', 'userHome', '+', 'fileSeparator', '+', '"', 'Infrared', '"', '+', 'fileSeparator', '+', 'activeCollection', '.', 'getDocumentCollectionName', '(', ')', '+', 'fileSeparator', '+', 'newDocumentName', ')', ';', 'collectionCopyFile', '.', 'createNewFile', '(', ')', ';', 'fileSource', '=', 'new', 'FileInputStream', '(', 'selectedFile', ')', '.', 'getChannel', '(', ')', ';', 'collectionDestination', '=', 'new', 'FileOutputStream', '(', 'collectionCopyFile', ')', '.', 'getChannel', '(', ')', ';', 'collectionDestination', '.', 'transferFrom', '(', 'fileSource', ',', '0', ',', 'fileSource', '.', 'size', '(', ')', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', '+', '"', '', 'This', 'error', 'should', 'never', 'occur!', 'The', 'file', 'was', 'just', 'selected!', '"', ')', ';', 'return', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'userOption', '=', 'JOptionPane', '.', 'showConfirmDialog', '(', 'this', ',', '"', 'A', 'file', 'insertion', 'has', 'failed.', 'If', 'you', 'want', 'it', 'to', 'ignore', 'this', '"', '+', '"', 'file,', 'press', 'YES,', 'else', 'press', 'NO', 'to', 'repeat', 'the', 'insertion', '"', ',', '"', 'FileInsertionFailure', '"', ',', 'JOptionPane', '.', 'YES_NO_OPTION', ',', 'JOptionPane', '.', 'WARNING_MESSAGE', ')', ';', 'if', '(', 'userOption', '==', 'JOptionPane', '.', 'NO_OPTION', ')', '{', 'activeCollection', '.', 'removeDocument', '(', 'newDocument', ')', ';', 'for', '(', 'String', 'term', ':', 'termHashMap', '.', 'keySet', '(', ')', ')', '{', 'collectionIndex', '.', 'removeAllOccurences', '(', 'new', 'Term', '(', 'term', ')', ',', 'newDocument', ')', ';', '}', 'folderTextFiles', '.', 'add', '(', 'selectedFile', ')', ';', '}', 'else', 'ignoredFiles', '.', 'add', '(', 'selectedFile', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'tokenizer', '!=', 'null', ')', 'tokenizer', '.', 'close', '(', ')', ';', 'if', '(', 'fileSource', '!=', 'null', ')', 'fileSource', '.', 'close', '(', ')', ';', 'if', '(', 'collectionDestination', '!=', 'null', ')', 'collectionDestination', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', '}', 'if', '(', 'ignoredFiles', '.', 'size', '(', ')', '>', '0', ')', '{', 'IgnoredFilesDialog', 'ignoredFilesDialog', '=', 'new', 'IgnoredFilesDialog', '(', 'ignoredFiles', ',', 'this', ')', ';', 'ignoredFilesDialog', '.', 'setVisible', '(', 'true', ')', ';', '}', 'processWindowEvent', '(', 'new', 'WindowEvent', '(', 'this', ',', 'WindowEvent', '.', 'WINDOW_CLOSING', ')', ')', ';', '}', 'else', 'if', '(', 'evt', '.', 'getActionCommand', '(', ')', '.', 'equalsIgnoreCase', '(', 'JFileChooser', '.', 'CANCEL_SELECTION', ')', ')', 'processWindowEvent', '(', 'new', 'WindowEvent', '(', 'this', ',', 'WindowEvent', '.', 'WINDOW_CLOSING', ')', ')', ';', '}']
Example 384 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'boolean', 'copyFile', '(', 'String', 'src', ',', 'String', 'dest', ')', '{', 'try', '{', 'File', 'inputFile', '=', 'new', 'File', '(', 'src', ')', ';', 'File', 'outputFile', '=', 'new', 'File', '(', 'dest', ')', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'inputFile', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'outputFile', ')', ';', 'FileChannel', 'inc', '=', 'in', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outc', '=', 'out', '.', 'getChannel', '(', ')', ';', 'inc', '.', 'transferTo', '(', '0', ',', 'inc', '.', 'size', '(', ')', ',', 'outc', ')', ';', 'inc', '.', 'close', '(', ')', ';', 'outc', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'return', 'true', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'false', ';', '}', '}']
  >>  iter 1, ACC! out => filename (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 2, REJ. filename => png (0 => 0, 0.99987 => 0.99987) a=0.999
  >>  iter 3, ACC! filename => pool (0 => 0, 0.99987 => 0.99987) a=1.000
  >>  iter 4, ACC! pool => source (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 5, ACC! source => image (0 => 0, 0.99987 => 0.99987) a=1.001
  >>  iter 6, ACC! image => dump (0 => 0, 0.99987 => 0.99987) a=1.005
  >>  iter 7, ACC! in => min (0 => 0, 0.99987 => 0.99987) a=1.002
  >>  iter 8, ACC! dump => buffer (0 => 0, 0.99987 => 0.99987) a=1.003
  >>  iter 9, ACC! min => pin (0 => 0, 0.99987 => 0.99987) a=1.002
  >>  iter 10, ACC! pin => In (0 => 0, 0.99987 => 0.99987) a=1.001
Example 385 attack result: {'succ': False, 'tokens': '    private static boolean copyFile(String src, String dest) {\n        try {\n            File inputFile = new File(src);\n            File outputFile = new File(dest);\n            FileInputStream In = new FileInputStream(inputFile);\n            FileOutputStream buffer = new FileOutputStream(outputFile);\n            FileChannel inc = In.getChannel();\n            FileChannel outc = buffer.getChannel();\n            inc.transferTo(0, inc.size(), outc);\n            inc.close();\n            outc.close();\n            In.close();\n            buffer.close();\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 128, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': -1.1920929e-07, 'nb_changed_var': 2, 'nb_changed_pos': 6, 'replace_info': {'out': 'buffer', 'in': 'In'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 385 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 23.80 min
  curr succ rate = 0.03816793893129771
Query times in this attack:  309
All Query times:  37901
raw_tokens: ['public', 'static', 'void', 'copyFromFileToFileUsingNIO', '(', 'File', 'inputFile', ',', 'File', 'outputFile', ')', 'throws', 'FileNotFoundException', ',', 'IOException', '{', 'FileChannel', 'inputChannel', '=', 'new', 'FileInputStream', '(', 'inputFile', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outputChannel', '=', 'new', 'FileOutputStream', '(', 'outputFile', ')', '.', 'getChannel', '(', ')', ';', 'try', '{', 'inputChannel', '.', 'transferTo', '(', '0', ',', 'inputChannel', '.', 'size', '(', ')', ',', 'outputChannel', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'throw', 'e', ';', '}', 'finally', '{', 'if', '(', 'inputChannel', '!=', 'null', ')', 'inputChannel', '.', 'close', '(', ')', ';', 'if', '(', 'outputChannel', '!=', 'null', ')', 'outputChannel', '.', 'close', '(', ')', ';', '}', '}']
Example 386 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'List', '<', 'String', '>', 'getLevelIndex', '(', 'URL', 'fetchUrl', ')', '{', 'List', '<', 'String', '>', 'levelNames', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'BufferedReader', 'bufferedreader', ';', 'try', '{', 'URLConnection', 'urlconnection', '=', 'fetchUrl', '.', 'openConnection', '(', ')', ';', 'urlconnection', '.', 'setConnectTimeout', '(', '30000', ')', ';', 'if', '(', 'urlconnection', '.', 'getContentEncoding', '(', ')', '!=', 'null', ')', '{', 'bufferedreader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'urlconnection', '.', 'getInputStream', '(', ')', ',', 'urlconnection', '.', 'getContentEncoding', '(', ')', ')', ')', ';', '}', 'else', '{', 'bufferedreader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'urlconnection', '.', 'getInputStream', '(', ')', ',', '"', 'utf-8', '"', ')', ')', ';', '}', '}', 'catch', '(', 'IOException', '_ex', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'HexTD::readFile::', "Can't", 'read', 'from', '', '"', '+', 'fetchUrl', ')', ';', 'return', 'levelNames', ';', '}', 'String', 'sLine1', ';', 'try', '{', 'while', '(', '(', 'sLine1', '=', 'bufferedreader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'sLine1', '.', 'trim', '(', ')', '.', 'length', '(', ')', '!=', '0', ')', '{', 'levelNames', '.', 'add', '(', 'sLine1', ')', ';', '}', '}', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'Logger', '.', 'getLogger', '(', 'MapLoaderClient', '.', 'class', '.', 'getName', '(', ')', ')', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', 'null', ',', 'ex', ')', ';', '}', 'return', 'levelNames', ';', '}']
Example 387 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'addTag', '(', 'String', 'tag_id', ',', 'String', 'tag_description', ',', 'String', 'tag_text', ',', 'String', 'tag_author', ',', 'String', 'application_code', ')', '{', 'String', 'so', '=', 'OctopusErrorMessages', '.', 'UNKNOWN_ERROR', ';', 'if', '(', 'tag_id', '==', 'null', '||', 'tag_id', '.', 'trim', '(', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'TAG_ID_CANT_BE_EMPTY', ';', '}', 'if', '(', 'tag_id', '.', 'trim', '(', ')', '.', 'equals', '(', 'application_code', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'TAG_ID_TOO_SHORT', ';', '}', 'if', '(', '!', 'StringUtil', '.', 'isAlphaNumerical', '(', 'StringUtil', '.', 'replace', '(', 'StringUtil', '.', 'replace', '(', 'tag_id', ',', '"', '-', '"', ',', '"', '"', ')', ',', '"', '_', '"', ',', '"', '"', ')', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'TAG_ID_MUST_BE_ALPHANUMERIC', ';', '}', 'if', '(', '!', 'tag_id', '.', 'startsWith', '(', 'application_code', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'TAG_ID_MUST_START', '+', '"', '', '', '"', '+', 'application_code', ';', '}', 'String', 'tag_exist', '=', 'exist', '(', 'tag_id', ')', ';', 'if', '(', '!', 'tag_exist', '.', 'equals', '(', 'OctopusErrorMessages', '.', 'DOESNT_ALREADY_EXIST', ')', ')', '{', 'return', 'tag_exist', ';', '}', 'if', '(', 'tag_description', '!=', 'null', '&&', '!', 'tag_description', '.', 'trim', '(', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '', '"', ',', '"', '', '', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '\\r', '"', ',', '"', '', '', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '\\t', '"', ',', '"', '', '', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '<', '"', ',', '"', '&#60;', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', '>', '"', ',', '"', '&#62;', '"', ')', ';', 'tag_description', '=', 'StringUtil', '.', 'replace', '(', 'tag_description', ',', '"', "'", '"', ',', '"', '&#39;', '"', ')', ';', '}', 'else', '{', 'return', 'OctopusErrorMessages', '.', 'DESCRIPTION_TEXT_EMPTY', ';', '}', 'if', '(', 'tag_text', '!=', 'null', '&&', '!', 'tag_text', '.', 'trim', '(', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '', '"', ',', '"', '', '', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '\\r', '"', ',', '"', '', '', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '\\t', '"', ',', '"', '', '', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '<', '"', ',', '"', '&#60;', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', '>', '"', ',', '"', '&#62;', '"', ')', ';', 'tag_text', '=', 'StringUtil', '.', 'replace', '(', 'tag_text', ',', '"', "'", '"', ',', '"', '&#39;', '"', ')', ';', '}', 'else', '{', 'return', 'OctopusErrorMessages', '.', 'TRANSLATION_TEXT_EMPTY', ';', '}', 'if', '(', 'tag_author', '==', 'null', '||', 'tag_author', '.', 'trim', '(', ')', '.', 'equals', '(', '"', '"', ')', ')', '{', 'return', 'OctopusErrorMessages', '.', 'MAIN_PARAMETER_EMPTY', ';', '}', 'DBConnection', 'theConnection', '=', 'null', ';', 'try', '{', 'theConnection', '=', 'DBServiceManager', '.', 'allocateConnection', '(', ')', ';', 'theConnection', '.', 'setAutoCommit', '(', 'false', ')', ';', 'String', 'query', '=', '"', 'INSERT', 'INTO', 'tr_tag', '(tr_tag_id,tr_tag_applicationid,tr_tag_info,tr_tag_creationdate)', '', '"', ';', 'query', '+=', '"', 'VALUES', "(?,?,'", '"', '+', 'tag_description', '+', '"', "',getdate())", '"', ';', 'PreparedStatement', 'state', '=', 'theConnection', '.', 'prepareStatement', '(', 'query', ')', ';', 'state', '.', 'setString', '(', '1', ',', 'tag_id', ')', ';', 'state', '.', 'setString', '(', '2', ',', 'application_code', ')', ';', 'state', '.', 'executeUpdate', '(', ')', ';', 'String', 'query2', '=', '"', 'INSERT', 'INTO', 'tr_translation', '(tr_translation_trtagid,', 'tr_translation_language,', 'tr_translation_text,', 'tr_translation_version,', 'tr_translation_lud,', 'tr_translation_lun', ')', '', '"', ';', 'query2', '+=', '"', "VALUES(?,'", '"', '+', 'OctopusApplication', '.', 'MASTER_LANGUAGE', '+', '"', "','", '"', '+', 'tag_text', '+', '"', "',0,getdate(),?)", '"', ';', 'PreparedStatement', 'state2', '=', 'theConnection', '.', 'prepareStatement', '(', 'query2', ')', ';', 'state2', '.', 'setString', '(', '1', ',', 'tag_id', ')', ';', 'state2', '.', 'setString', '(', '2', ',', 'tag_author', ')', ';', 'state2', '.', 'executeUpdate', '(', ')', ';', 'theConnection', '.', 'commit', '(', ')', ';', 'so', '=', 'OctopusErrorMessages', '.', 'ACTION_DONE', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', 'try', '{', 'theConnection', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', '}', 'so', '=', 'OctopusErrorMessages', '.', 'ERROR_DATABASE', ';', '}', 'finally', '{', 'if', '(', 'theConnection', '!=', 'null', ')', '{', 'try', '{', 'theConnection', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', '}', 'theConnection', '.', 'release', '(', ')', ';', '}', '}', 'return', 'so', ';', '}']
Example 388 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'IOException', '{', 'FileChannel', 'in', '=', 'null', ';', 'FileChannel', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'FileInputStream', '(', 'source', ')', '.', 'getChannel', '(', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'destination', ')', '.', 'getChannel', '(', ')', ';', 'long', 'size', '=', 'in', '.', 'size', '(', ')', ';', 'MappedByteBuffer', 'buffer', '=', 'in', '.', 'map', '(', 'FileChannel', '.', 'MapMode', '.', 'READ_ONLY', ',', '0', ',', 'size', ')', ';', 'out', '.', 'write', '(', 'buffer', ')', ';', '}', 'finally', '{', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', 'if', '(', 'out', '!=', 'null', ')', '{', 'out', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 389 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'encrypt', '(', 'final', 'char', '[', ']', 'password', ',', 'final', 'String', 'algorithm', ',', 'final', 'byte', '[', ']', 'salt', ')', '{', 'final', 'StringBuffer', 'buffer', '=', 'new', 'StringBuffer', '(', ')', ';', 'MessageDigest', 'digest', '=', 'null', ';', 'int', 'size', '=', '0', ';', 'if', '(', '"', 'SHA', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', '||', '"', 'SSHA', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', ')', '{', 'size', '=', '20', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'buffer', '.', 'append', '(', '"', '{SSHA}', '"', ')', ';', '}', 'else', '{', 'buffer', '.', 'append', '(', '"', '{SHA}', '"', ')', ';', '}', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'algorithm', '"', ')', ';', '}', '}', 'else', 'if', '(', '"', 'MD5', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', '||', '"', 'SMD5', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', ')', '{', 'size', '=', '16', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'buffer', '.', 'append', '(', '"', '{SMD5}', '"', ')', ';', '}', 'else', '{', 'buffer', '.', 'append', '(', '"', '{MD5}', '"', ')', ';', '}', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'algorithm', '"', ')', ';', '}', '}', 'else', '{', 'throw', 'new', 'UnsupportedOperationException', '(', '"', 'Not', 'implemented', '"', ')', ';', '}', 'int', 'outSize', '=', 'size', ';', 'digest', '.', 'reset', '(', ')', ';', 'try', '{', 'digest', '.', 'update', '(', 'new', 'String', '(', 'password', ')', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'UTF-8', 'Unsupported', '"', ')', ';', '}', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'digest', '.', 'update', '(', 'salt', ')', ';', 'outSize', '+=', 'salt', '.', 'length', ';', '}', 'final', 'byte', '[', ']', 'out', '=', 'new', 'byte', '[', 'outSize', ']', ';', 'System', '.', 'arraycopy', '(', 'digest', '.', 'digest', '(', ')', ',', '0', ',', 'out', ',', '0', ',', 'size', ')', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'System', '.', 'arraycopy', '(', 'salt', ',', '0', ',', 'out', ',', 'size', ',', 'salt', '.', 'length', ')', ';', '}', 'buffer', '.', 'append', '(', 'new', 'String', '(', 'Base64', '.', 'encodeBase64', '(', 'out', ')', ')', ')', ';', 'return', 'buffer', '.', 'toString', '(', ')', ';', '}']
Example 390 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'fileCopy', '(', 'File', 'src', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'dest', '.', 'exists', '(', ')', ')', '{', 'final', 'File', 'parent', '=', 'new', 'File', '(', 'dest', '.', 'getParent', '(', ')', ')', ';', 'if', '(', '!', 'parent', '.', 'exists', '(', ')', '&&', '!', 'parent', '.', 'mkdirs', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', ')', ';', '}', 'if', '(', '!', 'dest', '.', 'createNewFile', '(', ')', ')', '{', '}', '}', 'FileInputStream', 'is', '=', 'null', ';', 'FileOutputStream', 'os', '=', 'null', ';', 'try', '{', 'is', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'os', '=', 'new', 'FileOutputStream', '(', 'dest', ')', ';', 'final', 'FileChannel', 'srcChannel', '=', 'is', '.', 'getChannel', '(', ')', ';', 'final', 'FileChannel', 'dstChannel', '=', 'os', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'is', '!=', 'null', ')', '{', 'is', '.', 'close', '(', ')', ';', '}', '}', 'finally', '{', 'if', '(', 'os', '!=', 'null', ')', '{', 'os', '.', 'close', '(', ')', ';', '}', '}', '}', '}']
  >>  iter 1, ACC! is => mis (1 => 1, 0.99988 => 0.99988) a=1.003
  >>  iter 2, ACC! mis => us (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 3, ACC! us => ses (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! ses => bis (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! bis => ois (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 6, ACC! ois => iss (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 7, ACC! iss => ms (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! ms => es (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 9, ACC! es => sis (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 10, ACC! sis => bas (1 => 1, 0.99988 => 0.99988) a=1.001
Example 391 attack result: {'succ': False, 'tokens': '    public void fileCopy(File src, File dest) throws IOException {\n        if (!dest.exists()) {\n            final File parent = new File(dest.getParent());\n            if (!parent.exists() && !parent.mkdirs()) {\n                throw new IOException();\n            }\n            if (!dest.createNewFile()) {\n            }\n        }\n        FileInputStream bas = null;\n        FileOutputStream os = null;\n        try {\n            bas = new FileInputStream(src);\n            os = new FileOutputStream(dest);\n            final FileChannel srcChannel = bas.getChannel();\n            final FileChannel dstChannel = os.getChannel();\n            dstChannel.transferFrom(srcChannel, 0, srcChannel.size());\n            srcChannel.close();\n            dstChannel.close();\n        } finally {\n            try {\n                if (bas != null) {\n                    bas.close();\n                }\n            } finally {\n                if (os != null) {\n                    os.close();\n                }\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 187, 'new_pred': 1, 'is_success': -1, 'old_uid': 'is', 'score_info': -4.3008185e-08, 'nb_changed_var': 1, 'nb_changed_pos': 5, 'replace_info': {'is': 'bas'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 391 FAILED.
  time cost = 0.13 min
  ALL EXAMPLE time cost = 24.00 min
  curr succ rate = 0.03787878787878788
Query times in this attack:  295
All Query times:  38196
raw_tokens: ['private', 'void', 'copyFile', '(', 'File', 'src', ',', 'File', 'dst', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'dst', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
Example 392 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'testSavepoint4', '(', ')', 'throws', 'Exception', '{', 'Statement', 'stmt', '=', 'con', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'execute', '(', '"', 'CREATE', 'TABLE', '#savepoint4', '(data', 'int)', '"', ')', ';', 'stmt', '.', 'close', '(', ')', ';', 'con', '.', 'setAutoCommit', '(', 'false', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '3', ';', 'i', '++', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'iteration:', '', '"', '+', 'i', ')', ';', 'PreparedStatement', 'pstmt', '=', 'con', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', '#savepoint4', '(data)', 'VALUES', '(?)', '"', ')', ';', 'pstmt', '.', 'setInt', '(', '1', ',', '1', ')', ';', 'assertTrue', '(', 'pstmt', '.', 'executeUpdate', '(', ')', '==', '1', ')', ';', 'Savepoint', 'savepoint', '=', 'con', '.', 'setSavepoint', '(', ')', ';', 'assertNotNull', '(', 'savepoint', ')', ';', 'assertTrue', '(', 'savepoint', '.', 'getSavepointId', '(', ')', '==', '1', ')', ';', 'try', '{', 'savepoint', '.', 'getSavepointName', '(', ')', ';', 'assertTrue', '(', 'false', ')', ';', '}', 'catch', '(', 'SQLException', 'e', ')', '{', '}', 'pstmt', '.', 'setInt', '(', '1', ',', '2', ')', ';', 'assertTrue', '(', 'pstmt', '.', 'executeUpdate', '(', ')', '==', '1', ')', ';', 'pstmt', '.', 'close', '(', ')', ';', 'pstmt', '=', 'con', '.', 'prepareStatement', '(', '"', 'SELECT', 'SUM(data)', 'FROM', '#savepoint4', '"', ')', ';', 'ResultSet', 'rs', '=', 'pstmt', '.', 'executeQuery', '(', ')', ';', 'assertTrue', '(', 'rs', '.', 'next', '(', ')', ')', ';', 'assertTrue', '(', 'rs', '.', 'getInt', '(', '1', ')', '==', '3', ')', ';', 'assertTrue', '(', '!', 'rs', '.', 'next', '(', ')', ')', ';', 'pstmt', '.', 'close', '(', ')', ';', 'rs', '.', 'close', '(', ')', ';', 'con', '.', 'rollback', '(', 'savepoint', ')', ';', 'pstmt', '=', 'con', '.', 'prepareStatement', '(', '"', 'SELECT', 'SUM(data)', 'FROM', '#savepoint4', '"', ')', ';', 'rs', '=', 'pstmt', '.', 'executeQuery', '(', ')', ';', 'assertTrue', '(', 'rs', '.', 'next', '(', ')', ')', ';', 'assertTrue', '(', 'rs', '.', 'getInt', '(', '1', ')', '==', '1', ')', ';', 'assertTrue', '(', '!', 'rs', '.', 'next', '(', ')', ')', ';', 'pstmt', '.', 'close', '(', ')', ';', 'rs', '.', 'close', '(', ')', ';', 'con', '.', 'rollback', '(', ')', ';', '}', 'con', '.', 'setAutoCommit', '(', 'true', ')', ';', '}']
Example 393 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'encodeFileToFile', '(', 'String', 'infile', ',', 'String', 'outfile', ')', '{', 'boolean', 'success', '=', 'false', ';', 'java', '.', 'io', '.', 'InputStream', 'in', '=', 'null', ';', 'java', '.', 'io', '.', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'Base64', '.', 'InputStream', '(', 'new', 'java', '.', 'io', '.', 'BufferedInputStream', '(', 'new', 'java', '.', 'io', '.', 'FileInputStream', '(', 'infile', ')', ')', ',', 'Base64', '.', 'ENCODE', ')', ';', 'out', '=', 'new', 'java', '.', 'io', '.', 'BufferedOutputStream', '(', 'new', 'java', '.', 'io', '.', 'FileOutputStream', '(', 'outfile', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'success', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', 'try', '{', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', '}', 'return', 'success', ';', '}']
Example 394 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'saveHiddenNames', '(', 'HashSet', 'names', ')', 'throws', 'SQLException', '{', 'Connection', 'conn', '=', 'AppLayerDatabase', '.', 'getInstance', '(', ')', '.', 'getPooledConnection', '(', ')', ';', 'PreparedStatement', 'ps', '=', 'null', ';', 'try', '{', 'conn', '.', 'setAutoCommit', '(', 'false', ')', ';', 'Statement', 'stmt', '=', 'conn', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', '"', 'DELETE', 'FROM', 'HIDDENBOARDNAMES', '"', ')', ';', 'stmt', '.', 'close', '(', ')', ';', 'stmt', '=', 'null', ';', 'ps', '=', 'conn', '.', 'prepareStatement', '(', '"', 'INSERT', 'INTO', 'HIDDENBOARDNAMES', '(boardname)', 'VALUES', '(?)', '"', ')', ';', 'for', '(', 'Iterator', 'i', '=', 'names', '.', 'iterator', '(', ')', ';', 'i', '.', 'hasNext', '(', ')', ';', ')', '{', 'String', 'bName', '=', '(', 'String', ')', 'i', '.', 'next', '(', ')', ';', 'ps', '.', 'setString', '(', '1', ',', 'bName', ')', ';', 'ps', '.', 'executeUpdate', '(', ')', ';', '}', 'ps', '.', 'close', '(', ')', ';', 'conn', '.', 'commit', '(', ')', ';', 'conn', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'Exception', 'during', 'save', '"', ',', 't', ')', ';', 'try', '{', 'conn', '.', 'rollback', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't1', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'Exception', 'during', 'rollback', '"', ',', 't1', ')', ';', '}', 'try', '{', 'conn', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'catch', '(', 'Throwable', 't1', ')', '{', '}', '}', 'finally', '{', 'AppLayerDatabase', '.', 'getInstance', '(', ')', '.', 'givePooledConnection', '(', 'conn', ')', ';', 'try', '{', 'if', '(', 'ps', '!=', 'null', ')', 'ps', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't1', ')', '{', '}', ';', '}', '}']
Example 395 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copy', '(', 'File', 'fromFile', ',', 'File', 'toFile', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'fromFile', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'no', 'such', 'source', 'file:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', '!', 'fromFile', '.', 'isFile', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', "can't", 'copy', 'directory:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', '!', 'fromFile', '.', 'canRead', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'source', 'file', 'is', 'unreadable:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'toFile', '.', 'isDirectory', '(', ')', ')', 'toFile', '=', 'new', 'File', '(', 'toFile', ',', 'fromFile', '.', 'getName', '(', ')', ')', ';', 'String', 'parent', '=', 'toFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'parent', '==', 'null', ')', 'parent', '=', 'System', '.', 'getProperty', '(', '"', 'user.dir', '"', ')', ';', 'File', 'dir', '=', 'new', 'File', '(', 'parent', ')', ';', 'if', '(', '!', 'dir', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'directory', "doesn't", 'exist:', '', '"', '+', 'parent', ')', ';', 'if', '(', 'dir', '.', 'isFile', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'is', 'not', 'a', 'directory:', '', '"', '+', 'parent', ')', ';', 'if', '(', '!', 'dir', '.', 'canWrite', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'directory', 'is', 'unwriteable:', '', '"', '+', 'parent', ')', ';', 'FileInputStream', 'from', '=', 'null', ';', 'FileOutputStream', 'to', '=', 'null', ';', 'try', '{', 'from', '=', 'new', 'FileInputStream', '(', 'fromFile', ')', ';', 'to', '=', 'new', 'FileOutputStream', '(', 'toFile', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'bytesRead', ';', 'while', '(', '(', 'bytesRead', '=', 'from', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', 'to', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytesRead', ')', ';', '}', 'finally', '{', 'if', '(', 'from', '!=', 'null', ')', 'try', '{', 'from', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'if', '(', 'to', '!=', 'null', ')', 'try', '{', 'to', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}']
  >>  iter 1, ACC! from => io (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 2, ACC! to => x (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, SUCC! io => url (1 => 0, 0.99988 => 0.00004) a=1.000
Example 397 attack result: {'succ': True, 'tokens': '    public static void copy(File fromFile, File toFile) throws IOException {\n        if (!fromFile.exists()) throw new IOException("FileCopy: " + "no such source file: " + fromFile.getAbsolutePath());\n        if (!fromFile.isFile()) throw new IOException("FileCopy: " + "can\'t copy directory: " + fromFile.getAbsolutePath());\n        if (!fromFile.canRead()) throw new IOException("FileCopy: " + "source file is unreadable: " + fromFile.getAbsolutePath());\n        if (toFile.isDirectory()) toFile = new File(toFile, fromFile.getName());\n        String parent = toFile.getParent();\n        if (parent == null) parent = System.getProperty("user.dir");\n        File dir = new File(parent);\n        if (!dir.exists()) throw new IOException("FileCopy: " + "destination directory doesn\'t exist: " + parent);\n        if (dir.isFile()) throw new IOException("FileCopy: " + "destination is not a directory: " + parent);\n        if (!dir.canWrite()) throw new IOException("FileCopy: " + "destination directory is unwriteable: " + parent);\n        FileInputStream url = null;\n        FileOutputStream x = null;\n        try {\n            url = new FileInputStream(fromFile);\n            x = new FileOutputStream(toFile);\n            byte[] buffer = new byte[4096];\n            int bytesRead;\n            while ((bytesRead = url.read(buffer)) != -1) x.write(buffer, 0, bytesRead);\n        } finally {\n            if (url != null) try {\n                url.close();\n            } catch (IOException e) {\n            }\n            if (x != null) try {\n                x.close();\n            } catch (IOException e) {\n            }\n        }\n    }\n', 'raw_tokens': ['public', 'static', 'void', 'copy', '(', 'File', 'fromFile', ',', 'File', 'toFile', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'fromFile', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'no', 'such', 'source', 'file:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', '!', 'fromFile', '.', 'isFile', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', "can't", 'copy', 'directory:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', '!', 'fromFile', '.', 'canRead', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'source', 'file', 'is', 'unreadable:', '', '"', '+', 'fromFile', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'toFile', '.', 'isDirectory', '(', ')', ')', 'toFile', '=', 'new', 'File', '(', 'toFile', ',', 'fromFile', '.', 'getName', '(', ')', ')', ';', 'String', 'parent', '=', 'toFile', '.', 'getParent', '(', ')', ';', 'if', '(', 'parent', '==', 'null', ')', 'parent', '=', 'System', '.', 'getProperty', '(', '"', 'user.dir', '"', ')', ';', 'File', 'dir', '=', 'new', 'File', '(', 'parent', ')', ';', 'if', '(', '!', 'dir', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'directory', "doesn't", 'exist:', '', '"', '+', 'parent', ')', ';', 'if', '(', 'dir', '.', 'isFile', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'is', 'not', 'a', 'directory:', '', '"', '+', 'parent', ')', ';', 'if', '(', '!', 'dir', '.', 'canWrite', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'FileCopy:', '', '"', '+', '"', 'destination', 'directory', 'is', 'unwriteable:', '', '"', '+', 'parent', ')', ';', 'FileInputStream', 'url', '=', 'null', ';', 'FileOutputStream', 'x', '=', 'null', ';', 'try', '{', 'url', '=', 'new', 'FileInputStream', '(', 'fromFile', ')', ';', 'x', '=', 'new', 'FileOutputStream', '(', 'toFile', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'bytesRead', ';', 'while', '(', '(', 'bytesRead', '=', 'url', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', 'x', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytesRead', ')', ';', '}', 'finally', '{', 'if', '(', 'url', '!=', 'null', ')', 'try', '{', 'url', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'if', '(', 'x', '!=', 'null', ')', 'try', '{', 'x', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}'], 'prog_length': 344, 'new_pred': 0, 'is_success': 1, 'old_uid': 'from', 'score_info': -0.99984235, 'nb_changed_var': 2, 'nb_changed_pos': 10, 'replace_info': {'from': 'url', 'to': 'x'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 397 SUCCEEDED!
  time cost = 0.05 min
  ALL EXAMPLE time cost = 24.12 min
  curr succ rate = 0.045112781954887216
Query times in this attack:  97
All Query times:  38293
raw_tokens: ['public', 'void', 'init', '(', ')', '{', 'File', '[', ']', 'configsDirectories', '=', '{', 'XPontusConstantsIF', '.', 'XPONTUS_PLUGINS_DATA_DIR', ',', 'XPontusConstantsIF', '.', 'XPONTUS_PREFERENCES_DIR', ',', 'XPontusConstantsIF', '.', 'XPONTUS_DATABASE_CONFIG_DIR', ',', 'XPontusConstantsIF', '.', 'XPONTUS_PLUGINS_DIR', ',', 'XPontusConstantsIF', '.', 'XPONTUS_CACHE_DIR', '}', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'configsDirectories', '.', 'length', ';', 'i', '++', ')', '{', 'if', '(', '!', 'configsDirectories', '[', 'i', ']', '.', 'exists', '(', ')', ')', '{', 'configsDirectories', '[', 'i', ']', '.', 'mkdirs', '(', ')', ';', '}', '}', 'String', '[', ']', 'locations', '=', '{', '"', '/net/sf/xpontus/configuration/editorPanel.properties', '"', ',', '"', '/net/sf/xpontus/configuration/general.properties', '"', ',', '"', '/net/sf/xpontus/configuration/mimetypes.properties', '"', '}', ';', 'try', '{', 'for', '(', 'String', 'loc', ':', 'locations', ')', '{', 'String', 'outName', '=', 'FilenameUtils', '.', 'getName', '(', 'loc', ')', ';', 'File', 'output', '=', 'new', 'File', '(', 'XPontusConstantsIF', '.', 'XPONTUS_PREFERENCES_DIR', ',', 'outName', ')', ';', 'if', '(', '!', 'output', '.', 'exists', '(', ')', ')', '{', 'if', '(', 'loc', '.', 'equals', '(', 'locations', '[', '0', ']', ')', ')', '{', 'Properties', 'hackProps', '=', 'new', 'Properties', '(', ')', ';', 'InputStream', 'is', '=', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', 'loc', ')', ';', 'hackProps', '.', 'load', '(', 'is', ')', ';', 'Font', 'hackFont', '=', 'UIManager', '.', 'getFont', '(', '"', 'EditorPane.font', '"', ')', ';', 'StrBuilder', 'strFont', '=', 'new', 'StrBuilder', '(', ')', ';', 'strFont', '.', 'append', '(', 'hackFont', '.', 'getFamily', '(', ')', '+', '"', ',', '"', '+', 'hackFont', '.', 'getStyle', '(', ')', '+', '"', ',', '"', '+', 'hackFont', '.', 'getSize', '(', ')', ')', ';', 'hackProps', '.', 'put', '(', '"', 'EditorPane.Font', '"', ',', 'strFont', '.', 'toString', '(', ')', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'output', ')', ';', 'hackProps', '.', 'store', '(', 'out', ',', 'null', ')', ';', 'out', '.', 'close', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', '}', 'else', '{', 'InputStream', 'is', '=', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', 'loc', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'output', ')', ';', 'IOUtils', '.', 'copy', '(', 'is', ',', 'out', ')', ';', 'out', '.', 'close', '(', ')', ';', 'is', '.', 'close', '(', ')', ';', '}', '}', 'if', '(', '!', 'outName', '.', 'equals', '(', '"', 'mimetypes.properties', '"', ')', ')', '{', 'Properties', 'm_properties', '=', 'PropertiesConfigurationLoader', '.', 'load', '(', 'output', ')', ';', 'Iterator', 'it', '=', 'm_properties', '.', 'keySet', '(', ')', '.', 'iterator', '(', ')', ';', 'while', '(', 'it', '.', 'hasNext', '(', ')', ')', '{', 'Object', 'm_key', '=', 'it', '.', 'next', '(', ')', ';', 'Object', 'm_value', '=', 'm_properties', '.', 'get', '(', 'm_key', ')', ';', 'XPontusConfig', '.', 'put', '(', 'm_key', ',', 'm_value', ')', ';', '}', '}', '}', '}', 'catch', '(', 'Exception', 'err', ')', '{', 'err', '.', 'printStackTrace', '(', ')', ';', '}', 'Properties', 'm_props', '=', 'PropertiesConfigurationLoader', '.', 'load', '(', 'XPontusConfigurationConstantsIF', '.', 'EDITOR_PREFERENCES_FILE', ')', ';', 'String', '[', ']', 'f', '=', 'm_props', '.', 'get', '(', '"', 'EditorPane.Font', '"', ')', '.', 'toString', '(', ')', '.', 'split', '(', '"', ',', '"', ')', ';', 'String', 'family', '=', 'f', '[', '0', ']', '.', 'trim', '(', ')', ';', 'String', 'style1', '=', 'f', '[', '1', ']', '.', 'trim', '(', ')', ';', 'int', 'style', '=', 'Integer', '.', 'parseInt', '(', 'style1', ')', ';', 'int', 'size', '=', 'Integer', '.', 'parseInt', '(', 'f', '[', '2', ']', '.', 'trim', '(', ')', ')', ';', 'Font', 'm_font', '=', 'new', 'Font', '(', 'family', ',', 'style', ',', 'size', ')', ';', 'XPontusConfig', '.', 'put', '(', '"', 'EditorPane.Font', '"', ',', 'm_font', ')', ';', 'Map', 'map', '=', 'new', 'HashMap', '(', ')', ';', 'map', '.', 'put', '(', 'ROLE', ',', 'this', ')', ';', 'PropertiesHolder', '.', 'registerProperty', '(', 'XPontusSettings', '.', 'KEY', ',', 'map', ')', ';', 'DockableContainerFactory', '.', 'setFactory', '(', 'new', 'XPontusDockableContainerFactory', '(', ')', ')', ';', 'FileHistoryList', '.', 'init', '(', ')', ';', 'initDefaultSettings', '(', ')', ';', '}']
  >>  iter 1, ACC! out => group (1 => 1, 0.99984 => 0.99984) a=1.001
  >>  iter 2, ACC! group => pad (1 => 1, 0.99984 => 0.99984) a=1.001
  >>  iter 3, ACC! pad => lock (1 => 1, 0.99984 => 0.99984) a=1.001
  >>  iter 4, ACC! lock => server (1 => 1, 0.99984 => 0.99984) a=1.001
  >>  iter 5, ACC! server => output (1 => 1, 0.99984 => 0.99984) a=1.001
  >>  iter 6, ACC! output => up (1 => 1, 0.99984 => 0.99984) a=1.000
  >>  iter 7, ACC! up => line (1 => 1, 0.99984 => 0.99984) a=1.001
  >>  iter 8, ACC! line => session (1 => 1, 0.99984 => 0.99984) a=1.001
  >>  iter 9, ACC! session => re (1 => 1, 0.99984 => 0.99984) a=1.001
  >>  iter 10, ACC! re => query (1 => 1, 0.99984 => 0.99984) a=1.001
Example 398 attack result: {'succ': False, 'tokens': '    public void init() {\n        File[] configsDirectories = { XPontusConstantsIF.XPONTUS_PLUGINS_DATA_DIR, XPontusConstantsIF.XPONTUS_PREFERENCES_DIR, XPontusConstantsIF.XPONTUS_DATABASE_CONFIG_DIR, XPontusConstantsIF.XPONTUS_PLUGINS_DIR, XPontusConstantsIF.XPONTUS_CACHE_DIR };\n        for (int i = 0; i < configsDirectories.length; i++) {\n            if (!configsDirectories[i].exists()) {\n                configsDirectories[i].mkdirs();\n            }\n        }\n        String[] locations = { "/net/sf/xpontus/configuration/editorPanel.properties", "/net/sf/xpontus/configuration/general.properties", "/net/sf/xpontus/configuration/mimetypes.properties" };\n        try {\n            for (String loc : locations) {\n                String outName = FilenameUtils.getName(loc);\n                File query = new File(XPontusConstantsIF.XPONTUS_PREFERENCES_DIR, outName);\n                if (!query.exists()) {\n                    if (loc.equals(locations[0])) {\n                        Properties hackProps = new Properties();\n                        InputStream is = getClass().getResourceAsStream(loc);\n                        hackProps.load(is);\n                        Font hackFont = UIManager.getFont("EditorPane.font");\n                        StrBuilder strFont = new StrBuilder();\n                        strFont.append(hackFont.getFamily() + "," + hackFont.getStyle() + "," + hackFont.getSize());\n                        hackProps.put("EditorPane.Font", strFont.toString());\n                        OutputStream query = new FileOutputStream(query);\n                        hackProps.store(query, null);\n                        query.close();\n                        is.close();\n                    } else {\n                        InputStream is = getClass().getResourceAsStream(loc);\n                        OutputStream query = new FileOutputStream(query);\n                        IOUtils.copy(is, query);\n                        query.close();\n                        is.close();\n                    }\n                }\n                if (!outName.equals("mimetypes.properties")) {\n                    Properties m_properties = PropertiesConfigurationLoader.load(query);\n                    Iterator it = m_properties.keySet().iterator();\n                    while (it.hasNext()) {\n                        Object m_key = it.next();\n                        Object m_value = m_properties.get(m_key);\n                        XPontusConfig.put(m_key, m_value);\n                    }\n                }\n            }\n        } catch (Exception err) {\n            err.printStackTrace();\n        }\n        Properties m_props = PropertiesConfigurationLoader.load(XPontusConfigurationConstantsIF.EDITOR_PREFERENCES_FILE);\n        String[] f = m_props.get("EditorPane.Font").toString().split(",");\n        String family = f[0].trim();\n        String style1 = f[1].trim();\n        int style = Integer.parseInt(style1);\n        int size = Integer.parseInt(f[2].trim());\n        Font m_font = new Font(family, style, size);\n        XPontusConfig.put("EditorPane.Font", m_font);\n        Map map = new HashMap();\n        map.put(ROLE, this);\n        PropertiesHolder.registerProperty(XPontusSettings.KEY, map);\n        DockableContainerFactory.setFactory(new XPontusDockableContainerFactory());\n        FileHistoryList.init();\n        initDefaultSettings();\n    }\n', 'raw_tokens': None, 'prog_length': 570, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 2.2719905e-07, 'nb_changed_var': 1, 'nb_changed_pos': 6, 'replace_info': {'out': 'query'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 398 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 24.30 min
  curr succ rate = 0.04477611940298507
Query times in this attack:  299
All Query times:  38592
raw_tokens: ['public', 'static', 'boolean', 'encodeFileToFile', '(', 'String', 'infile', ',', 'String', 'outfile', ')', '{', 'boolean', 'success', '=', 'false', ';', 'java', '.', 'io', '.', 'InputStream', 'in', '=', 'null', ';', 'java', '.', 'io', '.', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'Base64', '.', 'InputStream', '(', 'new', 'java', '.', 'io', '.', 'BufferedInputStream', '(', 'new', 'java', '.', 'io', '.', 'FileInputStream', '(', 'infile', ')', ')', ',', 'Base64', '.', 'ENCODE', ')', ';', 'out', '=', 'new', 'java', '.', 'io', '.', 'BufferedOutputStream', '(', 'new', 'java', '.', 'io', '.', 'FileOutputStream', '(', 'outfile', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'success', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', 'try', '{', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', '}', 'return', 'success', ';', '}']
Example 399 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'if', '(', 'name', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Must', 'set', 'file', 'name', 'for', 'retrieval', '"', ')', ';', 'return', ';', '}', 'if', '(', 'handle', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Must', 'set', 'CCNHandle', '"', ')', ';', 'return', ';', '}', 'if', '(', 'htmlPane', '==', 'null', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Must', 'set', 'JEditorPane', '"', ')', ';', 'return', ';', '}', 'JFrame', 'frame', '=', 'new', 'JFrame', '(', ')', ';', 'JFileChooser', 'chooser', '=', 'new', 'JFileChooser', '(', ')', ';', 'File', 'f', '=', 'null', ';', 'chooser', '.', 'setCurrentDirectory', '(', 'null', ')', ';', 'int', 'returnVal', '=', 'chooser', '.', 'showSaveDialog', '(', 'frame', ')', ';', 'if', '(', 'returnVal', '==', 'JFileChooser', '.', 'APPROVE_OPTION', ')', '{', 'f', '=', 'chooser', '.', 'getSelectedFile', '(', ')', ';', '}', 'else', '{', 'htmlPane', '.', 'setText', '(', '"', 'Save', 'File', 'cancelled', '"', ')', ';', 'return', ';', '}', 'boolean', 'overwrite', '=', 'false', ';', 'try', '{', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 'htmlPane', '.', 'setText', '(', '"', 'Overwriting', 'contents', 'of', '', '"', '+', 'f', '.', 'getPath', '(', ')', ')', ';', 'overwrite', '=', 'true', ';', '}', 'else', '{', 'f', '.', 'createNewFile', '(', ')', ';', '}', 'if', '(', 'f', '.', 'canWrite', '(', ')', ')', '{', '}', 'else', '{', 'htmlPane', '.', 'setText', '(', '"', 'The', 'ContentExplorer', 'is', 'unable', 'to', 'write', 'the', 'content', 'to', 'the', 'specified', 'file.', '"', ')', ';', 'return', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'could', 'not', 'create', '', '"', '+', 'f', '.', 'getPath', '(', ')', '+', '"', '', 'for', 'saving', 'content', 'to', 'filesystem', '"', ')', ';', 'htmlPane', '.', 'setText', '(', '"', 'could', 'not', 'create', '', '"', '+', 'f', '.', 'getPath', '(', ')', '+', '"', '', 'for', 'saving', 'content', 'to', 'filesystem', '"', ')', ';', '}', 'try', '{', 'if', '(', '!', 'overwrite', ')', 'htmlPane', '.', 'setText', '(', '"', 'saving', '', '"', '+', 'name', '+', '"', '', 'to', '', '"', '+', 'f', '.', 'getCanonicalPath', '(', ')', ')', ';', 'else', 'htmlPane', '.', 'setText', '(', '"', 'overwriting', 'contents', 'of', '', '"', '+', 'f', '.', 'getCanonicalPath', '(', ')', '+', '"', '', 'to', 'save', '', '"', '+', 'name', ')', ';', 'CCNFileInputStream', 'fis', '=', 'new', 'CCNFileInputStream', '(', 'name', ',', 'handle', ')', ';', 'FileOutputStream', 'output', '=', 'new', 'FileOutputStream', '(', 'f', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'readsize', ']', ';', 'int', 'readcount', '=', '0', ';', 'int', 'readtotal', '=', '0', ';', 'while', '(', '(', 'readcount', '=', 'fis', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'readtotal', '+=', 'readcount', ';', 'output', '.', 'write', '(', 'buffer', ',', '0', ',', 'readcount', ')', ';', 'output', '.', 'flush', '(', ')', ';', '}', 'htmlPane', '.', 'setText', '(', '"', 'Saved', '', '"', '+', 'name', '+', '"', '', 'to', '', '"', '+', 'f', '.', 'getCanonicalPath', '(', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'htmlPane', '.', 'setText', '(', '"', 'Could', 'not', 'save', '', '"', '+', 'name', '+', '"', '', 'to', '', '"', '+', 'f', '.', 'getPath', '(', ')', '+', '"', '', 'This', 'may', 'be', 'a', 'prefix', 'for', 'an', 'object', 'or', 'just', 'may', 'not', 'be', 'available', 'at', 'this', 'time.', '"', ')', ';', 'System', '.', 'err', '.', 'println', '(', '"', 'Could', 'not', 'retrieve', 'file:', '', '"', '+', 'name', ')', ';', '}', '}']
  >>  iter 1, ACC! file => ile (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! ile => rule (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! rule => picture (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! picture => letter (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! letter => source (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! output => out (1 => 1, 0.99988 => 0.99988) a=1.053
  >>  iter 7, ACC! source => picture (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! picture => url (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! url => this (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! this => cache (1 => 1, 0.99988 => 0.99988) a=1.000
Example 400 attack result: {'succ': False, 'tokens': '    public void run() {\n        if (name == null) {\n            System.err.println("Must set file name for retrieval");\n            return;\n        }\n        if (handle == null) {\n            System.err.println("Must set CCNHandle");\n            return;\n        }\n        if (htmlPane == null) {\n            System.err.println("Must set JEditorPane");\n            return;\n        }\n        JFrame frame = new JFrame();\n        JFileChooser chooser = new JFileChooser();\n        File f = null;\n        chooser.setCurrentDirectory(null);\n        int returnVal = chooser.showSaveDialog(frame);\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            f = chooser.getSelectedFile();\n        } else {\n            htmlPane.setText("Save File cancelled");\n            return;\n        }\n        boolean overwrite = false;\n        try {\n            if (f.exists()) {\n                htmlPane.setText("Overwriting contents of " + f.getPath());\n                overwrite = true;\n            } else {\n                f.createNewFile();\n            }\n            if (f.canWrite()) {\n            } else {\n                htmlPane.setText("The ContentExplorer is unable to write the content to the specified file.");\n                return;\n            }\n        } catch (IOException e) {\n            System.err.println("could not create " + f.getPath() + " for saving content to filesystem");\n            htmlPane.setText("could not create " + f.getPath() + " for saving content to filesystem");\n        }\n        try {\n            if (!overwrite) htmlPane.setText("saving " + name + " to " + f.getCanonicalPath()); else htmlPane.setText("overwriting contents of " + f.getCanonicalPath() + " to save " + name);\n            CCNFileInputStream fis = new CCNFileInputStream(name, handle);\n            FileOutputStream out = new FileOutputStream(f);\n            byte[] buffer = new byte[readsize];\n            int readcount = 0;\n            int readtotal = 0;\n            while ((readcount = fis.read(buffer)) != -1) {\n                readtotal += readcount;\n                out.write(buffer, 0, readcount);\n                out.flush();\n            }\n            htmlPane.setText("Saved " + name + " to " + f.getCanonicalPath());\n        } catch (Exception e) {\n            htmlPane.setText("Could not save " + name + " to " + f.getPath() + " This may be a prefix for an object or just may not be available at this time.");\n            System.err.println("Could not retrieve file: " + name);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 454, 'new_pred': 1, 'is_success': -1, 'old_uid': 'file', 'score_info': 0.0, 'nb_changed_var': 2, 'nb_changed_pos': 4, 'replace_info': {'file': 'cache', 'output': 'out'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 400 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 24.48 min
  curr succ rate = 0.044444444444444446
Query times in this attack:  297
All Query times:  38889
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'from', ',', 'File', 'to', ')', 'throws', 'Exception', '{', 'if', '(', '!', 'from', '.', 'exists', '(', ')', ')', 'return', ';', 'FileInputStream', 'in', '=', 'new', 'FileInputStream', '(', 'from', ')', ';', 'FileOutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'to', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', 'BUFFER_SIZE', ']', ';', 'int', 'bytes_read', ';', 'while', '(', 'true', ')', '{', 'bytes_read', '=', 'in', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'bytes_read', '==', '-', '1', ')', 'break', ';', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytes_read', ')', ';', '}', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'in', '.', 'close', '(', ')', ';', '}']
Example 401 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'publish', '(', 'String', 'server', ',', 'String', 'id', ',', 'String', 'passwd', ',', 'String', 'path', ',', 'String', 'html', ')', 'throws', 'SocketException', ',', 'IOException', ',', 'LoginFailException', '{', 'logger', '.', 'info', '(', '"', 'Connect', 'to', 'FTP', 'Server', '', '"', '+', 'server', ')', ';', 'FTPClient', 'f', '=', 'new', 'FTPClient', '(', ')', ';', 'f', '.', 'connect', '(', 'server', ')', ';', 'if', '(', 'f', '.', 'login', '(', 'id', ',', 'passwd', ')', '==', 'false', ')', '{', 'logger', '.', 'info', '(', '"', 'Fail', 'to', 'login', 'with', 'id=', '"', '+', 'id', ')', ';', 'throw', 'new', 'LoginFailException', '(', 'id', ',', 'passwd', ')', ';', '}', 'f', '.', 'changeWorkingDirectory', '(', 'path', ')', ';', 'logger', '.', 'info', '(', '"', 'Start', 'to', 'upload', '"', ')', ';', 'f', '.', 'storeFile', '(', '"', 'index.html', '"', ',', 'new', 'ByteArrayInputStream', '(', 'html', '.', 'getBytes', '(', '"', 'utf-8', '"', ')', ')', ')', ';', 'logger', '.', 'info', '(', '"', 'Upload', 'index.html', '"', ')', ';', 'f', '.', 'storeFile', '(', '"', 'main.css', '"', ',', 'new', 'FileInputStream', '(', '"', 'web/main.css', '"', ')', ')', ';', 'logger', '.', 'info', '(', '"', 'Upload', 'main.css', '"', ')', ';', 'f', '.', 'storeFile', '(', '"', 'cafelibrary.js', '"', ',', 'new', 'FileInputStream', '(', '"', 'web/cafelibrary.js', '"', ')', ')', ';', 'logger', '.', 'info', '(', '"', 'Upload', 'cafelibrary.js', '"', ')', ';', 'f', '.', 'makeDirectory', '(', '"', 'img', '"', ')', ';', 'f', '.', 'changeWorkingDirectory', '(', '"', 'img', '"', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<=', '5', ';', 'i', '++', ')', '{', 'String', 'fileName', '=', '"', 'favorite_star_', '"', '+', 'i', '+', '"', '.png', '"', ';', 'f', '.', 'storeFile', '(', 'fileName', ',', 'new', 'FileInputStream', '(', '"', 'web/img/', '"', '+', 'fileName', ')', ')', ';', 'logger', '.', 'info', '(', '"', 'Upload', '', '"', '+', 'fileName', ')', ';', '}', 'f', '.', 'logout', '(', ')', ';', 'f', '.', 'disconnect', '(', ')', ';', '}']
Example 402 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'try', '{', 'Object', 'o', '=', 'Naming', '.', 'lookup', '(', '"', 'Server', '"', ')', ';', 'IServer', 'serverStub', '=', '(', 'IServer', ')', 'o', ';', 'File', 'srcDir', '=', 'new', 'File', '(', 'args', '[', '0', ']', ')', ';', 'File', 'dstDir', '=', 'new', 'File', '(', 'args', '[', '1', ']', ')', ';', 'File', '[', ']', 'srcFiles', '=', 'srcDir', '.', 'listFiles', '(', ')', ';', 'long', 'position', '=', '0', ';', 'for', '(', 'File', 'f', ':', 'srcFiles', ')', '{', 'if', '(', 'f', '.', 'isDirectory', '(', ')', ')', 'continue', ';', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'f', ')', '.', 'getChannel', '(', ')', ';', 'String', 'fileName', '=', 'dstDir', '.', 'getAbsolutePath', '(', ')', '+', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', '+', 'f', '.', 'getName', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'fileName', ')', '.', 'getChannel', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Coping', '', '"', '+', 'fileName', ')', ';', 'ByteBuffer', 'buffer', '=', 'ByteBuffer', '.', 'allocate', '(', '65536', ')', ';', 'int', 'nr', '=', '0', ';', 'srcChannel', '.', 'position', '(', 'nr', ')', ';', 'nr', '=', 'srcChannel', '.', 'read', '(', 'buffer', ')', ';', 'while', '(', 'nr', '>', '-', '1', ')', '{', 'buffer', '.', 'flip', '(', ')', ';', 'byte', '[', ']', 'bytes', '=', 'new', 'byte', '[', 'buffer', '.', 'limit', '(', ')', ']', ';', 'buffer', '.', 'get', '(', 'bytes', ')', ';', 'position', '=', 'serverStub', '.', 'write', '(', 'bytes', ',', 'position', ')', ';', 'buffer', '.', 'clear', '(', ')', ';', 'nr', '=', 'srcChannel', '.', 'read', '(', 'buffer', ')', ';', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'Done', '', '"', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'RemoteException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'catch', '(', 'NotBoundException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! buffer => address (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! get => run (1 => 1, 0.99988 => 0.99988) a=1.010
  >>  iter 3, ACC! run => export (1 => 1, 0.99988 => 0.99988) a=1.010
  >>  iter 4, ACC! export => it (1 => 1, 0.99988 => 0.99988) a=1.011
  >>  iter 5, ACC! it => export (1 => 1, 0.99988 => 0.99988) a=1.010
  >>  iter 6, ACC! address => limit (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 7, ACC! export => init (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 8, ACC! init => print (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! limit => b (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 10, ACC! b => size (1 => 1, 0.99988 => 0.99988) a=1.001
Example 403 attack result: {'succ': False, 'tokens': '    public static void main(String[] args) {\n        try {\n            Object o = Naming.lookup("Server");\n            IServer serverStub = (IServer) o;\n            File srcDir = new File(args[0]);\n            File dstDir = new File(args[1]);\n            File[] srcFiles = srcDir.listFiles();\n            long position = 0;\n            for (File f : srcFiles) {\n                if (f.isDirectory()) continue;\n                try {\n                    FileChannel srcChannel = new FileInputStream(f).getChannel();\n                    String fileName = dstDir.getAbsolutePath() + System.getProperty("file.separator") + f.getName();\n                    FileChannel dstChannel = new FileOutputStream(fileName).getChannel();\n                    System.out.println("Coping " + fileName);\n                    ByteBuffer size = ByteBuffer.allocate(65536);\n                    int nr = 0;\n                    srcChannel.position(nr);\n                    nr = srcChannel.read(size);\n                    while (nr > -1) {\n                        size.flip();\n                        byte[] bytes = new byte[size.size()];\n                        size.print(bytes);\n                        position = serverStub.write(bytes, position);\n                        size.clear();\n                        nr = srcChannel.read(size);\n                    }\n                    System.out.println("Done ");\n                    srcChannel.close();\n                    dstChannel.close();\n                } catch (IOException e) {\n                }\n            }\n        } catch (MalformedURLException e) {\n            e.printStackTrace();\n        } catch (RemoteException e) {\n            e.printStackTrace();\n        } catch (NotBoundException e) {\n            e.printStackTrace();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 323, 'new_pred': 1, 'is_success': -1, 'old_uid': 'buffer', 'score_info': -3.259629e-08, 'nb_changed_var': 2, 'nb_changed_pos': 8, 'replace_info': {'buffer': 'size', 'get': 'print'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 403 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 24.66 min
  curr succ rate = 0.04411764705882353
Query times in this attack:  261
All Query times:  39150
raw_tokens: ['public', 'String', 'encrypt', '(', 'final', 'char', '[', ']', 'password', ',', 'final', 'String', 'algorithm', ',', 'final', 'byte', '[', ']', 'salt', ')', '{', 'final', 'StringBuffer', 'buffer', '=', 'new', 'StringBuffer', '(', ')', ';', 'MessageDigest', 'digest', '=', 'null', ';', 'int', 'size', '=', '0', ';', 'if', '(', '"', 'SHA', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', '||', '"', 'SSHA', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', ')', '{', 'size', '=', '20', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'buffer', '.', 'append', '(', '"', '{SSHA}', '"', ')', ';', '}', 'else', '{', 'buffer', '.', 'append', '(', '"', '{SHA}', '"', ')', ';', '}', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'algorithm', '"', ')', ';', '}', '}', 'else', 'if', '(', '"', 'MD5', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', '||', '"', 'SMD5', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', ')', '{', 'size', '=', '16', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'buffer', '.', 'append', '(', '"', '{SMD5}', '"', ')', ';', '}', 'else', '{', 'buffer', '.', 'append', '(', '"', '{MD5}', '"', ')', ';', '}', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'algorithm', '"', ')', ';', '}', '}', 'else', '{', 'throw', 'new', 'UnsupportedOperationException', '(', '"', 'Not', 'implemented', '"', ')', ';', '}', 'int', 'outSize', '=', 'size', ';', 'digest', '.', 'reset', '(', ')', ';', 'try', '{', 'digest', '.', 'update', '(', 'new', 'String', '(', 'password', ')', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'UTF-8', 'Unsupported', '"', ')', ';', '}', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'digest', '.', 'update', '(', 'salt', ')', ';', 'outSize', '+=', 'salt', '.', 'length', ';', '}', 'final', 'byte', '[', ']', 'out', '=', 'new', 'byte', '[', 'outSize', ']', ';', 'System', '.', 'arraycopy', '(', 'digest', '.', 'digest', '(', ')', ',', '0', ',', 'out', ',', '0', ',', 'size', ')', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'System', '.', 'arraycopy', '(', 'salt', ',', '0', ',', 'out', ',', 'size', ',', 'salt', '.', 'length', ')', ';', '}', 'buffer', '.', 'append', '(', 'new', 'String', '(', 'Base64', '.', 'encodeBase64', '(', 'out', ')', ')', ')', ';', 'return', 'buffer', '.', 'toString', '(', ')', ';', '}']
Example 404 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'SuppressWarnings', '(', '"', 'unchecked', '"', ')', 'public', 'static', '<', 'T', '>', 'List', '<', 'T', '>', 'getServices', '(', 'String', 'service', ')', '{', 'String', 'serviceUri', '=', '"', 'META-INF/services/', '"', '+', 'service', ';', 'ClassLoader', 'loader', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', ';', 'try', '{', 'Enumeration', '<', 'URL', '>', 'urls', '=', 'loader', '.', 'getResources', '(', 'serviceUri', ')', ';', 'if', '(', 'urls', '.', 'hasMoreElements', '(', ')', ')', '{', 'List', '<', 'T', '>', 'services', '=', 'new', 'ArrayList', '<', 'T', '>', '(', '1', ')', ';', 'do', '{', 'URL', 'url', '=', 'urls', '.', 'nextElement', '(', ')', ';', '_LOG', '.', 'finest', '(', '"', 'Processing:{0}', '"', ',', 'url', ')', ';', 'try', '{', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'try', '{', 'while', '(', 'true', ')', '{', 'String', 'line', '=', 'in', '.', 'readLine', '(', ')', ';', 'if', '(', 'line', '==', 'null', ')', 'break', ';', 'T', 'instance', '=', '(', 'T', ')', '_parseLine', '(', 'loader', ',', 'line', ')', ';', 'if', '(', 'instance', '!=', 'null', ')', 'services', '.', 'add', '(', 'instance', ')', ';', '}', '}', 'finally', '{', 'in', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', '_LOG', '.', 'warning', '(', '"', 'ERR_PARSING_URL', '"', ',', 'url', ')', ';', '_LOG', '.', 'warning', '(', 'e', ')', ';', '}', '}', 'while', '(', 'urls', '.', 'hasMoreElements', '(', ')', ')', ';', 'if', '(', 'services', '.', 'size', '(', ')', '==', '1', ')', 'return', 'Collections', '.', 'singletonList', '(', 'services', '.', 'get', '(', '0', ')', ')', ';', 'return', 'Collections', '.', 'unmodifiableList', '(', 'services', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '_LOG', '.', 'severe', '(', '"', 'ERR_LOADING_RESROUCE', '"', ',', 'serviceUri', ')', ';', '_LOG', '.', 'severe', '(', 'e', ')', ';', '}', 'return', 'Collections', '.', 'emptyList', '(', ')', ';', '}']
  >>  iter 1, ACC! in => id (0 => 0, 0.99965 => 0.99968) a=1.024
  >>  iter 2, ACC! id => bin (0 => 0, 0.99968 => 0.99966) a=1.093
  >>  iter 3, ACC! bin => l (0 => 0, 0.99966 => 0.99966) a=1.044
  >>  iter 4, ACC! l => ac (0 => 0, 0.99966 => 0.99967) a=1.059
  >>  iter 5, ACC! ac => read (0 => 0, 0.99967 => 0.99966) a=1.084
  >>  iter 6, ACC! read => login (0 => 0, 0.99966 => 0.99967) a=1.022
  >>  iter 7, ACC! login => to (0 => 0, 0.99967 => 0.99967) a=1.076
  >>  iter 8, ACC! to => again (0 => 0, 0.99967 => 0.99968) a=1.074
  >>  iter 9, ACC! again => io (0 => 0, 0.99968 => 0.99966) a=1.099
  >>  iter 10, ACC! io => In (0 => 0, 0.99966 => 0.99966) a=1.054
Example 405 attack result: {'succ': False, 'tokens': '    @SuppressWarnings("unchecked")\n    public static <T> List<T> getServices(String service) {\n        String serviceUri = "META-INF/services/" + service;\n        ClassLoader loader = Thread.currentThread().getContextClassLoader();\n        try {\n            Enumeration<URL> urls = loader.getResources(serviceUri);\n            if (urls.hasMoreElements()) {\n                List<T> services = new ArrayList<T>(1);\n                do {\n                    URL url = urls.nextElement();\n                    _LOG.finest("Processing:{0}", url);\n                    try {\n                        BufferedReader In = new BufferedReader(new InputStreamReader(url.openStream()));\n                        try {\n                            while (true) {\n                                String line = In.readLine();\n                                if (line == null) break;\n                                T instance = (T) _parseLine(loader, line);\n                                if (instance != null) services.add(instance);\n                            }\n                        } finally {\n                            In.close();\n                        }\n                    } catch (Exception e) {\n                        _LOG.warning("ERR_PARSING_URL", url);\n                        _LOG.warning(e);\n                    }\n                } while (urls.hasMoreElements());\n                if (services.size() == 1) return Collections.singletonList(services.get(0));\n                return Collections.unmodifiableList(services);\n            }\n        } catch (IOException e) {\n            _LOG.severe("ERR_LOADING_RESROUCE", serviceUri);\n            _LOG.severe(e);\n        }\n        return Collections.emptyList();\n    }\n', 'raw_tokens': None, 'prog_length': 287, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': 3.0994415e-06, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'in': 'In'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 405 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 24.84 min
  curr succ rate = 0.043795620437956206
Query times in this attack:  306
All Query times:  39456
raw_tokens: ['public', 'boolean', 'check', '(', 'Object', 'credentials', ')', '{', 'String', 'password', '=', '(', 'credentials', 'instanceof', 'String', ')', '?', '(', 'String', ')', 'credentials', ':', 'credentials', '.', 'toString', '(', ')', ';', 'try', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'byte', '[', ']', 'ha1', ';', 'if', '(', 'credentials', 'instanceof', 'Credential', '.', 'MD5', ')', '{', 'ha1', '=', '(', '(', 'Credential', '.', 'MD5', ')', 'credentials', ')', '.', 'getDigest', '(', ')', ';', '}', 'else', '{', 'md', '.', 'update', '(', 'username', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'realm', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'password', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'ha1', '=', 'md', '.', 'digest', '(', ')', ';', '}', 'md', '.', 'reset', '(', ')', ';', 'md', '.', 'update', '(', 'method', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'uri', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'byte', '[', ']', 'ha2', '=', 'md', '.', 'digest', '(', ')', ';', 'md', '.', 'update', '(', 'TypeUtil', '.', 'toString', '(', 'ha1', ',', '16', ')', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'nonce', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'nc', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'cnonce', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'qop', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'md', '.', 'update', '(', '(', 'byte', ')', "':'", ')', ';', 'md', '.', 'update', '(', 'TypeUtil', '.', 'toString', '(', 'ha2', ',', '16', ')', '.', 'getBytes', '(', 'StringUtil', '.', '__ISO_8859_1', ')', ')', ';', 'byte', '[', ']', 'digest', '=', 'md', '.', 'digest', '(', ')', ';', 'return', '(', 'TypeUtil', '.', 'toString', '(', 'digest', ',', '16', ')', '.', 'equalsIgnoreCase', '(', 'response', ')', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'log', '.', 'warn', '(', 'LogSupport', '.', 'EXCEPTION', ',', 'e', ')', ';', '}', 'return', 'false', ';', '}']
Example 406 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'HttpResponse', 'execute', '(', 'HttpHost', 'host', ',', 'HttpRequest', 'req', ',', 'HttpContext', 'ctx', ')', 'throws', 'IOException', ',', 'ClientProtocolException', '{', 'HttpResponse', 'resp', '=', 'backend', '.', 'execute', '(', 'host', ',', 'req', ',', 'ctx', ')', ';', 'if', '(', 'assessor', '.', 'isFailure', '(', 'resp', ')', ')', '{', 'throw', 'new', 'UnsuccessfulResponseException', '(', 'resp', ')', ';', '}', 'return', 'resp', ';', '}']
Example 407 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'HashMap', '<', 'String', ',', 'String', '>', 'prepareDataFile', '(', 'String', 'fileName', ')', '{', 'File', 'originalDataFile', '=', 'new', 'File', '(', 'fileName', ')', ';', 'String', 'tableName', '=', 'new', 'String', '(', ')', ';', 'String', 'line', '=', 'new', 'String', '(', ')', ';', 'BufferedReader', 'br', ';', 'BufferedWriter', 'bw', ';', 'long', 'recordsNumber', ';', 'File', 'tempDataFile', ';', 'HashMap', '<', 'String', ',', 'String', '>', 'tableFileMap', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'String', 'filePath', '=', 'new', 'String', '(', ')', ';', 'try', '{', 'br', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'new', 'FileInputStream', '(', 'originalDataFile', ')', ')', ')', ';', 'if', '(', 'br', '.', 'ready', '(', ')', ')', '{', 'if', '(', '(', 'line', '=', 'br', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'do', '{', 'tableName', '=', '"', 'temp_', '"', '+', 'getTableName', '(', 'line', ')', ';', 'tempDataFile', '=', 'new', 'File', '(', '"', './Data/', '"', '+', 'tableName', '+', '"', '.txt', '"', ')', ';', 'tempDataFile', '.', 'createNewFile', '(', ')', ';', 'tableFileMap', '.', 'put', '(', 'tableName', ',', 'tempDataFile', '.', 'getCanonicalPath', '(', ')', ')', ';', 'recordsNumber', '=', 'getRecordNumber', '(', 'line', ')', ';', 'bw', '=', 'new', 'BufferedWriter', '(', 'new', 'OutputStreamWriter', '(', 'new', 'FileOutputStream', '(', 'tempDataFile', ')', ')', ')', ';', 'for', '(', 'long', 'i', '=', '0', ';', 'i', '<', 'recordsNumber', ';', 'i', '++', ')', '{', 'bw', '.', 'write', '(', 'br', '.', 'readLine', '(', ')', '+', '"', '\\r', '', '"', ')', ';', '}', 'bw', '.', 'close', '(', ')', ';', '}', 'while', '(', '(', 'line', '=', 'br', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', ';', '}', 'br', '.', 'close', '(', ')', ';', 'return', 'tableFileMap', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'ExceptionHandler', '.', 'handleExcptin', '(', 'e', ')', ';', '}', 'return', 'null', ';', '}']
Example 408 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'List', '<', 'Datastream', '>', 'getFiles', '(', 'final', 'String', 'pFile', ')', 'throws', 'IOException', '{', 'List', '<', 'Datastream', '>', 'tDatastreams', '=', 'new', 'ArrayList', '<', 'Datastream', '>', '(', ')', ';', 'new', 'File', '(', 'this', '.', 'getTmpExtractDirName', '(', ')', ')', '.', 'mkdir', '(', ')', ';', 'ZipFile', 'tZipFile', '=', 'new', 'ZipFile', '(', 'pFile', ')', ';', 'Enumeration', 'tEntries', '=', 'tZipFile', '.', 'entries', '(', ')', ';', 'ZipEntry', 'tEntry', '=', 'null', ';', 'File', 'tFile', '=', 'null', ';', 'String', 'tFileLocation', '=', '"', '"', ';', 'LocalDatastream', 'tLocalDs', '=', 'null', ';', 'while', '(', 'tEntries', '.', 'hasMoreElements', '(', ')', ')', '{', 'tEntry', '=', '(', 'ZipEntry', ')', 'tEntries', '.', 'nextElement', '(', ')', ';', 'if', '(', 'tEntry', '.', 'isDirectory', '(', ')', ')', '{', 'continue', ';', '}', 'tFileLocation', '=', 'this', '.', 'getTmpExtractDirName', '(', ')', '+', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', '+', 'tEntry', '.', 'getName', '(', ')', ';', 'tFile', '=', 'new', 'File', '(', 'tFileLocation', ')', ';', 'LOG', '.', 'debug', '(', '"', 'Saving', '', '"', '+', 'tEntry', '.', 'getName', '(', ')', '+', '"', '', 'to', '', '"', '+', 'tFile', '.', 'getPath', '(', ')', ')', ';', 'tFile', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ';', 'IOUtils', '.', 'copy', '(', 'tZipFile', '.', 'getInputStream', '(', 'tEntry', ')', ',', 'new', 'FileOutputStream', '(', 'tFile', ')', ')', ';', 'tLocalDs', '=', 'new', 'LocalDatastream', '(', 'tFile', '.', 'getName', '(', ')', '.', 'split', '(', '"', '\\\\', '.', '"', ')', '[', '0', ']', ',', 'FindMimeType', '.', 'getMimeType', '(', 'tFile', '.', 'getName', '(', ')', '.', 'split', '(', '"', '\\\\', '.', '"', ')', '[', '1', ']', ')', ',', 'tFileLocation', ')', ';', 'tLocalDs', '.', 'setLabel', '(', 'tEntry', '.', 'getName', '(', ')', ')', ';', 'tDatastreams', '.', 'add', '(', 'tLocalDs', ')', ';', '}', 'return', 'tDatastreams', ';', '}']
Example 409 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'setErrorServer', '(', 'String', 'newServer', ')', '{', 'String', 'old', '=', 'errorServerURL', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'newServer', ')', ';', 'HttpURLConnection', 'conn', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setInstanceFollowRedirects', '(', 'false', ')', ';', 'BufferedReader', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'StringBuilder', 'page', '=', 'new', 'StringBuilder', '(', ')', ';', 'String', 'line', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'page', '.', 'append', '(', 'line', ')', ';', '}', 'rd', '.', 'close', '(', ')', ';', 'if', '(', '!', 'page', '.', 'toString', '(', ')', '.', 'equals', '(', '"', 'maRla', '"', ')', ')', 'throw', 'new', 'ConfigurationException', '(', '"', 'URL', 'given', 'for', 'error', 'server', 'is', 'invalid', '"', ',', 'ConfigType', '.', 'ErrorServer', ')', ';', '}', 'catch', '(', 'UnknownHostException', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Accepting', 'setting', 'for', 'error', 'sever,', 'unable', 'to', 'check', '"', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'ex', ')', '{', 'throw', 'new', 'ConfigurationException', '(', '"', 'URL', 'given', 'for', 'error', 'server', "('", '"', '+', 'newServer', '+', '"', "')", 'appears', 'invalid', '"', ',', 'ConfigType', '.', 'ErrorServer', ',', 'ex', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'throw', 'new', 'ConfigurationException', '(', '"', 'URL', 'given', 'for', 'error', 'server', 'could', 'not', 'be', 'reached', '"', ',', 'ConfigType', '.', 'ErrorServer', ',', 'ex', ')', ';', '}', 'errorServerURL', '=', 'newServer', ';', 'return', 'old', ';', '}']
  >>  iter 1, ACC! out => builder (1 => 1, 0.97890 => 0.97886) a=1.026
  >>  iter 2, ACC! builder => conn (1 => 1, 0.97886 => 0.97887) a=1.012
  >>  iter 3, ACC! conn => output (1 => 1, 0.97887 => 0.97887) a=1.025
  >>  iter 4, ACC! output => key (1 => 1, 0.97887 => 0.97862) a=1.022
  >>  iter 5, ACC! key => builder (1 => 1, 0.97862 => 0.97915) a=1.021
  >>  iter 6, ACC! builder => writer (1 => 1, 0.97915 => 0.97925) a=1.047
  >>  iter 7, ACC! writer => url (1 => 1, 0.97925 => 0.97859) a=1.044
  >>  iter 8, ACC! url => external (1 => 1, 0.97859 => 0.97792) a=1.081
  >>  iter 9, ACC! external => conn (1 => 1, 0.97792 => 0.97745) a=1.073
  >>  iter 10, ACC! conn => list (1 => 1, 0.97745 => 0.97826) a=1.031
Example 410 attack result: {'succ': False, 'tokens': '    public static String setErrorServer(String newServer) {\n        String old = errorServerURL;\n        try {\n            URL list = new URL(newServer);\n            HttpURLConnection list = (HttpURLConnection) list.openConnection();\n            list.setInstanceFollowRedirects(false);\n            BufferedReader rd = new BufferedReader(new InputStreamReader(list.getInputStream()));\n            StringBuilder page = new StringBuilder();\n            String line = null;\n            while ((line = rd.readLine()) != null) {\n                page.append(line);\n            }\n            rd.close();\n            if (!page.toString().equals("maRla")) throw new ConfigurationException("URL given for error server is invalid", ConfigType.ErrorServer);\n        } catch (UnknownHostException ex) {\n            System.list.println("Accepting setting for error sever, unable to check");\n        } catch (MalformedURLException ex) {\n            throw new ConfigurationException("URL given for error server (\'" + newServer + "\') appears invalid", ConfigType.ErrorServer, ex);\n        } catch (IOException ex) {\n            throw new ConfigurationException("URL given for error server could not be reached", ConfigType.ErrorServer, ex);\n        }\n        errorServerURL = newServer;\n        return old;\n    }\n', 'raw_tokens': None, 'prog_length': 209, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 0.00080773607, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'out': 'list'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 410 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 25.04 min
  curr succ rate = 0.043478260869565216
Query times in this attack:  306
All Query times:  39762
raw_tokens: ['@', 'Override', 'public', 'Template', 'updateTemplate', '(', 'Template', 'template', ')', '{', 'template', '.', 'setContent', '(', 'getTemplateContent', '(', 'template', '.', 'getScreen', '(', ')', ')', ')', ';', 'List', '<', 'NameValuePair', '>', 'params', '=', 'new', 'ArrayList', '<', 'NameValuePair', '>', '(', ')', ';', 'params', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'name', '"', ',', 'template', '.', 'getName', '(', ')', ')', ')', ';', 'params', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'content', '"', ',', 'template', '.', 'getContent', '(', ')', ')', ')', ';', 'params', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'shared', '"', ',', 'template', '.', 'isShared', '(', ')', '+', '"', '"', ')', ')', ';', 'params', '.', 'add', '(', 'new', 'BasicNameValuePair', '(', '"', 'keywords', '"', ',', 'template', '.', 'getKeywords', '(', ')', ')', ')', ';', 'try', '{', 'String', 'saveRestUrl', '=', 'configuration', '.', 'getBeehiveRESTRootUrl', '(', ')', '+', '"', 'account/', '"', '+', 'userService', '.', 'getAccount', '(', ')', '.', 'getOid', '(', ')', '+', '"', '/template/', '"', '+', 'template', '.', 'getOid', '(', ')', ';', 'HttpPut', 'httpPut', '=', 'new', 'HttpPut', '(', 'saveRestUrl', ')', ';', 'addAuthentication', '(', 'httpPut', ')', ';', 'UrlEncodedFormEntity', 'formEntity', '=', 'new', 'UrlEncodedFormEntity', '(', 'params', ',', '"', 'UTF-8', '"', ')', ';', 'httpPut', '.', 'setEntity', '(', 'formEntity', ')', ';', 'HttpClient', 'httpClient', '=', 'new', 'DefaultHttpClient', '(', ')', ';', 'HttpResponse', 'response', '=', 'httpClient', '.', 'execute', '(', 'httpPut', ')', ';', 'if', '(', 'HttpServletResponse', '.', 'SC_OK', '==', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ')', '{', 'resourceService', '.', 'saveTemplateResourcesToBeehive', '(', 'template', ')', ';', '}', 'else', 'if', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', '==', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ')', '{', 'return', 'null', ';', '}', 'else', '{', 'throw', 'new', 'BeehiveNotAvailableException', '(', '"', 'Failed', 'to', 'update', 'template:', '"', '+', 'template', '.', 'getName', '(', ')', '+', '"', ',', 'Status', 'code:', '', '"', '+', 'response', '.', 'getStatusLine', '(', ')', '.', 'getStatusCode', '(', ')', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'BeehiveNotAvailableException', '(', '"', 'Failed', 'to', 'save', 'screen', 'as', 'a', 'template:', '', '"', '+', '(', 'e', '.', 'getMessage', '(', ')', '==', 'null', '?', '"', '"', ':', 'e', '.', 'getMessage', '(', ')', ')', ',', 'e', ')', ';', '}', 'return', 'template', ';', '}']
Example 411 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'encrypt', '(', 'final', 'char', '[', ']', 'password', ',', 'final', 'String', 'algorithm', ',', 'final', 'byte', '[', ']', 'salt', ')', '{', 'final', 'StringBuffer', 'buffer', '=', 'new', 'StringBuffer', '(', ')', ';', 'MessageDigest', 'digest', '=', 'null', ';', 'int', 'size', '=', '0', ';', 'if', '(', '"', 'SHA', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', '||', '"', 'SSHA', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', ')', '{', 'size', '=', '20', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'buffer', '.', 'append', '(', '"', '{SSHA}', '"', ')', ';', '}', 'else', '{', 'buffer', '.', 'append', '(', '"', '{SHA}', '"', ')', ';', '}', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'algorithm', '"', ')', ';', '}', '}', 'else', 'if', '(', '"', 'MD5', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', '||', '"', 'SMD5', '"', '.', 'equalsIgnoreCase', '(', 'algorithm', ')', ')', '{', 'size', '=', '16', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'buffer', '.', 'append', '(', '"', '{SMD5}', '"', ')', ';', '}', 'else', '{', 'buffer', '.', 'append', '(', '"', '{MD5}', '"', ')', ';', '}', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', '}', 'catch', '(', 'final', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'Invalid', 'algorithm', '"', ')', ';', '}', '}', 'else', '{', 'throw', 'new', 'UnsupportedOperationException', '(', '"', 'Not', 'implemented', '"', ')', ';', '}', 'int', 'outSize', '=', 'size', ';', 'digest', '.', 'reset', '(', ')', ';', 'try', '{', 'digest', '.', 'update', '(', 'new', 'String', '(', 'password', ')', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'throw', 'new', 'IllegalStateException', '(', '"', 'UTF-8', 'Unsupported', '"', ')', ';', '}', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'digest', '.', 'update', '(', 'salt', ')', ';', 'outSize', '+=', 'salt', '.', 'length', ';', '}', 'final', 'byte', '[', ']', 'out', '=', 'new', 'byte', '[', 'outSize', ']', ';', 'System', '.', 'arraycopy', '(', 'digest', '.', 'digest', '(', ')', ',', '0', ',', 'out', ',', '0', ',', 'size', ')', ';', 'if', '(', '(', 'salt', '!=', 'null', ')', '&&', '(', 'salt', '.', 'length', '>', '0', ')', ')', '{', 'System', '.', 'arraycopy', '(', 'salt', ',', '0', ',', 'out', ',', 'size', ',', 'salt', '.', 'length', ')', ';', '}', 'buffer', '.', 'append', '(', 'new', 'String', '(', 'Base64', '.', 'encodeBase64', '(', 'out', ')', ')', ')', ';', 'return', 'buffer', '.', 'toString', '(', ')', ';', '}']
Example 412 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copyFile', '(', 'File', 'src', ',', 'File', 'dst', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'OutputStream', 'out', '=', 'new', 'FileOutputStream', '(', 'dst', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'out', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
  >>  iter 1, SUCC! out => url (1 => 0, 0.99988 => 0.00006) a=1.000
Example 413 attack result: {'succ': True, 'tokens': '    private void copyFile(File src, File dst) throws IOException {\n        InputStream in = new FileInputStream(src);\n        OutputStream url = new FileOutputStream(dst);\n        byte[] buf = new byte[1024];\n        int len;\n        while ((len = in.read(buf)) > 0) url.write(buf, 0, len);\n        in.close();\n        url.close();\n    }\n', 'raw_tokens': ['private', 'void', 'copyFile', '(', 'File', 'src', ',', 'File', 'dst', ')', 'throws', 'IOException', '{', 'InputStream', 'in', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'OutputStream', 'url', '=', 'new', 'FileOutputStream', '(', 'dst', ')', ';', 'byte', '[', ']', 'buf', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'len', ';', 'while', '(', '(', 'len', '=', 'in', '.', 'read', '(', 'buf', ')', ')', '>', '0', ')', 'url', '.', 'write', '(', 'buf', ',', '0', ',', 'len', ')', ';', 'in', '.', 'close', '(', ')', ';', 'url', '.', 'close', '(', ')', ';', '}'], 'prog_length': 84, 'new_pred': 0, 'is_success': 1, 'old_uid': 'out', 'score_info': -0.9998246, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'out': 'url'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 413 SUCCEEDED!
  time cost = 0.02 min
  ALL EXAMPLE time cost = 25.09 min
  curr succ rate = 0.050359712230215826
Query times in this attack:  36
All Query times:  39798
raw_tokens: ['public', 'String', 'call', '(', ')', 'throws', 'Exception', '{', 'InputStream', 'stream', '=', 'url', '.', 'openStream', '(', ')', ';', 'StringBuffer', 'sb', '=', 'new', 'StringBuffer', '(', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'stream', ')', ')', ';', 'String', 'line', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'sb', '.', 'append', '(', 'line', ')', ';', '}', 'return', 'sb', '.', 'toString', '(', ')', ';', '}']
Example 414 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'generateCode', '(', 'String', 'seed', ')', '{', 'try', '{', 'Security', '.', 'addProvider', '(', 'new', 'FNVProvider', '(', ')', ')', ';', 'MessageDigest', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'FNV-1a', '"', ')', ';', 'digest', '.', 'update', '(', '(', 'seed', '+', 'UUID', '.', 'randomUUID', '(', ')', '.', 'toString', '(', ')', ')', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'hash1', '=', 'digest', '.', 'digest', '(', ')', ';', 'String', 'sHash1', '=', '"', 'm', '"', '+', '(', 'new', 'String', '(', 'LibraryBase64', '.', 'encode', '(', 'hash1', ')', ')', ')', '.', 'replaceAll', '(', '"', '=', '"', ',', '"', '"', ')', ';', 'return', 'sHash1', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', 'Internal', 'error:', '"', '+', 'e', '.', 'getMessage', '(', ')', ')', ';', 'return', 'null', ';', '}', '}']
Example 415 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'FTPSource', '', '(', 'SourceDetail', 'sourceDetail', ')', 'throws', 'SourceException', '{', 'this', '.', 'sourceDetail', '=', 'sourceDetail', ';', 'localPathMap', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'client', '=', 'new', 'FTPClient', '(', ')', ';', 'try', '{', 'client', '.', 'connect', '(', 'sourceDetail', '.', 'getHost', '(', ')', ')', ';', 'client', '.', 'login', '(', 'sourceDetail', '.', 'getUser', '(', ')', ',', 'sourceDetail', '.', 'getPassword', '(', ')', ')', ';', 'workingDirectory', '=', 'new', 'File', '(', 'ConfigManager', '.', 'getGUIConfig', '(', ')', '.', 'getWorkingDirectoryName', '(', ')', '+', 'File', '.', 'separator', '+', 'sourceDetail', '.', 'getName', '(', ')', ')', ';', 'workingDirectory', '.', 'mkdir', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', 'new', 'SourceException', '(', 'e', ')', ';', '}', '}']
Example 416 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'ImportFromFile', '', '(', ')', '{', 'JFrame', 'jf', '=', 'new', 'JFrame', '(', ')', ';', 'JFileChooser', 'fc', '=', 'new', 'JFileChooser', '(', 'KTH', '.', 'data', '.', '_path', ')', ';', 'fc', '.', 'setFileSelectionMode', '(', 'JFileChooser', '.', 'FILES_ONLY', ')', ';', 'int', 'returnVal', '=', 'fc', '.', 'showOpenDialog', '(', 'jf', ')', ';', 'File', 'file', '=', 'null', ';', 'if', '(', 'returnVal', '==', 'JFileChooser', '.', 'APPROVE_OPTION', ')', '{', 'file', '=', 'fc', '.', 'getSelectedFile', '(', ')', ';', 'KTH', '.', 'data', '.', '_path', '=', 'file', '.', 'getParent', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'file', '.', 'getAbsolutePath', '(', ')', '+', '"', '', '"', ')', ';', '}', 'else', '{', '}', 'if', '(', 'file', '!=', 'null', ')', '{', 'File', 'f', '=', 'new', 'File', '(', 'KTH', '.', 'data', '.', 'getHomeDir', '(', ')', '+', 'File', '.', 'separator', '+', 'KTH', '.', 'data', '.', 'katalogName', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'f', '+', '(', 'f', '.', 'exists', '(', ')', '?', '"', '', 'is', 'found', '', '"', ':', '"', '', 'is', 'missing', '', '"', ')', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', '&&', '!', 'IOUtils', '.', 'isNewerContent', '(', 'file', ',', 'f', ')', ')', '{', '}', 'else', '{', 'try', '{', 'IOUtils', '.', 'copyFile', '(', 'file', ',', 'f', ',', 'true', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'KTH', '.', 'out', '.', 'err', '(', 'e', ')', ';', '}', '}', 'KTH', '.', 'dc2', '.', 'removeDc', '(', '"', 'Import', '"', ')', ';', '}', 'else', '{', '}', '}']
  >>  iter 1, ACC! is => os (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! os => igh (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! igh => isp (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! isp => os (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! os => ion (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! ion => version (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! version => isl (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! isl => un (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! un => version (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! version => are (1 => 1, 0.99988 => 0.99988) a=1.000
Example 417 attack result: {'succ': False, 'tokens': '    public ImportFromFile() {\n        JFrame jf = new JFrame();\n        JFileChooser fc = new JFileChooser(KTH.data._path);\n        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);\n        int returnVal = fc.showOpenDialog(jf);\n        File file = null;\n        if (returnVal == JFileChooser.APPROVE_OPTION) {\n            file = fc.getSelectedFile();\n            KTH.data._path = file.getParent();\n            System.out.println(file.getAbsolutePath() + "\n");\n        } else {\n        }\n        if (file != null) {\n            File f = new File(KTH.data.getHomeDir() + File.separator + KTH.data.katalogName);\n            System.out.println(f + (f.exists() ? " is found " : " is missing "));\n            if (f.exists() && !IOUtils.isNewerContent(file, f)) {\n            } else {\n                try {\n                    IOUtils.copyFile(file, f, true);\n                } catch (Exception e) {\n                    KTH.out.err(e);\n                }\n            }\n            KTH.dc2.removeDc("Import");\n        } else {\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 227, 'new_pred': 1, 'is_success': -1, 'old_uid': 'is', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'is': 'are'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 417 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 25.27 min
  curr succ rate = 0.05
Query times in this attack:  269
All Query times:  40067
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', '{', 'FTPClient', 'client', '=', 'new', 'FTPClient', '(', ')', ';', 'try', '{', 'client', '.', 'connect', '(', '"', 'ftp.domain.com', '"', ')', ';', 'client', '.', 'login', '(', '"', 'admin', '"', ',', '"', 'secret', '"', ')', ';', 'String', 'filename', '=', '"', '/testing/data.txt', '"', ';', 'boolean', 'deleted', '=', 'client', '.', 'deleteFile', '(', 'filename', ')', ';', 'if', '(', 'deleted', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'File', 'deleted...', '"', ')', ';', '}', 'client', '.', 'logout', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'client', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
Example 418 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'String', 'readGeoJSON', '(', 'String', 'feature', ')', '{', 'StringBuffer', 'content', '=', 'new', 'StringBuffer', '(', ')', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'feature', ')', ';', 'HttpURLConnection', 'conn', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'connect', '(', ')', ';', 'BufferedReader', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'content', '.', 'append', '(', 'line', ')', ';', '}', 'conn', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'return', 'content', '.', 'toString', '(', ')', ';', '}']
Example 419 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'byte', '[', ']', 'getKey', '(', 'String', 'password', ')', 'throws', 'UnsupportedEncodingException', ',', 'NoSuchAlgorithmException', '{', 'MessageDigest', 'messageDigest', '=', 'MessageDigest', '.', 'getInstance', '(', 'Constants', '.', 'HASH_FUNCTION', ')', ';', 'messageDigest', '.', 'update', '(', 'password', '.', 'getBytes', '(', 'Constants', '.', 'ENCODING', ')', ')', ';', 'byte', '[', ']', 'hashValue', '=', 'messageDigest', '.', 'digest', '(', ')', ';', 'int', 'keyLengthInbytes', '=', 'Constants', '.', 'ENCRYPTION_KEY_LENGTH', '/', '8', ';', 'byte', '[', ']', 'result', '=', 'new', 'byte', '[', 'keyLengthInbytes', ']', ';', 'System', '.', 'arraycopy', '(', 'hashValue', ',', '0', ',', 'result', ',', '0', ',', 'keyLengthInbytes', ')', ';', 'return', 'result', ';', '}']
Example 420 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'unzipEntry', '(', 'ZipFile', 'zipfile', ',', 'ZipEntry', 'entry', ',', 'File', 'outputDir', ')', 'throws', 'IOException', '{', 'if', '(', 'entry', '.', 'isDirectory', '(', ')', ')', '{', 'createDir', '(', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ')', ';', 'return', ';', '}', 'File', 'outputFile', '=', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ';', 'if', '(', '!', 'outputFile', '.', 'getParentFile', '(', ')', '.', 'exists', '(', ')', ')', '{', 'createDir', '(', 'outputFile', '.', 'getParentFile', '(', ')', ')', ';', '}', 'BufferedInputStream', 'inputStream', '=', 'new', 'BufferedInputStream', '(', 'zipfile', '.', 'getInputStream', '(', 'entry', ')', ')', ';', 'BufferedOutputStream', 'outputStream', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outputFile', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'outputStream', ')', ';', '}', 'finally', '{', 'outputStream', '.', 'close', '(', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', '}', '}']
Example 421 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'saveToTempFile', '(', 'Context', 'context', ',', 'String', 'filePath', ',', 'DirType', 'dirType', ',', 'String', 'tempSavePath', ',', 'boolean', 'secrete', ')', '{', 'FileOutputStream', 'fos', '=', 'null', ';', 'InputStream', 'in', '=', 'null', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'readLength', '=', '0', ';', 'boolean', 'result', '=', 'false', ';', 'try', '{', 'try', '{', 'File', 'f', '=', 'new', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', '.', 'getAbsolutePath', '(', ')', '+', 'File', '.', 'separator', '+', 'tempSavePath', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 'context', '.', 'deleteFile', '(', 'tempSavePath', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'fos', '=', 'context', '.', 'openFileOutput', '(', 'tempSavePath', ',', 'Context', '.', 'MODE_WORLD_READABLE', ')', ';', 'logger', '.', 'error', '(', '"', 'tempfile:', '"', '+', 'tempSavePath', ')', ';', 'if', '(', 'dirType', '==', 'DirType', '.', 'assets', ')', '{', 'AssetManager', 'assetManager', '=', 'context', '.', 'getAssets', '(', ')', ';', 'in', '=', 'assetManager', '.', 'open', '(', 'filePath', ')', ';', '}', 'else', 'if', '(', 'dirType', '==', 'DirType', '.', 'file', '&&', 'Constant', '.', 'getUpdateDataPath', '(', ')', '!=', 'null', ')', '{', 'in', '=', 'new', 'FileInputStream', '(', 'Constant', '.', 'getUpdateDataPath', '(', ')', '+', 'File', '.', 'separator', '+', 'filePath', ')', ';', '}', 'else', 'if', '(', 'dirType', '==', 'DirType', '.', 'sd', '&&', 'Constant', '.', 'getSdPath', '(', ')', '!=', 'null', ')', '{', 'in', '=', 'new', 'FileInputStream', '(', 'Constant', '.', 'getSdPath', '(', ')', '+', 'File', '.', 'separator', '+', 'filePath', ')', ';', '}', 'else', 'if', '(', 'dirType', '==', 'DirType', '.', 'extSd', '&&', 'Constant', '.', 'getExtSdPath', '(', ')', '!=', 'null', ')', '{', 'in', '=', 'new', 'FileInputStream', '(', 'Constant', '.', 'getExtSdPath', '(', ')', '+', 'File', '.', 'separator', '+', 'filePath', ')', ';', '}', 'if', '(', 'in', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'readLength', '=', 'in', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'readLength', '>=', 'ZipToFile', '.', 'encrypLength', '&&', 'secrete', ')', '{', 'byte', '[', ']', 'encrypByte', '=', 'new', 'byte', '[', 'ZipToFile', '.', 'encrypLength', ']', ';', 'System', '.', 'arraycopy', '(', 'buffer', ',', '0', ',', 'encrypByte', ',', '0', ',', 'ZipToFile', '.', 'encrypLength', ')', ';', 'byte', '[', ']', 'temp', '=', 'CryptionControl', '.', 'getInstance', '(', ')', '.', 'decryptECB', '(', 'encrypByte', ',', 'ZipToFile', '.', 'rootKey', ')', ';', 'System', '.', 'arraycopy', '(', 'temp', ',', '0', ',', 'buffer', ',', '0', ',', 'ZipToFile', '.', 'encrypLength', ')', ';', '}', 'while', '(', 'readLength', '>', '0', ')', '{', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'readLength', ')', ';', 'fos', '.', 'flush', '(', ')', ';', 'readLength', '=', 'in', '.', 'read', '(', 'buffer', ')', ';', '}', 'result', '=', 'true', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'if', '(', 'fos', '!=', 'null', ')', '{', 'try', '{', 'fos', '.', 'flush', '(', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', 'if', '(', 'in', '!=', 'null', ')', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}', 'return', 'result', ';', '}']
Example 422 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'void', 'copy', '(', 'File', 'source', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'FileChannel', 'in', '=', 'null', ';', 'FileChannel', 'out', '=', 'null', ';', 'try', '{', 'in', '=', '(', 'new', 'FileInputStream', '(', 'source', ')', ')', '.', 'getChannel', '(', ')', ';', 'out', '=', '(', 'new', 'FileOutputStream', '(', 'dest', ')', ')', '.', 'getChannel', '(', ')', ';', 'in', '.', 'transferTo', '(', '0', ',', 'source', '.', 'length', '(', ')', ',', 'out', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'Wrong', 'source', 'or', 'destination', 'path', 'for', 'backup', 'operation!', '"', ')', ';', '}', 'finally', '{', 'if', '(', 'out', '!=', 'null', ')', '{', 'out', '.', 'close', '(', ')', ';', '}', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', '}', '}']
  >>  iter 1, ACC! out => outs (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! outs => write (1 => 1, 0.99988 => 0.99988) a=11.022
  >>  iter 3, ACC! write => source (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! source => server (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 5, SUCC! server => url (1 => 0, 0.99988 => 0.00002) a=1.000
Example 423 attack result: {'succ': True, 'tokens': '    @Override\n    public void copy(File url, File dest) throws IOException {\n        FileChannel in = null;\n        FileChannel url = null;\n        try {\n            in = (new FileInputStream(url)).getChannel();\n            url = (new FileOutputStream(dest)).getChannel();\n            in.transferTo(0, url.length(), url);\n        } catch (FileNotFoundException e) {\n            throw new IOException("Wrong source or destination path for backup operation!");\n        } finally {\n            if (url != null) {\n                url.close();\n            }\n            if (in != null) {\n                in.close();\n            }\n        }\n    }\n', 'raw_tokens': ['@', 'Override', 'public', 'void', 'copy', '(', 'File', 'url', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'FileChannel', 'in', '=', 'null', ';', 'FileChannel', 'url', '=', 'null', ';', 'try', '{', 'in', '=', '(', 'new', 'FileInputStream', '(', 'url', ')', ')', '.', 'getChannel', '(', ')', ';', 'url', '=', '(', 'new', 'FileOutputStream', '(', 'dest', ')', ')', '.', 'getChannel', '(', ')', ';', 'in', '.', 'transferTo', '(', '0', ',', 'url', '.', 'length', '(', ')', ',', 'url', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'Wrong', 'url', 'or', 'destination', 'path', 'for', 'backup', 'operation!', '"', ')', ';', '}', 'finally', '{', 'if', '(', 'url', '!=', 'null', ')', '{', 'url', '.', 'close', '(', ')', ';', '}', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', '}', '}'], 'prog_length': 119, 'new_pred': 0, 'is_success': 1, 'old_uid': 'out', 'score_info': -0.9998589, 'nb_changed_var': 1, 'nb_changed_pos': 5, 'replace_info': {'out': 'url'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 423 SUCCEEDED!
  time cost = 0.08 min
  ALL EXAMPLE time cost = 25.41 min
  curr succ rate = 0.05673758865248227
Query times in this attack:  161
All Query times:  40228
raw_tokens: ['private', 'void', 'proxyMediaServlet', '(', 'String', 'url', ',', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'resp', ')', '{', 'try', '{', 'URL', 'u', '=', 'new', 'URL', '(', '"', 'http://mediaserver:8080/sagex', '"', '+', 'url', ')', ';', 'log', '.', 'debug', '(', '"', 'Proxy', 'Media:', '', '"', '+', 'u', '.', 'toString', '(', ')', ')', ';', 'URLConnection', 'c', '=', 'u', '.', 'openConnection', '(', ')', ';', 'c', '.', 'setRequestProperty', '(', '"', 'User-Agent', '"', ',', '"', 'Mozilla/5.0', '(X11;', 'U;', 'Linux', 'i686;', 'en-US;', 'rv:1.9.0.1)', 'Gecko/2008072820', 'Firefox/3.0.1', '"', ')', ';', 'OutputStream', 'os', '=', 'resp', '.', 'getOutputStream', '(', ')', ';', 'IOUtils', '.', 'copy', '(', 'c', '.', 'getInputStream', '(', ')', ',', 'os', ')', ';', 'os', '.', 'flush', '(', ')', ';', 'resp', '.', 'flushBuffer', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'error', '(', '"', 'Failed', 'to', 'get', 'url:', '', '"', '+', 'url', ',', 't', ')', ';', 'try', '{', 'resp', '.', 'sendError', '(', '500', ',', 't', '.', 'getMessage', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}']
Example 424 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'InputStream', 'getResponse', '(', 'String', 'pURL', ',', 'String', 'pUserName', ',', 'String', 'pPassword', ',', 'OutputStream', 'pResponseOutputStream', ',', 'String', 'pHttpMethodType', ')', 'throws', 'Exception', '{', 'BufferedInputStream', 'bis', '=', 'null', ';', 'BufferedOutputStream', 'bos', '=', 'null', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'pURL', ')', ';', 'int', 'port', '=', 'url', '.', 'getPort', '(', ')', ';', 'if', '(', '-', '1', '==', 'port', ')', '{', 'port', '=', 'url', '.', 'getDefaultPort', '(', ')', ';', '}', 'if', '(', 'url', '.', 'getProtocol', '(', ')', '.', 'equals', '(', 'HTTPS_PROTOCOL', ')', ')', '{', 'Protocol', 'httpsProtocol', '=', 'new', 'Protocol', '(', 'HTTPS_PROTOCOL', ',', 'new', 'EasySSLProtocolSocketFactory', '(', ')', ',', 'port', ')', ';', 'Protocol', '.', 'registerProtocol', '(', 'HTTPS_PROTOCOL', ',', 'httpsProtocol', ')', ';', '}', 'HttpClient', 'httpClient', '=', 'new', 'HttpClient', '(', ')', ';', 'httpClient', '.', 'getParams', '(', ')', '.', 'setParameter', '(', '"', 'http.socket.timeout', '"', ',', 'HTTP_SOCKET_TIMEOUT', ')', ';', 'HttpMethod', 'httpMethod', '=', 'getHttpMethod', '(', 'pHttpMethodType', ',', 'pURL', ')', ';', 'if', '(', 'null', '!=', 'pUserName', '&&', 'null', '!=', 'pPassword', ')', '{', 'httpClient', '.', 'getState', '(', ')', '.', 'setCredentials', '(', 'AuthScope', '.', 'ANY', ',', 'new', 'UsernamePasswordCredentials', '(', 'pUserName', ',', 'pPassword', ')', ')', ';', '}', 'try', '{', 'httpClient', '.', 'executeMethod', '(', 'httpMethod', ')', ';', 'if', '(', 'null', '!=', 'pResponseOutputStream', ')', '{', 'IOUtils', '.', 'copy', '(', 'httpMethod', '.', 'getResponseBodyAsStream', '(', ')', ',', 'pResponseOutputStream', ')', ';', '}', 'return', 'httpMethod', '.', 'getResponseBodyAsStream', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'throw', '(', 'e', ')', ';', '}', 'finally', '{', 'httpMethod', '.', 'releaseConnection', '(', ')', ';', '}', '}']
Example 425 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'download', '(', 'Downloadable', 'downloadable', ',', 'HttpServletResponse', 'response', ')', 'throws', 'Exception', '{', 'String', 'contentType', '=', 'downloadable', '.', 'getContentType', '(', ')', ';', 'try', '{', 'response', '.', 'setContentType', '(', 'contentType', ')', ';', 'response', '.', 'setHeader', '(', '"', 'Content-Disposition', '"', ',', '"', 'attachment;', '"', '+', '"', '', 'filename=', '"', '+', 'new', 'String', '(', 'downloadable', '.', 'getName', '(', ')', '.', 'getBytes', '(', ')', ',', '"', 'ISO-8859-1', '"', ')', ')', ';', 'OutputStream', 'os', '=', 'response', '.', 'getOutputStream', '(', ')', ';', 'IOUtils', '.', 'copy', '(', 'downloadable', '.', 'getInputStream', '(', ')', ',', 'os', ')', ';', 'os', '.', 'flush', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}']
Example 426 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'void', 'generateDiffResults', '(', 'File', 'outFile', ')', 'throws', 'IOException', '{', 'FileOutputStream', 'outStream', '=', 'new', 'FileOutputStream', '(', 'outFile', ')', ';', 'BufferedWriter', 'out', '=', 'new', 'BufferedWriter', '(', 'new', 'OutputStreamWriter', '(', 'outStream', ',', 'outputCharset', ')', ')', ';', 'intlWrite', '(', 'out', ',', 'HTML_STRICT_DOCTYPE', '+', '"', '<html><head><title>${Report.Title}</title>', '"', '+', '"', '<meta', 'http-equiv=', '\\"', 'Content-Type', '\\"', '"', '+', '"', '', 'content=', '\\"', 'text/html;', 'charset=', '"', '+', 'outputCharset', '+', '"', '\\"', '>', '"', '+', '"', '<style', 'type=', '\\"', 'text/css', '\\"', '>', '"', ')', ';', 'out', '.', 'write', '(', 'LOCDiff', '.', 'getCssText', '(', ')', ')', ';', 'writeCustomStyleInfo', '(', 'out', ')', ';', 'out', '.', 'write', '(', '"', '</style></head>', '"', '+', '"', '<body>', '"', '+', '"', '<div>', '"', ')', ';', 'if', '(', 'addedTable', '.', 'length', '(', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', '"', '<table', 'border>', '"', ')', ';', 'intlWrite', '(', 'out', ',', 'getAddedTableHeader', '(', ')', ')', ';', 'out', '.', 'write', '(', 'addedTable', '.', 'toString', '(', ')', ')', ';', 'out', '.', 'write', '(', '"', '</table><br><br>', '"', ')', ';', '}', 'if', '(', 'modifiedTable', '.', 'length', '(', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', '"', '<table', 'border>', '"', ')', ';', 'intlWrite', '(', 'out', ',', 'getModifiedTableHeader', '(', ')', ')', ';', 'out', '.', 'write', '(', 'modifiedTable', '.', 'toString', '(', ')', ')', ';', 'out', '.', 'write', '(', '"', '</table><br><br>', '"', ')', ';', '}', 'if', '(', 'deletedTable', '.', 'length', '(', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', '"', '<table', 'border>', '"', ')', ';', 'intlWrite', '(', 'out', ',', 'getDeletedTableHeader', '(', ')', ')', ';', 'out', '.', 'write', '(', 'deletedTable', '.', 'toString', '(', ')', ')', ';', 'out', '.', 'write', '(', '"', '</table><br><br>', '"', ')', ';', '}', 'if', '(', 'unchangedTable', '.', 'length', '(', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', '"', '<table', 'border>', '"', ')', ';', 'intlWrite', '(', 'out', ',', 'getUnchangedTableHeader', '(', ')', ')', ';', 'out', '.', 'write', '(', 'unchangedTable', '.', 'toString', '(', ')', ')', ';', 'out', '.', 'write', '(', '"', '</table><br><br>', '"', ')', ';', '}', 'writeSummaryTable', '(', 'out', ')', ';', 'out', '.', 'write', '(', '"', '</div>', '"', ')', ';', 'redlinesOut', '.', 'close', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'InputStream', 'redlines', '=', 'new', 'FileInputStream', '(', 'redlinesTempFile', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'bytesRead', ';', 'while', '(', '(', 'bytesRead', '=', 'redlines', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', 'outStream', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytesRead', ')', ';', 'outStream', '.', 'write', '(', '"', '</BODY></HTML>', '"', '.', 'getBytes', '(', ')', ')', ';', 'outStream', '.', 'close', '(', ')', ';', '}']
Example 427 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'String', 'encryptToSHA', '(', 'String', 'info', ')', '{', 'byte', '[', ']', 'digesta', '=', 'null', ';', 'try', '{', 'MessageDigest', 'alga', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'alga', '.', 'update', '(', 'info', '.', 'getBytes', '(', ')', ')', ';', 'digesta', '=', 'alga', '.', 'digest', '(', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'String', 'rs', '=', 'byte2hex', '(', 'digesta', ')', ';', 'return', 'rs', ';', '}']
  >>  iter 1, REJ. digest => dige (0 => 0, 0.99727 => 0.99729) a=0.998
  >>  iter 2, REJ. digest => mdast (0 => 0, 0.99727 => 0.99730) a=0.998
  >>  iter 3, REJ. digest => mdenge (0 => 0, 0.99727 => 0.99728) a=0.998
  >>  iter 4, REJ. digest => signusher (0 => 0, 0.99727 => 0.99729) a=0.998
  >>  iter 5, REJ. digest => digusher (0 => 0, 0.99727 => 0.99729) a=0.998
  >>  iter 6, REJ. digest => generester (0 => 0, 0.99727 => 0.99729) a=0.998
  >>  iter 7, REJ. digest => generit (0 => 0, 0.99727 => 0.99729) a=0.998
  >>  iter 8, REJ. digest => pedester (0 => 0, 0.99727 => 0.99730) a=0.998
  >>  iter 9, REJ. digest => pede (0 => 0, 0.99727 => 0.99730) a=0.998
  >>  iter 10, REJ. digest => logenge (0 => 0, 0.99727 => 0.99729) a=0.998
Example 428 attack result: {'succ': False, 'tokens': '    public String encryptToSHA(String info) {\n        byte[] digesta = null;\n        try {\n            MessageDigest alga = MessageDigest.getInstance("SHA-1");\n            alga.update(info.getBytes());\n            digesta = alga.logenge();\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n        String rs = byte2hex(digesta);\n        return rs;\n    }\n', 'raw_tokens': None, 'prog_length': 74, 'new_pred': 0, 'is_success': -1, 'old_uid': '', 'score_info': -1.6868114e-05, 'nb_changed_var': 0, 'nb_changed_pos': 0, 'replace_info': {}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 428 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 25.61 min
  curr succ rate = 0.056338028169014086
Query times in this attack:  320
All Query times:  40548
raw_tokens: ['public', 'ActionResponse', 'executeAction', '(', 'ActionRequest', 'request', ')', 'throws', 'Exception', '{', 'ActionResponse', 'resp', '=', 'new', 'ActionResponse', '(', ')', ';', 'BufferedReader', 'in', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'URL', ')', ';', 'HttpURLConnection', 'conn', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'int', 'status', '=', 'conn', '.', 'getResponseCode', '(', ')', ';', 'if', '(', 'status', '==', '200', ')', '{', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'while', '(', 'true', ')', '{', 'String', 'line', '=', 'in', '.', 'readLine', '(', ')', ';', 'if', '(', 'line', '==', 'null', ')', 'break', ';', 'resp', '.', 'addResult', '(', '"', 'REMOTEVERSION', '"', ',', 'line', ')', ';', '}', '}', 'else', '{', 'resp', '.', 'setErrorCode', '(', 'ActionResponse', '.', 'GENERAL_ERROR', ')', ';', 'resp', '.', 'setErrorMessage', '(', '"', 'HTTP', 'Error', '[', '"', '+', 'status', '+', '"', ']', '"', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'resp', '.', 'setErrorCode', '(', 'ActionResponse', '.', 'GENERAL_ERROR', ')', ';', 'resp', '.', 'setErrorMessage', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', 'finally', '{', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', '}', 'return', 'resp', ';', '}']
Example 429 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'void', 'end', '(', ')', '{', 'm_zipFormatter', '.', 'end', '(', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'm_outputStream', ')', ';', 'final', 'FTPClient', 'ftp', '=', 'new', 'FTPClient', '(', ')', ';', 'FileInputStream', 'fis', '=', 'null', ';', 'try', '{', 'if', '(', 'm_url', '.', 'getPort', '(', ')', '==', '-', '1', '||', 'm_url', '.', 'getPort', '(', ')', '==', '0', '||', 'm_url', '.', 'getPort', '(', ')', '==', 'm_url', '.', 'getDefaultPort', '(', ')', ')', '{', 'ftp', '.', 'connect', '(', 'm_url', '.', 'getHost', '(', ')', ')', ';', '}', 'else', '{', 'ftp', '.', 'connect', '(', 'm_url', '.', 'getHost', '(', ')', ',', 'm_url', '.', 'getPort', '(', ')', ')', ';', '}', 'if', '(', 'm_url', '.', 'getUserInfo', '(', ')', '!=', 'null', '&&', 'm_url', '.', 'getUserInfo', '(', ')', '.', 'length', '(', ')', '>', '0', ')', '{', 'final', 'String', '[', ']', 'userInfo', '=', 'm_url', '.', 'getUserInfo', '(', ')', '.', 'split', '(', '"', ':', '"', ',', '2', ')', ';', 'ftp', '.', 'login', '(', 'userInfo', '[', '0', ']', ',', 'userInfo', '[', '1', ']', ')', ';', '}', 'else', '{', 'ftp', '.', 'login', '(', '"', 'anonymous', '"', ',', '"', 'opennmsftp@', '"', ')', ';', '}', 'int', 'reply', '=', 'ftp', '.', 'getReplyCode', '(', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'reply', ')', ')', '{', 'ftp', '.', 'disconnect', '(', ')', ';', 'LogUtils', '.', 'errorf', '(', 'this', ',', '"', 'FTP', 'server', 'refused', 'connection.', '"', ')', ';', 'return', ';', '}', 'String', 'path', '=', 'm_url', '.', 'getPath', '(', ')', ';', 'if', '(', 'path', '.', 'endsWith', '(', '"', '/', '"', ')', ')', '{', 'LogUtils', '.', 'errorf', '(', 'this', ',', '"', 'Your', 'FTP', 'URL', 'must', 'specify', 'a', 'filename.', '"', ')', ';', 'return', ';', '}', 'File', 'f', '=', 'new', 'File', '(', 'path', ')', ';', 'path', '=', 'f', '.', 'getParent', '(', ')', ';', 'if', '(', '!', 'ftp', '.', 'changeWorkingDirectory', '(', 'path', ')', ')', '{', 'LogUtils', '.', 'infof', '(', 'this', ',', '"', 'unable', 'to', 'change', 'working', 'directory', 'to', '%s', '"', ',', 'path', ')', ';', 'return', ';', '}', 'LogUtils', '.', 'infof', '(', 'this', ',', '"', 'uploading', '%s', 'to', '%s', '"', ',', 'f', '.', 'getName', '(', ')', ',', 'path', ')', ';', 'ftp', '.', 'setFileType', '(', 'FTP', '.', 'BINARY_FILE_TYPE', ')', ';', 'fis', '=', 'new', 'FileInputStream', '(', 'm_zipFile', ')', ';', 'if', '(', '!', 'ftp', '.', 'storeFile', '(', 'f', '.', 'getName', '(', ')', ',', 'fis', ')', ')', '{', 'LogUtils', '.', 'infof', '(', 'this', ',', '"', 'unable', 'to', 'store', 'file', '"', ')', ';', 'return', ';', '}', 'LogUtils', '.', 'infof', '(', 'this', ',', '"', 'finished', 'uploading', '"', ')', ';', '}', 'catch', '(', 'final', 'Exception', 'e', ')', '{', 'LogUtils', '.', 'errorf', '(', 'this', ',', 'e', ',', '"', 'Unable', 'to', 'FTP', 'file', 'to', '%s', '"', ',', 'm_url', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'fis', ')', ';', 'if', '(', 'ftp', '.', 'isConnected', '(', ')', ')', '{', 'try', '{', 'ftp', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '}', '}', '}', '}']
Example 430 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copy', '(', 'String', 'a', ',', 'String', 'b', ')', 'throws', 'IOException', '{', 'File', 'inputFile', '=', 'new', 'File', '(', 'a', ')', ';', 'File', 'outputFile', '=', 'new', 'File', '(', 'b', ')', ';', 'FileReader', 'in', '=', 'new', 'FileReader', '(', 'inputFile', ')', ';', 'FileWriter', 'out', '=', 'new', 'FileWriter', '(', 'outputFile', ')', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', 'out', '.', 'write', '(', 'c', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
Example 431 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'decodeFileToFile', '(', 'String', 'infile', ',', 'String', 'outfile', ')', '{', 'boolean', 'success', '=', 'false', ';', 'java', '.', 'io', '.', 'InputStream', 'in', '=', 'null', ';', 'java', '.', 'io', '.', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'Base64', '.', 'InputStream', '(', 'new', 'java', '.', 'io', '.', 'BufferedInputStream', '(', 'new', 'java', '.', 'io', '.', 'FileInputStream', '(', 'infile', ')', ')', ',', 'Base64', '.', 'DECODE', ')', ';', 'out', '=', 'new', 'java', '.', 'io', '.', 'BufferedOutputStream', '(', 'new', 'java', '.', 'io', '.', 'FileOutputStream', '(', 'outfile', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'success', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', 'try', '{', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', '}', 'return', 'success', ';', '}']
Example 432 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['void', 'queryFile', '(', 'String', 'rendezvousProgram', ',', 'String', 'rendezvousMD5', ')', '{', 'try', '{', 'XMLConfigParser', '.', 'readUrlHost', '(', ')', ';', 'String', 'url', '=', 'XMLConfigParser', '.', 'urlHost', ';', 'String', 'query', ';', 'String', 'param1', '=', '"', 'op=query', '"', ';', 'String', 'param2', '=', '"', 'program=', '"', '+', 'rendezvousProgram', ';', 'String', 'param3', '=', '"', 'md5=', '"', '+', 'rendezvousMD5', ';', 'query', '=', 'String', '.', 'format', '(', '"', '%s&%s&%s', '"', ',', 'param1', ',', 'param2', ',', 'param3', ')', ';', 'openConnection', '(', 'query', ',', 'url', ')', ';', 'String', 'line', '=', 'br', '.', 'readLine', '(', ')', ';', 'NetworkLog', '.', 'logMsg', '(', 'NetworkLog', '.', 'LOG_DEBUG', ',', 'this', ',', '"', '(Query)', 'Response', 'of', 'the', 'server:', '', '"', '+', 'line', ')', ';', 'br', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'NetworkLog', '.', 'logMsg', '(', 'NetworkLog', '.', 'LOG_ERROR', ',', 'this', ',', '"', 'Error', '"', '+', 'e', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'NetworkLog', '.', 'logMsg', '(', 'NetworkLog', '.', 'LOG_ERROR', ',', 'this', ',', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}']
  >>  iter 1, ACC! br => arr (0 => 0, 0.99799 => 0.99795) a=1.117
  >>  iter 2, ACC! arr => bs (0 => 0, 0.99795 => 0.99788) a=1.053
  >>  iter 3, ACC! bs => sp (0 => 0, 0.99788 => 0.99800) a=1.059
  >>  iter 4, ACC! sp => body (0 => 0, 0.99800 => 0.99798) a=1.078
  >>  iter 5, ACC! body => arr (0 => 0, 0.99798 => 0.99795) a=1.058
  >>  iter 6, ACC! arr => res (0 => 0, 0.99795 => 0.99802) a=1.044
  >>  iter 7, ACC! res => sp (0 => 0, 0.99802 => 0.99800) a=1.131
  >>  iter 8, ACC! sp => r (0 => 0, 0.99800 => 0.99801) a=1.120
  >>  iter 9, ACC! r => gr (0 => 0, 0.99801 => 0.99800) a=1.128
  >>  iter 10, ACC! gr => tr (0 => 0, 0.99800 => 0.99803) a=1.120
Example 433 attack result: {'succ': False, 'tokens': '    void queryFile(String rendezvousProgram, String rendezvousMD5) {\n        try {\n            XMLConfigParser.readUrlHost();\n            String url = XMLConfigParser.urlHost;\n            String query;\n            String param1 = "op=query";\n            String param2 = "program=" + rendezvousProgram;\n            String param3 = "md5=" + rendezvousMD5;\n            query = String.format("%s&%s&%s", param1, param2, param3);\n            openConnection(query, url);\n            String line = tr.readLine();\n            NetworkLog.logMsg(NetworkLog.LOG_DEBUG, this, "(Query) Response of the server: " + line);\n            tr.close();\n        } catch (MalformedURLException e) {\n            NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, "Error" + e);\n        } catch (IOException e) {\n            NetworkLog.logMsg(NetworkLog.LOG_ERROR, this, e.getMessage());\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 159, 'new_pred': 0, 'is_success': -1, 'old_uid': 'br', 'score_info': -2.6583672e-05, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'br': 'tr'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 433 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 25.82 min
  curr succ rate = 0.055944055944055944
Query times in this attack:  314
All Query times:  40862
raw_tokens: ['public', 'void', 'CopyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'Exception', '{', 'FileInputStream', 'fis', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fis', '=', 'new', 'FileInputStream', '(', 'source', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'destination', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'fis', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fis', '!=', 'null', ')', '{', 'fis', '.', 'close', '(', ')', ';', '}', 'if', '(', 'fos', '!=', 'null', ')', '{', 'fos', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
Example 434 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'encodePassword', '(', 'String', 'password', ')', '{', 'try', '{', 'MessageDigest', 'messageDiegest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'messageDiegest', '.', 'update', '(', 'password', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', 'return', 'Base64', '.', 'encodeToString', '(', 'messageDiegest', '.', 'digest', '(', ')', ',', 'false', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'log', '.', 'error', '(', '"', 'Ha', 'habido', 'un', 'error', 'mientras', 'se', 'almacenaba', 'la', 'clave', 'de', 'acceso.', '"', ')', ';', 'throw', 'new', 'Error', '(', 'e', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'log', '.', 'error', '(', '"', 'Ha', 'habido', 'un', 'error', 'mientras', 'se', 'almacenaba', 'la', 'clave', 'de', 'acceso.', '"', ')', ';', 'throw', 'new', 'Error', '(', 'e', ')', ';', '}', '}']
Example 435 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'copyFile', '(', 'final', 'File', 'src', ',', 'final', 'File', 'dst', ')', '{', 'boolean', 'result', '=', 'false', ';', 'FileChannel', 'inChannel', '=', 'null', ';', 'FileChannel', 'outChannel', '=', 'null', ';', 'synchronized', '(', 'FileUtil', '.', 'DATA_LOCK', ')', '{', 'try', '{', 'inChannel', '=', 'new', 'FileInputStream', '(', 'src', ')', '.', 'getChannel', '(', ')', ';', 'outChannel', '=', 'new', 'FileOutputStream', '(', 'dst', ')', '.', 'getChannel', '(', ')', ';', 'inChannel', '.', 'transferTo', '(', '0', ',', 'inChannel', '.', 'size', '(', ')', ',', 'outChannel', ')', ';', 'result', '=', 'true', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', 'finally', '{', 'if', '(', 'inChannel', '!=', 'null', '&&', 'inChannel', '.', 'isOpen', '(', ')', ')', '{', 'try', '{', 'inChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', 'if', '(', 'outChannel', '!=', 'null', '&&', 'outChannel', '.', 'isOpen', '(', ')', ')', '{', 'try', '{', 'outChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'return', 'result', ';', '}']
Example 436 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'extractFrinika', '(', ')', 'throws', 'Exception', '{', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'frinikaFile', ')', ';', 'progressBar', '.', 'setIndeterminate', '(', 'true', ')', ';', 'ZipInputStream', 'zis', '=', 'new', 'ZipInputStream', '(', 'fis', ')', ';', 'ZipEntry', 'ze', '=', 'zis', '.', 'getNextEntry', '(', ')', ';', 'while', '(', 'ze', '!=', 'null', ')', '{', 'showMessage', '(', '"', 'Extracting:', '', '"', '+', 'ze', '.', 'getName', '(', ')', ')', ';', 'File', 'file', '=', 'new', 'File', '(', 'installDirName', '+', '"', '/', '"', '+', 'ze', '.', 'getName', '(', ')', ')', ';', 'if', '(', 'ze', '.', 'isDirectory', '(', ')', ')', 'file', '.', 'mkdir', '(', ')', ';', 'else', '{', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'file', ')', ';', 'byte', '[', ']', 'b', '=', 'new', 'byte', '[', 'BUFSIZE', ']', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'zis', '.', 'read', '(', 'b', ')', ')', '!=', '-', '1', ')', 'fos', '.', 'write', '(', 'b', ',', '0', ',', 'c', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'ze', '=', 'zis', '.', 'getNextEntry', '(', ')', ';', '}', '}']
Example 437 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'HogsCustomizer', '', '(', ')', '{', 'm_filename', '=', 'PathFinder', '.', 'getCustsFile', '(', ')', ';', 'm_currenttaunts', '=', 'new', 'String', '[', '10', ']', ';', 'm_textfields', '=', 'new', 'JTextField', '[', '10', ']', ';', 'm_color', '=', 'new', 'Color', '(', '255', ',', '255', ',', '255', ')', ';', 'boolean', 'exists', '=', '(', 'new', 'File', '(', 'm_filename', ')', ')', '.', 'exists', '(', ')', ';', 'm_inverted', '=', 'false', ';', 'm_chooser', '=', 'new', 'JColorChooser', '(', ')', ';', 'AbstractColorChooserPanel', '[', ']', 'panels', '=', 'm_chooser', '.', 'getChooserPanels', '(', ')', ';', 'm_chooser', '.', 'removeChooserPanel', '(', 'panels', '[', '0', ']', ')', ';', 'm_chooser', '.', 'removeChooserPanel', '(', 'panels', '[', '2', ']', ')', ';', 'm_chooser', '.', 'setPreviewPanel', '(', 'new', 'JPanel', '(', ')', ')', ';', 'Reader', 'reader', '=', 'null', ';', 'if', '(', 'exists', ')', '{', 'try', '{', 'reader', '=', 'new', 'FileReader', '(', 'm_filename', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', 'else', '{', 'Object', '[', ']', 'options', '=', '{', '"', 'Yes', '"', ',', '"', 'No,', 'Thanks', '"', '}', ';', 'int', 'n', '=', 'JOptionPane', '.', 'showOptionDialog', '(', 'this', ',', '"', 'You', 'do', 'not', 'have', 'a', 'customization', 'file', 'in', 'your', 'home', 'directory.', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '"', '+', '"', 'Would', 'you', 'like', 'to', 'create', 'one?', '"', ',', '"', 'Hogs', 'Customization', '"', ',', 'JOptionPane', '.', 'YES_NO_OPTION', ',', 'JOptionPane', '.', 'QUESTION_MESSAGE', ',', 'null', ',', 'options', ',', 'options', '[', '1', ']', ')', ';', 'if', '(', 'n', '==', '0', ')', '{', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'HogsConstants', '.', 'CUSTS_TEMPLATE', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'm_filename', ')', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', 'else', '{', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'try', '{', 'reader', '=', 'new', 'FileReader', '(', 'm_filename', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e1', ')', '{', 'e1', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', '}', 'try', '{', 'readFromFile', '(', 'reader', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'System', '.', 'exit', '(', '0', ')', ';', '}', 'Box', 'mainpanel', '=', 'Box', '.', 'createVerticalBox', '(', ')', ';', 'mainpanel', '.', 'add', '(', 'buildTauntsPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildMouseStylePanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildColorPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'buildButtonsPanel', '(', ')', ')', ';', 'mainpanel', '.', 'add', '(', 'Box', '.', 'createVerticalStrut', '(', '10', ')', ')', ';', 'this', '.', 'setDefaultCloseOperation', '(', 'JFrame', '.', 'EXIT_ON_CLOSE', ')', ';', 'this', '.', 'setContentPane', '(', 'mainpanel', ')', ';', 'this', '.', 'pack', '(', ')', ';', 'Dimension', 'dim', '=', 'Toolkit', '.', 'getDefaultToolkit', '(', ')', '.', 'getScreenSize', '(', ')', ';', 'this', '.', 'setLocation', '(', 'dim', '.', 'width', '/', '2', '-', '(', 'this', '.', 'getWidth', '(', ')', '/', '2', ')', ',', 'dim', '.', 'height', '/', '2', '-', '(', 'this', '.', 'getHeight', '(', ')', '/', '2', ')', ')', ';', 'this', '.', 'setTitle', '(', '"', 'Hogs', 'Customizer', '"', ')', ';', 'this', '.', 'setVisible', '(', 'true', ')', ';', '}']
  >>  iter 1, ACC! size => uri (1 => 1, 0.99988 => 0.99988) a=1.005
  >>  iter 2, REJ. uri => max (1 => 1, 0.99988 => 0.99988) a=0.998
  >>  iter 3, REJ. uri => loc (1 => 1, 0.99988 => 0.99988) a=0.998
  >>  iter 4, REJ. uri => name (1 => 1, 0.99988 => 0.99988) a=0.998
  >>  iter 5, REJ. uri => six (1 => 1, 0.99988 => 0.99988) a=0.997
  >>  iter 6, REJ. uri => limit (1 => 1, 0.99988 => 0.99988) a=0.997
  >>  iter 7, REJ. uri => speed (1 => 1, 0.99988 => 0.99988) a=0.997
  >>  iter 8, REJ. uri => mini (1 => 1, 0.99988 => 0.99988) a=0.998
  >>  iter 9, REJ. uri => unit (1 => 1, 0.99988 => 0.99988) a=0.998
  >>  iter 10, REJ. uri => ize (1 => 1, 0.99988 => 0.99988) a=0.998
Example 438 attack result: {'succ': False, 'tokens': '    public HogsCustomizer() {\n        m_filename = PathFinder.getCustsFile();\n        m_currenttaunts = new String[10];\n        m_textfields = new JTextField[10];\n        m_color = new Color(255, 255, 255);\n        boolean exists = (new File(m_filename)).exists();\n        m_inverted = false;\n        m_chooser = new JColorChooser();\n        AbstractColorChooserPanel[] panels = m_chooser.getChooserPanels();\n        m_chooser.removeChooserPanel(panels[0]);\n        m_chooser.removeChooserPanel(panels[2]);\n        m_chooser.setPreviewPanel(new JPanel());\n        Reader reader = null;\n        if (exists) {\n            try {\n                reader = new FileReader(m_filename);\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        } else {\n            Object[] options = { "Yes", "No, Thanks" };\n            int n = JOptionPane.showOptionDialog(this, "You do not have a customization file in your home directory.\n                 " + "Would you like to create one?", "Hogs Customization", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]);\n            if (n == 0) {\n                try {\n                    FileChannel srcChannel = new FileInputStream(HogsConstants.CUSTS_TEMPLATE).getChannel();\n                    FileChannel dstChannel = new FileOutputStream(m_filename).getChannel();\n                    dstChannel.transferFrom(srcChannel, 0, srcChannel.ize());\n                    srcChannel.close();\n                    dstChannel.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    System.exit(0);\n                }\n            } else {\n                System.exit(0);\n            }\n            try {\n                reader = new FileReader(m_filename);\n            } catch (FileNotFoundException e1) {\n                e1.printStackTrace();\n                System.exit(0);\n            }\n        }\n        try {\n            readFromFile(reader);\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(0);\n        }\n        Box mainpanel = Box.createVerticalBox();\n        mainpanel.add(buildTauntsPanel());\n        mainpanel.add(buildMouseStylePanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        mainpanel.add(buildColorPanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        mainpanel.add(buildButtonsPanel());\n        mainpanel.add(Box.createVerticalStrut(10));\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        this.setContentPane(mainpanel);\n        this.pack();\n        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();\n        this.setLocation(dim.width / 2 - (this.getWidth() / 2), dim.height / 2 - (this.getHeight() / 2));\n        this.setTitle("Hogs Customizer");\n        this.setVisible(true);\n    }\n', 'raw_tokens': None, 'prog_length': 526, 'new_pred': 1, 'is_success': -1, 'old_uid': 'size', 'score_info': 4.4605986e-07, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'size': 'uri'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 438 FAILED.
  time cost = 0.18 min
  ALL EXAMPLE time cost = 26.06 min
  curr succ rate = 0.05555555555555555
Query times in this attack:  298
All Query times:  41160
raw_tokens: ['private', 'static', 'IProject', 'createCopyProject', '(', 'IProject', 'project', ',', 'String', 'pName', ',', 'IWorkspace', 'ws', ',', 'IProgressMonitor', 'pm', ')', 'throws', 'Exception', '{', 'pm', '.', 'beginTask', '(', '"', 'Creating', 'temp', 'project', '"', ',', '1', ')', ';', 'IPath', 'destination', '=', 'new', 'Path', '(', 'pName', ')', ';', 'IJavaProject', 'oldJavaproj', '=', 'JavaCore', '.', 'create', '(', 'project', ')', ';', 'IClasspathEntry', '[', ']', 'classPath', '=', 'oldJavaproj', '.', 'getRawClasspath', '(', ')', ';', 'IProject', 'newProject', '=', 'ResourcesPlugin', '.', 'getWorkspace', '(', ')', '.', 'getRoot', '(', ')', '.', 'getProject', '(', 'pName', ')', ';', 'newProject', '.', 'create', '(', 'null', ')', ';', 'newProject', '.', 'open', '(', 'null', ')', ';', 'IProjectDescription', 'desc', '=', 'newProject', '.', 'getDescription', '(', ')', ';', 'desc', '.', 'setNatureIds', '(', 'new', 'String', '[', ']', '{', 'JavaCore', '.', 'NATURE_ID', '}', ')', ';', 'newProject', '.', 'setDescription', '(', 'desc', ',', 'null', ')', ';', 'List', '<', 'IClasspathEntry', '>', 'newClassPath', '=', 'new', 'ArrayList', '<', 'IClasspathEntry', '>', '(', ')', ';', 'for', '(', 'IClasspathEntry', 'cEntry', ':', 'classPath', ')', '{', 'switch', '(', 'cEntry', '.', 'getEntryKind', '(', ')', ')', '{', 'case', 'IClasspathEntry', '.', 'CPE_SOURCE', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'Source', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'copySourceFolder', '(', 'project', ',', 'newProject', ',', 'cEntry', ',', 'destination', ')', ')', ';', 'break', ';', 'case', 'IClasspathEntry', '.', 'CPE_LIBRARY', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'library', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'cEntry', ')', ';', 'break', ';', 'case', 'IClasspathEntry', '.', 'CPE_PROJECT', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'project', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'cEntry', ')', ';', 'break', ';', 'case', 'IClasspathEntry', '.', 'CPE_VARIABLE', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'variable', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'cEntry', ')', ';', 'break', ';', 'default', ':', 'System', '.', 'out', '.', 'println', '(', '"', 'container', 'folder', '', '"', '+', 'cEntry', '.', 'getPath', '(', ')', ')', ';', 'newClassPath', '.', 'add', '(', 'cEntry', ')', ';', '}', '}', 'copyDir', '(', 'project', '.', 'getLocation', '(', ')', '.', 'toString', '(', ')', ',', '"', '/translator', '"', ',', 'newProject', '.', 'getLocation', '(', ')', '.', 'toString', '(', ')', ',', '"', '"', ',', 'new', 'ArrayList', '<', 'String', '>', '(', ')', '{', '{', 'add', '(', '"', 'generated', '"', ')', ';', 'add', '(', '"', 'classes', '"', ')', ';', 'add', '(', '"', '.svn', '"', ')', ';', '}', '}', ')', ';', 'newProject', '.', 'refreshLocal', '(', 'IResource', '.', 'DEPTH_INFINITE', ',', 'pm', ')', ';', 'newProject', '.', 'build', '(', 'IncrementalProjectBuilder', '.', 'AUTO_BUILD', ',', 'pm', ')', ';', 'newProject', '.', 'touch', '(', 'pm', ')', ';', 'IJavaProject', 'javaproj', '=', 'JavaCore', '.', 'create', '(', 'newProject', ')', ';', 'javaproj', '.', 'setOutputLocation', '(', 'new', 'Path', '(', '"', '/', '"', '+', 'newProject', '.', 'getName', '(', ')', '+', '"', '/classes/bin', '"', ')', ',', 'null', ')', ';', 'javaproj', '.', 'setRawClasspath', '(', 'newClassPath', '.', 'toArray', '(', 'new', 'IClasspathEntry', '[', 'newClassPath', '.', 'size', '(', ')', ']', ')', ',', 'pm', ')', ';', 'Map', 'opts', '=', 'oldJavaproj', '.', 'getOptions', '(', 'true', ')', ';', 'javaproj', '.', 'setOptions', '(', 'opts', ')', ';', 'javaproj', '.', 'makeConsistent', '(', 'pm', ')', ';', 'javaproj', '.', 'save', '(', 'pm', ',', 'true', ')', ';', 'return', 'newProject', ';', '}']
Example 439 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'test', '(', 'TestHarness', 'harness', ')', '{', 'harness', '.', 'checkPoint', '(', '"', 'TestOfMD4', '"', ')', ';', 'try', '{', 'Security', '.', 'addProvider', '(', 'new', 'JarsyncProvider', '(', ')', ')', ';', 'algorithm', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD4', '"', ',', '"', 'JARSYNC', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.provider', '"', ')', ';', 'throw', 'new', 'Error', '(', 'x', ')', ';', '}', 'try', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '64', ';', 'i', '++', ')', 'algorithm', '.', 'update', '(', '(', 'byte', ')', "'a'", ')', ';', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', ')', ';', 'String', 'exp', '=', '"', '52f5076fabd22680234a3fa9f9dc5732', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testSixtyFourA', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.provider', '"', ')', ';', '}', 'try', '{', 'harness', '.', 'verbose', '(', '"', 'NOTE:', 'This', 'test', 'may', 'take', 'a', 'while.', '"', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', '536870913', ';', 'i', '++', ')', 'algorithm', '.', 'update', '(', '(', 'byte', ')', "'a'", ')', ';', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', ')', ';', 'String', 'exp', '=', '"', '47d01fa6657f903280232d30b98da482', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'test536870913A', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.provider', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'a', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'bde52cb31de33e46245e05fbdbd6fb24', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testA', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testA', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'abc', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'a448017aaf21d8525fc10ae87aa6729d', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testABC', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testABC', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'message', 'digest', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'd9130a8164549fe818874806e1c7014b', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testMessageDigest', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testMessageDigest', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'abcdefghijklmnopqrstuvwxyz', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'd79e1c308aa5bbcdeea8ed63df412da9', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testAlphabet', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testAlphabet', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', '043f8582f241db351ce627e153e7f0e4', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testAsciiSubset', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testAsciiSubset', '"', ')', ';', '}', 'try', '{', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', '"', '12345678901234567890123456789012345678901234567890123456789012345678901234567890', '"', '.', 'getBytes', '(', ')', ')', ';', 'String', 'exp', '=', '"', 'e33b4ddc9c38f2199c3e7b164fcc0536', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testEightyNumerics', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testEightyNumerics', '"', ')', ';', '}', 'try', '{', 'algorithm', '.', 'update', '(', '"', 'a', '"', '.', 'getBytes', '(', ')', ',', '0', ',', '1', ')', ';', 'clone', '=', '(', 'MessageDigest', ')', 'algorithm', '.', 'clone', '(', ')', ';', 'byte', '[', ']', 'md', '=', 'algorithm', '.', 'digest', '(', ')', ';', 'String', 'exp', '=', '"', 'bde52cb31de33e46245e05fbdbd6fb24', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testCloning', '#1', '"', ')', ';', 'clone', '.', 'update', '(', '"', 'bc', '"', '.', 'getBytes', '(', ')', ',', '0', ',', '2', ')', ';', 'md', '=', 'clone', '.', 'digest', '(', ')', ';', 'exp', '=', '"', 'a448017aaf21d8525fc10ae87aa6729d', '"', ';', 'harness', '.', 'check', '(', 'exp', '.', 'equals', '(', 'Util', '.', 'toHexString', '(', 'md', ')', ')', ',', '"', 'testCloning', '#2', '"', ')', ';', '}', 'catch', '(', 'Exception', 'x', ')', '{', 'harness', '.', 'debug', '(', 'x', ')', ';', 'harness', '.', 'fail', '(', '"', 'TestOfMD4.testCloning', '"', ')', ';', '}', '}']
Example 440 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'String', 'encryptMD5', '(', 'String', 'password', ',', 'Long', 'digestSeed', ')', '{', 'try', '{', 'MessageDigest', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'digest', '.', 'reset', '(', ')', ';', 'digest', '.', 'update', '(', 'password', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', 'digest', '.', 'update', '(', 'digestSeed', '.', 'toString', '(', ')', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ')', ';', 'byte', '[', ']', 'messageDigest', '=', 'digest', '.', 'digest', '(', ')', ';', 'StringBuffer', 'hexString', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'messageDigest', '.', 'length', ';', 'i', '++', ')', '{', 'hexString', '.', 'append', '(', 'Integer', '.', 'toHexString', '(', '0xff', '&', 'messageDigest', '[', 'i', ']', ')', ')', ';', '}', 'return', 'hexString', '.', 'toString', '(', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'e', ')', '{', 'throw', 'new', 'RuntimeException', '(', 'e', ')', ';', '}', 'catch', '(', 'NullPointerException', 'e', ')', '{', 'return', 'new', 'StringBuffer', '(', ')', '.', 'toString', '(', ')', ';', '}', '}']
Example 441 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'getHashText', '(', 'String', 'plainText', ',', 'String', 'algorithm', ')', 'throws', 'NoSuchAlgorithmException', '{', 'MessageDigest', 'mdAlgorithm', '=', 'MessageDigest', '.', 'getInstance', '(', 'algorithm', ')', ';', 'mdAlgorithm', '.', 'update', '(', 'plainText', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'digest', '=', 'mdAlgorithm', '.', 'digest', '(', ')', ';', 'StringBuffer', 'hexString', '=', 'new', 'StringBuffer', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'digest', '.', 'length', ';', 'i', '++', ')', '{', 'plainText', '=', 'Integer', '.', 'toHexString', '(', '0xFF', '&', 'digest', '[', 'i', ']', ')', ';', 'if', '(', 'plainText', '.', 'length', '(', ')', '<', '2', ')', '{', 'plainText', '=', '"', '0', '"', '+', 'plainText', ';', '}', 'hexString', '.', 'append', '(', 'plainText', ')', ';', '}', 'return', 'hexString', '.', 'toString', '(', ')', ';', '}']
  >>  iter 1, ACC! length => zip (0 => 0, 0.99979 => 0.99979) a=1.004
  >>  iter 2, ACC! zip => word (0 => 0, 0.99979 => 0.99979) a=1.002
  >>  iter 3, REJ. word => l (0 => 0, 0.99979 => 0.99979) a=0.999
  >>  iter 4, ACC! word => angle (0 => 0, 0.99979 => 0.99979) a=1.000
  >>  iter 5, ACC! angle => character (0 => 0, 0.99979 => 0.99979) a=1.002
  >>  iter 6, ACC! character => slice (0 => 0, 0.99979 => 0.99979) a=1.002
  >>  iter 7, ACC! slice => character (0 => 0, 0.99979 => 0.99979) a=1.001
  >>  iter 8, ACC! character => match (0 => 0, 0.99979 => 0.99979) a=1.001
  >>  iter 9, ACC! match => full (0 => 0, 0.99979 => 0.99979) a=1.003
  >>  iter 10, ACC! full => loc (0 => 0, 0.99979 => 0.99979) a=1.005
Example 442 attack result: {'succ': False, 'tokens': '    public static String getHashText(String plainText, String algorithm) throws NoSuchAlgorithmException {\n        MessageDigest mdAlgorithm = MessageDigest.getInstance(algorithm);\n        mdAlgorithm.update(plainText.getBytes());\n        byte[] digest = mdAlgorithm.digest();\n        StringBuffer hexString = new StringBuffer();\n        for (int i = 0; i < digest.loc; i++) {\n            plainText = Integer.toHexString(0xFF & digest[i]);\n            if (plainText.loc() < 2) {\n                plainText = "0" + plainText;\n            }\n            hexString.append(plainText);\n        }\n        return hexString.toString();\n    }\n', 'raw_tokens': None, 'prog_length': 121, 'new_pred': 0, 'is_success': -1, 'old_uid': 'length', 'score_info': 4.7683716e-07, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'length': 'loc'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 442 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 26.25 min
  curr succ rate = 0.05517241379310345
Query times in this attack:  305
All Query times:  41465
raw_tokens: ['@', 'Test', '(', 'dataProvider', '=', 'Arquillian', '.', 'ARQUILLIAN_DATA_PROVIDER', ')', 'public', 'void', 'shouldGreetUser', '(', '@', 'ArquillianResource', 'URL', 'baseURL', ')', 'throws', 'IOException', '{', 'final', 'String', 'name', '=', '"', 'Earthlings', '"', ';', 'final', 'URL', 'url', '=', 'new', 'URL', '(', 'baseURL', ',', '"', 'Foo.action', '"', ')', ';', 'StringBuilder', 'builder', '=', 'new', 'StringBuilder', '(', ')', ';', 'BufferedReader', 'reader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'url', '.', 'openStream', '(', ')', ')', ')', ';', 'String', 'line', ';', 'while', '(', '(', 'line', '=', 'reader', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'builder', '.', 'append', '(', 'line', ')', ';', '}', 'reader', '.', 'close', '(', ')', ';', 'LOGGER', '.', 'info', '(', '"', 'Returned', 'response:', '', '"', '+', 'builder', '.', 'toString', '(', ')', ')', ';', 'Assert', '.', 'assertEquals', '(', 'builder', '.', 'toString', '(', ')', ',', 'FooService', '.', 'GREETING', '+', 'name', ')', ';', '}']
Example 443 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'Copy', '(', 'String', '__from', ',', 'String', '__to', ')', '{', 'try', '{', 'int', 'bytesum', '=', '0', ';', 'int', 'byteread', '=', '-', '1', ';', 'java', '.', 'io', '.', 'File', 'oldfile', '=', 'new', 'java', '.', 'io', '.', 'File', '(', '__from', ')', ';', 'if', '(', 'oldfile', '.', 'exists', '(', ')', ')', '{', 'InputStream', 'inStream', '=', 'new', 'FileInputStream', '(', '__from', ')', ';', 'FileOutputStream', 'fs', '=', 'new', 'FileOutputStream', '(', '__to', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'while', '(', '(', 'byteread', '=', 'inStream', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'bytesum', '+=', 'byteread', ';', 'fs', '.', 'write', '(', 'buffer', ',', '0', ',', 'byteread', ')', ';', '}', 'inStream', '.', 'close', '(', ')', ';', 'fs', '.', 'close', '(', ')', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'processFile.copyFile()���Ƶ����ļ���������', '"', '+', 'e.getMessage());', '', '', '', '', '', '', '', '', '', 'return', 'false', ';', '}', 'return', 'true', ';', '}']
Example 444 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'renameFileMultiFallback', '(', 'File', 'sourceFile', ',', 'File', 'destFile', ')', 'throws', 'FileHandlingException', '{', 'if', '(', 'destFile', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'FileHandlingException', '(', 'FileHandlingException', '.', 'FILE_ALREADY_EXISTS', ')', ';', '}', 'if', '(', '!', 'sourceFile', '.', 'exists', '(', ')', ')', '{', 'return', ';', '}', 'boolean', 'succ', '=', 'sourceFile', '.', 'renameTo', '(', 'destFile', ')', ';', 'if', '(', 'succ', ')', '{', 'NLogger', '.', 'warn', '(', 'FileUtils', '.', 'class', ',', '"', 'First', 'renameTo', 'operation', 'worked!', '"', ')', ';', 'return', ';', '}', 'NLogger', '.', 'warn', '(', 'FileUtils', '.', 'class', ',', '"', 'First', 'renameTo', 'operation', 'failed.', '"', ')', ';', 'System', '.', 'gc', '(', ')', ';', 'Thread', '.', 'yield', '(', ')', ';', 'succ', '=', 'sourceFile', '.', 'renameTo', '(', 'destFile', ')', ';', 'if', '(', 'succ', ')', '{', 'return', ';', '}', 'NLogger', '.', 'warn', '(', 'FileUtils', '.', 'class', ',', '"', 'Second', 'renameTo', 'operation', 'failed.', '"', ')', ';', 'FileInputStream', 'input', '=', 'null', ';', 'FileOutputStream', 'output', '=', 'null', ';', 'try', '{', 'input', '=', 'new', 'FileInputStream', '(', 'sourceFile', ')', ';', 'output', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', ';', 'long', 'lengthLeft', '=', 'sourceFile', '.', 'length', '(', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '(', 'int', ')', 'Math', '.', 'min', '(', 'BUFFER_LENGTH', ',', 'lengthLeft', '+', '1', ')', ']', ';', 'int', 'read', ';', 'while', '(', 'lengthLeft', '>', '0', ')', '{', 'read', '=', 'input', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'read', '==', '-', '1', ')', '{', 'break', ';', '}', 'lengthLeft', '-=', 'read', ';', 'output', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', '}', 'catch', '(', 'IOException', 'exp', ')', '{', 'NLogger', '.', 'warn', '(', 'FileUtils', '.', 'class', ',', '"', 'Third', 'renameTo', 'operation', 'failed.', '"', ')', ';', 'throw', 'new', 'FileHandlingException', '(', 'FileHandlingException', '.', 'RENAME_FAILED', ',', 'exp', ')', ';', '}', 'finally', '{', 'IOUtil', '.', 'closeQuietly', '(', 'input', ')', ';', 'IOUtil', '.', 'closeQuietly', '(', 'output', ')', ';', '}', 'destFile', '.', 'setLastModified', '(', 'sourceFile', '.', 'lastModified', '(', ')', ')', ';', 'FileUtils', '.', 'deleteFileMultiFallback', '(', 'sourceFile', ')', ';', '}']
  >>  iter 1, ACC! IOException => IPception (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 2, ACC! IPception =>  IOception (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 3, ACC!  IOception =>  IOError (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 4, ACC!  IOError => IOError (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 5, ACC! IOError => TimeoutException (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 6, ACC! TimeoutException => Timeoutception (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 7, ACC! Timeoutception => TimeoutException (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 8, ACC! TimeoutException => Timeoutception (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 9, ACC! Timeoutception =>  IOception (0 => 0, 0.99962 => 0.99962) a=1.000
  >>  iter 10, ACC!  IOception =>  IOError (0 => 0, 0.99962 => 0.99962) a=1.000
Example 445 attack result: {'succ': False, 'tokens': '    public static void renameFileMultiFallback(File sourceFile, File destFile) throws FileHandlingException {\n        if (destFile.exists()) {\n            throw new FileHandlingException(FileHandlingException.FILE_ALREADY_EXISTS);\n        }\n        if (!sourceFile.exists()) {\n            return;\n        }\n        boolean succ = sourceFile.renameTo(destFile);\n        if (succ) {\n            NLogger.warn(FileUtils.class, "First renameTo operation worked!");\n            return;\n        }\n        NLogger.warn(FileUtils.class, "First renameTo operation failed.");\n        System.gc();\n        Thread.yield();\n        succ = sourceFile.renameTo(destFile);\n        if (succ) {\n            return;\n        }\n        NLogger.warn(FileUtils.class, "Second renameTo operation failed.");\n        FileInputStream input = null;\n        FileOutputStream output = null;\n        try {\n            input = new FileInputStream(sourceFile);\n            output = new FileOutputStream(destFile);\n            long lengthLeft = sourceFile.length();\n            byte[] buffer = new byte[(int) Math.min(BUFFER_LENGTH, lengthLeft + 1)];\n            int read;\n            while (lengthLeft > 0) {\n                read = input.read(buffer);\n                if (read == -1) {\n                    break;\n                }\n                lengthLeft -= read;\n                output.write(buffer, 0, read);\n            }\n        } catch ( IOception exp) {\n            NLogger.warn(FileUtils.class, "Third renameTo operation failed.");\n            throw new FileHandlingException(FileHandlingException.RENAME_FAILED, exp);\n        } finally {\n            IOUtil.closeQuietly(input);\n            IOUtil.closeQuietly(output);\n        }\n        destFile.setLastModified(sourceFile.lastModified());\n        FileUtils.deleteFileMultiFallback(sourceFile);\n    }\n', 'raw_tokens': None, 'prog_length': 306, 'new_pred': 0, 'is_success': -1, 'old_uid': 'IOException', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'IOException': ' IOError'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 445 FAILED.
  time cost = 0.09 min
  ALL EXAMPLE time cost = 26.37 min
  curr succ rate = 0.0547945205479452
Query times in this attack:  107
All Query times:  41572
raw_tokens: ['static', 'void', 'copy', '(', 'String', 'src', ',', 'String', 'dest', ')', 'throws', 'IOException', '{', 'File', 'ifp', '=', 'new', 'File', '(', 'src', ')', ';', 'File', 'ofp', '=', 'new', 'File', '(', 'dest', ')', ';', 'if', '(', 'ifp', '.', 'exists', '(', ')', '==', 'false', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'file', "'", '"', '+', 'src', '+', '"', "'", 'does', 'not', 'exist', '"', ')', ';', '}', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'ifp', ')', ';', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'ofp', ')', ';', 'byte', '[', ']', 'b', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'readBytes', ';', 'while', '(', '(', 'readBytes', '=', 'fis', '.', 'read', '(', 'b', ')', ')', '>', '0', ')', 'fos', '.', 'write', '(', 'b', ',', '0', ',', 'readBytes', ')', ';', 'fis', '.', 'close', '(', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}']
Example 446 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'QDataSet', 'doRead', '(', 'URL', 'url', ',', 'URLConnection', 'connect', ')', 'throws', 'IOException', ',', 'ParserConfigurationException', ',', 'SAXException', '{', 'codebase', '=', 'url', ';', 'InputStream', 'in', ';', 'if', '(', 'connect', '!=', 'null', ')', '{', 'in', '=', 'connect', '.', 'getInputStream', '(', ')', ';', '}', 'else', '{', 'in', '=', 'url', '.', 'openStream', '(', ')', ';', '}', 'DocumentBuilder', 'builder', '=', 'DocumentBuilderFactory', '.', 'newInstance', '(', ')', '.', 'newDocumentBuilder', '(', ')', ';', 'InputSource', 'source', '=', 'new', 'InputSource', '(', 'in', ')', ';', 'Document', 'document', '=', 'builder', '.', 'parse', '(', 'source', ')', ';', 'in', '.', 'close', '(', ')', ';', 'QDataSet', 'result', '=', 'null', ';', 'NodeList', 'kids', '=', 'document', '.', 'getChildNodes', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'kids', '.', 'getLength', '(', ')', ';', 'i', '++', ')', '{', 'Node', 'n', '=', 'kids', '.', 'item', '(', 'i', ')', ';', 'if', '(', 'n', '.', 'getNodeName', '(', ')', '.', 'equals', '(', '"', 'netcdf', '"', ')', ')', '{', 'result', '=', 'netcdf', '(', 'n', ')', ';', '}', '}', 'return', 'result', ';', '}']
Example 447 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'String', 'myCrypt', '(', 'String', 'password', ',', 'String', 'seed', ')', 'throws', 'RuntimeException', '{', 'String', 'out', '=', 'null', ';', 'int', 'count', '=', '8', ';', 'MessageDigest', 'digester', ';', 'if', '(', '!', 'seed', '.', 'substring', '(', '0', ',', '3', ')', '.', 'equals', '(', '"', '$H$', '"', ')', ')', '{', 'byte', '[', ']', 'randomBytes', '=', 'new', 'byte', '[', '6', ']', ';', 'java', '.', 'util', '.', 'Random', 'randomGenerator', '=', 'new', 'java', '.', 'util', '.', 'Random', '(', ')', ';', 'randomGenerator', '.', 'nextBytes', '(', 'randomBytes', ')', ';', 'seed', '=', 'genSalt', '(', 'randomBytes', ')', ';', '}', 'String', 'salt', '=', 'seed', '.', 'substring', '(', '4', ',', '12', ')', ';', 'if', '(', 'salt', '.', 'length', '(', ')', '!=', '8', ')', '{', 'throw', 'new', 'RuntimeException', '(', '"', 'Error', 'hashing', 'password', '-', 'Invalid', 'seed.', '"', ')', ';', '}', 'byte', '[', ']', 'sha1Hash', '=', 'new', 'byte', '[', '40', ']', ';', 'try', '{', 'digester', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'SHA-1', '"', ')', ';', 'digester', '.', 'update', '(', '(', 'salt', '+', 'password', ')', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', '(', 'salt', '+', 'password', ')', '.', 'length', '(', ')', ')', ';', 'sha1Hash', '=', 'digester', '.', 'digest', '(', ')', ';', 'do', '{', 'byte', '[', ']', 'CombinedBytes', '=', 'new', 'byte', '[', 'sha1Hash', '.', 'length', '+', 'password', '.', 'length', '(', ')', ']', ';', 'System', '.', 'arraycopy', '(', 'sha1Hash', ',', '0', ',', 'CombinedBytes', ',', '0', ',', 'sha1Hash', '.', 'length', ')', ';', 'System', '.', 'arraycopy', '(', 'password', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', ',', '0', ',', 'CombinedBytes', ',', 'sha1Hash', '.', 'length', ',', 'password', '.', 'getBytes', '(', '"', 'iso-8859-1', '"', ')', '.', 'length', ')', ';', 'digester', '.', 'update', '(', 'CombinedBytes', ',', '0', ',', 'CombinedBytes', '.', 'length', ')', ';', 'sha1Hash', '=', 'digester', '.', 'digest', '(', ')', ';', '}', 'while', '(', '--', 'count', '>', '0', ')', ';', 'out', '=', 'seed', '.', 'substring', '(', '0', ',', '12', ')', ';', 'out', '+=', 'encode64', '(', 'sha1Hash', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'Ex', ')', '{', 'log', '.', 'error', '(', '"', 'Error', 'hashing', 'password.', '"', ',', 'Ex', ')', ';', '}', 'catch', '(', 'UnsupportedEncodingException', 'Ex', ')', '{', 'log', '.', 'error', '(', '"', 'Error', 'hashing', 'password.', '"', ',', 'Ex', ')', ';', '}', 'if', '(', 'out', '==', 'null', ')', '{', 'throw', 'new', 'RuntimeException', '(', '"', 'Error', 'hashing', 'password', '-', 'out', '=', 'null', '"', ')', ';', '}', 'return', 'out', ';', '}']
Example 448 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copy', '(', 'File', 'from', ',', 'File', 'to', ')', 'throws', 'FileNotFoundException', ',', 'IOException', '{', 'FileReader', 'in', ';', 'in', '=', 'new', 'FileReader', '(', 'from', ')', ';', 'FileWriter', 'out', '=', 'new', 'FileWriter', '(', 'to', ')', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'in', '.', 'read', '(', ')', ')', '!=', '-', '1', ')', 'out', '.', 'write', '(', 'c', ')', ';', 'in', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', '}']
Example 449 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'int', 'getContentLength', '(', 'String', 'address', ')', '{', 'URLConnection', 'conn', '=', 'null', ';', 'int', 'contentLength', '=', '0', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'address', ')', ';', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'contentLength', '=', 'conn', '.', 'getContentLength', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'contentLength', ';', '}']
Example 450 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', '_loadInternalViews', '(', ')', '{', '_internalViews', '=', 'new', 'HashMap', '<', 'String', ',', 'InternalView', '>', '(', ')', ';', 'List', '<', 'URL', '>', 'list', '=', 'new', 'ArrayList', '<', 'URL', '>', '(', ')', ';', 'ClassLoader', 'loader', '=', '_getClassLoader', '(', ')', ';', 'try', '{', 'Enumeration', '<', 'URL', '>', 'en', '=', 'loader', '.', 'getResources', '(', '"', 'META-INF/org.apache.myfaces.trinidad.render.InternalView.properties', '"', ')', ';', 'while', '(', 'en', '.', 'hasMoreElements', '(', ')', ')', '{', 'list', '.', 'add', '(', 'en', '.', 'nextElement', '(', ')', ')', ';', '}', 'en', '=', 'loader', '.', 'getResources', '(', '"', 'META-INF/org.apache.myfaces.trinidad.InternalView.properties', '"', ')', ';', 'while', '(', 'en', '.', 'hasMoreElements', '(', ')', ')', '{', 'list', '.', 'add', '(', 'en', '.', 'nextElement', '(', ')', ')', ';', '}', 'Collections', '.', 'reverse', '(', 'list', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '_LOG', '.', 'severe', '(', 'ioe', ')', ';', '}', 'for', '(', 'URL', 'url', ':', 'list', ')', '{', 'try', '{', 'Properties', 'properties', '=', 'new', 'Properties', '(', ')', ';', '_LOG', '.', 'fine', '(', '"', 'Loading', 'internal', 'views', 'from', '{0}', '"', ',', 'url', ')', ';', 'InputStream', 'is', '=', 'url', '.', 'openStream', '(', ')', ';', 'try', '{', 'properties', '.', 'load', '(', 'is', ')', ';', '}', 'finally', '{', 'is', '.', 'close', '(', ')', ';', '}', 'for', '(', 'Map', '.', 'Entry', '<', 'Object', ',', 'Object', '>', 'entry', ':', 'properties', '.', 'entrySet', '(', ')', ')', '{', 'String', 'name', '=', '(', 'String', ')', 'entry', '.', 'getKey', '(', ')', ';', 'String', 'className', '=', '(', 'String', ')', 'entry', '.', 'getValue', '(', ')', ';', 'Class', '<', '?', '>', 'clazz', '=', 'loader', '.', 'loadClass', '(', 'className', ')', ';', 'InternalView', 'view', '=', '(', 'InternalView', ')', 'clazz', '.', 'newInstance', '(', ')', ';', '_internalViews', '.', 'put', '(', 'name', ',', 'view', ')', ';', '}', '}', 'catch', '(', 'IllegalAccessException', 'iae', ')', '{', '_LOG', '.', 'severe', '(', '"', 'CANNOT_LOAD_URL', '"', ',', 'url', ')', ';', '_LOG', '.', 'severe', '(', 'iae', ')', ';', '}', 'catch', '(', 'InstantiationException', 'ie', ')', '{', '_LOG', '.', 'severe', '(', '"', 'CANNOT_LOAD_URL', '"', ',', 'url', ')', ';', '_LOG', '.', 'severe', '(', 'ie', ')', ';', '}', 'catch', '(', 'ClassNotFoundException', 'cnfe', ')', '{', '_LOG', '.', 'severe', '(', '"', 'CANNOT_LOAD_URL', '"', ',', 'url', ')', ';', '_LOG', '.', 'severe', '(', 'cnfe', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', '_LOG', '.', 'severe', '(', '"', 'CANNOT_LOAD_URL', '"', ',', 'url', ')', ';', '_LOG', '.', 'severe', '(', 'ioe', ')', ';', '}', '}', '}']
Example 451 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'run', '(', ')', '{', 'final', 'SimpleMessageListener', 'listener', '=', 'new', 'SimpleMessageListener', '(', ')', '{', 'public', 'final', 'boolean', 'accept', '(', 'final', 'String', 'from', ',', 'final', 'String', 'recipient', ')', '{', 'return', 'true', ';', '}', 'public', 'final', 'void', 'deliver', '(', 'final', 'String', 'from', ',', 'final', 'String', 'recipient', ',', 'final', 'InputStream', 'data', ')', 'throws', 'TooMuchDataException', ',', 'IOException', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'FROM:', '', '"', '+', 'from', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'TO:', '', '"', '+', 'recipient', ')', ';', 'final', 'File', 'tmpDir', '=', 'new', 'File', '(', 'System', '.', 'getProperty', '(', '"', 'java.io.tmpdir', '"', ')', ')', ';', 'final', 'File', 'file', '=', 'new', 'File', '(', 'tmpDir', ',', 'recipient', ')', ';', 'final', 'FileWriter', 'fw', '=', 'new', 'FileWriter', '(', 'file', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'data', ',', 'fw', ')', ';', '}', 'finally', '{', 'fw', '.', 'close', '(', ')', ';', '}', '}', '}', ';', 'final', 'SMTPServer', 'smtpServer', '=', 'new', 'SMTPServer', '(', 'new', 'SimpleMessageListenerAdapter', '(', 'listener', ')', ')', ';', 'smtpServer', '.', 'start', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Started', 'SMTP', 'Server', '"', ')', ';', '}']
Example 452 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['void', 'ProcessRequests', '(', 'DataInputStream', 'in', ',', 'PrintStream', 'out', ')', '{', 'String', 'sQuery', ';', 'while', '(', 'true', ')', '{', 'try', '{', 'sQuery', '=', 'in', '.', 'readLine', '(', ')', ';', 'if', '(', 'sQuery', '==', 'null', ')', 'return', ';', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'select', '"', ')', ')', '{', 'ProcessQuery', '(', 'sQuery', ',', 'out', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'insert', '"', ')', ')', '{', 'Statement', 'stmt', '=', 'con', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', 'sQuery', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'update', '"', ')', ')', '{', 'Statement', 'stmt', '=', 'con', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', 'sQuery', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'commit', '"', ')', ')', '{', 'con', '.', 'commit', '(', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'autocommit', 'true', '"', ')', ')', '{', 'con', '.', 'setAutoCommit', '(', 'true', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'autocommit', 'false', '"', ')', ')', '{', 'con', '.', 'setAutoCommit', '(', 'false', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'delete', '"', ')', ')', '{', 'Statement', 'stmt', '=', 'con', '.', 'createStatement', '(', ')', ';', 'stmt', '.', 'executeUpdate', '(', 'sQuery', ')', ';', '}', 'else', 'if', '(', 'sQuery', '.', 'startsWith', '(', '"', 'rollback', '"', ')', ')', '{', 'con', '.', 'rollback', '(', ')', ';', '}', 'else', '{', 'out', '.', 'println', '(', '"', 'What', '?', '"', ')', ';', '}', 'out', '.', 'println', '(', '"', '>', '"', ')', ';', '}', 'catch', '(', 'SQLException', 'ex', ')', '{', 'out', '.', 'println', '(', '"', '***', 'SQLException', 'caught', '***', '"', ')', ';', 'while', '(', 'ex', '!=', 'null', ')', '{', 'out', '.', 'println', '(', '"', 'SQLState:', '', '"', '+', 'ex', '.', 'getSQLState', '(', ')', ')', ';', 'out', '.', 'println', '(', '"', 'Message:', '', '', '"', '+', 'ex', '.', 'getMessage', '(', ')', ')', ';', 'out', '.', 'println', '(', '"', 'Vendor:', '', '', '', '"', '+', 'ex', '.', 'getErrorCode', '(', ')', ')', ';', 'ex', '=', 'ex', '.', 'getNextException', '(', ')', ';', 'out', '.', 'println', '(', '"', '"', ')', ';', '}', '}', 'catch', '(', 'java', '.', 'lang', '.', 'Exception', 'ex', ')', '{', 'ex', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
Example 453 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'void', 'generateDiffResults', '(', 'File', 'outFile', ')', 'throws', 'IOException', '{', 'FileOutputStream', 'outStream', '=', 'new', 'FileOutputStream', '(', 'outFile', ')', ';', 'BufferedWriter', 'out', '=', 'new', 'BufferedWriter', '(', 'new', 'OutputStreamWriter', '(', 'outStream', ',', 'outputCharset', ')', ')', ';', 'intlWrite', '(', 'out', ',', 'HTML_STRICT_DOCTYPE', '+', '"', '<html><head><title>${Report.Title}</title>', '"', '+', '"', '<meta', 'http-equiv=', '\\"', 'Content-Type', '\\"', '"', '+', '"', '', 'content=', '\\"', 'text/html;', 'charset=', '"', '+', 'outputCharset', '+', '"', '\\"', '>', '"', '+', '"', '<style', 'type=', '\\"', 'text/css', '\\"', '>', '"', ')', ';', 'out', '.', 'write', '(', 'LOCDiff', '.', 'getCssText', '(', ')', ')', ';', 'writeCustomStyleInfo', '(', 'out', ')', ';', 'out', '.', 'write', '(', '"', '</style></head>', '"', '+', '"', '<body>', '"', '+', '"', '<div>', '"', ')', ';', 'if', '(', 'addedTable', '.', 'length', '(', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', '"', '<table', 'border>', '"', ')', ';', 'intlWrite', '(', 'out', ',', 'getAddedTableHeader', '(', ')', ')', ';', 'out', '.', 'write', '(', 'addedTable', '.', 'toString', '(', ')', ')', ';', 'out', '.', 'write', '(', '"', '</table><br><br>', '"', ')', ';', '}', 'if', '(', 'modifiedTable', '.', 'length', '(', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', '"', '<table', 'border>', '"', ')', ';', 'intlWrite', '(', 'out', ',', 'getModifiedTableHeader', '(', ')', ')', ';', 'out', '.', 'write', '(', 'modifiedTable', '.', 'toString', '(', ')', ')', ';', 'out', '.', 'write', '(', '"', '</table><br><br>', '"', ')', ';', '}', 'if', '(', 'deletedTable', '.', 'length', '(', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', '"', '<table', 'border>', '"', ')', ';', 'intlWrite', '(', 'out', ',', 'getDeletedTableHeader', '(', ')', ')', ';', 'out', '.', 'write', '(', 'deletedTable', '.', 'toString', '(', ')', ')', ';', 'out', '.', 'write', '(', '"', '</table><br><br>', '"', ')', ';', '}', 'if', '(', 'unchangedTable', '.', 'length', '(', ')', '>', '0', ')', '{', 'out', '.', 'write', '(', '"', '<table', 'border>', '"', ')', ';', 'intlWrite', '(', 'out', ',', 'getUnchangedTableHeader', '(', ')', ')', ';', 'out', '.', 'write', '(', 'unchangedTable', '.', 'toString', '(', ')', ')', ';', 'out', '.', 'write', '(', '"', '</table><br><br>', '"', ')', ';', '}', 'writeSummaryTable', '(', 'out', ')', ';', 'out', '.', 'write', '(', '"', '</div>', '"', ')', ';', 'redlinesOut', '.', 'close', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'InputStream', 'redlines', '=', 'new', 'FileInputStream', '(', 'redlinesTempFile', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'bytesRead', ';', 'while', '(', '(', 'bytesRead', '=', 'redlines', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', 'outStream', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytesRead', ')', ';', 'outStream', '.', 'write', '(', '"', '</BODY></HTML>', '"', '.', 'getBytes', '(', ')', ')', ';', 'outStream', '.', 'close', '(', ')', ';', '}']
Example 454 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'SuppressWarnings', '(', '{', '"', 'ResultOfMethodCallIgnored', '"', '}', ')', 'public', 'static', 'Node', 'combineCss', '(', 'URL', 'base', ',', 'List', '<', 'Node', '>', 'linkCss', ',', 'List', '<', 'File', '>', 'newFiles', ')', 'throws', 'IOException', '{', 'File', 'dir', '=', 'File', '.', 'createTempFile', '(', '"', 'css', '"', ',', '"', '"', '+', 'System', '.', 'currentTimeMillis', '(', ')', ')', ';', 'StringBuilder', 'name', '=', 'new', 'StringBuilder', '(', ')', ';', 'try', '{', 'if', '(', 'dir', '.', 'delete', '(', ')', '&&', 'dir', '.', 'mkdirs', '(', ')', ')', '{', 'File', 'minDir', '=', 'new', 'File', '(', 'dir', ',', '"', 'min', '"', ')', ';', 'minDir', '.', 'mkdir', '(', ')', ';', 'File', 'combineFile', '=', 'new', 'File', '(', 'minDir', ',', '"', 'style.css', '"', ')', ';', 'Writer', 'writer', '=', 'new', 'FileWriter', '(', 'combineFile', ')', ';', 'boolean', 'first', '=', 'true', ';', 'for', '(', 'Node', 'link', ':', 'linkCss', ')', '{', 'String', 'path', '=', '(', '(', 'Element', ')', 'link', ')', '.', 'getAttribute', '(', '"', 'href', '"', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'buildUrl', '(', 'base', ',', 'path', ')', ')', ';', 'InputStream', 'inputStream', '=', 'url', '.', 'openStream', '(', ')', ';', 'File', 'cssFile', '=', 'new', 'File', '(', 'dir', ',', 'fileName', '(', 'url', ')', ')', ';', 'FileOutputStream', 'outputStream', '=', 'new', 'FileOutputStream', '(', 'cssFile', ')', ';', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'outputStream', ')', ';', 'outputStream', '.', 'close', '(', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', 'if', '(', '!', 'first', ')', '{', 'writer', '.', 'write', '(', "'');", '}', 'else', '{', 'first', '=', 'false', '', ';', '}', 'Reader', 'reader', '=', 'new', 'FileReader', '(', 'cssFile', ')', ';', 'if', '(', 'Configuration', '.', 'cssMinification', '(', ')', ')', '{', 'CssCompressor', 'cssCompressor', '=', 'new', 'CssCompressor', '(', 'reader', ')', ';', 'cssCompressor', '.', 'compress', '(', 'writer', ',', '0', ')', ';', '}', 'else', '{', 'IOUtils', '.', 'copy', '(', 'reader', ',', 'writer', ')', ';', '}', 'reader', '.', 'close', '(', ')', ';', 'String', 'fileName', '=', 'cssFile', '.', 'getName', '(', ')', ';', 'int', 'pos', '=', 'fileName', '.', 'lastIndexOf', '(', "'.'", ')', ';', 'if', '(', 'pos', '>=', '0', ')', '{', 'fileName', '=', 'fileName', '.', 'substring', '(', '0', ',', 'pos', ')', ';', '}', 'name', '.', 'append', '(', 'fileName', ')', '.', 'append', '(', '"', ',', '"', ')', ';', '}', 'writer', '.', 'close', '(', ')', ';', 'FileReader', 'reader', '=', 'new', 'FileReader', '(', 'combineFile', ')', ';', 'name', '.', 'append', '(', 'hashCode', '(', 'IOUtils', '.', 'toString', '(', 'reader', ')', ')', ')', '.', 'append', '(', '"', '.css', '"', ')', ';', 'reader', '.', 'close', '(', ')', ';', 'File', 'targetFile', '=', 'new', 'File', '(', 'Configuration', '.', 'getCssLocalDir', '(', ')', ',', 'name', '.', 'toString', '(', ')', ')', ';', 'if', '(', '!', 'targetFile', '.', 'exists', '(', ')', ')', '{', 'targetFile', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ';', 'FileUtils', '.', 'copyFile', '(', 'combineFile', ',', 'targetFile', ')', ';', 'newFiles', '.', 'add', '(', 'targetFile', ')', ';', 'logger', '.', 'info', '(', '"', 'Combined', 'several', 'css', 'files', 'into', 'the', 'single', '', '"', '+', 'targetFile', '+', '"', '', '[size=', '"', '+', 'targetFile', '.', 'length', '(', ')', '+', '"', '].', '"', ')', ';', '}', '}', '}', 'finally', '{', 'FileUtils', '.', 'deleteQuietly', '(', 'dir', ')', ';', '}', 'if', '(', 'name', '.', 'length', '(', ')', '!=', '0', ')', '{', 'Element', 'element', '=', '(', 'Element', ')', 'linkCss', '.', 'get', '(', '0', ')', ';', 'element', '.', 'setAttribute', '(', '"', 'href', '"', ',', 'Configuration', '.', 'getCssUrlPrefix', '(', ')', '+', 'name', '.', 'toString', '(', ')', ')', ';', 'return', 'element', ';', '}', 'else', '{', 'return', 'null', ';', '}', '}']
Example 455 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'buildPerMovieDiffBinary', '(', 'String', 'masterFile', ')', '{', 'try', '{', 'File', 'inFile', '=', 'new', 'File', '(', 'completePath', '+', 'fSep', '+', '"', 'SmartGRAPE', '"', '+', 'fSep', '+', 'masterFile', ')', ';', 'FileChannel', 'inC', '=', 'new', 'FileInputStream', '(', 'inFile', ')', '.', 'getChannel', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'inC', '.', 'size', '(', ')', ')', ';', 'short', 'movie1', ',', 'movie2', ';', 'int', 'count', ';', 'float', 'diffRating', ',', 'sumXY', ',', 'sumX', ',', 'sumY', ',', 'sumX2', ',', 'sumY2', ',', 'pearsonCorr', ',', 'adjustedCosineCorr', ',', 'cosineCorr', ';', 'long', 'position', ';', 'for', '(', 'long', 'i', '=', '1', ';', 'i', '<', '17770', ';', 'i', '++', ')', '{', 'File', 'outFile', '=', 'new', 'File', '(', '"', 'C:', '\\\\', 'NetflixData', '\\\\', 'download', '\\\\', 'SmartGrape', '\\\\', 'CFItemToItemStats', '\\\\', 'Movie--', '"', '+', 'i', '+', '"', '-MatrixData.txt', '"', ')', ';', 'FileChannel', 'outC', '=', 'new', 'FileOutputStream', '(', 'outFile', ',', 'true', ')', '.', 'getChannel', '(', ')', ';', 'ByteBuffer', 'buf', '=', 'ByteBuffer', '.', 'allocate', '(', '17770', '*', '44', ')', ';', 'for', '(', 'long', 'j', '=', '1', ';', 'j', '<', 'i', ';', 'j', '++', ')', '{', 'ByteBuffer', 'bbuf', '=', 'ByteBuffer', '.', 'allocate', '(', '44', ')', ';', 'position', '=', '0', ';', 'position', '+=', 'new', 'Long', '(', '17769', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '17770', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '22', ')', '.', 'longValue', '(', ')', ';', 'position', '-=', 'new', 'Long', '(', '(', '17769', '-', '(', 'j', '-', '1', ')', ')', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '(', '17770', '-', '(', 'j', '-', '1', ')', ')', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '22', ')', '.', 'longValue', '(', ')', ';', 'position', '+=', 'new', 'Long', '(', '(', 'i', '-', 'j', '-', '1', ')', '*', '44', ')', '.', 'longValue', '(', ')', ';', 'inC', '.', 'position', '(', 'position', ')', ';', 'inC', '.', 'read', '(', 'bbuf', ')', ';', 'bbuf', '.', 'flip', '(', ')', ';', 'buf', '.', 'putShort', '(', 'bbuf', '.', 'getShort', '(', ')', ')', ';', 'bbuf', '.', 'getShort', '(', ')', ';', 'buf', '.', 'putInt', '(', 'bbuf', '.', 'getInt', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', '-', 'bbuf', '.', 'getInt', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'bbuf', '.', 'getFloat', '(', ')', ')', ';', '}', 'buf', '.', 'putShort', '(', 'new', 'Long', '(', 'i', ')', '.', 'shortValue', '(', ')', ')', ';', 'buf', '.', 'putInt', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'buf', '.', 'putFloat', '(', '0', ')', ';', 'position', '=', '0', ';', 'position', '+=', 'new', 'Long', '(', '17769', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '17770', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '22', ')', '.', 'longValue', '(', ')', ';', 'position', '-=', 'new', 'Long', '(', '(', '17769', '-', '(', 'i', '-', '1', ')', ')', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '(', '17770', '-', '(', 'i', '-', '1', ')', ')', ')', '.', 'longValue', '(', ')', '*', 'new', 'Long', '(', '22', ')', '.', 'longValue', '(', ')', ';', 'ByteBuffer', 'remainingBuf', '=', 'inC', '.', 'map', '(', 'FileChannel', '.', 'MapMode', '.', 'READ_ONLY', ',', 'position', ',', '(', '17770', '-', 'i', ')', '*', '44', ')', ';', 'while', '(', 'remainingBuf', '.', 'hasRemaining', '(', ')', ')', '{', 'remainingBuf', '.', 'getShort', '(', ')', ';', 'buf', '.', 'putShort', '(', 'remainingBuf', '.', 'getShort', '(', ')', ')', ';', 'buf', '.', 'putInt', '(', 'remainingBuf', '.', 'getInt', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', 'buf', '.', 'putFloat', '(', 'remainingBuf', '.', 'getFloat', '(', ')', ')', ';', '}', 'buf', '.', 'flip', '(', ')', ';', 'outC', '.', 'write', '(', 'buf', ')', ';', 'buf', '.', 'clear', '(', ')', ';', 'outC', '.', 'close', '(', ')', ';', '}', 'return', 'true', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'false', ';', '}', '}']
  >>  iter 1, ACC! out => block (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! block => x (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! x => point (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! point => other (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! other => block (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! block => line (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! line => conn (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! conn => path (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! path => goal (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! goal => dot (1 => 1, 0.99988 => 0.99988) a=1.000
Example 456 attack result: {'succ': False, 'tokens': '    public static boolean buildPerMovieDiffBinary(String masterFile) {\n        try {\n            File inFile = new File(completePath + fSep + "SmartGRAPE" + fSep + masterFile);\n            FileChannel inC = new FileInputStream(inFile).getChannel();\n            System.dot.println(inC.size());\n            short movie1, movie2;\n            int count;\n            float diffRating, sumXY, sumX, sumY, sumX2, sumY2, pearsonCorr, adjustedCosineCorr, cosineCorr;\n            long position;\n            for (long i = 1; i < 17770; i++) {\n                File outFile = new File("C:\\\\NetflixData\\\\download\\\\SmartGrape\\\\CFItemToItemStats\\\\Movie--" + i + "-MatrixData.txt");\n                FileChannel outC = new FileOutputStream(outFile, true).getChannel();\n                ByteBuffer buf = ByteBuffer.allocate(17770 * 44);\n                for (long j = 1; j < i; j++) {\n                    ByteBuffer bbuf = ByteBuffer.allocate(44);\n                    position = 0;\n                    position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue();\n                    position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue();\n                    position += new Long((i - j - 1) * 44).longValue();\n                    inC.position(position);\n                    inC.read(bbuf);\n                    bbuf.flip();\n                    buf.putShort(bbuf.getShort());\n                    bbuf.getShort();\n                    buf.putInt(bbuf.getInt());\n                    buf.putFloat(-bbuf.getInt());\n                    buf.putFloat(bbuf.getFloat());\n                    buf.putFloat(bbuf.getFloat());\n                    buf.putFloat(bbuf.getFloat());\n                    buf.putFloat(bbuf.getFloat());\n                    buf.putFloat(bbuf.getFloat());\n                    buf.putFloat(bbuf.getFloat());\n                    buf.putFloat(bbuf.getFloat());\n                    buf.putFloat(bbuf.getFloat());\n                }\n                buf.putShort(new Long(i).shortValue());\n                buf.putInt(0);\n                buf.putFloat(0);\n                buf.putFloat(0);\n                buf.putFloat(0);\n                buf.putFloat(0);\n                buf.putFloat(0);\n                buf.putFloat(0);\n                buf.putFloat(0);\n                buf.putFloat(0);\n                buf.putFloat(0);\n                position = 0;\n                position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue();\n                position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue();\n                ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44);\n                while (remainingBuf.hasRemaining()) {\n                    remainingBuf.getShort();\n                    buf.putShort(remainingBuf.getShort());\n                    buf.putInt(remainingBuf.getInt());\n                    buf.putFloat(remainingBuf.getFloat());\n                    buf.putFloat(remainingBuf.getFloat());\n                    buf.putFloat(remainingBuf.getFloat());\n                    buf.putFloat(remainingBuf.getFloat());\n                    buf.putFloat(remainingBuf.getFloat());\n                    buf.putFloat(remainingBuf.getFloat());\n                    buf.putFloat(remainingBuf.getFloat());\n                    buf.putFloat(remainingBuf.getFloat());\n                    buf.putFloat(remainingBuf.getFloat());\n                }\n                buf.flip();\n                outC.write(buf);\n                buf.clear();\n                outC.close();\n            }\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 810, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 1.8590072e-08, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'out': 'dot'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 456 FAILED.
  time cost = 0.21 min
  ALL EXAMPLE time cost = 26.72 min
  curr succ rate = 0.05442176870748299
Query times in this attack:  330
All Query times:  41902
raw_tokens: ['public', 'String', 'getSHA1Hex', '(', 'String', 'original', ')', '{', 'MessageDigest', 'digest', ';', 'String', 'result', '=', '"', '"', ';', 'try', '{', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'sha1', '"', ')', ';', 'digest', '.', 'reset', '(', ')', ';', 'digest', '.', 'update', '(', 'original', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'dig', '=', 'digest', '.', 'digest', '(', ')', ';', 'String', 'hexStr', '=', '"', '"', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'dig', '.', 'length', ';', 'i', '++', ')', '{', 'hexStr', '+=', 'Integer', '.', 'toString', '(', '(', 'dig', '[', 'i', ']', '&', '0xff', ')', '+', '0x100', ',', '16', ')', '.', 'substring', '(', '1', ')', ';', '}', 'result', '=', 'hexStr', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'return', 'result', ';', '}']
  >>  iter 1, ACC! i => iu (1 => 1, 0.99976 => 0.99976) a=1.001
  >>  iter 2, ACC! iu => n (1 => 1, 0.99976 => 0.99976) a=1.001
  >>  iter 3, ACC! n => li (1 => 1, 0.99976 => 0.99976) a=1.003
  >>  iter 4, ACC! li => c (1 => 1, 0.99976 => 0.99976) a=1.000
  >>  iter 5, ACC! c => ai (1 => 1, 0.99976 => 0.99976) a=1.001
  >>  iter 6, ACC! ai => u (1 => 1, 0.99976 => 0.99976) a=1.001
  >>  iter 7, ACC! u => ori (1 => 1, 0.99976 => 0.99976) a=1.002
  >>  iter 8, ACC! ori => xi (1 => 1, 0.99976 => 0.99976) a=1.002
  >>  iter 9, ACC! xi => mu (1 => 1, 0.99976 => 0.99976) a=1.001
  >>  iter 10, ACC! mu => p (1 => 1, 0.99976 => 0.99976) a=1.001
Example 457 attack result: {'succ': False, 'tokens': '    public String getSHA1Hex(String original) {\n        MessageDigest digest;\n        String result = "";\n        try {\n            digest = MessageDigest.getInstance("sha1");\n            digest.reset();\n            digest.update(original.getBytes());\n            byte[] dig = digest.digest();\n            String hexStr = "";\n            for (int p = 0; p < dig.length; p++) {\n                hexStr += Integer.toString((dig[p] & 0xff) + 0x100, 16).substring(1);\n            }\n            result = hexStr;\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n        return result;\n    }\n', 'raw_tokens': None, 'prog_length': 129, 'new_pred': 1, 'is_success': -1, 'old_uid': 'i', 'score_info': 1.7082493e-07, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'i': 'p'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 457 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 26.86 min
  curr succ rate = 0.05405405405405406
Query times in this attack:  311
All Query times:  42213
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'source', ',', 'File', 'destination', ',', 'boolean', 'lazy', ')', '{', 'if', '(', '!', 'source', '.', 'exists', '(', ')', ')', '{', 'return', ';', '}', 'if', '(', 'lazy', ')', '{', 'String', 'oldContent', '=', 'null', ';', 'try', '{', 'oldContent', '=', 'read', '(', 'source', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'return', ';', '}', 'String', 'newContent', '=', 'null', ';', 'try', '{', 'newContent', '=', 'read', '(', 'destination', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', 'if', '(', 'oldContent', '==', 'null', '||', '!', 'oldContent', '.', 'equals', '(', 'newContent', ')', ')', '{', 'copyFile', '(', 'source', ',', 'destination', ',', 'false', ')', ';', '}', '}', 'else', '{', 'if', '(', '(', 'destination', '.', 'getParentFile', '(', ')', '!=', 'null', ')', '&&', '(', '!', 'destination', '.', 'getParentFile', '(', ')', '.', 'exists', '(', ')', ')', ')', '{', 'destination', '.', 'getParentFile', '(', ')', '.', 'mkdirs', '(', ')', ';', '}', 'try', '{', 'FileChannel', 'srcChannel', '=', 'new', 'FileInputStream', '(', 'source', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'dstChannel', '=', 'new', 'FileOutputStream', '(', 'destination', ')', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'ioe', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
  >>  iter 1, ACC! copyFile =>  copyFiles (0 => 0, 0.99955 => 0.99955) a=1.001
  >>  iter 2, ACC!  copyFiles => Copyfile (0 => 0, 0.99955 => 0.99955) a=1.000
  >>  iter 3, ACC! Copyfile =>  copyFiles (0 => 0, 0.99955 => 0.99955) a=1.000
  >>  iter 4, ACC!  copyFiles => Copyfile (0 => 0, 0.99955 => 0.99955) a=1.000
  >>  iter 5, ACC! Copyfile => transferStream (0 => 0, 0.99955 => 0.99955) a=1.000
  >>  iter 6, ACC! source => down (0 => 0, 0.99955 => 0.99955) a=24.973
  >>  iter 7, ACC! down => SOURCE (0 => 0, 0.99955 => 0.99955) a=25.052
  >>  iter 8, ACC! SOURCE => reader (0 => 0, 0.99955 => 0.99955) a=1.003
  >>  iter 9, ACC! reader => slice (0 => 0, 0.99955 => 0.99955) a=24.940
  >>  iter 10, ACC! transferStream =>  copyfile (0 => 0, 0.99955 => 0.99955) a=1.000
Example 458 attack result: {'succ': False, 'tokens': '    public static void  copyFiles(File slice, File destination, boolean lazy) {\n        if (!slice.exists()) {\n            return;\n        }\n        if (lazy) {\n            String oldContent = null;\n            try {\n                oldContent = read(slice);\n            } catch (Exception e) {\n                return;\n            }\n            String newContent = null;\n            try {\n                newContent = read(destination);\n            } catch (Exception e) {\n            }\n            if (oldContent == null || !oldContent.equals(newContent)) {\n                 copyFiles(slice, destination, false);\n            }\n        } else {\n            if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) {\n                destination.getParentFile().mkdirs();\n            }\n            try {\n                FileChannel srcChannel = new FileInputStream(slice).getChannel();\n                FileChannel dstChannel = new FileOutputStream(destination).getChannel();\n                dstChannel.transferFrom(srcChannel, 0, srcChannel.size());\n                srcChannel.close();\n                dstChannel.close();\n            } catch (IOException ioe) {\n                ioe.printStackTrace();\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 215, 'new_pred': 0, 'is_success': -1, 'old_uid': 'copyFile', 'score_info': 0.0, 'nb_changed_var': 2, 'nb_changed_pos': 7, 'replace_info': {'copyFile': ' copyfile', 'source': 'slice'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 458 FAILED.
  time cost = 0.12 min
  ALL EXAMPLE time cost = 26.99 min
  curr succ rate = 0.053691275167785234
Query times in this attack:  202
All Query times:  42415
raw_tokens: ['private', 'synchronized', 'Frame', 'insertFrame', '(', 'int', 'index', ',', 'File', 'source', ',', 'INSERT_TYPE', 'type', ')', 'throws', 'IOException', '{', 'if', '(', 'source', '==', 'null', ')', 'throw', 'new', 'NullPointerException', '(', '"', 'Parameter', "'source'", 'is', 'null', '"', ')', ';', 'if', '(', '!', 'source', '.', 'exists', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'File', 'does', 'not', 'exist:', '', '"', '+', 'source', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'source', '.', 'length', '(', ')', '<=', '0', ')', 'throw', 'new', 'IOException', '(', '"', 'File', 'is', 'empty:', '', '"', '+', 'source', '.', 'getAbsolutePath', '(', ')', ')', ';', 'if', '(', 'index', '<', '0', ')', 'throw', 'new', 'IndexOutOfBoundsException', '(', '"', 'index', '<', '0', '"', ')', ';', 'if', '(', 'index', '>=', 'frames_', '.', 'size', '(', ')', ')', 'throw', 'new', 'IndexOutOfBoundsException', '(', '"', 'index', '>=', 'frames_.size()', '"', ')', ';', 'File', 'tmp', '=', 'new', 'File', '(', 'Settings', '.', 'getPropertyString', '(', 'ConstantKeys', '.', 'project_dir', ')', ',', '"', 'tmp.jpg', '"', ')', ';', 'switch', '(', 'type', ')', '{', 'case', 'MOVE', ':', 'if', '(', 'source', '.', 'getParentFile', '(', ')', '.', 'compareTo', '(', 'new', 'File', '(', 'Settings', '.', 'getPropertyString', '(', 'ConstantKeys', '.', 'project_dir', ')', ')', ')', '==', '0', '&&', 'source', '.', 'getName', '(', ')', '.', 'matches', '(', '"', 'img_[0-9]{5}', '\\\\', '.jpg', '"', ')', ')', '{', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'frames_', '.', 'size', '(', ')', ';', 'i', '++', ')', '{', 'Frame', 'f', '=', 'frames_', '.', 'get', '(', 'i', ')', ';', 'if', '(', 'f', '.', 'getFile', '(', ')', '.', 'compareTo', '(', 'source', ')', '==', '0', ')', '{', 'frames_', '.', 'remove', '(', 'i', ')', ';', 'break', ';', '}', '}', '}', 'source', '.', 'renameTo', '(', 'tmp', ')', ';', 'break', ';', 'case', 'COPY', ':', 'FileChannel', 'inChannel', '=', 'new', 'FileInputStream', '(', 'source', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'outChannel', '=', 'new', 'FileOutputStream', '(', 'tmp', ')', '.', 'getChannel', '(', ')', ';', 'inChannel', '.', 'transferTo', '(', '0', ',', 'inChannel', '.', 'size', '(', ')', ',', 'outChannel', ')', ';', 'if', '(', 'inChannel', '!=', 'null', ')', 'inChannel', '.', 'close', '(', ')', ';', 'if', '(', 'outChannel', '!=', 'null', ')', 'outChannel', '.', 'close', '(', ')', ';', 'break', ';', '}', 'for', '(', 'int', 'i', '=', 'frames_', '.', 'size', '(', ')', '-', '1', ';', 'i', '>=', 'index', ';', 'i', '--', ')', '{', 'Frame', 'newFrame', '=', 'new', 'Frame', '(', 'new', 'File', '(', 'Settings', '.', 'getPropertyString', '(', 'ConstantKeys', '.', 'project_dir', ')', ',', 'formatFileName', '(', 'i', ')', ')', ')', ';', 'frames_', '.', 'get', '(', 'i', ')', '.', 'moveTo', '(', 'newFrame', ')', ';', 'frames_', '.', 'set', '(', 'i', ',', 'newFrame', ')', ';', '}', 'File', 'newLocation', '=', 'new', 'File', '(', 'Settings', '.', 'getPropertyString', '(', 'ConstantKeys', '.', 'project_dir', ')', ',', 'formatFileName', '(', 'index', ')', ')', ';', 'tmp', '.', 'renameTo', '(', 'newLocation', ')', ';', 'Frame', 'f', '=', 'new', 'Frame', '(', 'newLocation', ')', ';', 'f', '.', 'createThumbNail', '(', ')', ';', 'frames_', '.', 'set', '(', 'index', ',', 'f', ')', ';', 'return', 'f', ';', '}']
  >>  iter 1, ACC! is => iss (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! iss => not (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! not => are (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! are => out (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! out => isl (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! isl => it (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! it => out (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! out => us (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! us => ip (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! ip => ys (1 => 1, 0.99988 => 0.99988) a=1.000
Example 459 attack result: {'succ': False, 'tokens': '    private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException {\n        if (source == null) throw new NullPointerException("Parameter \'source\' is null");\n        if (!source.exists()) throw new IOException("File does not exist: " + source.getAbsolutePath());\n        if (source.length() <= 0) throw new IOException("File is empty: " + source.getAbsolutePath());\n        if (index < 0) throw new IndexOutOfBoundsException("index < 0");\n        if (index >= frames_.size()) throw new IndexOutOfBoundsException("index >= frames_.size()");\n        File tmp = new File(Settings.getPropertyString(ConstantKeys.project_dir), "tmp.jpg");\n        switch(type) {\n            case MOVE:\n                if (source.getParentFile().compareTo(new File(Settings.getPropertyString(ConstantKeys.project_dir))) == 0 && source.getName().matches("img_[0-9]{5}\\\\.jpg")) {\n                    for (int i = 0; i < frames_.size(); i++) {\n                        Frame f = frames_.get(i);\n                        if (f.getFile().compareTo(source) == 0) {\n                            frames_.remove(i);\n                            break;\n                        }\n                    }\n                }\n                source.renameTo(tmp);\n                break;\n            case COPY:\n                FileChannel inChannel = new FileInputStream(source).getChannel();\n                FileChannel outChannel = new FileOutputStream(tmp).getChannel();\n                inChannel.transferTo(0, inChannel.size(), outChannel);\n                if (inChannel != null) inChannel.close();\n                if (outChannel != null) outChannel.close();\n                break;\n        }\n        for (int i = frames_.size() - 1; i >= index; i--) {\n            Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)));\n            frames_.get(i).moveTo(newFrame);\n            frames_.set(i, newFrame);\n        }\n        File newLocation = new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(index));\n        tmp.renameTo(newLocation);\n        Frame f = new Frame(newLocation);\n        f.createThumbNail();\n        frames_.set(index, f);\n        return f;\n    }\n', 'raw_tokens': None, 'prog_length': 446, 'new_pred': 1, 'is_success': -1, 'old_uid': 'is', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'is': 'ys'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 459 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 27.16 min
  curr succ rate = 0.05333333333333334
Query times in this attack:  263
All Query times:  42678
raw_tokens: ['@', 'Override', 'public', 'void', 'doFilter', '(', 'final', 'ServletRequest', 'request', ',', 'final', 'ServletResponse', 'response', ',', 'final', 'FilterChain', 'chain', ')', 'throws', 'IOException', ',', 'ServletException', '{', 'if', '(', 'request', 'instanceof', 'HttpServletRequest', '&&', 'response', 'instanceof', 'HttpServletResponse', ')', '{', 'final', 'HttpServletRequest', 'httpServletRequest', '=', '(', 'HttpServletRequest', ')', 'request', ';', 'final', 'HttpServletResponse', 'httpServletResponse', '=', '(', 'HttpServletResponse', ')', 'response', ';', 'final', 'String', 'contextPath', '=', 'httpServletRequest', '.', 'getContextPath', '(', ')', '+', '"', '/', '"', ';', 'final', 'String', 'requestURI', '=', 'httpServletRequest', '.', 'getRequestURI', '(', ')', ';', 'if', '(', 'requestURI', '.', 'startsWith', '(', 'contextPath', ')', ')', '{', 'final', 'String', 'filterURI', '=', 'requestURI', '.', 'substring', '(', 'contextPath', '.', 'length', '(', ')', ')', ';', 'final', 'String', 'filterPath', '=', 'getFilterPath', '(', ')', ';', 'if', '(', 'filterURI', '.', 'startsWith', '(', 'filterPath', ')', ')', '{', 'final', 'String', 'targetURI', '=', 'filterURI', '.', 'substring', '(', 'filterPath', '.', 'length', '(', ')', ')', ';', 'for', '(', 'final', 'Entry', '<', 'String', ',', 'String', '>', 'entry', ':', 'mapping', '.', 'entrySet', '(', ')', ')', '{', 'final', 'String', 'key', '=', 'entry', '.', 'getKey', '(', ')', ';', 'final', 'String', 'value', '=', 'entry', '.', 'getValue', '(', ')', ';', 'if', '(', 'targetURI', '.', 'startsWith', '(', 'key', ')', '&&', '(', 'targetURI', '.', 'length', '(', ')', '>', 'key', '.', 'length', '(', ')', ')', ')', '{', 'final', 'String', 'resourceName', '=', 'value', '+', 'targetURI', '.', 'substring', '(', 'key', '.', 'length', '(', ')', ')', ';', 'InputStream', 'is', '=', 'null', ';', 'try', '{', 'is', '=', 'getClass', '(', ')', '.', 'getResourceAsStream', '(', '"', '/', '"', '+', 'resourceName', ')', ';', 'if', '(', 'is', '!=', 'null', ')', '{', 'IOUtils', '.', 'copy', '(', 'is', ',', 'httpServletResponse', '.', 'getOutputStream', '(', ')', ')', ';', 'httpServletResponse', '.', 'flushBuffer', '(', ')', ';', 'break', ';', '}', 'else', '{', 'httpServletResponse', '.', 'sendError', '(', 'HttpServletResponse', '.', 'SC_NOT_FOUND', ')', ';', 'break', ';', '}', '}', 'catch', '(', 'final', 'IOException', 'ioex', ')', '{', 'throw', 'new', 'ServletException', '(', '"', 'Error', 'serving', 'resource', '[', '"', '+', 'resourceName', '+', '"', '].', '"', ',', 'ioex', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'is', ')', ';', '}', '}', '}', '}', 'else', '{', 'chain', '.', 'doFilter', '(', 'request', ',', 'response', ')', ';', '}', '}', 'else', '{', 'chain', '.', 'doFilter', '(', 'request', ',', 'response', ')', ';', '}', '}', 'else', '{', 'chain', '.', 'doFilter', '(', 'request', ',', 'response', ')', ';', '}', '}']
  >>  iter 1, ACC! copy => split (1 => 1, 0.99988 => 0.99988) a=1.005
  >>  iter 2, ACC! split =>  move (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 3, ACC!  move =>  copied (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC!  copied =>  move (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC!  move =>  copied (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC!  copied => move (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! move =>  copying (1 => 1, 0.99988 => 0.99988) a=1.007
  >>  iter 8, ACC!  copying => write (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! write => cop (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! cop => clone (1 => 1, 0.99988 => 0.99988) a=1.000
Example 460 attack result: {'succ': False, 'tokens': '    @Override\n    public void doFilter(final ServletRequest request, final ServletResponse response, final FilterChain chain) throws IOException, ServletException {\n        if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) {\n            final HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n            final HttpServletResponse httpServletResponse = (HttpServletResponse) response;\n            final String contextPath = httpServletRequest.getContextPath() + "/";\n            final String requestURI = httpServletRequest.getRequestURI();\n            if (requestURI.startsWith(contextPath)) {\n                final String filterURI = requestURI.substring(contextPath.length());\n                final String filterPath = getFilterPath();\n                if (filterURI.startsWith(filterPath)) {\n                    final String targetURI = filterURI.substring(filterPath.length());\n                    for (final Entry<String, String> entry : mapping.entrySet()) {\n                        final String key = entry.getKey();\n                        final String value = entry.getValue();\n                        if (targetURI.startsWith(key) && (targetURI.length() > key.length())) {\n                            final String resourceName = value + targetURI.substring(key.length());\n                            InputStream is = null;\n                            try {\n                                is = getClass().getResourceAsStream("/" + resourceName);\n                                if (is != null) {\n                                    IOUtils.  copying(is, httpServletResponse.getOutputStream());\n                                    httpServletResponse.flushBuffer();\n                                    break;\n                                } else {\n                                    httpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND);\n                                    break;\n                                }\n                            } catch (final IOException ioex) {\n                                throw new ServletException("Error serving resource [" + resourceName + "].", ioex);\n                            } finally {\n                                IOUtils.closeQuietly(is);\n                            }\n                        }\n                    }\n                } else {\n                    chain.doFilter(request, response);\n                }\n            } else {\n                chain.doFilter(request, response);\n            }\n        } else {\n            chain.doFilter(request, response);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 356, 'new_pred': 1, 'is_success': -1, 'old_uid': 'copy', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'copy': 'clone'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 460 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 27.31 min
  curr succ rate = 0.052980132450331126
Query times in this attack:  273
All Query times:  42951
raw_tokens: ['private', 'void', 'proxyMediaServlet', '(', 'String', 'url', ',', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'resp', ')', '{', 'try', '{', 'URL', 'u', '=', 'new', 'URL', '(', '"', 'http://mediaserver:8080/sagex', '"', '+', 'url', ')', ';', 'log', '.', 'debug', '(', '"', 'Proxy', 'Media:', '', '"', '+', 'u', '.', 'toString', '(', ')', ')', ';', 'URLConnection', 'c', '=', 'u', '.', 'openConnection', '(', ')', ';', 'c', '.', 'setRequestProperty', '(', '"', 'User-Agent', '"', ',', '"', 'Mozilla/5.0', '(X11;', 'U;', 'Linux', 'i686;', 'en-US;', 'rv:1.9.0.1)', 'Gecko/2008072820', 'Firefox/3.0.1', '"', ')', ';', 'OutputStream', 'os', '=', 'resp', '.', 'getOutputStream', '(', ')', ';', 'IOUtils', '.', 'copy', '(', 'c', '.', 'getInputStream', '(', ')', ',', 'os', ')', ';', 'os', '.', 'flush', '(', ')', ';', 'resp', '.', 'flushBuffer', '(', ')', ';', '}', 'catch', '(', 'Throwable', 't', ')', '{', 'log', '.', 'error', '(', '"', 'Failed', 'to', 'get', 'url:', '', '"', '+', 'url', ',', 't', ')', ';', 'try', '{', 'resp', '.', 'sendError', '(', '500', ',', 't', '.', 'getMessage', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}']
  >>  iter 1, ACC! url => http (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 2, ACC! http => resource (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 3, ACC! resource => source (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 4, ACC! source => image (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 5, ACC! image => feed (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 6, ACC! feed => l (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 7, ACC! l => image (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 8, ACC! image => builder (0 => 0, 0.99997 => 0.99997) a=1.000
  >>  iter 9, ACC! builder => page (0 => 0, 0.99997 => 0.99997) a=1.004
  >>  iter 10, ACC! page => download (0 => 0, 0.99997 => 0.99997) a=1.004
Example 461 attack result: {'succ': False, 'tokens': '    private void proxyMediaServlet(String download, HttpServletRequest req, HttpServletResponse resp) {\n        try {\n            URL u = new URL("http://mediaserver:8080/sagex" + download);\n            log.debug("Proxy Media: " + u.toString());\n            URLConnection c = u.openConnection();\n            c.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008072820 Firefox/3.0.1");\n            OutputStream os = resp.getOutputStream();\n            IOUtils.copy(c.getInputStream(), os);\n            os.flush();\n            resp.flushBuffer();\n        } catch (Throwable t) {\n            log.error("Failed to get url: " + download, t);\n            try {\n                resp.sendError(500, t.getMessage());\n            } catch (IOException e) {\n            }\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 145, 'new_pred': 0, 'is_success': -1, 'old_uid': 'url', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'url': 'download'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 461 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 27.47 min
  curr succ rate = 0.05263157894736842
Query times in this attack:  298
All Query times:  43249
raw_tokens: ['public', 'static', 'boolean', 'encodeFileToFile', '(', 'String', 'infile', ',', 'String', 'outfile', ')', '{', 'boolean', 'success', '=', 'false', ';', 'java', '.', 'io', '.', 'InputStream', 'in', '=', 'null', ';', 'java', '.', 'io', '.', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'Base64', '.', 'InputStream', '(', 'new', 'java', '.', 'io', '.', 'BufferedInputStream', '(', 'new', 'java', '.', 'io', '.', 'FileInputStream', '(', 'infile', ')', ')', ',', 'Base64', '.', 'ENCODE', ')', ';', 'out', '=', 'new', 'java', '.', 'io', '.', 'BufferedOutputStream', '(', 'new', 'java', '.', 'io', '.', 'FileOutputStream', '(', 'outfile', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'success', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', 'try', '{', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', '}', 'return', 'success', ';', '}']
Example 462 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'IOException', '{', 'FileChannel', 'in', '=', 'null', ';', 'FileChannel', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'FileInputStream', '(', 'source', ')', '.', 'getChannel', '(', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'destination', ')', '.', 'getChannel', '(', ')', ';', 'long', 'size', '=', 'in', '.', 'size', '(', ')', ';', 'MappedByteBuffer', 'buffer', '=', 'in', '.', 'map', '(', 'FileChannel', '.', 'MapMode', '.', 'READ_ONLY', ',', '0', ',', 'size', ')', ';', 'out', '.', 'write', '(', 'buffer', ')', ';', '}', 'finally', '{', 'if', '(', 'in', '!=', 'null', ')', '{', 'in', '.', 'close', '(', ')', ';', '}', 'if', '(', 'out', '!=', 'null', ')', '{', 'out', '.', 'close', '(', ')', ';', '}', '}', '}']
Example 463 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'decodeFileToFile', '(', 'String', 'infile', ',', 'String', 'outfile', ')', '{', 'boolean', 'success', '=', 'false', ';', 'java', '.', 'io', '.', 'InputStream', 'in', '=', 'null', ';', 'java', '.', 'io', '.', 'OutputStream', 'out', '=', 'null', ';', 'try', '{', 'in', '=', 'new', 'Base64', '.', 'InputStream', '(', 'new', 'java', '.', 'io', '.', 'BufferedInputStream', '(', 'new', 'java', '.', 'io', '.', 'FileInputStream', '(', 'infile', ')', ')', ',', 'Base64', '.', 'DECODE', ')', ';', 'out', '=', 'new', 'java', '.', 'io', '.', 'BufferedOutputStream', '(', 'new', 'java', '.', 'io', '.', 'FileOutputStream', '(', 'outfile', ')', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'int', 'read', '=', '-', '1', ';', 'while', '(', '(', 'read', '=', 'in', '.', 'read', '(', 'buffer', ')', ')', '>=', '0', ')', '{', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', 'success', '=', 'true', ';', '}', 'catch', '(', 'java', '.', 'io', '.', 'IOException', 'exc', ')', '{', 'exc', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', 'try', '{', 'out', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'exc', ')', '{', '}', '}', 'return', 'success', ';', '}']
Example 464 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'main', '(', 'String', '[', ']', 'args', ')', 'throws', 'Exception', '{', 'URL', 'url', '=', 'new', 'URL', '(', '"', 'http://localhost:9090/node/Insert/', '"', '+', 'args', '[', '0', ']', '+', '"', '?address=blah', '"', ')', ';', 'URLConnection', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setDoOutput', '(', 'true', ')', ';', 'OutputStream', 'os', '=', 'conn', '.', 'getOutputStream', '(', ')', ';', 'Conduit', '.', 'pump', '(', 'System', '.', 'in', ',', 'os', ')', ';', 'Conduit', '.', 'pump', '(', 'conn', '.', 'getInputStream', '(', ')', ',', 'System', '.', 'out', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'done', '"', ')', ';', '}']
Example 465 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'process', '(', 'String', 'urlstring', ')', '{', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'urlstring', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'Connecting', 'to', '', '"', '+', 'url', ')', ';', 'URLConnection', 'connection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'connection', '.', 'connect', '(', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'connection', '.', 'getInputStream', '(', ')', ')', ')', ';', 'for', '(', 'String', 'line', ';', '(', 'line', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ';', ')', 'if', '(', 'line', '.', 'startsWith', '(', 'MARKER', ')', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'TAG', '.', 'matcher', '(', 'line', ')', '.', 'replaceAll', '(', '"', '"', ')', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'System', '.', 'err', '.', 'println', '(', '"', '"', '+', 'ioe', ')', ';', '}', '}']
  >>  iter 1, ACC! in => fp (0 => 0, 0.99866 => 0.99866) a=1.011
  >>  iter 2, ACC! url => download (0 => 0, 0.99866 => 0.99864) a=1.024
  >>  iter 3, REJ. download => sf (0 => 0, 0.99864 => 0.99865) a=0.997
  >>  iter 4, ACC! download => image (0 => 0, 0.99864 => 0.99866) a=1.005
  >>  iter 5, ACC! image => fl (0 => 0, 0.99866 => 0.99864) a=1.021
  >>  iter 6, ACC! fl => stream (0 => 0, 0.99864 => 0.99865) a=1.007
  >>  iter 7, ACC! fp => el (0 => 0, 0.99865 => 0.99866) a=1.002
  >>  iter 8, ACC! stream => base (0 => 0, 0.99866 => 0.99867) a=1.014
  >>  iter 9, ACC! el => kin (0 => 0, 0.99867 => 0.99867) a=1.009
  >>  iter 10, ACC! kin => serv (0 => 0, 0.99867 => 0.99868) a=1.011
Example 466 attack result: {'succ': False, 'tokens': '    private static void process(String urlstring) {\n        try {\n            URL base = new URL(urlstring);\n            System.out.println("Connecting to " + base);\n            URLConnection connection = base.openConnection();\n            connection.connect();\n            BufferedReader serv = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n            for (String line; (line = serv.readLine()) != null; ) if (line.startsWith(MARKER)) {\n                System.out.println(TAG.matcher(line).replaceAll(""));\n            }\n            serv.close();\n        } catch (IOException ioe) {\n            System.err.println("" + ioe);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 141, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': -8.761883e-06, 'nb_changed_var': 2, 'nb_changed_pos': 6, 'replace_info': {'in': 'serv', 'url': 'base'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 466 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 27.67 min
  curr succ rate = 0.05228758169934641
Query times in this attack:  306
All Query times:  43555
raw_tokens: ['public', 'void', 'CopyFile', '(', 'File', 'source', ',', 'File', 'destination', ')', 'throws', 'Exception', '{', 'FileInputStream', 'fis', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fis', '=', 'new', 'FileInputStream', '(', 'source', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'destination', ')', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '4096', ']', ';', 'int', 'read', ';', 'while', '(', '(', 'read', '=', 'fis', '.', 'read', '(', 'buffer', ')', ')', '!=', '-', '1', ')', '{', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'read', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fis', '!=', 'null', ')', '{', 'fis', '.', 'close', '(', ')', ';', '}', 'if', '(', 'fos', '!=', 'null', ')', '{', 'fos', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}']
Example 467 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'Map', '<', 'String', ',', 'String', '>', 'getMetadata', '(', 'WebFileObject', 'fo', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'fo', '.', 'wfs', '.', 'getRootURL', '(', ')', '.', 'getProtocol', '(', ')', '.', 'equals', '(', '"', 'ftp', '"', ')', ')', '{', 'String', 'realName', '=', 'fo', '.', 'pathname', ';', 'boolean', 'exists', ';', 'URL', 'ur', '=', 'new', 'URL', '(', 'fo', '.', 'wfs', '.', 'getRootURL', '(', ')', ',', 'realName', ')', ';', 'HttpURLConnection', 'connect', '=', '(', 'HttpURLConnection', ')', 'ur', '.', 'openConnection', '(', ')', ';', 'connect', '.', 'setRequestMethod', '(', '"', 'HEAD', '"', ')', ';', 'HttpURLConnection', '.', 'setFollowRedirects', '(', 'false', ')', ';', 'connect', '.', 'connect', '(', ')', ';', 'HttpURLConnection', '.', 'setFollowRedirects', '(', 'true', ')', ';', 'if', '(', 'connect', '.', 'getResponseCode', '(', ')', '==', '303', ')', '{', 'String', 'surl', '=', 'connect', '.', 'getHeaderField', '(', '"', 'Location', '"', ')', ';', 'if', '(', 'surl', '.', 'startsWith', '(', 'fo', '.', 'wfs', '.', 'root', '.', 'toString', '(', ')', ')', ')', '{', 'realName', '=', 'surl', '.', 'substring', '(', 'fo', '.', 'wfs', '.', 'root', '.', 'toString', '(', ')', '.', 'length', '(', ')', ')', ';', '}', 'connect', '.', 'disconnect', '(', ')', ';', 'ur', '=', 'new', 'URL', '(', 'fo', '.', 'wfs', '.', 'getRootURL', '(', ')', ',', 'realName', ')', ';', 'connect', '=', '(', 'HttpURLConnection', ')', 'ur', '.', 'openConnection', '(', ')', ';', 'connect', '.', 'setRequestMethod', '(', '"', 'HEAD', '"', ')', ';', 'connect', '.', 'connect', '(', ')', ';', '}', 'exists', '=', 'connect', '.', 'getResponseCode', '(', ')', '!=', '404', ';', 'Map', '<', 'String', ',', 'String', '>', 'result', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'Map', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'fields', '=', 'connect', '.', 'getHeaderFields', '(', ')', ';', 'for', '(', 'Entry', '<', 'String', ',', 'List', '<', 'String', '>', '>', 'e', ':', 'fields', '.', 'entrySet', '(', ')', ')', '{', 'String', 'key', '=', 'e', '.', 'getKey', '(', ')', ';', 'List', '<', 'String', '>', 'value', '=', 'e', '.', 'getValue', '(', ')', ';', 'result', '.', 'put', '(', 'key', ',', 'value', '.', 'get', '(', '0', ')', ')', ';', '}', 'result', '.', 'put', '(', 'META_EXIST', ',', 'String', '.', 'valueOf', '(', 'exists', ')', ')', ';', 'connect', '.', 'disconnect', '(', ')', ';', 'return', 'result', ';', '}', 'else', '{', 'Map', '<', 'String', ',', 'String', '>', 'result', '=', 'new', 'HashMap', '<', 'String', ',', 'String', '>', '(', ')', ';', 'URL', 'url', '=', 'new', 'URL', '(', 'fo', '.', 'wfs', '.', 'getRootURL', '(', ')', ',', 'fo', '.', 'pathname', ')', ';', 'URLConnection', 'urlc', '=', 'url', '.', 'openConnection', '(', ')', ';', 'try', '{', 'urlc', '.', 'connect', '(', ')', ';', 'urlc', '.', 'getInputStream', '(', ')', '.', 'close', '(', ')', ';', 'result', '.', 'put', '(', 'META_EXIST', ',', '"', 'true', '"', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'result', '.', 'put', '(', 'META_EXIST', ',', '"', 'false', '"', ')', ';', '}', 'return', 'result', ';', '}', '}']
Example 468 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'doVersionCheck', '(', 'View', 'view', ')', '{', 'view', '.', 'showWaitCursor', '(', ')', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'jEdit', '.', 'getProperty', '(', '"', 'version-check.url', '"', ')', ')', ';', 'InputStream', 'in', '=', 'url', '.', 'openStream', '(', ')', ';', 'BufferedReader', 'bin', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'in', ')', ')', ';', 'String', 'line', ';', 'String', 'develBuild', '=', 'null', ';', 'String', 'stableBuild', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'bin', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'line', '.', 'startsWith', '(', '"', '.build', '"', ')', ')', 'develBuild', '=', 'line', '.', 'substring', '(', '6', ')', '.', 'trim', '(', ')', ';', 'else', 'if', '(', 'line', '.', 'startsWith', '(', '"', '.stablebuild', '"', ')', ')', 'stableBuild', '=', 'line', '.', 'substring', '(', '12', ')', '.', 'trim', '(', ')', ';', '}', 'bin', '.', 'close', '(', ')', ';', 'if', '(', 'develBuild', '!=', 'null', '&&', 'stableBuild', '!=', 'null', ')', '{', 'doVersionCheck', '(', 'view', ',', 'stableBuild', ',', 'develBuild', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'String', '[', ']', 'args', '=', '{', 'jEdit', '.', 'getProperty', '(', '"', 'version-check.url', '"', ')', ',', 'e', '.', 'toString', '(', ')', '}', ';', 'GUIUtilities', '.', 'error', '(', 'view', ',', '"', 'read-error', '"', ',', 'args', ')', ';', '}', 'view', '.', 'hideWaitCursor', '(', ')', ';', '}']
  >>  iter 1, ACC! url => Url (1 => 1, 0.98274 => 0.98240) a=1.019
  >>  iter 2, REJ. Url => method (1 => 1, 0.98240 => 0.98289) a=0.991
  >>  iter 3, REJ. Url => html (1 => 1, 0.98240 => 0.98290) a=0.995
  >>  iter 4, REJ. Url => rl (1 => 1, 0.98240 => 0.98271) a=0.995
  >>  iter 5, REJ. Url => ll (1 => 1, 0.98240 => 0.98287) a=0.995
  >>  iter 6, REJ. Url => coll (1 => 1, 0.98240 => 0.98272) a=0.995
  >>  iter 7, REJ. Url => page (1 => 1, 0.98240 => 0.98270) a=0.995
  >>  iter 8, REJ. Url => route (1 => 1, 0.98240 => 0.98267) a=0.991
  >>  iter 9, REJ. Url => ur (1 => 1, 0.98240 => 0.98281) a=0.995
  >>  iter 10, REJ. Url => html (1 => 1, 0.98240 => 0.98290) a=0.993
Example 469 attack result: {'succ': False, 'tokens': '    public static void doVersionCheck(View view) {\n        view.showWaitCursor();\n        try {\n            URL html = new URL(jEdit.getProperty("version-check.url"));\n            InputStream in = html.openStream();\n            BufferedReader bin = new BufferedReader(new InputStreamReader(in));\n            String line;\n            String develBuild = null;\n            String stableBuild = null;\n            while ((line = bin.readLine()) != null) {\n                if (line.startsWith(".build")) develBuild = line.substring(6).trim(); else if (line.startsWith(".stablebuild")) stableBuild = line.substring(12).trim();\n            }\n            bin.close();\n            if (develBuild != null && stableBuild != null) {\n                doVersionCheck(view, stableBuild, develBuild);\n            }\n        } catch (IOException e) {\n            String[] args = { jEdit.getProperty("version-check.url"), e.toString() };\n            GUIUtilities.error(view, "read-error", args);\n        }\n        view.hideWaitCursor();\n    }\n', 'raw_tokens': None, 'prog_length': 210, 'new_pred': 1, 'is_success': -1, 'old_uid': 'url', 'score_info': 0.0005031731, 'nb_changed_var': 1, 'nb_changed_pos': 2, 'replace_info': {'url': 'Url'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 469 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 27.85 min
  curr succ rate = 0.05194805194805195
Query times in this attack:  305
All Query times:  43860
raw_tokens: ['public', 'boolean', 'getFile', '(', 'String', 'local', ',', 'String', 'remote', ')', 'throws', 'IOException', '{', 'boolean', 'result', '=', 'false', ';', 'GridFTP', 'ftp', '=', 'new', 'GridFTP', '(', ')', ';', 'ftp', '.', 'setDefaultPort', '(', 'port', ')', ';', 'System', '.', 'out', '.', 'println', '(', 'this', '+', '"', '.getFile', '', '"', '+', 'remote', ')', ';', 'try', '{', 'ftp', '.', 'connect', '(', 'host', ')', ';', 'ftp', '.', 'login', '(', 'username', ',', 'password', ')', ';', 'int', 'reply', '=', 'ftp', '.', 'getReplyCode', '(', ')', ';', 'if', '(', '!', 'FTPReply', '.', 'isPositiveCompletion', '(', 'reply', ')', ')', '{', 'ftp', '.', 'disconnect', '(', ')', ';', 'System', '.', 'err', '.', 'println', '(', '"', 'FTP', 'server', 'refused', 'connection.', '"', ')', ';', 'return', 'false', ';', '}', 'ftp', '.', 'get', '(', 'local', ',', 'remote', ')', ';', 'ftp', '.', 'logout', '(', ')', ';', 'result', '=', 'true', ';', '}', 'finally', '{', 'if', '(', 'ftp', '.', 'isConnected', '(', ')', ')', '{', 'try', '{', 'ftp', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', '}', '}', 'System', '.', 'out', '.', 'println', '(', 'this', '+', '"', '.getFile', 'return', '', '"', '+', 'result', ')', ';', 'return', 'result', ';', '}']
Example 470 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['protected', 'void', 'copyFile', '(', 'File', 'from', ',', 'File', 'to', ')', 'throws', 'IOException', '{', 'new', 'File', '(', 'intSfPath', ')', '.', 'delete', '(', ')', ';', 'if', '(', 'to', '.', 'exists', '(', ')', '&&', '(', 'from', '.', 'length', '(', ')', '==', 'to', '.', 'length', '(', ')', ')', '&&', '(', 'from', '.', 'lastModified', '(', ')', '==', 'to', '.', 'lastModified', '(', ')', ')', ')', 'return', ';', 'if', '(', 'to', '.', 'exists', '(', ')', ')', 'to', '.', 'delete', '(', ')', ';', 'to', '.', 'createNewFile', '(', ')', ';', 'FileChannel', 'inFC', '=', 'null', ';', 'FileChannel', 'outFC', '=', 'null', ';', 'try', '{', 'inFC', '=', 'new', 'FileInputStream', '(', 'from', ')', '.', 'getChannel', '(', ')', ';', 'outFC', '=', 'new', 'FileOutputStream', '(', 'to', ')', '.', 'getChannel', '(', ')', ';', 'long', 'cnt', '=', 'outFC', '.', 'transferFrom', '(', 'inFC', ',', '0', ',', 'inFC', '.', 'size', '(', ')', ')', ';', 'if', '(', 'cnt', '<', 'inFC', '.', 'size', '(', ')', ')', 'throw', 'new', 'IOException', '(', '"', 'File', 'copy', 'failed', '"', ')', ';', '}', 'finally', '{', 'if', '(', 'inFC', '!=', 'null', ')', '{', 'try', '{', 'inFC', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', '}', '}', 'if', '(', 'outFC', '!=', 'null', ')', '{', 'try', '{', 'outFC', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', '}', '}', 'to', '.', 'setLastModified', '(', 'from', '.', 'lastModified', '(', ')', ')', ';', '}', '}']
  >>  iter 1, ACC! copyFile => Copyfile (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! Copyfile => copyStream (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC! copyStream => Copyfile (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! Copyfile => copyStream (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! copyStream => transferfile (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! transferfile => copyFiles (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC! copyFiles => CopyStream (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC! CopyStream => copyStream (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC! copyStream => Copyfile (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC! Copyfile => transferFile (1 => 1, 0.99988 => 0.99988) a=1.000
Example 471 attack result: {'succ': False, 'tokens': '    protected void transferFile(File from, File to) throws IOException {\n        new File(intSfPath).delete();\n        if (to.exists() && (from.length() == to.length()) && (from.lastModified() == to.lastModified())) return;\n        if (to.exists()) to.delete();\n        to.createNewFile();\n        FileChannel inFC = null;\n        FileChannel outFC = null;\n        try {\n            inFC = new FileInputStream(from).getChannel();\n            outFC = new FileOutputStream(to).getChannel();\n            long cnt = outFC.transferFrom(inFC, 0, inFC.size());\n            if (cnt < inFC.size()) throw new IOException("File copy failed");\n        } finally {\n            if (inFC != null) {\n                try {\n                    inFC.close();\n                } catch (IOException ex) {\n                }\n            }\n            if (outFC != null) {\n                try {\n                    outFC.close();\n                } catch (IOException ex) {\n                }\n            }\n            to.setLastModified(from.lastModified());\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 218, 'new_pred': 1, 'is_success': -1, 'old_uid': 'copyFile', 'score_info': -1.20926416e-08, 'nb_changed_var': 1, 'nb_changed_pos': 1, 'replace_info': {'copyFile': 'transferFile'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 471 FAILED.
  time cost = 0.11 min
  ALL EXAMPLE time cost = 27.98 min
  curr succ rate = 0.05161290322580645
Query times in this attack:  145
All Query times:  44005
raw_tokens: ['@', 'Deprecated', 'public', 'void', 'encodeBegin', '(', 'FacesContext', 'context', ',', 'UIComponent', 'component', ')', 'throws', 'IOException', '{', 'XUIResponseWriter', 'w', '=', 'getResponseWriter', '(', ')', ';', 'XUIViewRoot', 'viewRoot', '=', '(', 'XUIViewRoot', ')', 'component', ';', 'XUIResponseWriter', 'headerW', '=', 'getResponseWriter', '(', ')', '.', 'getHeaderWriter', '(', ')', ';', 'headerW', '.', 'write', '(', '"', '<?xml', 'version=', '\\"', '1.0', '\\"', '', 'encoding=', '\\"', 'UTF-8', '\\"', '?><!DOCTYPE', 'foo', '[', '"', ')', ';', 'InputStream', 'is1', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'xhtml-lat1.ent', '"', ')', ';', 'headerW', '.', 'write', '(', 'new', 'String', '(', 'IOUtils', '.', 'copyByte', '(', 'is1', ')', ')', ')', ';', 'headerW', '.', 'write', '(', '"', '', '"', ')', ';', 'is1', '.', 'close', '(', ')', ';', 'InputStream', 'is2', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'xhtml-special.ent', '"', ')', ';', 'headerW', '.', 'write', '(', 'new', 'String', '(', 'IOUtils', '.', 'copyByte', '(', 'is2', ')', ')', ')', ';', 'headerW', '.', 'write', '(', '"', '', '"', ')', ';', 'is2', '.', 'close', '(', ')', ';', 'InputStream', 'is3', '=', 'Thread', '.', 'currentThread', '(', ')', '.', 'getContextClassLoader', '(', ')', '.', 'getResourceAsStream', '(', '"', 'xhtml-symbol.ent', '"', ')', ';', 'headerW', '.', 'write', '(', 'new', 'String', '(', 'IOUtils', '.', 'copyByte', '(', 'is3', ')', ')', ')', ';', 'headerW', '.', 'write', '(', '"', ']>', '"', ')', ';', 'is3', '.', 'close', '(', ')', ';', 'headerW', '.', 'startElement', '(', '"', 'html', '"', ',', 'component', ')', ';', 'XUITheme', 't', '=', 'getTheme', '(', ')', ';', 'if', '(', 't', '!=', 'null', ')', '{', 'headerW', '.', 'writeAttribute', '(', '"', 'style', '"', ',', 'getTheme', '(', ')', '.', 'getHtmlStyle', '(', ')', ',', '"', 'style', '"', ')', ';', '}', 'headerW', '.', 'startElement', '(', '"', 'head', '"', ',', 'component', ')', ';', 'headerW', '.', 'startElement', '(', '"', 'base', '"', ',', 'component', ')', ';', 'HttpServletRequest', 'req', '=', '(', 'HttpServletRequest', ')', 'getRequestContext', '(', ')', '.', 'getRequest', '(', ')', ';', 'String', 'link', '=', '(', 'req', '.', 'isSecure', '(', ')', '?', '"', 'https', '"', ':', '"', 'http', '"', ')', '+', '"', '://', '"', '+', 'req', '.', 'getServerName', '(', ')', '+', '(', 'req', '.', 'getServerPort', '(', ')', '==', '80', '?', '"', '"', ':', '"', ':', '"', '+', 'req', '.', 'getServerPort', '(', ')', ')', '+', 'getRequestContext', '(', ')', '.', 'getResourceUrl', '(', '"', '"', ')', ';', 'headerW', '.', 'writeAttribute', '(', '"', 'href', '"', ',', 'link', ',', '"', 'href', '"', ')', ';', 'headerW', '.', 'endElement', '(', '"', 'base', '"', ')', ';', 'w', '.', 'startElement', '(', '"', 'body', '"', ',', 'component', ')', ';', 'if', '(', 't', '!=', 'null', '&&', 't', '.', 'getBodyStyle', '(', ')', '!=', 'null', ')', '{', 'w', '.', 'writeAttribute', '(', '"', 'style', '"', ',', 'getTheme', '(', ')', '.', 'getBodyStyle', '(', ')', '+', '"', ';height:100%;width:100%', '"', ',', '"', 'style', '"', ')', ';', '}', 'headerW', '.', 'writeText', '(', "'');", 'w', '.', 'startElement', '(', '"', 'div', '"', ',', 'component', ')', ';', 'w', '.', 'writeAttribute', '(', '"', 'id', '"', ',', '(', '(', 'XUIViewRoot', ')', 'component', ')', '.', 'getClientId', '(', ')', ',', '"', 'id', '"', ')', '', ';', 'if', '(', 'viewRoot', '.', 'findComponent', '(', 'Window', '.', 'class', ')', '!=', 'null', ')', '{', 'w', '.', 'writeAttribute', '(', 'HTMLAttr', '.', 'CLASS', ',', '"', 'x-panel', '"', ',', '"', '"', ')', ';', '}', 'w', '.', 'writeAttribute', '(', '"', 'style', '"', ',', '"', 'width:100%;height:100%', '"', ',', 'null', ')', ';', 'if', '(', 't', '!=', 'null', ')', '{', 't', '.', 'addScripts', '(', 'w', '.', 'getScriptContext', '(', ')', ')', ';', 't', '.', 'addStyle', '(', 'w', '.', 'getStyleContext', '(', ')', ')', ';', '}', '}']
Example 472 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'fileCopy', '(', 'File', 'src', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'if', '(', '!', 'dest', '.', 'exists', '(', ')', ')', '{', 'final', 'File', 'parent', '=', 'new', 'File', '(', 'dest', '.', 'getParent', '(', ')', ')', ';', 'if', '(', '!', 'parent', '.', 'exists', '(', ')', '&&', '!', 'parent', '.', 'mkdirs', '(', ')', ')', '{', 'throw', 'new', 'IOException', '(', ')', ';', '}', 'if', '(', '!', 'dest', '.', 'createNewFile', '(', ')', ')', '{', '}', '}', 'FileInputStream', 'is', '=', 'null', ';', 'FileOutputStream', 'os', '=', 'null', ';', 'try', '{', 'is', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'os', '=', 'new', 'FileOutputStream', '(', 'dest', ')', ';', 'final', 'FileChannel', 'srcChannel', '=', 'is', '.', 'getChannel', '(', ')', ';', 'final', 'FileChannel', 'dstChannel', '=', 'os', '.', 'getChannel', '(', ')', ';', 'dstChannel', '.', 'transferFrom', '(', 'srcChannel', ',', '0', ',', 'srcChannel', '.', 'size', '(', ')', ')', ';', 'srcChannel', '.', 'close', '(', ')', ';', 'dstChannel', '.', 'close', '(', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'is', '!=', 'null', ')', '{', 'is', '.', 'close', '(', ')', ';', '}', '}', 'finally', '{', 'if', '(', 'os', '!=', 'null', ')', '{', 'os', '.', 'close', '(', ')', ';', '}', '}', '}', '}']
Example 473 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'Override', 'public', 'boolean', 'performOk', '(', ')', '{', 'this', '.', 'setPropertyValue', '(', '"', 'bea.home', '"', ',', 'this', '.', 'beaHome', '.', 'getText', '(', ')', ')', ';', 'this', '.', 'setPropertyValue', '(', '"', 'bea.domain', '"', ',', 'this', '.', 'domainDirectory', '.', 'getText', '(', ')', ')', ';', 'Display', '.', 'getDefault', '(', ')', '.', 'syncExec', '(', 'new', 'Runnable', '(', ')', '{', 'public', 'void', 'run', '(', ')', '{', 'saveWLHome', '(', ')', ';', 'for', '(', 'final', 'TabControl', 'control', ':', 'tabControls', ')', '{', 'control', '.', 'performOk', '(', 'WLPropertyPage', '.', 'this', '.', 'getProject', '(', ')', ',', 'WLPropertyPage', '.', 'this', ')', ';', '}', 'if', '(', 'isEnabledJCLCopy', '(', ')', ')', '{', 'final', 'File', 'url', '=', 'new', 'File', '(', 'WLPropertyPage', '.', 'this', '.', 'domainDirectory', '.', 'getText', '(', ')', ')', ';', 'File', 'lib', '=', 'new', 'File', '(', 'url', ',', '"', 'lib', '"', ')', ';', 'File', 'log4jLibrary', '=', 'new', 'File', '(', 'lib', ',', '"', 'log4j-1.2.13.jar', '"', ')', ';', 'if', '(', '!', 'log4jLibrary', '.', 'exists', '(', ')', ')', '{', 'InputStream', 'srcFile', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'srcFile', '=', 'toInputStream', '(', 'new', 'Path', '(', '"', 'jcl/log4j-1.2.13.jar', '"', ')', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'log4jLibrary', ')', ';', 'IOUtils', '.', 'copy', '(', 'srcFile', ',', 'fos', ')', ';', 'srcFile', '.', 'close', '(', ')', ';', 'fos', '.', 'flush', '(', ')', ';', 'fos', '.', 'close', '(', ')', ';', 'srcFile', '=', 'toInputStream', '(', 'new', 'Path', '(', '"', '/jcl/commons-logging-1.0.4.jar', '"', ')', ')', ';', 'File', 'jcl', '=', 'new', 'File', '(', 'lib', ',', '"', 'commons-logging-1.0.4.jar', '"', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'jcl', ')', ';', 'IOUtils', '.', 'copy', '(', 'srcFile', ',', 'fos', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'Logger', '.', 'log', '(', 'Logger', '.', 'ERROR', ',', '"', 'Could', 'not', 'copy', 'JCL', 'jars', 'file', 'to', 'Bea', 'WL', '"', ',', 'e', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'srcFile', '!=', 'null', ')', '{', 'srcFile', '.', 'close', '(', ')', ';', 'srcFile', '=', 'null', ';', '}', 'if', '(', 'fos', '!=', 'null', ')', '{', 'fos', '.', 'flush', '(', ')', ';', 'fos', '.', 'close', '(', ')', ';', 'fos', '=', 'null', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', '}', 'if', '(', 'isEnabledJSTLCopy', '(', ')', ')', '{', 'File', 'url', '=', 'new', 'File', '(', 'WLPropertyPage', '.', 'this', '.', 'domainDirectory', '.', 'getText', '(', ')', ')', ';', 'File', 'lib', '=', 'new', 'File', '(', 'url', ',', '"', 'lib', '"', ')', ';', 'File', 'jstlLibrary', '=', 'new', 'File', '(', 'lib', ',', '"', 'jstl.jar', '"', ')', ';', 'if', '(', '!', 'jstlLibrary', '.', 'exists', '(', ')', ')', '{', 'InputStream', 'srcFile', '=', 'null', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'srcFile', '=', 'toInputStream', '(', 'new', 'Path', '(', '"', 'jstl/jstl.jar', '"', ')', ')', ';', 'fos', '=', 'new', 'FileOutputStream', '(', 'jstlLibrary', ')', ';', 'IOUtils', '.', 'copy', '(', 'srcFile', ',', 'fos', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'Logger', '.', 'log', '(', 'Logger', '.', 'ERROR', ',', '"', 'Could', 'not', 'copy', 'the', 'JSTL', '1.1', 'jar', 'file', 'to', 'Bea', 'WL', '"', ',', 'e', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'srcFile', '!=', 'null', ')', '{', 'srcFile', '.', 'close', '(', ')', ';', 'srcFile', '=', 'null', ';', '}', 'if', '(', 'fos', '!=', 'null', ')', '{', 'fos', '.', 'flush', '(', ')', ';', 'fos', '.', 'close', '(', ')', ';', 'fos', '=', 'null', ';', '}', '}', 'catch', '(', 'final', 'IOException', 'e', ')', '{', 'Logger', '.', 'getLog', '(', ')', '.', 'debug', '(', '"', 'I/O', 'exception', 'closing', 'resources', '"', ',', 'e', ')', ';', '}', '}', '}', '}', '}', '}', ')', ';', 'return', 'super', '.', 'performOk', '(', ')', ';', '}']
Example 474 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'unzipEntry', '(', 'ZipFile', 'zipfile', ',', 'ZipEntry', 'entry', ',', 'File', 'outputDir', ')', 'throws', 'IOException', '{', 'if', '(', 'entry', '.', 'isDirectory', '(', ')', ')', '{', 'createDir', '(', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ')', ';', 'return', ';', '}', 'File', 'outputFile', '=', 'new', 'File', '(', 'outputDir', ',', 'entry', '.', 'getName', '(', ')', ')', ';', 'if', '(', '!', 'outputFile', '.', 'getParentFile', '(', ')', '.', 'exists', '(', ')', ')', '{', 'createDir', '(', 'outputFile', '.', 'getParentFile', '(', ')', ')', ';', '}', 'BufferedInputStream', 'inputStream', '=', 'new', 'BufferedInputStream', '(', 'zipfile', '.', 'getInputStream', '(', 'entry', ')', ')', ';', 'BufferedOutputStream', 'outputStream', '=', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outputFile', ')', ')', ';', 'try', '{', 'IOUtils', '.', 'copy', '(', 'inputStream', ',', 'outputStream', ')', ';', '}', 'finally', '{', 'outputStream', '.', 'close', '(', ')', ';', 'inputStream', '.', 'close', '(', ')', ';', '}', '}']
  >>  iter 1, ACC! outputFile =>  outputStream (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC!  outputStream =>  outputFiles (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 3, ACC!  outputFiles => inputFolder (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 4, ACC! inputFolder => responsefile (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 5, ACC! responsefile => OutputFile (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! OutputFile =>  outputFiles (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 7, ACC!  outputFiles =>  outputDir (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 8, ACC!  outputDir =>  outputStream (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 9, ACC!  outputStream =>  outputFiles (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 10, ACC!  outputFiles => OutputFile (1 => 1, 0.99988 => 0.99988) a=1.000
Example 475 attack result: {'succ': False, 'tokens': '    private static void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException {\n        if (entry.isDirectory()) {\n            createDir(new File(outputDir, entry.getName()));\n            return;\n        }\n        File  outputStream = new File(outputDir, entry.getName());\n        if (! outputStream.getParentFile().exists()) {\n            createDir( outputStream.getParentFile());\n        }\n        BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry));\n        BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream( outputStream));\n        try {\n            IOUtils.copy(inputStream, outputStream);\n        } finally {\n            outputStream.close();\n            inputStream.close();\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 138, 'new_pred': 1, 'is_success': -1, 'old_uid': 'outputFile', 'score_info': 0.0, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'outputFile': 'OutputFile'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 475 FAILED.
  time cost = 0.12 min
  ALL EXAMPLE time cost = 28.15 min
  curr succ rate = 0.05128205128205128
Query times in this attack:  249
All Query times:  44254
raw_tokens: ['protected', 'void', 'yesAction', '(', ')', '{', 'try', '{', 'String', 'result', '=', 'getSurveyURL', '(', ')', '+', '"', '&buildtime=', '"', '+', 'Version', '.', 'getBuildTimeString', '(', ')', ';', 'LOG', '.', 'log', '(', 'result', ')', ';', 'if', '(', '!', 'maySubmitSurvey', '(', ')', ')', '{', 'return', ';', '}', 'BufferedReader', 'br', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'result', ')', ';', 'InputStream', 'urls', '=', 'url', '.', 'openStream', '(', ')', ';', 'InputStreamReader', 'is', '=', 'new', 'InputStreamReader', '(', 'urls', ')', ';', 'br', '=', 'new', 'BufferedReader', '(', 'is', ')', ';', 'String', 'line', ';', 'StringBuilder', 'sb', '=', 'new', 'StringBuilder', '(', ')', ';', 'while', '(', '(', 'line', '=', 'br', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'sb', '.', 'append', '(', 'line', ')', ';', 'sb', '.', 'append', '(', 'System', '.', 'getProperty', '(', '"', 'line.separator', '"', ')', ')', ';', '}', 'LOG', '.', 'log', '(', 'sb', '.', 'toString', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'LOG', '.', 'log', '(', '"', 'Could', 'not', 'open', 'URL', 'using', 'Java', '"', ',', 'e', ')', ';', 'try', '{', 'PlatformFactory', '.', 'ONLY', '.', 'openURL', '(', 'new', 'URL', '(', 'result', ')', ')', ';', 'DrJava', '.', 'getConfig', '(', ')', '.', 'setSetting', '(', 'OptionConstants', '.', 'LAST_DRJAVA_SURVEY_RESULT', ',', 'result', ')', ';', '}', 'catch', '(', 'IOException', 'e2', ')', '{', 'LOG', '.', 'log', '(', '"', 'Could', 'not', 'open', 'URL', 'using', 'web', 'browser', '"', ',', 'e2', ')', ';', '}', '}', 'finally', '{', 'try', '{', 'if', '(', 'br', '!=', 'null', ')', 'br', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', '}', '}', '}', 'finally', '{', 'noAction', '(', ')', ';', '}', '}']
Example 476 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'download', '(', 'File', 'archive', ',', 'File', 'timestamp', ',', 'URL', 'url', ',', 'IProgressMonitor', 'monitor', ')', 'throws', 'IOException', '{', 'monitor', '.', 'subTask', '(', '"', 'download', '', '"', '+', 'url', '.', 'toString', '(', ')', ')', ';', 'InputStream', 'in', '=', 'null', ';', 'FileOutputStream', 'out', '=', 'null', ';', 'URLConnection', 'conn', '=', 'null', ';', 'try', '{', 'conn', '=', 'url', '.', 'openConnection', '(', ')', ';', 'Writer', 'writer', '=', 'null', ';', 'try', '{', 'Date', 'date', '=', 'new', 'Date', '(', 'conn', '.', 'getLastModified', '(', ')', ')', ';', 'writer', '=', 'new', 'FileWriter', '(', 'timestamp', ')', ';', 'writer', '.', 'write', '(', 'this', '.', 'FORMAT', '.', 'format', '(', 'date', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'timestamp', '.', 'delete', '(', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'writer', ')', ';', '}', 'in', '=', 'conn', '.', 'getInputStream', '(', ')', ';', 'out', '=', 'new', 'FileOutputStream', '(', 'archive', ')', ';', 'IOUtils', '.', 'copy', '(', 'in', ',', 'out', ')', ';', '}', 'finally', '{', 'IOUtils', '.', 'closeQuietly', '(', 'in', ')', ';', 'IOUtils', '.', 'closeQuietly', '(', 'out', ')', ';', '}', '}']
  >>  iter 1, ACC! in => con (0 => 0, 0.99963 => 0.99963) a=1.001
  >>  iter 2, ACC! con => rin (0 => 0, 0.99963 => 0.99964) a=1.005
  >>  iter 3, ACC! rin => pin (0 => 0, 0.99964 => 0.99963) a=1.008
  >>  iter 4, REJ. out => ex (0 => 0, 0.99963 => 0.99963) a=0.999
  >>  iter 5, REJ. out => no (0 => 0, 0.99963 => 0.99963) a=0.999
  >>  iter 6, REJ. pin => re (0 => 0, 0.99963 => 0.99963) a=1.000
  >>  iter 7, REJ. pin => init (0 => 0, 0.99963 => 0.99963) a=1.000
  >>  iter 8, ACC! pin => re (0 => 0, 0.99963 => 0.99963) a=1.001
  >>  iter 9, ACC! re => x (0 => 0, 0.99963 => 0.99963) a=1.004
  >>  iter 10, ACC! x => thin (0 => 0, 0.99963 => 0.99963) a=1.002
Example 477 attack result: {'succ': False, 'tokens': '    private void download(File archive, File timestamp, URL url, IProgressMonitor monitor) throws IOException {\n        monitor.subTask("download " + url.toString());\n        InputStream thin = null;\n        FileOutputStream out = null;\n        URLConnection conn = null;\n        try {\n            conn = url.openConnection();\n            Writer writer = null;\n            try {\n                Date date = new Date(conn.getLastModified());\n                writer = new FileWriter(timestamp);\n                writer.write(this.FORMAT.format(date));\n            } catch (IOException e) {\n                timestamp.delete();\n            } finally {\n                IOUtils.closeQuietly(writer);\n            }\n            thin = conn.getInputStream();\n            out = new FileOutputStream(archive);\n            IOUtils.copy(thin, out);\n        } finally {\n            IOUtils.closeQuietly(thin);\n            IOUtils.closeQuietly(out);\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 169, 'new_pred': 0, 'is_success': -1, 'old_uid': 'in', 'score_info': -1.66893e-06, 'nb_changed_var': 1, 'nb_changed_pos': 4, 'replace_info': {'in': 'thin'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 477 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 28.31 min
  curr succ rate = 0.050955414012738856
Query times in this attack:  302
All Query times:  44556
raw_tokens: ['private', 'static', 'void', 'generateSQLUpgradeFile', '(', 'String', 'milestoneDefFileName', ',', 'String', 'sqlDirectoryName', ',', 'String', 'fromMilestone', ',', 'String', 'destMilestone', ',', 'String', 'destFileName', ')', 'throws', 'Exception', '{', 'File', 'milestoneDefFile', '=', 'new', 'File', '(', 'milestoneDefFileName', ')', ';', 'if', '(', '!', 'milestoneDefFile', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'does', 'not', 'exists', '"', ')', ';', '}', 'if', '(', '!', 'milestoneDefFile', '.', 'isFile', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'not', 'a', 'file', '"', ')', ';', '}', 'if', '(', '!', 'milestoneDefFile', '.', 'canRead', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'milestoneDefFileName', '+', '"', ']', ':', 'not', 'readable', '"', ')', ';', '}', 'File', 'sqlDirectory', '=', 'new', 'File', '(', 'sqlDirectoryName', ')', ';', 'if', '(', '!', 'sqlDirectory', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'does', 'not', 'exists', '"', ')', ';', '}', 'if', '(', '!', 'sqlDirectory', '.', 'isDirectory', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'not', 'a', 'directory', '"', ')', ';', '}', 'if', '(', '!', 'sqlDirectory', '.', 'canRead', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'read', '[', '"', '+', 'sqlDirectoryName', '+', '"', ']', ':', 'not', 'readable', '"', ')', ';', '}', 'File', 'destFile', '=', 'new', 'File', '(', 'destFileName', ')', ';', 'if', '(', 'destFile', '.', 'exists', '(', ')', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'write', 'to', '[', '"', '+', 'destFileName', '+', '"', ']', ':', 'already', 'exists', '"', ')', ';', '}', 'destFile', '.', 'createNewFile', '(', ')', ';', 'SqlUpgradeXmlParser', 'parser', '=', 'SqlUpgradeXmlParser', '.', 'newParser', '(', ')', ';', 'FileInputStream', 'milestoneDefFIS', '=', 'null', ';', 'try', '{', 'milestoneDefFIS', '=', 'new', 'FileInputStream', '(', 'milestoneDefFile', ')', ';', 'parser', '.', 'parse', '(', 'milestoneDefFIS', ')', ';', '}', 'catch', '(', 'XMLParseException', 'e', ')', '{', 'printXmlError', '(', 'e', ',', 'milestoneDefFileName', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'milestoneDefFIS', '!=', 'null', ')', 'milestoneDefFIS', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '_logger', '.', 'warn', '(', '"', 'Exception', 'caught', 'when', 'closing', 'inputstream', '', '"', ',', 'e', ')', ';', '}', '}', 'int', 'fromMilestoneIdx', '=', 'parser', '.', 'getMilestoneIndex', '(', 'fromMilestone', ')', ';', 'int', 'toMilestoneIdx', '=', 'parser', '.', 'getMilestoneIndex', '(', 'destMilestone', ')', ';', 'if', '(', 'fromMilestoneIdx', '<', '0', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'from', 'milestone', '[', '"', '+', 'fromMilestone', '+', '"', ']', ':', 'does', 'not', 'exist', '.', '(Exisiting', 'milestones', '', '"', '+', 'parser', '.', 'listMilestones', '(', ')', '+', '"', ')', '"', ')', ';', '}', 'if', '(', 'toMilestoneIdx', '<', '0', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'to', 'milestone', '[', '"', '+', 'destMilestone', '+', '"', ']', ':', 'does', 'not', 'exist', '.', '(Exisiting', 'milestones', '', '"', '+', 'parser', '.', 'listMilestones', '(', ')', '+', '"', ')', '"', ')', ';', '}', 'if', '(', 'fromMilestoneIdx', '==', 'toMilestoneIdx', ')', '{', 'throw', 'new', 'IllegalArgumentException', '(', '"', 'Cannot', 'upgrade', 'to', 'the', 'same', 'milestone', '"', ')', ';', '}', 'List', '<', 'String', '>', 'files', '=', 'parser', '.', 'getFilesForMilestones', '(', 'fromMilestoneIdx', ',', 'toMilestoneIdx', ')', ';', 'List', '<', 'String', '>', 'views', '=', 'parser', '.', 'getViewsForMilestones', '(', 'fromMilestoneIdx', ',', 'toMilestoneIdx', ')', ';', 'FileOutputStream', 'fos', '=', 'null', ';', 'try', '{', 'fos', '=', 'new', 'FileOutputStream', '(', 'destFile', ')', ';', 'for', '(', 'Iterator', '<', 'String', '>', 'it', '=', 'files', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'appendFileToOutputStream', '(', 'fos', ',', 'sqlDirectory', ',', 'it', '.', 'next', '(', ')', ')', ';', '}', 'for', '(', 'Iterator', '<', 'String', '>', 'it', '=', 'views', '.', 'iterator', '(', ')', ';', 'it', '.', 'hasNext', '(', ')', ';', ')', '{', 'appendFileToOutputStream', '(', 'fos', ',', 'sqlDirectory', ',', 'it', '.', 'next', '(', ')', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'fos', '.', 'close', '(', ')', ';', 'destFile', '.', 'delete', '(', ')', ';', 'throw', 'e', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'fos', '!=', 'null', ')', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '_logger', '.', 'warn', '(', '"', 'Exception', 'caught', 'when', 'closing', 'outputstream', '', '"', ',', 'e', ')', ';', '}', '}', 'System', '.', 'out', '.', 'println', '(', '"', 'An', 'SQL', 'update', 'file', 'has', 'been', 'generated', 'to', '', '"', '+', 'destFileName', '+', '"', '.', '"', ')', ';', '}']
Example 478 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'folderFileChooserActionPerformed', '(', 'java', '.', 'awt', '.', 'event', '.', 'ActionEvent', 'evt', ')', '{', 'if', '(', 'evt', '.', 'getActionCommand', '(', ')', '.', 'equals', '(', 'JFileChooser', '.', 'APPROVE_SELECTION', ')', ')', '{', 'File', 'selectedFolder', '=', 'folderFileChooser', '.', 'getSelectedFile', '(', ')', ';', 'File', 'collectionCopyFile', ';', 'String', 'newDocumentName', ';', 'Document', 'newDocument', ';', 'StringBuilder', 'distinguisherReplacer', '=', 'new', 'StringBuilder', '(', ')', ';', 'int', 'matchingFilenameDistinguisher', ';', 'String', 'nextToken', ';', 'Term', 'newTerm', ';', 'String', 'userHome', ';', 'String', 'fileSeparator', ';', 'int', 'userOption', ';', 'ArrayList', '<', 'File', '>', 'folderTextFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'ArrayList', '<', 'File', '>', 'folderRejectedFiles', '=', 'new', 'ArrayList', '<', 'File', '>', '(', ')', ';', 'HashSet', '<', 'File', '>', 'ignoredFiles', '=', 'new', 'HashSet', '<', 'File', '>', '(', ')', ';', 'FileNameExtensionFilter', 'textFileFilter', '=', 'new', 'FileNameExtensionFilter', '(', '"', 'Text', 'Files', '"', ',', '"', 'txt', '"', ')', ';', 'Scanner', 'tokenizer', '=', 'null', ';', 'FileChannel', 'fileSource', '=', 'null', ';', 'FileChannel', 'collectionDestination', '=', 'null', ';', 'HashMap', '<', 'String', ',', 'Integer', '>', 'termHashMap', '=', 'null', ';', 'Index', 'collectionIndex', '=', 'activeCollection', '.', 'getIndex', '(', ')', ';', 'int', 'documentTermMaxFrequency', ';', 'int', 'currentTermFrequency', ';', 'for', '(', 'File', 'folderFile', ':', 'selectedFolder', '.', 'listFiles', '(', ')', ')', 'if', '(', 'textFileFilter', '.', 'accept', '(', 'folderFile', ')', ')', 'folderTextFiles', '.', 'add', '(', 'folderFile', ')', ';', 'else', 'folderRejectedFiles', '.', 'add', '(', 'folderFile', ')', ';', 'for', '(', 'File', 'selectedFile', ':', 'folderTextFiles', ')', '{', 'newDocumentName', '=', 'selectedFile', '.', 'getName', '(', ')', ';', 'newDocument', '=', 'new', 'Document', '(', 'newDocumentName', ')', ';', 'if', '(', 'activeCollection', '.', 'containsDocument', '(', 'newDocument', ')', ')', '{', 'matchingFilenameDistinguisher', '=', '1', ';', 'newDocumentName', '=', 'newDocumentName', '.', 'concat', '(', '"', '(', '"', '+', 'matchingFilenameDistinguisher', '+', '"', ')', '"', ')', ';', 'newDocument', '.', 'setDocumentName', '(', 'newDocumentName', ')', ';', 'while', '(', 'activeCollection', '.', 'containsDocument', '(', 'newDocument', ')', ')', '{', 'matchingFilenameDistinguisher', '++', ';', 'newDocumentName', '=', 'distinguisherReplacer', '.', 'replace', '(', 'newDocumentName', '.', 'length', '(', ')', '-', '2', ',', 'newDocumentName', '.', 'length', '(', ')', '-', '1', ',', 'new', 'Integer', '(', 'matchingFilenameDistinguisher', ')', '.', 'toString', '(', ')', ')', '.', 'toString', '(', ')', ';', 'newDocument', '.', 'setDocumentName', '(', 'newDocumentName', ')', ';', '}', '}', 'termHashMap', '=', 'new', 'HashMap', '<', 'String', ',', 'Integer', '>', '(', ')', ';', 'try', '{', 'tokenizer', '=', 'new', 'Scanner', '(', 'new', 'BufferedReader', '(', 'new', 'FileReader', '(', 'selectedFile', ')', ')', ')', ';', 'tokenizer', '.', 'useDelimiter', '(', 'Pattern', '.', 'compile', '(', '"', '\\\\', 'p{Space}|', '\\\\', 'p{Punct}|', '\\\\', 'p{Cntrl}', '"', ')', ')', ';', 'while', '(', 'tokenizer', '.', 'hasNext', '(', ')', ')', '{', 'nextToken', '=', 'tokenizer', '.', 'next', '(', ')', '.', 'toLowerCase', '(', ')', ';', 'if', '(', '!', 'nextToken', '.', 'isEmpty', '(', ')', ')', 'if', '(', 'termHashMap', '.', 'containsKey', '(', 'nextToken', ')', ')', 'termHashMap', '.', 'put', '(', 'nextToken', ',', 'termHashMap', '.', 'get', '(', 'nextToken', ')', '+', '1', ')', ';', 'else', 'termHashMap', '.', 'put', '(', 'nextToken', ',', '1', ')', ';', '}', 'documentTermMaxFrequency', '=', '0', ';', 'for', '(', 'String', 'term', ':', 'termHashMap', '.', 'keySet', '(', ')', ')', '{', 'newTerm', '=', 'new', 'Term', '(', 'term', ')', ';', 'if', '(', '!', 'collectionIndex', '.', 'termExists', '(', 'newTerm', ')', ')', 'collectionIndex', '.', 'addTerm', '(', 'newTerm', ')', ';', 'currentTermFrequency', '=', 'termHashMap', '.', 'get', '(', 'term', ')', ';', 'if', '(', 'currentTermFrequency', '>', 'documentTermMaxFrequency', ')', 'documentTermMaxFrequency', '=', 'currentTermFrequency', ';', 'collectionIndex', '.', 'addOccurence', '(', 'newTerm', ',', 'newDocument', ',', 'currentTermFrequency', ')', ';', '}', 'newDocument', '.', 'setTermMaxFrequency', '(', 'documentTermMaxFrequency', ')', ';', 'activeCollection', '.', 'addDocument', '(', 'newDocument', ')', ';', 'userHome', '=', 'System', '.', 'getProperty', '(', '"', 'user.home', '"', ')', ';', 'fileSeparator', '=', 'System', '.', 'getProperty', '(', '"', 'file.separator', '"', ')', ';', 'collectionCopyFile', '=', 'new', 'File', '(', 'userHome', '+', 'fileSeparator', '+', '"', 'Infrared', '"', '+', 'fileSeparator', '+', 'activeCollection', '.', 'getDocumentCollectionName', '(', ')', '+', 'fileSeparator', '+', 'newDocumentName', ')', ';', 'collectionCopyFile', '.', 'createNewFile', '(', ')', ';', 'fileSource', '=', 'new', 'FileInputStream', '(', 'selectedFile', ')', '.', 'getChannel', '(', ')', ';', 'collectionDestination', '=', 'new', 'FileOutputStream', '(', 'collectionCopyFile', ')', '.', 'getChannel', '(', ')', ';', 'collectionDestination', '.', 'transferFrom', '(', 'fileSource', ',', '0', ',', 'fileSource', '.', 'size', '(', ')', ')', ';', '}', 'catch', '(', 'FileNotFoundException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', '+', '"', '', 'This', 'error', 'should', 'never', 'occur!', 'The', 'file', 'was', 'just', 'selected!', '"', ')', ';', 'return', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'userOption', '=', 'JOptionPane', '.', 'showConfirmDialog', '(', 'this', ',', '"', 'A', 'file', 'insertion', 'has', 'failed.', 'If', 'you', 'want', 'it', 'to', 'ignore', 'this', '"', '+', '"', 'file,', 'press', 'YES,', 'else', 'press', 'NO', 'to', 'repeat', 'the', 'insertion', '"', ',', '"', 'FileInsertionFailure', '"', ',', 'JOptionPane', '.', 'YES_NO_OPTION', ',', 'JOptionPane', '.', 'WARNING_MESSAGE', ')', ';', 'if', '(', 'userOption', '==', 'JOptionPane', '.', 'NO_OPTION', ')', '{', 'activeCollection', '.', 'removeDocument', '(', 'newDocument', ')', ';', 'for', '(', 'String', 'term', ':', 'termHashMap', '.', 'keySet', '(', ')', ')', '{', 'collectionIndex', '.', 'removeAllOccurences', '(', 'new', 'Term', '(', 'term', ')', ',', 'newDocument', ')', ';', '}', 'folderTextFiles', '.', 'add', '(', 'selectedFile', ')', ';', '}', 'else', 'ignoredFiles', '.', 'add', '(', 'selectedFile', ')', ';', '}', 'finally', '{', 'try', '{', 'if', '(', 'tokenizer', '!=', 'null', ')', 'tokenizer', '.', 'close', '(', ')', ';', 'if', '(', 'fileSource', '!=', 'null', ')', 'fileSource', '.', 'close', '(', ')', ';', 'if', '(', 'collectionDestination', '!=', 'null', ')', 'collectionDestination', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'System', '.', 'err', '.', 'println', '(', 'e', '.', 'getMessage', '(', ')', ')', ';', '}', '}', '}', 'if', '(', 'ignoredFiles', '.', 'size', '(', ')', '>', '0', ')', '{', 'IgnoredFilesDialog', 'ignoredFilesDialog', '=', 'new', 'IgnoredFilesDialog', '(', 'ignoredFiles', ',', 'this', ')', ';', 'ignoredFilesDialog', '.', 'setVisible', '(', 'true', ')', ';', '}', 'processWindowEvent', '(', 'new', 'WindowEvent', '(', 'this', ',', 'WindowEvent', '.', 'WINDOW_CLOSING', ')', ')', ';', '}', 'else', 'if', '(', 'evt', '.', 'getActionCommand', '(', ')', '.', 'equalsIgnoreCase', '(', 'JFileChooser', '.', 'CANCEL_SELECTION', ')', ')', 'processWindowEvent', '(', 'new', 'WindowEvent', '(', 'this', ',', 'WindowEvent', '.', 'WINDOW_CLOSING', ')', ')', ';', '}']
Example 479 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['@', 'PostConstruct', 'public', 'void', 'init', '(', ')', '{', 'logger', '.', 'info', '(', '"', '+++++', 'TRACAuditChecklistWizardMB:', 'init()', 'start', '++++++++', '"', ')', ';', 'try', '{', 'tracSectionAll', '=', 'new', 'ArrayList', '<', 'TRACCriteriaCheckListItem', '>', '(', ')', ';', 'List', '<', 'TRACCriteriaCheckListItem', '>', 'tracSectionA', '=', 'new', 'ArrayList', '<', 'TRACCriteriaCheckListItem', '>', '(', ')', ';', 'List', '<', 'TRACCriteriaCheckListItem', '>', 'tracSectionB', '=', 'new', 'ArrayList', '<', 'TRACCriteriaCheckListItem', '>', '(', ')', ';', 'List', '<', 'TRACCriteriaCheckListItem', '>', 'tracSectionC', '=', 'new', 'ArrayList', '<', 'TRACCriteriaCheckListItem', '>', '(', ')', ';', 'URL', 'url', '=', 'TRACAuditChecklistManagedBean', '.', 'class', '.', 'getResource', '(', 'tracCriteriaPropertiesFileName', ')', ';', 'tracCriteriaCheckList', '=', 'new', 'LinkedProperties', '(', ')', ';', 'tracCriteriaCheckList', '.', 'load', '(', 'url', '.', 'openStream', '(', ')', ')', ';', 'Set', '<', 'String', '>', 'tmpKeys', '=', 'tracCriteriaCheckList', '.', 'stringPropertyNames', '(', ')', ';', 'List', '<', 'String', '>', 'sortWrkList', '=', 'new', 'ArrayList', '<', 'String', '>', '(', ')', ';', 'sortWrkList', '.', 'addAll', '(', 'tmpKeys', ')', ';', 'sortList', '(', 'sortWrkList', ')', ';', 'for', '(', 'String', 'key', ':', 'sortWrkList', ')', '{', 'String', 'aspectCode', '=', 'key', '.', 'substring', '(', 'aspectCodeOffsetValue', ')', ';', 'logger', '.', 'info', '(', '"', 'aspectCode=', '"', '+', 'aspectCode', ')', ';', 'if', '(', 'aspectCode', '.', 'startsWith', '(', '"', 'A', '"', ')', ')', '{', 'if', '(', 'aspectCode', '.', 'equals', '(', '"', 'A', '"', ')', ')', '{', 'sectionAcaption', '=', 'tracCriteriaCheckList', '.', 'getProperty', '(', 'key', ')', ';', '}', 'else', '{', 'if', '(', 'aspectCode', '.', 'length', '(', ')', '==', '4', ')', '{', 'tracSectionAll', '.', 'add', '(', 'new', 'TRACCriteriaCheckListItem', '(', 'aspectCode', ',', 'tracCriteriaCheckList', '.', 'getProperty', '(', 'key', ')', ',', '"', '"', ',', '"', '"', ',', '"', '"', ')', ')', ';', '}', '}', '}', 'else', 'if', '(', 'aspectCode', '.', 'startsWith', '(', '"', 'B', '"', ')', ')', '{', 'if', '(', 'aspectCode', '.', 'equals', '(', '"', 'B', '"', ')', ')', '{', 'sectionBcaption', '=', 'tracCriteriaCheckList', '.', 'getProperty', '(', 'key', ')', ';', '}', 'else', '{', 'if', '(', 'aspectCode', '.', 'length', '(', ')', '==', '4', ')', '{', 'tracSectionAll', '.', 'add', '(', 'new', 'TRACCriteriaCheckListItem', '(', 'aspectCode', ',', 'tracCriteriaCheckList', '.', 'getProperty', '(', 'key', ')', ',', '"', '"', ',', '"', '"', ',', '"', '"', ')', ')', ';', '}', '}', '}', 'else', 'if', '(', 'aspectCode', '.', 'startsWith', '(', '"', 'C', '"', ')', ')', '{', 'if', '(', 'aspectCode', '.', 'equals', '(', '"', 'C', '"', ')', ')', '{', 'sectionCcaption', '=', 'tracCriteriaCheckList', '.', 'getProperty', '(', 'key', ')', ';', '}', 'else', '{', 'if', '(', 'aspectCode', '.', 'length', '(', ')', '==', '4', ')', '{', 'tracSectionAll', '.', 'add', '(', 'new', 'TRACCriteriaCheckListItem', '(', 'aspectCode', ',', 'tracCriteriaCheckList', '.', 'getProperty', '(', 'key', ')', ',', '"', '"', ',', '"', '"', ',', '"', '"', ')', ')', ';', '}', '}', '}', 'else', '{', 'logger', '.', 'warning', '(', '"', 'offset', 'value', 'is', 'wrong:', '16th', 'character', 'must', 'be', 'A', 'or', 'B', 'or', 'C', '"', ')', ';', '}', '}', '}', 'catch', '(', 'FileNotFoundException', 'ex', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'WARNING', ',', '"', 'specified', 'properties', 'file', 'was', 'not', 'found', '"', ',', 'ex', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'WARNING', ',', '"', 'IO', 'error', 'occurred', '"', ',', 'ex', ')', ';', '}', 'finally', '{', '}', 'logger', '.', 'info', '(', '"', '+++++', 'TRACAuditChecklistWizardMB:', 'init()', 'end', '', '', '++++++++', '"', ')', ';', '}']
Example 481 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'boolean', 'checkTypeChange', '(', 'Class', 'clazz', ',', 'File', 'wsdlFile', ')', '{', 'if', '(', '!', 'clazz', '.', 'isPrimitive', '(', ')', ')', '{', 'ClassLoader', 'cl', '=', 'clazz', '.', 'getClassLoader', '(', ')', ';', 'if', '(', 'cl', 'instanceof', 'AntClassLoader', ')', '{', 'if', '(', 'clazz', '.', 'isArray', '(', ')', ')', 'return', 'checkTypeChange', '(', 'getArrayType', '(', 'clazz', ')', ',', 'wsdlFile', ')', ';', 'String', 'path', '=', 'clazz', '.', 'getName', '(', ')', '.', 'replace', '(', "'.'", ',', 'File', '.', 'separatorChar', ')', '+', '"', '.class', '"', ';', 'File', 'file', '=', 'new', 'File', '(', 'builddir', ',', 'path', ')', ';', 'long', 'lastMod', '=', 'Long', '.', 'MAX_VALUE', ';', 'if', '(', '!', 'file', '.', 'exists', '(', ')', ')', '{', 'URL', 'url', '=', 'cl', '.', 'getResource', '(', 'path', ')', ';', 'if', '(', 'url', '==', 'null', ')', 'throw', 'new', 'BuildException', '(', '"', "Can't", 'get', 'URL', 'for', 'webservice', 'class', "'", '"', '+', 'clazz', '.', 'getName', '(', ')', '+', '"', "'", 'from', 'jar', 'file.', '"', ')', ';', 'else', '{', 'try', '{', 'JarURLConnection', 'con', '=', '(', 'JarURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'lastMod', '=', 'con', '.', 'getJarEntry', '(', ')', '.', 'getTime', '(', ')', ';', '}', 'catch', '(', 'IOException', 'x', ')', '{', 'throw', 'new', 'BuildException', '(', '"', "Can't", 'get', 'modification', 'time', 'for', 'webservice', 'class', "'", '"', '+', 'clazz', '.', 'getName', '(', ')', '+', '"', "'", 'from', 'jar', 'file.', '"', ')', ';', '}', '}', '}', 'else', '{', 'lastMod', '=', 'file', '.', 'lastModified', '(', ')', ';', '}', 'if', '(', 'wsdlFile', '.', 'lastModified', '(', ')', '<', 'lastMod', ')', 'return', 'true', ';', 'if', '(', 'clazz', '.', 'isInterface', '(', ')', ')', '{', 'Class', '[', ']', 'itfs', '=', 'clazz', '.', 'getInterfaces', '(', ')', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'itfs', '.', 'length', ';', 'i', '++', ')', '{', 'boolean', 'changed', '=', 'checkTypeChange', '(', 'itfs', '[', 'i', ']', ',', 'wsdlFile', ')', ';', 'if', '(', 'changed', ')', 'return', 'true', ';', '}', '}', 'else', '{', 'Class', 'sup', '=', 'clazz', '.', 'getSuperclass', '(', ')', ';', 'boolean', 'changed', '=', 'checkTypeChange', '(', 'sup', ',', 'wsdlFile', ')', ';', 'if', '(', 'changed', ')', 'return', 'true', ';', '}', '}', '}', 'return', 'false', ';', '}']
Example 482 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'void', 'copy', '(', 'File', 'in', ',', 'File', 'out', ')', '{', 'log', '.', 'info', '(', '"', 'Copying', 'yam', 'file', 'from:', '', '"', '+', 'in', '.', 'getName', '(', ')', '+', '"', '', 'to:', '', '"', '+', 'out', '.', 'getName', '(', ')', ')', ';', 'try', '{', 'FileChannel', 'ic', '=', 'new', 'FileInputStream', '(', 'in', ')', '.', 'getChannel', '(', ')', ';', 'FileChannel', 'oc', '=', 'new', 'FileOutputStream', '(', 'out', ')', '.', 'getChannel', '(', ')', ';', 'ic', '.', 'transferTo', '(', '0', ',', 'ic', '.', 'size', '(', ')', ',', 'oc', ')', ';', 'ic', '.', 'close', '(', ')', ';', 'oc', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'fail', '(', '"', 'Failed', 'testing', 'while', 'copying', 'modified', 'file:', '', '"', '+', 'ioe', '.', 'getMessage', '(', ')', ')', ';', '}', '}']
  >>  iter 1, ACC! in => m (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 2, ACC! m => r (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 3, ACC! r => din (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 4, ACC! din => i (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 5, ACC! i => iter (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! iter => din (1 => 1, 0.99988 => 0.99988) a=1.003
  >>  iter 7, ACC! din => err (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 8, ACC! err => inner (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 9, ACC! inner => gin (1 => 1, 0.99988 => 0.99988) a=1.002
  >>  iter 10, ACC! gin => image (1 => 1, 0.99988 => 0.99988) a=1.003
Example 483 attack result: {'succ': False, 'tokens': '    private void copy(File image, File out) {\n        log.info("Copying yam file from: " + image.getName() + " to: " + out.getName());\n        try {\n            FileChannel ic = new FileInputStream(image).getChannel();\n            FileChannel oc = new FileOutputStream(out).getChannel();\n            ic.transferTo(0, ic.size(), oc);\n            ic.close();\n            oc.close();\n        } catch (IOException ioe) {\n            fail("Failed testing while copying modified file: " + ioe.getMessage());\n        }\n    }\n', 'raw_tokens': None, 'prog_length': 113, 'new_pred': 1, 'is_success': -1, 'old_uid': 'in', 'score_info': 1.1769589e-07, 'nb_changed_var': 1, 'nb_changed_pos': 3, 'replace_info': {'in': 'image'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 483 FAILED.
  time cost = 0.14 min
  ALL EXAMPLE time cost = 28.51 min
  curr succ rate = 0.05063291139240506
Query times in this attack:  313
All Query times:  44869
raw_tokens: ['private', 'static', 'void', 'readAndRewrite', '(', 'File', 'inFile', ',', 'File', 'outFile', ')', 'throws', 'IOException', '{', 'ImageInputStream', 'iis', '=', 'ImageIO', '.', 'createImageInputStream', '(', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'inFile', ')', ')', ')', ';', 'DcmParser', 'dcmParser', '=', 'DcmParserFactory', '.', 'getInstance', '(', ')', '.', 'newDcmParser', '(', 'iis', ')', ';', 'Dataset', 'ds', '=', 'DcmObjectFactory', '.', 'getInstance', '(', ')', '.', 'newDataset', '(', ')', ';', 'dcmParser', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'dcmParser', '.', 'parseDcmFile', '(', 'null', ',', 'Tags', '.', 'PixelData', ')', ';', 'PixelDataReader', 'pdReader', '=', 'pdFact', '.', 'newReader', '(', 'ds', ',', 'iis', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'reading', '', '"', '+', 'inFile', '+', '"', '...', '"', ')', ';', 'pdReader', '.', 'readPixelData', '(', 'false', ')', ';', 'ImageOutputStream', 'out', '=', 'ImageIO', '.', 'createImageOutputStream', '(', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outFile', ')', ')', ')', ';', 'DcmEncodeParam', 'dcmEncParam', '=', 'DcmEncodeParam', '.', 'IVR_LE', ';', 'ds', '.', 'writeDataset', '(', 'out', ',', 'dcmEncParam', ')', ';', 'ds', '.', 'writeHeader', '(', 'out', ',', 'dcmEncParam', ',', 'Tags', '.', 'PixelData', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ',', 'dcmParser', '.', 'getReadLength', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'writing', '', '"', '+', 'outFile', '+', '"', '...', '"', ')', ';', 'PixelDataWriter', 'pdWriter', '=', 'pdFact', '.', 'newWriter', '(', 'pdReader', '.', 'getPixelDataArray', '(', ')', ',', 'false', ',', 'ds', ',', 'out', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'pdWriter', '.', 'writePixelData', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'done!', '"', ')', ';', '}']
  >>  iter 1, ACC! out => OUT (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 2, ACC! OUT => part (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 3, ACC! part => up (1 => 1, 0.99988 => 0.99988) a=1.007
  >>  iter 4, ACC! up => response (1 => 1, 0.99988 => 0.99988) a=1.001
  >>  iter 5, ACC! response => b (1 => 1, 0.99988 => 0.99988) a=1.000
  >>  iter 6, ACC! b => response (1 => 1, 0.99988 => 0.99988) a=1.007
  >>  iter 7, ACC! response => v (1 => 1, 0.99988 => 0.99988) a=1.006
  >>  iter 8, ACC! v => inc (1 => 1, 0.99988 => 0.99988) a=1.007
  >>  iter 9, ACC! inc => not (1 => 1, 0.99988 => 0.99988) a=1.007
  >>  iter 10, ACC! not => comment (1 => 1, 0.99988 => 0.99988) a=1.007
Example 484 attack result: {'succ': False, 'tokens': '    private static void readAndRewrite(File inFile, File outFile) throws IOException {\n        ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));\n        DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);\n        Dataset ds = DcmObjectFactory.getInstance().newDataset();\n        dcmParser.setDcmHandler(ds.getDcmHandler());\n        dcmParser.parseDcmFile(null, Tags.PixelData);\n        PixelDataReader pdReader = pdFact.newReader(ds, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        System.comment.println("reading " + inFile + "...");\n        pdReader.readPixelData(false);\n        ImageOutputStream comment = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));\n        DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;\n        ds.writeDataset(comment, dcmEncParam);\n        ds.writeHeader(comment, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());\n        System.comment.println("writing " + outFile + "...");\n        PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, ds, comment, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        pdWriter.writePixelData();\n        comment.flush();\n        comment.close();\n        System.comment.println("done!");\n    }\n', 'raw_tokens': None, 'prog_length': 271, 'new_pred': 1, 'is_success': -1, 'old_uid': 'out', 'score_info': 1.3897079e-08, 'nb_changed_var': 1, 'nb_changed_pos': 9, 'replace_info': {'out': 'comment'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 484 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 28.67 min
  curr succ rate = 0.050314465408805034
Query times in this attack:  300
All Query times:  45169
raw_tokens: ['public', 'String', 'loadURL', '(', 'URL', 'url', ')', '{', 'String', 'retVal', '=', '"', '"', ';', 'try', '{', 'InputStream', 'inputStream', '=', 'url', '.', 'openStream', '(', ')', ';', 'BufferedReader', 'bufferedReader', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'inputStream', ')', ')', ';', 'String', 'line', '=', 'bufferedReader', '.', 'readLine', '(', ')', ';', 'retVal', '+=', 'line', '+', '"', '', '"', ';', 'while', '(', 'line', '!=', 'null', ')', '{', 'System', '.', 'out', '.', 'println', '(', 'line', ')', ';', 'line', '=', 'bufferedReader', '.', 'readLine', '(', ')', ';', 'if', '(', 'line', '!=', 'null', ')', 'retVal', '+=', 'line', '+', '"', '', '"', ';', '}', 'bufferedReader', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'retVal', '=', 'e', '.', 'getMessage', '(', ')', ';', '}', 'return', 'retVal', ';', '}']
  >>  iter 1, ACC! url => entry (1 => 1, 0.98052 => 0.98092) a=1.002
  >>  iter 2, ACC! e => line (1 => 1, 0.98092 => 0.98083) a=1.005
  >>  iter 3, ACC! entry => host (1 => 1, 0.98083 => 0.98101) a=1.225
  >>  iter 4, ACC! host => socket (1 => 1, 0.98101 => 0.98105) a=1.237
  >>  iter 5, ACC! socket => service (1 => 1, 0.98105 => 0.98107) a=1.240
  >>  iter 6, ACC! line => d (1 => 1, 0.98107 => 0.97998) a=1.149
  >>  iter 7, ACC! service => link (1 => 1, 0.97998 => 0.97998) a=1.066
  >>  iter 8, ACC! d => te (1 => 1, 0.97998 => 0.97962) a=1.129
  >>  iter 9, ACC! te => d (1 => 1, 0.97962 => 0.97998) a=1.159
  >>  iter 10, ACC! d => je (1 => 1, 0.97998 => 0.97955) a=1.180
Example 485 attack result: {'succ': False, 'tokens': '    public String loadURL(URL link) {\n        String retVal = "";\n        try {\n            InputStream inputStream = link.openStream();\n            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n            String je = bufferedReader.readLine();\n            retVal += je + "\n";\n            while (je != null) {\n                System.out.println(je);\n                je = bufferedReader.readLine();\n                if (je != null) retVal += je + "\n";\n            }\n            bufferedReader.close();\n        } catch (MalformedURLException je) {\n            je.printStackTrace();\n            retVal = je.getMessage();\n        } catch (IOException je) {\n            je.printStackTrace();\n            retVal = je.getMessage();\n        } catch (Exception je) {\n            je.printStackTrace();\n            retVal = je.getMessage();\n        }\n        return retVal;\n    }\n', 'raw_tokens': None, 'prog_length': 168, 'new_pred': 1, 'is_success': -1, 'old_uid': 'e', 'score_info': -0.00042241067, 'nb_changed_var': 2, 'nb_changed_pos': 11, 'replace_info': {'url': 'link', 'e': 'je'}, 'attack_type': 'MHM', 'orig_label': 1}
EXAMPLE 485 FAILED.
  time cost = 0.15 min
  ALL EXAMPLE time cost = 28.82 min
  curr succ rate = 0.05
Query times in this attack:  298
All Query times:  45467
raw_tokens: ['public', 'static', 'String', 'encodeMD5', '(', 'String', 'param', ')', 'throws', 'Exception', '{', 'MessageDigest', 'digest', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'digest', '.', 'update', '(', 'param', '.', 'getBytes', '(', ')', ')', ';', 'byte', '[', ']', 'hash', '=', 'digest', '.', 'digest', '(', ')', ';', 'char', 'buf', '[', ']', '=', 'new', 'char', '[', 'hash', '.', 'length', '*', '2', ']', ';', 'for', '(', 'int', 'i', '=', '0', ',', 'x', '=', '0', ';', 'i', '<', 'hash', '.', 'length', ';', 'i', '++', ')', '{', 'buf', '[', 'x', '++', ']', '=', 'HEX_CHARS', '[', '(', 'hash', '[', 'i', ']', '>>>', '4', ')', '&', '0xf', ']', ';', 'buf', '[', 'x', '++', ']', '=', 'HEX_CHARS', '[', 'hash', '[', 'i', ']', '&', '0xf', ']', ';', '}', 'return', 'String', '.', 'valueOf', '(', 'buf', ')', ';', '}']
Example 486 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'getGoGl', '(', 'final', 'String', 'urlPath', ',', 'String', 'key', ')', '{', 'log', '.', 'debug', '(', '"', 'getGoGl', 'url', '', '"', '+', 'urlPath', ')', ';', 'log', '.', 'debug', '(', '"', 'getGoGl', 'key', '', '"', '+', 'key', ')', ';', 'String', 'shortUrl', '=', 'null', ';', 'URL', 'simpleURL', '=', 'null', ';', 'HttpsURLConnection', 'url', '=', 'null', ';', 'BufferedInputStream', 'bStream', '=', 'null', ';', 'StringBuffer', 'resultString', '=', 'new', 'StringBuffer', '(', '"', '"', ')', ';', 'String', 'inputString', '=', '"', '{', '\\"', 'longUrl', '\\"', ':', '\\"', '"', '+', 'urlPath', '+', '"', '\\"', '}', '"', ';', 'log', '.', 'debug', '(', '"', 'getGoGl', 'inputString', '', '"', '+', 'inputString', ')', ';', 'try', '{', 'simpleURL', '=', 'new', 'URL', '(', '"', 'https://www.googleapis.com/urlshortener/v1/url?key=', '"', '+', 'key', ')', ';', 'url', '=', '(', 'HttpsURLConnection', ')', 'simpleURL', '.', 'openConnection', '(', ')', ';', 'url', '.', 'setDoOutput', '(', 'true', ')', ';', 'url', '.', 'setRequestProperty', '(', '"', 'content-type', '"', ',', '"', 'application/json', '"', ')', ';', 'PrintWriter', 'pw', '=', 'new', 'PrintWriter', '(', 'url', '.', 'getOutputStream', '(', ')', ')', ';', 'pw', '.', 'print', '(', 'inputString', ')', ';', 'pw', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'log', '.', 'error', '(', 'ex', ')', ';', 'shortUrl', '=', 'urlPath', ';', '}', 'try', '{', 'bStream', '=', 'new', 'BufferedInputStream', '(', 'url', '.', 'getInputStream', '(', ')', ')', ';', 'int', 'i', ';', 'while', '(', '(', 'i', '=', 'bStream', '.', 'read', '(', ')', ')', '>=', '0', ')', '{', 'resultString', '.', 'append', '(', '(', 'char', ')', 'i', ')', ';', '}', '}', 'catch', '(', 'Exception', 'ex', ')', '{', 'SocialUtils', '.', 'log', '.', 'error', '(', 'ex', ')', ';', 'shortUrl', '=', 'urlPath', ';', '}', 'return', 'shortUrl', ';', '}']
  >>  iter 1, ACC! url => el (0 => 0, 0.99999 => 0.99999) a=1.178
  >>  iter 2, ACC! i => yi (0 => 0, 0.99999 => 0.99999) a=1.020
  >>  iter 3, ACC! yi => format (0 => 0, 0.99999 => 0.99999) a=1.020
  >>  iter 4, ACC! format => ui (0 => 0, 0.99999 => 0.99999) a=1.020
  >>  iter 5, ACC! el => filename (0 => 0, 0.99999 => 0.99999) a=1.078
  >>  iter 6, ACC! filename => feed (0 => 0, 0.99999 => 0.99999) a=1.019
  >>  iter 7, ACC! ui => j (0 => 0, 0.99999 => 0.99999) a=1.000
  >>  iter 8, ACC! feed => path (0 => 0, 0.99999 => 0.99999) a=1.060
  >>  iter 9, ACC! path => fl (0 => 0, 0.99999 => 0.99999) a=1.060
  >>  iter 10, ACC! j => this (0 => 0, 0.99999 => 0.99999) a=1.041
Example 487 attack result: {'succ': False, 'tokens': '    public static String getGoGl(final String urlPath, String key) {\n        log.debug("getGoGl url " + urlPath);\n        log.debug("getGoGl key " + key);\n        String shortUrl = null;\n        URL simpleURL = null;\n        HttpsURLConnection fl = null;\n        BufferedInputStream bStream = null;\n        StringBuffer resultString = new StringBuffer("");\n        String inputString = "{\\"longUrl\\":\\"" + urlPath + "\\"}";\n        log.debug("getGoGl inputString " + inputString);\n        try {\n            simpleURL = new URL("https://www.googleapis.com/urlshortener/v1/url?key=" + key);\n            fl = (HttpsURLConnection) simpleURL.openConnection();\n            fl.setDoOutput(true);\n            fl.setRequestProperty("content-type", "application/json");\n            PrintWriter pw = new PrintWriter(fl.getOutputStream());\n            pw.print(inputString);\n            pw.close();\n        } catch (Exception ex) {\n            log.error(ex);\n            shortUrl = urlPath;\n        }\n        try {\n            bStream = new BufferedInputStream(fl.getInputStream());\n            int this;\n            while ((this = bStream.read()) >= 0) {\n                resultString.append((char) this);\n            }\n        } catch (Exception ex) {\n            SocialUtils.log.error(ex);\n            shortUrl = urlPath;\n        }\n        return shortUrl;\n    }\n', 'raw_tokens': None, 'prog_length': 253, 'new_pred': 0, 'is_success': -1, 'old_uid': 'i', 'score_info': 1.1920929e-07, 'nb_changed_var': 2, 'nb_changed_pos': 10, 'replace_info': {'url': 'fl', 'i': 'this'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 487 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 29.00 min
  curr succ rate = 0.049689440993788817
Query times in this attack:  303
All Query times:  45770
raw_tokens: ['public', 'static', 'boolean', 'saveToTempFile', '(', 'Context', 'context', ',', 'String', 'filePath', ',', 'DirType', 'dirType', ',', 'String', 'tempSavePath', ',', 'boolean', 'secrete', ')', '{', 'FileOutputStream', 'fos', '=', 'null', ';', 'InputStream', 'in', '=', 'null', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'readLength', '=', '0', ';', 'boolean', 'result', '=', 'false', ';', 'try', '{', 'try', '{', 'File', 'f', '=', 'new', 'File', '(', 'context', '.', 'getFilesDir', '(', ')', '.', 'getAbsolutePath', '(', ')', '+', 'File', '.', 'separator', '+', 'tempSavePath', ')', ';', 'if', '(', 'f', '.', 'exists', '(', ')', ')', '{', 'context', '.', 'deleteFile', '(', 'tempSavePath', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'fos', '=', 'context', '.', 'openFileOutput', '(', 'tempSavePath', ',', 'Context', '.', 'MODE_WORLD_READABLE', ')', ';', 'logger', '.', 'error', '(', '"', 'tempfile:', '"', '+', 'tempSavePath', ')', ';', 'if', '(', 'dirType', '==', 'DirType', '.', 'assets', ')', '{', 'AssetManager', 'assetManager', '=', 'context', '.', 'getAssets', '(', ')', ';', 'in', '=', 'assetManager', '.', 'open', '(', 'filePath', ')', ';', '}', 'else', 'if', '(', 'dirType', '==', 'DirType', '.', 'file', '&&', 'Constant', '.', 'getUpdateDataPath', '(', ')', '!=', 'null', ')', '{', 'in', '=', 'new', 'FileInputStream', '(', 'Constant', '.', 'getUpdateDataPath', '(', ')', '+', 'File', '.', 'separator', '+', 'filePath', ')', ';', '}', 'else', 'if', '(', 'dirType', '==', 'DirType', '.', 'sd', '&&', 'Constant', '.', 'getSdPath', '(', ')', '!=', 'null', ')', '{', 'in', '=', 'new', 'FileInputStream', '(', 'Constant', '.', 'getSdPath', '(', ')', '+', 'File', '.', 'separator', '+', 'filePath', ')', ';', '}', 'else', 'if', '(', 'dirType', '==', 'DirType', '.', 'extSd', '&&', 'Constant', '.', 'getExtSdPath', '(', ')', '!=', 'null', ')', '{', 'in', '=', 'new', 'FileInputStream', '(', 'Constant', '.', 'getExtSdPath', '(', ')', '+', 'File', '.', 'separator', '+', 'filePath', ')', ';', '}', 'if', '(', 'in', '==', 'null', ')', '{', 'return', 'false', ';', '}', 'readLength', '=', 'in', '.', 'read', '(', 'buffer', ')', ';', 'if', '(', 'readLength', '>=', 'ZipToFile', '.', 'encrypLength', '&&', 'secrete', ')', '{', 'byte', '[', ']', 'encrypByte', '=', 'new', 'byte', '[', 'ZipToFile', '.', 'encrypLength', ']', ';', 'System', '.', 'arraycopy', '(', 'buffer', ',', '0', ',', 'encrypByte', ',', '0', ',', 'ZipToFile', '.', 'encrypLength', ')', ';', 'byte', '[', ']', 'temp', '=', 'CryptionControl', '.', 'getInstance', '(', ')', '.', 'decryptECB', '(', 'encrypByte', ',', 'ZipToFile', '.', 'rootKey', ')', ';', 'System', '.', 'arraycopy', '(', 'temp', ',', '0', ',', 'buffer', ',', '0', ',', 'ZipToFile', '.', 'encrypLength', ')', ';', '}', 'while', '(', 'readLength', '>', '0', ')', '{', 'fos', '.', 'write', '(', 'buffer', ',', '0', ',', 'readLength', ')', ';', 'fos', '.', 'flush', '(', ')', ';', 'readLength', '=', 'in', '.', 'read', '(', 'buffer', ')', ';', '}', 'result', '=', 'true', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', '}', 'finally', '{', 'if', '(', 'fos', '!=', 'null', ')', '{', 'try', '{', 'fos', '.', 'flush', '(', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', 'if', '(', 'in', '!=', 'null', ')', '{', 'try', '{', 'in', '.', 'close', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', '}', '}', '}', 'return', 'result', ';', '}']
Example 488 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'parse', '(', ')', '{', 'InputSource', 'urlInputStream', '=', 'null', ';', 'SAXParserFactory', 'spf', '=', 'null', ';', 'SAXParser', 'sp', '=', 'null', ';', 'HttpURLConnection', 'conn', '=', 'null', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'this', '.', 'urlString', ')', ';', '_setProxy', '(', ')', ';', 'conn', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'urlInputStream', '=', 'new', 'InputSource', '(', 'StreamUtils', '.', 'inputStreamToReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'spf', '=', 'SAXParserFactory', '.', 'newInstance', '(', ')', ';', 'if', '(', 'spf', '!=', 'null', ')', '{', 'sp', '=', 'spf', '.', 'newSAXParser', '(', ')', ';', 'sp', '.', 'parse', '(', 'urlInputStream', ',', 'this', ')', ';', '}', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'if', '(', 'conn', '!=', 'null', ')', '{', 'if', '(', 'conn', '.', 'getHeaderField', '(', '"', 'X-RateLimit-Limit', '"', ')', '!=', 'null', ')', '{', 'String', 'rateLimit', '=', 'conn', '.', 'getHeaderField', '(', '"', 'X-RateLimit-Limit', '"', ')', ';', 'String', 'rateRemaining', '=', 'conn', '.', 'getHeaderField', '(', '"', 'X-RateLimit-Remaining', '"', ')', ';', 'long', 'rateReset', '=', 'Long', '.', 'valueOf', '(', 'conn', '.', 'getHeaderField', '(', '"', 'X-RateLimit-Reset', '"', ')', ')', '*', '1000', ';', 'LOG', '.', 'warn', '(', '"', 'Possible', 'rate', 'limits?', '', 'LIMIT:', '"', '+', 'rateLimit', '+', '"', '', '', 'REMAINING:', '"', '+', 'rateRemaining', '+', '"', '', '', 'RESET:', '"', '+', 'new', 'Date', '(', 'rateReset', ')', ')', ';', '}', '}', 'e', '.', 'printStackTrace', '(', ')', ';', 'LOG', '.', 'warn', '(', '"', 'error', 'parsing', 'rss', 'feed', '"', ',', 'e', ')', ';', '}', 'finally', '{', '}', '}']
Example 489 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'void', 'copyFiles', '(', 'File', 'src', ',', 'File', 'dest', ')', 'throws', 'IOException', '{', 'if', '(', 'src', '.', 'isDirectory', '(', ')', ')', '{', 'dest', '.', 'mkdirs', '(', ')', ';', 'for', '(', 'String', 'f', ':', 'src', '.', 'list', '(', ')', ')', '{', 'String', 'df', '=', 'dest', '.', 'getPath', '(', ')', '+', 'File', '.', 'separator', '+', 'f', ';', 'String', 'sf', '=', 'src', '.', 'getPath', '(', ')', '+', 'File', '.', 'separator', '+', 'f', ';', 'copyFiles', '(', 'new', 'File', '(', 'sf', ')', ',', 'new', 'File', '(', 'df', ')', ')', ';', '}', '}', 'else', '{', 'FileInputStream', 'fin', '=', 'new', 'FileInputStream', '(', 'src', ')', ';', 'FileOutputStream', 'fout', '=', 'new', 'FileOutputStream', '(', 'dest', ')', ';', 'int', 'c', ';', 'while', '(', '(', 'c', '=', 'fin', '.', 'read', '(', ')', ')', '>=', '0', ')', 'fout', '.', 'write', '(', 'c', ')', ';', 'fin', '.', 'close', '(', ')', ';', 'fout', '.', 'close', '(', ')', ';', '}', '}']
Example 490 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'MD5', '(', 'String', 'text', ')', 'throws', 'NoSuchAlgorithmException', ',', 'UnsupportedEncodingException', '{', 'MessageDigest', 'md', ';', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'byte', '[', ']', 'md5hash', '=', 'new', 'byte', '[', '32', ']', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', '"', 'UTF-8', '"', ')', ',', '0', ',', 'text', '.', 'length', '(', ')', ')', ';', 'md5hash', '=', 'md', '.', 'digest', '(', ')', ';', 'return', 'convertToHex', '(', 'md5hash', ')', ';', '}']
Example 491 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['static', 'void', 'copy', '(', 'String', 'src', ',', 'String', 'dest', ')', 'throws', 'IOException', '{', 'File', 'ifp', '=', 'new', 'File', '(', 'src', ')', ';', 'File', 'ofp', '=', 'new', 'File', '(', 'dest', ')', ';', 'if', '(', 'ifp', '.', 'exists', '(', ')', '==', 'false', ')', '{', 'throw', 'new', 'IOException', '(', '"', 'file', "'", '"', '+', 'src', '+', '"', "'", 'does', 'not', 'exist', '"', ')', ';', '}', 'FileInputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'ifp', ')', ';', 'FileOutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'ofp', ')', ';', 'byte', '[', ']', 'b', '=', 'new', 'byte', '[', '1024', ']', ';', 'int', 'readBytes', ';', 'while', '(', '(', 'readBytes', '=', 'fis', '.', 'read', '(', 'b', ')', ')', '>', '0', ')', 'fos', '.', 'write', '(', 'b', ',', '0', ',', 'readBytes', ')', ';', 'fis', '.', 'close', '(', ')', ';', 'fos', '.', 'close', '(', ')', ';', '}']
Example 492 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'String', 'md5', '(', 'String', 'text', ')', '{', 'try', '{', 'MessageDigest', 'md', '=', 'MessageDigest', '.', 'getInstance', '(', '"', 'MD5', '"', ')', ';', 'md', '.', 'update', '(', 'text', '.', 'getBytes', '(', ')', ')', ';', 'return', 'ForumUtil', '.', 'bufferToHex', '(', 'md', '.', 'digest', '(', ')', ')', ';', '}', 'catch', '(', 'NoSuchAlgorithmException', 'e', ')', '{', 'e', '.', 'printStackTrace', '(', ')', ';', 'return', 'null', ';', '}', '}']
Example 493 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['private', 'static', 'void', 'readAndRewrite', '(', 'File', 'inFile', ',', 'File', 'outFile', ')', 'throws', 'IOException', '{', 'ImageInputStream', 'iis', '=', 'ImageIO', '.', 'createImageInputStream', '(', 'new', 'BufferedInputStream', '(', 'new', 'FileInputStream', '(', 'inFile', ')', ')', ')', ';', 'DcmParser', 'dcmParser', '=', 'DcmParserFactory', '.', 'getInstance', '(', ')', '.', 'newDcmParser', '(', 'iis', ')', ';', 'Dataset', 'ds', '=', 'DcmObjectFactory', '.', 'getInstance', '(', ')', '.', 'newDataset', '(', ')', ';', 'dcmParser', '.', 'setDcmHandler', '(', 'ds', '.', 'getDcmHandler', '(', ')', ')', ';', 'dcmParser', '.', 'parseDcmFile', '(', 'null', ',', 'Tags', '.', 'PixelData', ')', ';', 'PixelDataReader', 'pdReader', '=', 'pdFact', '.', 'newReader', '(', 'ds', ',', 'iis', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'reading', '', '"', '+', 'inFile', '+', '"', '...', '"', ')', ';', 'pdReader', '.', 'readPixelData', '(', 'false', ')', ';', 'ImageOutputStream', 'out', '=', 'ImageIO', '.', 'createImageOutputStream', '(', 'new', 'BufferedOutputStream', '(', 'new', 'FileOutputStream', '(', 'outFile', ')', ')', ')', ';', 'DcmEncodeParam', 'dcmEncParam', '=', 'DcmEncodeParam', '.', 'IVR_LE', ';', 'ds', '.', 'writeDataset', '(', 'out', ',', 'dcmEncParam', ')', ';', 'ds', '.', 'writeHeader', '(', 'out', ',', 'dcmEncParam', ',', 'Tags', '.', 'PixelData', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ',', 'dcmParser', '.', 'getReadLength', '(', ')', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'writing', '', '"', '+', 'outFile', '+', '"', '...', '"', ')', ';', 'PixelDataWriter', 'pdWriter', '=', 'pdFact', '.', 'newWriter', '(', 'pdReader', '.', 'getPixelDataArray', '(', ')', ',', 'false', ',', 'ds', ',', 'out', ',', 'dcmParser', '.', 'getDcmDecodeParam', '(', ')', '.', 'byteOrder', ',', 'dcmParser', '.', 'getReadVR', '(', ')', ')', ';', 'pdWriter', '.', 'writePixelData', '(', ')', ';', 'out', '.', 'flush', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'System', '.', 'out', '.', 'println', '(', '"', 'done!', '"', ')', ';', '}']
  >>  iter 1, ACC! out => cli (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 2, ACC! ds => da (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 3, ACC! cli => dump (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 4, ACC! da => words (0 => 0, 0.99941 => 0.99941) a=1.000
  >>  iter 5, ACC! words => services (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 6, ACC! services => di (0 => 0, 0.99941 => 0.99941) a=1.000
  >>  iter 7, ACC! di => sync (0 => 0, 0.99941 => 0.99941) a=1.000
  >>  iter 8, ACC! sync => points (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 9, ACC! dump => v (0 => 0, 0.99941 => 0.99941) a=1.001
  >>  iter 10, ACC! v => parent (0 => 0, 0.99941 => 0.99941) a=1.000
Example 494 attack result: {'succ': False, 'tokens': '    private static void readAndRewrite(File inFile, File outFile) throws IOException {\n        ImageInputStream iis = ImageIO.createImageInputStream(new BufferedInputStream(new FileInputStream(inFile)));\n        DcmParser dcmParser = DcmParserFactory.getInstance().newDcmParser(iis);\n        Dataset points = DcmObjectFactory.getInstance().newDataset();\n        dcmParser.setDcmHandler(points.getDcmHandler());\n        dcmParser.parseDcmFile(null, Tags.PixelData);\n        PixelDataReader pdReader = pdFact.newReader(points, iis, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        System.parent.println("reading " + inFile + "...");\n        pdReader.readPixelData(false);\n        ImageOutputStream parent = ImageIO.createImageOutputStream(new BufferedOutputStream(new FileOutputStream(outFile)));\n        DcmEncodeParam dcmEncParam = DcmEncodeParam.IVR_LE;\n        points.writeDataset(parent, dcmEncParam);\n        points.writeHeader(parent, dcmEncParam, Tags.PixelData, dcmParser.getReadVR(), dcmParser.getReadLength());\n        System.parent.println("writing " + outFile + "...");\n        PixelDataWriter pdWriter = pdFact.newWriter(pdReader.getPixelDataArray(), false, points, parent, dcmParser.getDcmDecodeParam().byteOrder, dcmParser.getReadVR());\n        pdWriter.writePixelData();\n        parent.flush();\n        parent.close();\n        System.parent.println("done!");\n    }\n', 'raw_tokens': None, 'prog_length': 271, 'new_pred': 0, 'is_success': -1, 'old_uid': 'out', 'score_info': -1.1920929e-07, 'nb_changed_var': 2, 'nb_changed_pos': 15, 'replace_info': {'out': 'parent', 'ds': 'points'}, 'attack_type': 'MHM', 'orig_label': 0}
EXAMPLE 494 FAILED.
  time cost = 0.16 min
  ALL EXAMPLE time cost = 29.24 min
  curr succ rate = 0.04938271604938271
Query times in this attack:  316
All Query times:  46086
raw_tokens: ['public', 'static', 'String', 'setErrorServer', '(', 'String', 'newServer', ')', '{', 'String', 'old', '=', 'errorServerURL', ';', 'try', '{', 'URL', 'url', '=', 'new', 'URL', '(', 'newServer', ')', ';', 'HttpURLConnection', 'conn', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'conn', '.', 'setInstanceFollowRedirects', '(', 'false', ')', ';', 'BufferedReader', 'rd', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'conn', '.', 'getInputStream', '(', ')', ')', ')', ';', 'StringBuilder', 'page', '=', 'new', 'StringBuilder', '(', ')', ';', 'String', 'line', '=', 'null', ';', 'while', '(', '(', 'line', '=', 'rd', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'page', '.', 'append', '(', 'line', ')', ';', '}', 'rd', '.', 'close', '(', ')', ';', 'if', '(', '!', 'page', '.', 'toString', '(', ')', '.', 'equals', '(', '"', 'maRla', '"', ')', ')', 'throw', 'new', 'ConfigurationException', '(', '"', 'URL', 'given', 'for', 'error', 'server', 'is', 'invalid', '"', ',', 'ConfigType', '.', 'ErrorServer', ')', ';', '}', 'catch', '(', 'UnknownHostException', 'ex', ')', '{', 'System', '.', 'out', '.', 'println', '(', '"', 'Accepting', 'setting', 'for', 'error', 'sever,', 'unable', 'to', 'check', '"', ')', ';', '}', 'catch', '(', 'MalformedURLException', 'ex', ')', '{', 'throw', 'new', 'ConfigurationException', '(', '"', 'URL', 'given', 'for', 'error', 'server', "('", '"', '+', 'newServer', '+', '"', "')", 'appears', 'invalid', '"', ',', 'ConfigType', '.', 'ErrorServer', ',', 'ex', ')', ';', '}', 'catch', '(', 'IOException', 'ex', ')', '{', 'throw', 'new', 'ConfigurationException', '(', '"', 'URL', 'given', 'for', 'error', 'server', 'could', 'not', 'be', 'reached', '"', ',', 'ConfigType', '.', 'ErrorServer', ',', 'ex', ')', ';', '}', 'errorServerURL', '=', 'newServer', ';', 'return', 'old', ';', '}']
Example 495 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'void', 'reqservmodif', '(', 'HttpServletRequest', 'req', ',', 'HttpServletResponse', 'resp', ',', 'SessionCommand', 'command', ')', '{', 'setHeader', '(', 'resp', ')', ';', 'try', '{', 'logger', '.', 'debug', '(', '"', 'SeMo:', 'Requesting', 'server', 'modification', 'for', 'session', '', '"', '+', 'command', '.', 'getSession', '(', ')', ')', ';', 'File', 'tempFile', '=', 'new', 'File', '(', 'getSyncWorkDirectory', '(', 'req', ')', ',', 'command', '.', 'getSession', '(', ')', '+', '"', '.smodif', '"', ')', ';', 'OutputStream', 'fos', '=', 'new', 'FileOutputStream', '(', 'tempFile', ')', ';', 'syncServer', '.', 'getServerModifications', '(', 'command', '.', 'getSession', '(', ')', ',', 'fos', ')', ';', 'InputStream', 'fis', '=', 'new', 'FileInputStream', '(', 'tempFile', ')', ';', 'resp', '.', 'setContentLength', '(', 'fis', '.', 'available', '(', ')', ')', ';', 'while', '(', 'fis', '.', 'available', '(', ')', '>', '0', ')', '{', 'resp', '.', 'getOutputStream', '(', ')', '.', 'write', '(', 'fis', '.', 'read', '(', ')', ')', ';', '}', 'resp', '.', 'getOutputStream', '(', ')', '.', 'flush', '(', ')', ';', 'resp', '.', 'flushBuffer', '(', ')', ';', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'logger', '.', 'error', '(', 'ioe', '.', 'getMessage', '(', ')', ')', ';', '}', 'catch', '(', 'ImogSerializationException', 'ex', ')', '{', 'logger', '.', 'error', '(', 'ex', '.', 'getMessage', '(', ')', ')', ';', '}', '}']
Example 496 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'boolean', 'postData', '(', 'URL', 'url', ',', 'String', 'parameters', ')', '{', 'HttpURLConnection', 'hpcon', '=', 'null', ';', 'try', '{', 'hpcon', '=', '(', 'HttpURLConnection', ')', 'url', '.', 'openConnection', '(', ')', ';', 'hpcon', '.', 'setRequestMethod', '(', '"', 'POST', '"', ')', ';', 'hpcon', '.', 'setRequestProperty', '(', '"', 'Content-Length', '"', ',', '"', '"', '+', 'Integer', '.', 'toString', '(', 'parameters', '.', 'getBytes', '(', ')', '.', 'length', ')', ')', ';', 'hpcon', '.', 'setUseCaches', '(', 'false', ')', ';', 'hpcon', '.', 'setDoInput', '(', 'true', ')', ';', 'hpcon', '.', 'setDoOutput', '(', 'true', ')', ';', 'DataOutputStream', 'printout', '=', 'new', 'DataOutputStream', '(', 'hpcon', '.', 'getOutputStream', '(', ')', ')', ';', 'printout', '.', 'writeBytes', '(', 'parameters', ')', ';', 'printout', '.', 'flush', '(', ')', ';', 'printout', '.', 'close', '(', ')', ';', 'BufferedReader', 'in', '=', 'new', 'BufferedReader', '(', 'new', 'InputStreamReader', '(', 'hpcon', '.', 'getInputStream', '(', ')', ')', ')', ';', 'String', 'input', ';', 'boolean', 'success', '=', 'false', ';', 'while', '(', '(', 'input', '=', 'in', '.', 'readLine', '(', ')', ')', '!=', 'null', ')', '{', 'if', '(', 'input', '.', 'contains', '(', '"', 'OK', '"', ')', ')', 'success', '=', 'true', ';', '}', 'return', 'success', ';', '}', 'catch', '(', 'Exception', 'e', ')', '{', 'try', '{', 'if', '(', 'hpcon', '!=', 'null', ')', 'hpcon', '.', 'disconnect', '(', ')', ';', '}', 'catch', '(', 'Exception', 'e2', ')', '{', '}', 'return', 'false', ';', '}', '}']
Example 497 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'boolean', 'backupFile', '(', 'File', 'oldFile', ',', 'File', 'newFile', ')', '{', 'boolean', 'isBkupFileOK', '=', 'false', ';', 'FileChannel', 'sourceChannel', '=', 'null', ';', 'FileChannel', 'targetChannel', '=', 'null', ';', 'try', '{', 'sourceChannel', '=', 'new', 'FileInputStream', '(', 'oldFile', ')', '.', 'getChannel', '(', ')', ';', 'targetChannel', '=', 'new', 'FileOutputStream', '(', 'newFile', ')', '.', 'getChannel', '(', ')', ';', 'targetChannel', '.', 'transferFrom', '(', 'sourceChannel', ',', '0', ',', 'sourceChannel', '.', 'size', '(', ')', ')', ';', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'SEVERE', ',', '"', 'IO', 'exception', 'occurred', 'while', 'copying', 'file', '"', ',', 'e', ')', ';', '}', 'finally', '{', 'if', '(', '(', 'newFile', '!=', 'null', ')', '&&', '(', 'newFile', '.', 'exists', '(', ')', ')', '&&', '(', 'newFile', '.', 'length', '(', ')', '>', '0', ')', ')', '{', 'isBkupFileOK', '=', 'true', ';', '}', 'try', '{', 'if', '(', 'sourceChannel', '!=', 'null', ')', '{', 'sourceChannel', '.', 'close', '(', ')', ';', '}', 'if', '(', 'targetChannel', '!=', 'null', ')', '{', 'targetChannel', '.', 'close', '(', ')', ';', '}', '}', 'catch', '(', 'IOException', 'e', ')', '{', 'logger', '.', 'log', '(', 'Level', '.', 'INFO', ',', '"', 'closing', 'channels', 'failed', '"', ')', ';', '}', '}', 'return', 'isBkupFileOK', ';', '}']
Example 498 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
raw_tokens: ['public', 'static', 'Document', 'tidyHTML', '(', 'URL', 'url', ')', 'throws', 'XMLHelperException', '{', 'try', '{', 'URLConnection', 'inConnection', '=', 'url', '.', 'openConnection', '(', ')', ';', 'if', '(', 'inConnection', '.', 'getContentType', '(', ')', '.', 'startsWith', '(', '"', 'text/xml', '"', ')', '||', 'inConnection', '.', 'getContentType', '(', ')', '.', 'startsWith', '(', '"', 'text/xhtml', '"', ')', ')', '{', 'return', 'parseXMLFromURL', '(', 'url', ')', ';', '}', 'else', 'if', '(', 'inConnection', '.', 'getContentType', '(', ')', '.', 'startsWith', '(', '"', 'text/html', '"', ')', ')', '{', 'InputStream', 'is', '=', 'inConnection', '.', 'getInputStream', '(', ')', ';', 'ByteArrayOutputStream', 'out', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'int', 'totalBytes', '=', '0', ';', 'byte', '[', ']', 'buffer', '=', 'new', 'byte', '[', '65536', ']', ';', 'while', '(', 'true', ')', '{', 'int', 'bytesRead', '=', 'is', '.', 'read', '(', 'buffer', ',', '0', ',', 'buffer', '.', 'length', ')', ';', 'if', '(', 'bytesRead', '<', '0', ')', 'break', ';', 'for', '(', 'int', 'i', '=', '0', ';', 'i', '<', 'bytesRead', ';', 'i', '++', ')', '{', 'byte', 'b', '=', 'buffer', '[', 'i', ']', ';', 'if', '(', 'b', '<', '32', '&&', 'b', '!=', '10', '&&', 'b', '!=', '13', '&&', 'b', '!=', '9', ')', 'b', '=', '32', ';', 'buffer', '[', 'i', ']', '=', 'b', ';', '}', 'out', '.', 'write', '(', 'buffer', ',', '0', ',', 'bytesRead', ')', ';', 'totalBytes', '+=', 'bytesRead', ';', '}', 'is', '.', 'close', '(', ')', ';', 'out', '.', 'close', '(', ')', ';', 'String', 'outContent', '=', 'out', '.', 'toString', '(', ')', ';', 'InputStream', 'in', '=', 'new', 'ByteArrayInputStream', '(', 'out', '.', 'toByteArray', '(', ')', ')', ';', 'Tidy', 'tidy', '=', 'new', 'Tidy', '(', ')', ';', 'tidy', '.', 'setShowWarnings', '(', 'false', ')', ';', 'tidy', '.', 'setXmlOut', '(', 'true', ')', ';', 'tidy', '.', 'setXmlPi', '(', 'false', ')', ';', 'tidy', '.', 'setDocType', '(', '"', 'omit', '"', ')', ';', 'tidy', '.', 'setXHTML', '(', 'false', ')', ';', 'tidy', '.', 'setRawOut', '(', 'true', ')', ';', 'tidy', '.', 'setNumEntities', '(', 'true', ')', ';', 'tidy', '.', 'setQuiet', '(', 'true', ')', ';', 'tidy', '.', 'setFixComments', '(', 'true', ')', ';', 'tidy', '.', 'setIndentContent', '(', 'true', ')', ';', 'tidy', '.', 'setCharEncoding', '(', 'org', '.', 'w3c', '.', 'tidy', '.', 'Configuration', '.', 'ASCII', ')', ';', 'ByteArrayOutputStream', 'baos', '=', 'new', 'ByteArrayOutputStream', '(', ')', ';', 'org', '.', 'w3c', '.', 'dom', '.', 'Document', 'tNode', '=', '(', 'org', '.', 'w3c', '.', 'dom', '.', 'Document', ')', 'tidy', '.', 'parseDOM', '(', 'in', ',', 'baos', ')', ';', 'String', 'result', '=', '"', '<?xml', 'version=', '\\"', '1.0', '\\"', '', 'encoding=', '\\"', 'UTF-8', '\\"', '?>', '"', '+', 'baos', '.', 'toString', '(', ')', ';', 'int', 'startIndex', '=', '0', ';', 'int', 'endIndex', '=', '0', ';', 'if', '(', '(', 'startIndex', '=', 'result', '.', 'indexOf', '(', '"', '<!DOCTYPE', '"', ')', ')', '>=', '0', ')', '{', 'endIndex', '=', 'result', '.', 'indexOf', '(', '"', '>', '"', ',', 'startIndex', ')', ';', 'result', '=', 'result', '.', 'substring', '(', '0', ',', 'startIndex', ')', '+', 'result', '.', 'substring', '(', 'endIndex', '+', '1', ',', 'result', '.', 'length', '(', ')', ')', ';', '}', 'while', '(', '(', 'startIndex', '=', 'result', '.', 'indexOf', '(', '"', '<script', '"', ')', ')', '>=', '0', ')', '{', 'endIndex', '=', 'result', '.', 'indexOf', '(', '"', '</script>', '"', ')', ';', 'result', '=', 'result', '.', 'substring', '(', '0', ',', 'startIndex', ')', '+', 'result', '.', 'substring', '(', 'endIndex', '+', '9', ',', 'result', '.', 'length', '(', ')', ')', ';', '}', 'in', '.', 'close', '(', ')', ';', 'baos', '.', 'close', '(', ')', ';', 'return', 'parseXMLFromString', '(', 'result', ')', ';', '}', 'else', '{', 'throw', 'new', 'XMLHelperException', '(', '"', 'Unable', 'to', 'tidy', 'content', 'type:', '', '"', '+', 'inConnection', '.', 'getContentType', '(', ')', ')', ';', '}', '}', 'catch', '(', 'IOException', 'ioe', ')', '{', 'throw', 'new', 'XMLHelperException', '(', '"', 'Unable', 'to', 'perform', 'input/output', '"', ',', 'ioe', ')', ';', '}', '}']
Example 499 attack result: {'succ': None, 'tokens': None, 'raw_tokens': None}
