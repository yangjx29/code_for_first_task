12/11/2024 10:28:55 - WARNING - __main__ -   Process rank: -1, device: cuda, n_gpu: 1, distributed training: False, 16-bits training: False
Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at microsoft/codebert-base and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
12/11/2024 10:28:56 - INFO - __main__ -   Training/evaluation parameters Namespace(train_data_file='../preprocess/dataset/train.jsonl', output_dir='./saved_models', eval_data_file='../preprocess/dataset/test_subs_0_400.jsonl', test_data_file='../preprocess/dataset/test_subs_0_400.jsonl', adv_data_file='train_adv.jsonl', model_type='roberta', model_name_or_path='microsoft/codebert-base', mlm=False, mlm_probability=0.15, config_name='', tokenizer_name='microsoft/codebert-base', cache_dir='', block_size=510, do_train=False, do_eval=False, do_test=False, do_asr=True, do_sim=False, evaluate_during_training=True, do_lower_case=False, train_batch_size=32, eval_batch_size=64, gradient_accumulation_steps=1, learning_rate=2e-05, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, num_train_epochs=1.0, max_steps=-1, warmup_steps=0, logging_steps=50, save_steps=50, save_total_limit=None, eval_all_checkpoints=False, no_cuda=False, overwrite_output_dir=False, overwrite_cache=False, seed=123456, epoch=5, fp16=False, fp16_opt_level='O1', local_rank=-1, server_ip='', server_port='', n_gpu=1, device=device(type='cuda'), per_gpu_train_batch_size=32, per_gpu_eval_batch_size=64, start_epoch=0, start_step=0)
/data/yjx/code_for_first_task/CodeTAE/CodeBERT/Defect-detection/code/run.py:690: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(output_dir))
/data/yjx/code_for_first_task/CodeTAE/CodeBERT/Defect-detection/code/run.py:102: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.examples = torch.load(cache_file_path)
12/11/2024 10:28:57 - INFO - __main__ -   Loading features from cached file ../preprocess/dataset/cached_test_subs_0_400
12/11/2024 10:28:57 - INFO - __main__ -   ***** Attack Success Rate *****
12/11/2024 10:28:57 - INFO - __main__ -     Num examples = 400
12/11/2024 10:29:04 - INFO - __main__ -   ***** Attack results *****
12/11/2024 10:29:04 - INFO - __main__ -     ASR = 0.3213
12/11/2024 10:29:04 - INFO - __main__ -     attack_success_num = 80
12/11/2024 10:29:04 - INFO - __main__ -     total_num = 249
12/11/2024 10:29:04 - INFO - __main__ -   ***** Attack results *****
12/11/2024 10:29:04 - INFO - __main__ -     ASR = 0.3213
12/11/2024 10:29:04 - INFO - __main__ -     attack_success_num = 80
12/11/2024 10:29:04 - INFO - __main__ -     total_num = 249

 cached_features_file:  ../preprocess/dataset/cached_test_subs_0_400
adv codes num:  400
